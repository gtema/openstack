[workspace]
resolver = "2"
members = [
  "openstack_sdk",
  "openstack_cli",
  "openstack_tui",
  "structable_derive",
  "xtask",
  "fuzz"
]
exclude = ["fuzz"]
default-members = ["openstack_cli", "openstack_sdk", "openstack_tui"]

[workspace.package]
license = "Apache-2.0"
edition = "2021"
authors = ["Artem Goncharov (gtema)"]
rust-version = "1.76"  # MSRV
homepage = "https://github.com/gtema/openstack"
repository = "https://github.com/gtema/openstack"

[workspace.dependencies]
async-trait = { version = "^0.1" } #, optional = true }
better-panic = { version = "^0.3" }
bytes = "^1.7"
chrono = { version = "^0.4", default-features = false, features = ["clock", "serde"] }
clap = { version = "^4.5", features = ["cargo", "color", "derive", "env"] }
clap_complete = { version = "^4.5" }
color-eyre = { version = "^0.6", features = ["default", "issue-url"] }
config = { version = "^0.14", default-features = false }
dialoguer = "^0.11"
dirs = "^5.0"
futures = "^0.3"
futures-util = { version = "^0.3", default-features = false}
http = "^1.1"
human-panic = { version = "^2.0" }
itertools = { version = "^0.13" }
json-patch = { version = "^2.0" }
reqwest = { version = "^0.12", features = ["blocking", "stream", "rustls-tls"], default-features = false }
serde = { version="^1.0", features=["derive"] }
serde_json = "^1.0"
serde_bytes = "^0.11"
strip-ansi-escapes = "^0.2"
tokio = { version = "^1.40", features = ["fs", "macros", "net", "sync", "rt-multi-thread", "io-std", "signal"]}
tokio-util = { version="^0.7", features = ["io", "compat"]}
thiserror = { version = "^1.0" }
tracing = "^0.1"
tracing-error = { version = "^0.2" }
tracing-subscriber = { version = "^0.3", features = ["env-filter", "serde"] }
url = "^2.5"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.21.1"
# CI backends to support
ci = "github"
# Skip checking whether the specified configuration files are up to date
allow-dirty = ["ci"]
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Which actions to run on pull requests
pr-run-mode = "skip"
# Whether cargo-dist should create a Github Release or use an existing draft
create-release = false
# Whether to install an updater program
install-updater = true
# Whether to enable GitHub Attestations
github-attestations = true
# Path that installers should place binaries in
install-path = "CARGO_HOME"

[workspace.metadata.dist.github-custom-runners]
global = "ubuntu-latest"
aarch64-apple-darwin = "macos-latest"
x86_64-apple-darwin = "macos-latest"
x86_64-unknown-linux-gnu = "ubuntu-latest"
x86_64-unknown-linux-musl = "ubuntu-latest"

[profile.dev]
debug = 0

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
