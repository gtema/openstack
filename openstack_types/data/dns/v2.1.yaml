openapi: 3.1.0
info:
  description: |-
    DNS API provided by Designate service
  title: OpenStack DNS API
  version: '2.1'
paths:
  /v2/blacklists:
    get:
      description: |-
        List all blacklists
      operationId: blacklists:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlacklistsListResponse'
          description: Ok
      summary: List Blacklists
      tags:
        - blacklists
    post:
      description: |-
        Create a Blacklist
      operationId: blacklists:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlacklistsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlacklistsCreateResponse'
          description: Ok
      summary: Create Blacklist
      tags:
        - blacklists
  /v2/blacklists/{blacklist_id}:
    delete:
      description: |-
        Delete a blacklist
      operationId: blacklists/blacklist_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Blacklist
      tags:
        - blacklists
    get:
      description: |-
        Show a blacklist
      operationId: blacklists/blacklist_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlacklistShowResponse'
          description: Ok
      summary: Show Blacklist
      tags:
        - blacklists
    parameters:
      - $ref: '#/components/parameters/blacklists_blacklist_id'
    patch:
      description: |-
        Update a Blacklist

        Normal response codes: 200

        Error response codes: 405,404,403,401,400,503
      operationId: blacklists/blacklist_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlacklistUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlacklistUpdateResponse'
          description: Ok
      summary: Update Blacklist
      tags:
        - blacklists
  /v2/limits:
    get:
      description: |-
        List project limits
      operationId: limits:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsListResponse'
          description: Ok
      summary: Get Project Limits
      tags:
        - limits
  /v2/pools:
    get:
      description: |-
        Get the list of Pools.
      operationId: pools:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsListResponse'
          description: Ok
      summary: List all Pools
      tags:
        - pools
    post:
      description: |-
        Create a Pool
      operationId: pools:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolsCreateResponse'
          description: Ok
      tags:
        - pools
  /v2/pools/{pool_id}:
    delete:
      description: |-
        Delete the specific pool
      operationId: pools/pool_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - pools
    get:
      description: |-
        Get a specific Pool

        Normal response codes: 200

        Error response codes: 405,404,403,401,400,503
      operationId: pools/pool_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolShowResponse'
          description: Ok
      summary: Show a Pool
      tags:
        - pools
    parameters:
      - $ref: '#/components/parameters/pools_pool_id'
    patch:
      description: |-
        Update the specific pool
      operationId: pools/pool_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolUpdateResponse'
          description: Ok
      tags:
        - pools
  /v2/quotas:
    get:
      operationId: quotas:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasListResponse'
          description: Ok
      tags:
        - quotas
  /v2/quotas/{project_id}:
    delete:
      description: |-
        Reset all quotas for a project to default
      operationId: quotas/project_id:delete
      responses:
        '204':
          description: Ok
      summary: Reset Quotas
      tags:
        - quotas
    get:
      description: |-
        View a projects quotas

        This returns a key:value set of quotas on the system.
      operationId: quotas/project_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaShowResponse'
          description: Ok
      summary: View Quotas
      tags:
        - quotas
    parameters:
      - $ref: '#/components/parameters/quotas_project_id'
    patch:
      description: |-
        Set a projects quotas

        The request should be a key:value set of quotas to be set

        This returns a key:value set of quotas on the system.
      operationId: quotas/project_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaUpdateResponse'
          description: Ok
      summary: Set Quotas
      tags:
        - quotas
  /v2/recordsets:
    get:
      description: |-
        This lists all recordsets owned by a project in Designate
      operationId: recordsets:get
      parameters:
        - $ref: '#/components/parameters/data'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/ttl'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/x-auth-all-projects'
        - $ref: '#/components/parameters/x-auth-sudo-project-id'
        - $ref: '#/components/parameters/zone_id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordsetsListResponse'
          description: Ok
      summary: List all Recordsets owned by project
      tags:
        - recordsets
  /v2/recordsets/{recordset_id}:
    get:
      description: |-
        Get RecordSet
      operationId: recordsets/recordset_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordsetShowResponse'
          description: Ok
      tags:
        - recordsets
    parameters:
      - $ref: '#/components/parameters/recordsets_recordset_id'
  /v2/reverse/floatingips:
    get:
      description: |-
        List FloatingIP PTR records
      operationId: reverse/floatingips:get
      parameters:
        - $ref: '#/components/parameters/x-auth-all-projects'
        - $ref: '#/components/parameters/x-auth-sudo-project-id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseFloatingipsListResponse'
          description: Ok
      summary: List FloatingIP’s PTR record
      tags:
        - floatingips
  /v2/reverse/floatingips/{fip_key}:
    get:
      description: |-
        Shows a particular FloatingIP PTR
      operationId: reverse/floatingips/fip_key:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseFloatingipShowResponse'
          description: Ok
      summary: Show FloatingIP’s PTR record
      tags:
        - floatingips
    parameters:
      - $ref: '#/components/parameters/reverse_floatingips_fip_key'
    patch:
      description: |-
        Set a PTR record for the given FloatingIP. The domain if it does not exist
        will be provisioned automatically.
      operationId: reverse/floatingips/fip_key:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReverseFloatingipUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReverseFloatingipUpdateResponse'
          description: Ok
      summary: Set  FloatingIP’s PTR record
      tags:
        - floatingips
  /v2/service_statuses:
    get:
      description: |-
        List all Services and statuses.
      operationId: service_statuses:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_StatusesListResponse'
          description: Ok
      summary: List Statuses
      tags:
        - service-statuses
  /v2/service_statuses/{service_id}:
    get:
      description: |-
        Show the status of a service.
      operationId: service_statuses/service_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_StatusShowResponse'
          description: Ok
      summary: Show a Service Status
      tags:
        - service-statuses
    parameters:
      - $ref: '#/components/parameters/service_statuses_service_id'
  /v2/tlds:
    get:
      description: |-
        List the tlds associated with the Project
      operationId: tlds:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TldsListResponse'
          description: Ok
      summary: List Tlds
      tags:
        - tld
    post:
      description: |-
        Create a tld
      operationId: tlds:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TldsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TldsCreateResponse'
          description: Ok
      summary: Create Tld
      tags:
        - tld
  /v2/tlds/{tld_id}:
    delete:
      description: |-
        Delete a tld
      operationId: tlds/tld_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete Tld
      tags:
        - tld
    get:
      description: |-
        Show a tld
      operationId: tlds/tld_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TldShowResponse'
          description: Ok
      summary: Show Tld
      tags:
        - tld
    parameters:
      - $ref: '#/components/parameters/tlds_tld_id'
    patch:
      description: |-
        Update a tld
      operationId: tlds/tld_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TldUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TldUpdateResponse'
          description: Ok
      summary: Update Tld
      tags:
        - tld
  /v2/tsigkeys:
    get:
      description: |-
        List all tsigkeys
      operationId: tsigkeys:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsigkeysListResponse'
          description: Ok
      summary: List Tsigkeys
      tags:
        - tsigkey
    post:
      description: |-
        Create a new Tsigkey
      operationId: tsigkeys:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TsigkeysCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsigkeysCreateResponse'
          description: Ok
      summary: Create Tsigkeys
      tags:
        - tsigkey
  /v2/tsigkeys/{tsigkey_id}:
    delete:
      description: |-
        Delete a tsigkey
      operationId: tsigkeys/tsigkey_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Tsigkey
      tags:
        - tsigkey
    get:
      description: |-
        Show a tsigkey
      operationId: tsigkeys/tsigkey_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsigkeyShowResponse'
          description: Ok
      summary: Show a Tsigkey
      tags:
        - tsigkey
    parameters:
      - $ref: '#/components/parameters/tsigkeys_tsigkey_id'
    patch:
      description: |-
        Update the attribute(s) of an existing tsigkey
      operationId: tsigkeys/tsigkey_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TsigkeyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TsigkeyUpdateResponse'
          description: Ok
      summary: Update Tsigkey
      tags:
        - tsigkey
  /v2/zones:
    get:
      description: |-
        List all zones
      operationId: zones:get
      parameters:
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/email'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/ttl'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/x-auth-all-projects'
        - $ref: '#/components/parameters/x-auth-sudo-project-id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesListResponse'
          description: Ok
      summary: List Zones
      tags:
        - zones
    post:
      description: |-
        Create a zone
      operationId: zones:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesCreateResponse'
          description: Ok
      summary: Create Zone
      tags:
        - zones
  /v2/zones/tasks/exports:
    get:
      description: |
      operationId: zones/tasks/exports:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksExportsListResponse'
          description: Ok
      summary: List all Zone Exports
      tags:
        - zone-exports
  /v2/zones/tasks/exports/{export_id}:
    get:
      description: |-
        Get Zone Exports
      operationId: zones/tasks/exports/export_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksExportShowResponse'
          description: Ok
      tags:
        - zone-exports
    parameters:
      - $ref: '#/components/parameters/zones_tasks_exports_export_id'
  /v2/zones/tasks/exports/{export_id}/export:
    get:
      description: |
      operationId: zones/tasks/exports/export_id/export:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksExportsExportListResponse'
          description: Ok
      summary: Retrieve a Zone Export from the Designate Datastore
      tags:
        - zone-exports
    parameters:
      - $ref: '#/components/parameters/zones_tasks_exports_export_export_id'
  /v2/zones/tasks/exports/{zone_export_id}:
    delete:
      description: |-
        This will just delete the record of the zone export, not the exported zone.

        The zone will have to be deleted from the zone delete API
      operationId: zones/tasks/exports/zone_export_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Zone Export
      tags:
        - zone-exports
    parameters:
      - $ref: '#/components/parameters/zones_tasks_exports_zone_export_id'
  /v2/zones/tasks/imports:
    get:
      description: |
      operationId: zones/tasks/imports:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksImportsListResponse'
          description: Ok
      summary: List all Zone Imports
      tags:
        - zone-imports
    post:
      description: |-
        Import a zone.
      operationId: zones/tasks/imports:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksImportsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksImportsCreateResponse'
          description: Ok
      summary: Create a Zone Import
      tags:
        - zone-imports
  /v2/zones/tasks/imports/{import_id}:
    get:
      description: |-
        Get Zone Imports
      operationId: zones/tasks/imports/import_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksImportShowResponse'
          description: Ok
      tags:
        - zone-imports
    parameters:
      - $ref: '#/components/parameters/zones_tasks_imports_import_id'
  /v2/zones/tasks/imports/{zone_import_id}:
    delete:
      description: |-
        This will just delete the record of the zone import, not the imported zone.

        The zone will have to be deleted from the zone delete API
      operationId: zones/tasks/imports/zone_import_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Zone Import
      tags:
        - zone-imports
    get:
      description: |
      summary: Show a Zone Import
    parameters:
      - $ref: '#/components/parameters/zones_tasks_imports_zone_import_id'
  /v2/zones/tasks/transfer_accepts:
    get:
      description: |-
        This will list all your accepted ownership transfer.
      operationId: zones/tasks/transfer_accepts:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksTransfer_AcceptsListResponse'
          description: Ok
      summary: List Zone Transfer Accepts
      tags:
        - zone-ownership-transfers-accepts
    post:
      description: |-
        This accepts an offer of a ownership transfer
      operationId: zones/tasks/transfer_accepts:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksTransfer_AcceptsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksTransfer_AcceptsCreateResponse'
          description: Ok
      summary: Create Zone Transfer Accept
      tags:
        - zone-ownership-transfers-accepts
  /v2/zones/tasks/transfer_accepts/{transfer_accept_id}:
    get:
      description: |-
        Get transfer_accepts
      operationId: zones/tasks/transfer_accepts/transfer_accept_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksTransfer_AcceptShowResponse'
          description: Ok
      tags:
        - zone-ownership-transfers-accepts
    parameters:
      - $ref: '#/components/parameters/zones_tasks_transfer_accepts_transfer_accept_id'
  /v2/zones/tasks/transfer_requests:
    get:
      description: |-
        This will list all your outgoing requests, and any incoming requests that
        have been scoped to your project.
      operationId: zones/tasks/transfer_requests:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksTransfer_RequestsListResponse'
          description: Ok
      summary: List Zone Transfer Requests
      tags:
        - zone-ownership-transfers-requests
  /v2/zones/tasks/transfer_requests/{zone_transfer_request_id}:
    delete:
      description: |
      operationId: zones/tasks/transfer_requests/zone_transfer_request_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Zone Transfer Request
      tags:
        - zone-ownership-transfers-requests
    get:
      description: |
      operationId: zones/tasks/transfer_requests/zone_transfer_request_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksTransfer_RequestShowResponse'
          description: Ok
      summary: Show a Zone Transfer Request
      tags:
        - zone-ownership-transfers-requests
    parameters:
      - $ref: '#/components/parameters/zones_tasks_transfer_requests_zone_transfer_request_id'
    patch:
      description: |
      operationId: zones/tasks/transfer_requests/zone_transfer_request_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksTransfer_RequestUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksTransfer_RequestUpdateResponse'
          description: Ok
      summary: Update a Zone Transfer Request
      tags:
        - zone-ownership-transfers-requests
  /v2/zones/{zone_id}:
    delete:
      description: |-
        Delete a zone
      operationId: zones/zone_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Zone
      tags:
        - zones
    get:
      description: |-
        Show a zone
      operationId: zones/zone_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneShowResponse'
          description: Ok
      summary: Show a Zone
      tags:
        - zones
    parameters:
      - $ref: '#/components/parameters/zones_zone_id'
    patch:
      description: |-
        Update the attribute(s) for an existing zone.
      operationId: zones/zone_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneUpdateResponse'
          description: Ok
      summary: Update a Zone
      tags:
        - zones
  /v2/zones/{zone_id}/nameservers:
    get:
      description: |-
        Show the nameservers for a zone
      operationId: zones/zone_id/nameservers:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesNameserversListResponse'
          description: Ok
      summary: Get the Name Servers for a Zone
      tags:
        - zones
    parameters:
      - $ref: '#/components/parameters/zones_nameservers_zone_id'
  /v2/zones/{zone_id}/recordsets:
    get:
      description: |-
        This lists all recordsets in a zone
      operationId: zones/zone_id/recordsets:get
      parameters:
        - $ref: '#/components/parameters/data'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/ttl'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/x-auth-all-projects'
        - $ref: '#/components/parameters/x-auth-sudo-project-id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesRecordsetsListResponse'
          description: Ok
      summary: List Recordsets in a Zone
      tags:
        - recordsets
    parameters:
      - $ref: '#/components/parameters/zones_recordsets_zone_id'
    post:
      description: |-
        Create a recordset in a zone
      operationId: zones/zone_id/recordsets:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesRecordsetsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesRecordsetsCreateResponse'
          description: Ok
      summary: Create Recordset
      tags:
        - recordsets
  /v2/zones/{zone_id}/recordsets/{recordset_id}:
    delete:
      description: |-
        Delete a recordset
      operationId: zones/zone_id/recordsets/recordset_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Recordset
      tags:
        - recordsets
    get:
      description: |-
        Show an single recordset
      operationId: zones/zone_id/recordsets/recordset_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesRecordsetShowResponse'
          description: Ok
      summary: Show a Recordset
      tags:
        - recordsets
    parameters:
      - $ref: '#/components/parameters/zones_recordsets_recordset_id'
      - $ref: '#/components/parameters/zones_recordsets_zone_id'
    put:
      description: |-
        Update a recordset
      operationId: zones/zone_id/recordsets/recordset_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesRecordsetUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesRecordsetUpdateResponse'
          description: Ok
      summary: Update a Recordset
      tags:
        - recordsets
  /v2/zones/{zone_id}/shares:
    get:
      description: |-
        List all zone shares.

        **New in version 2.1**
      operationId: zones/zone_id/shares:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/target_project_id'
        - $ref: '#/components/parameters/x-auth-all-projects'
        - $ref: '#/components/parameters/x-auth-sudo-project-id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesSharesListResponse'
          description: Ok
      summary: Get All Shared Zones
      tags:
        - shared-zones
    parameters:
      - $ref: '#/components/parameters/zones_shares_zone_id'
    post:
      description: |-
        Share a zone with another project.

        **New in version 2.1**
      operationId: zones/zone_id/shares:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesSharesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesSharesCreateResponse'
          description: Ok
      summary: Create Shared Zone
      tags:
        - shared-zones
  /v2/zones/{zone_id}/shares/{zone_share_id}:
    delete:
      description: |-
        Delete a zone share.

        **New in version 2.1**
      operationId: zones/zone_id/shares/zone_share_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a Zone Share
      tags:
        - shared-zones
    get:
      description: |-
        Show a single zone share.

        **New in version 2.1**
      operationId: zones/zone_id/shares/zone_share_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesShareShowResponse'
          description: Ok
      summary: Show a Zone Share
      tags:
        - shared-zones
    parameters:
      - $ref: '#/components/parameters/zones_shares_zone_id'
      - $ref: '#/components/parameters/zones_shares_zone_share_id'
  /v2/zones/{zone_id}/tasks/abandon:
    parameters:
      - $ref: '#/components/parameters/zones_tasks_abandon_zone_id'
    post:
      description: |-
        Abandon a zone.

        This removes a zone from the designate database without removing it
        from the backends.
      operationId: zones/zone_id/tasks/abandon:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksAbandonCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksAbandonCreateResponse'
          description: Ok
      summary: Abandon Zone
      tags:
        - zone-tasks
  /v2/zones/{zone_id}/tasks/export:
    parameters:
      - $ref: '#/components/parameters/zones_tasks_export_zone_id'
    post:
      description: |-
        Export a zone.
      operationId: zones/zone_id/tasks/export:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksExportCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksExportCreateResponse'
          description: Ok
      summary: Create a Zone Export
      tags:
        - zone-exports
  /v2/zones/{zone_id}/tasks/pool_move:
    parameters:
      - $ref: '#/components/parameters/zones_tasks_pool_move_zone_id'
    post:
      description: |-
        Move a zone to another pool.

        This moves a zone from the existing designate pool to specified target pool. If
        pool is not specified by admin, designate will determine suitable pool by
        itself and move zone to that pool.
      operationId: zones/zone_id/tasks/pool_move:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksPool_MoveCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksPool_MoveCreateResponse'
          description: Ok
      summary: Pool Move Zone
      tags:
        - zone-tasks
  /v2/zones/{zone_id}/tasks/transfer_requests:
    parameters:
      - $ref: '#/components/parameters/zones_tasks_transfer_requests_zone_id'
    post:
      description: |-
        This creates an offer to transfer the zone to a different project.
        The request can be scoped to single project if the `project_id` parameter is
        supplied.
      operationId: zones/zone_id/tasks/transfer_requests:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksTransfer_RequestsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksTransfer_RequestsCreateResponse'
          description: Ok
      summary: Create Zone Transfer Request
      tags:
        - zone-ownership-transfers-requests
  /v2/zones/{zone_id}/tasks/xfr:
    parameters:
      - $ref: '#/components/parameters/zones_tasks_xfr_zone_id'
    post:
      description: |-
        Trigger a new XFR from the upstream DNS servers

        This will cause designate to query the name servers and if the version in
        Designate is out of date, import the new version.

        This is useful if an upstream server failed to send a notify to Designate
      operationId: zones/zone_id/tasks/xfr:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZonesTasksXfrCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesTasksXfrCreateResponse'
          description: Ok
      summary: Manually Trigger an Update of a Secondary Zone
      tags:
        - zone-tasks
components:
  parameters:
    blacklists_blacklist_id:
      description: blacklist_id parameter for /v2/blacklists/{blacklist_id} API
      in: path
      name: blacklist_id
      required: true
      schema:
        type: string
    data:
      description: Filter results to only show recordsets that have a record with
        data matching the filter
      in: query
      name: data
      schema:
        type: string
    description:
      description: Filter results to only show zones that have a description matching
        the filter
      in: query
      name: description
      schema:
        type: string
    email:
      description: Filter results to only show zones that have an email matching the
        filter
      in: query
      name: email
      schema:
        format: email
        type: string
    limit:
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      in: query
      name: limit
      schema:
        type: integer
    marker:
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      in: query
      name: marker
      schema:
        format: uuid
        type: string
    name:
      description: Filter results to only show zones that have a name matching the
        filter
      in: query
      name: name
      schema:
        type: string
    pools_pool_id:
      description: pool_id parameter for /v2/pools/{pool_id} API
      in: path
      name: pool_id
      required: true
      schema:
        type: string
    quotas_project_id:
      description: project_id parameter for /v2/quotas/{project_id} API
      in: path
      name: project_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    recordsets_recordset_id:
      description: recordset_id parameter for /v2/recordsets/{recordset_id} API
      in: path
      name: recordset_id
      required: true
      schema:
        type: string
    reverse_floatingips_fip_key:
      description: fip_key parameter for /v2/reverse/floatingips/{fip_key} API
      in: path
      name: fip_key
      required: true
      schema:
        type: string
    service_statuses_service_id:
      description: service_id parameter for /v2/service_statuses/{service_id} API
      in: path
      name: service_id
      required: true
      schema:
        type: string
    sort_dir:
      description: Sorts the response by the requested sort direction. A valid value
        is asc (ascending) or desc (descending). Default is asc. You can specify multiple
        pairs of sort key and sort direction query parameters. If you omit the sort
        direction in a pair, the API uses the natural sorting direction of the server
        attribute that is provided as the sort_key.
      in: query
      name: sort_dir
      schema:
        enum:
          - asc
          - desc
        type: string
    sort_key:
      description: Sorts the response by the this attribute value. Default is id.
        You can specify multiple pairs of sort key and sort direction query parameters.
        If you omit the sort direction in a pair, the API uses the natural sorting
        direction of the server attribute that is provided as the sort_key.
      in: query
      name: sort_key
      schema:
        enum:
          - created_at
          - id
          - name
          - serial
          - status
          - tenant_id
          - ttl
          - updated_at
        type: string
    status:
      description: Filter results to only show zones that have a status matching the
        filter
      in: query
      name: status
      schema:
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING
          - SUCCESS
          - ZONE
        type: string
    target_project_id:
      description: Filter results to only show resources that have a matching target_project_id
      in: query
      name: target_project_id
      schema:
        format: uuid
        type: string
      x-openstack:
        min-ver: '2.1'
    tlds_tld_id:
      description: tld_id parameter for /v2/tlds/{tld_id} API
      in: path
      name: tld_id
      required: true
      schema:
        type: string
    tsigkeys_tsigkey_id:
      description: tsigkey_id parameter for /v2/tsigkeys/{tsigkey_id} API
      in: path
      name: tsigkey_id
      required: true
      schema:
        type: string
    ttl:
      description: Filter results to only show zones that have a ttl matching the
        filter
      in: query
      name: ttl
      schema:
        type: integer
    type:
      description: Filter results to only show zones that have a type matching the
        filter
      in: query
      name: type
      schema:
        enum:
          - CATALOG
          - PRIMARY
          - SECONDARY
        type: string
    x-auth-all-projects:
      description: If enabled this will show results from all projects in Designate
      in: header
      name: x-auth-all-projects
      schema:
        type: boolean
    x-auth-sudo-project-id:
      description: This allows a user to impersonate another project
      in: header
      name: x-auth-sudo-project-id
      schema:
        format: uuid
        type: string
    zone_id:
      description: ID for the zone
      in: query
      name: zone_id
      schema:
        format: uuid
        type: string
    zones_nameservers_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/nameservers API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_recordsets_recordset_id:
      description: recordset_id parameter for /v2/zones/{zone_id}/recordsets/{recordset_id}
        API
      in: path
      name: recordset_id
      required: true
      schema:
        type: string
    zones_recordsets_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/recordsets/{recordset_id}
        API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_shares_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/shares API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_shares_zone_share_id:
      description: zone_share_id parameter for /v2/zones/{zone_id}/shares/{zone_share_id}
        API
      in: path
      name: zone_share_id
      required: true
      schema:
        type: string
    zones_tasks_abandon_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/tasks/abandon API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_tasks_export_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/tasks/export API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_tasks_exports_export_export_id:
      description: export_id parameter for /v2/zones/tasks/exports/{export_id}/export
        API
      in: path
      name: export_id
      required: true
      schema:
        type: string
    zones_tasks_exports_export_id:
      description: export_id parameter for /v2/zones/tasks/exports/{export_id} API
      in: path
      name: export_id
      required: true
      schema:
        type: string
    zones_tasks_exports_zone_export_id:
      description: zone_export_id parameter for /v2/zones/tasks/exports/{zone_export_id}
        API
      in: path
      name: zone_export_id
      required: true
      schema:
        type: string
    zones_tasks_imports_import_id:
      description: import_id parameter for /v2/zones/tasks/imports/{import_id} API
      in: path
      name: import_id
      required: true
      schema:
        type: string
    zones_tasks_imports_zone_import_id:
      description: zone_import_id parameter for /v2/zones/tasks/imports/{zone_import_id}
        API
      in: path
      name: zone_import_id
      required: true
      schema:
        type: string
    zones_tasks_pool_move_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/tasks/pool_move API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_tasks_transfer_accepts_transfer_accept_id:
      description: transfer_accept_id parameter for /v2/zones/tasks/transfer_accepts/{transfer_accept_id}
        API
      in: path
      name: transfer_accept_id
      required: true
      schema:
        type: string
    zones_tasks_transfer_requests_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/tasks/transfer_requests
        API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_tasks_transfer_requests_zone_transfer_request_id:
      description: zone_transfer_request_id parameter for /v2/zones/tasks/transfer_requests/{zone_transfer_request_id}
        API
      in: path
      name: zone_transfer_request_id
      required: true
      schema:
        type: string
    zones_tasks_xfr_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id}/tasks/xfr API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: dns/v2/zone.id
    zones_zone_id:
      description: zone_id parameter for /v2/zones/{zone_id} API
      in: path
      name: zone_id
      required: true
      schema:
        type: string
  schemas:
    BlacklistShowResponse:
      description: Response of the blacklists/blacklist_id:get operation
      type: object
    BlacklistUpdateRequest:
      description: Request of the blacklists/blacklist_id:patch operation
      type: object
      x-openstack:
        action-name: update
    BlacklistUpdateResponse:
      description: Response of the blacklists/blacklist_id:patch operation
      type: object
    BlacklistsCreateRequest:
      description: Request of the blacklists:post operation
      type: object
      x-openstack:
        action-name: create
    BlacklistsCreateResponse:
      description: Response of the blacklists:post operation
      type: object
    BlacklistsListResponse:
      description: Response of the blacklists:get operation
      type: object
    LimitsListResponse:
      properties:
        max_page_limit:
          description: |-
            The max amount of items allowed per page
          type: integer
        max_recordset_name_length:
          description: |-
            The max length of a recordset name
          type: integer
        max_recordset_records:
          description: |-
            The max amount of records contained in a recordset
          type: integer
        max_zone_name_length:
          description: |-
            The max length of a zone name
          type: integer
        max_zone_records:
          description: |-
            The max amount of records in a zone
          type: integer
        max_zone_recordsets:
          description: |-
            The max amount of recordsets per zone
          type: integer
        max_zones:
          description: |-
            The max amount of zones for this project
          type: integer
        min_ttl:
          description: |-
            The lowest ttl allowed on this system
          type: integer
      type: object
    PoolShowResponse:
      description: Response of the pools/pool_id:get operation
      type: object
    PoolUpdateRequest:
      description: Request of the pools/pool_id:patch operation
      type: object
      x-openstack:
        action-name: update
    PoolUpdateResponse:
      description: Response of the pools/pool_id:patch operation
      type: object
    PoolsCreateRequest:
      description: Request of the pools:post operation
      type: object
      x-openstack:
        action-name: create
    PoolsCreateResponse:
      description: Response of the pools:post operation
      type: object
    PoolsListResponse:
      description: Response of the pools:get operation
      type: object
    QuotaShowResponse:
      properties:
        api_export_size:
          type: integer
        recordset_records:
          type: integer
        zone_records:
          type: integer
        zone_recorsets:
          type: integer
        zones:
          type: integer
      type: object
    QuotaUpdateRequest:
      properties:
        api_export_size:
          type: integer
        recordset_records:
          type: integer
        zone_records:
          type: integer
        zone_recorsets:
          type: integer
        zones:
          type: integer
      type: object
    QuotaUpdateResponse:
      properties:
        api_export_size:
          type: integer
        recordset_records:
          type: integer
        zone_records:
          type: integer
        zone_recorsets:
          type: integer
        zones:
          type: integer
      type: object
    QuotasListResponse:
      properties:
        api_export_size:
          type: integer
        recordset_records:
          type: integer
        zone_records:
          type: integer
        zone_recorsets:
          type: integer
        zones:
          type: integer
      type: object
    RecordsetShowResponse:
      description: Response of the recordsets/recordset_id:get operation
      type: object
    RecordsetsListResponse:
      additionalProperties: false
      properties:
        links:
          properties:
            self:
              format: uri
              type: string
          type: object
        recordsets:
          items:
            additionalProperties: false
            description: Zone Record object
            properties:
              action:
                description: |-
                  current action in progress on the resource
                enum:
                  - CREATE
                  - DELETE
                  - NONE
                  - UPDATE
                readOnly: true
                type:
                  - 'null'
                  - string
              created_at:
                description: |-
                  Date / Time when resource was created.
                format: date-time
                readOnly: true
                type: string
              description:
                description: |-
                  Description for this recordset
                type: string
              id:
                description: |-
                  ID for the resource
                format: uuid
                readOnly: true
                type: string
              links:
                description: |-
                  Links to the resource, and other related resources.
                  When a response has been broken into pages, we will include
                  a `next` link that should be followed to retrieve all results
                properties:
                  self:
                    format: uri
                    type: string
                readOnly: true
                type: object
              name:
                description: |-
                  DNS Name for the recordset
                type: string
              project_id:
                description: |-
                  ID for the project that owns the resource
                format: uuid
                readOnly: true
                type: string
              records:
                description: |-
                  A list of data for this recordset. Each item will be a separate record in Designate
                  These items should conform to the DNS spec for the record type - e.g. A records
                  must be IPv4 addresses, CNAME records must be a hostname.
                items:
                  type: string
                type: array
              status:
                description: |-
                  The status of the resource.
                enum:
                  - ACTIVE
                  - DELETED
                  - ERROR
                  - PENDING
                  - SUCCESS
                readOnly: true
                type:
                  - 'null'
                  - string
              ttl:
                description: |-
                  TTL (Time to Live) for the recordset.
                type: integer
              type:
                description: |-
                  They RRTYPE of the recordset.
                enum:
                  - A
                  - AAAA
                  - CAA
                  - CERT
                  - CNAME
                  - MX
                  - NAPTR
                  - NS
                  - PTR
                  - SOA
                  - SPF
                  - SRV
                  - SSHFP
                  - TXT
                type: string
              updated_at:
                description: |-
                  Date / Time when resource last updated.
                format: date-time
                readOnly: true
                type:
                  - 'null'
                  - string
              version:
                description: |-
                  Version of the resource
                readOnly: true
                type: integer
              zone_id:
                description: |-
                  ID for the zone that contains this recordset
                format: uuid
                readOnly: true
                type: string
              zone_name:
                description: |-
                  The name of the zone that contains this recordset
                readOnly: true
                type: string
            type: object
          type: array
      type: object
    ReverseFloatingipShowResponse:
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type: string
        address:
          description: |-
            The floatingip address for this PTR record.
          type: string
        description:
          description: |-
            Description for this PTR record
          type: string
        id:
          description: |-
            ID for PTR record in the format of <region>:<floatingip_id>
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        ptrdname:
          description: |-
            Domain name for this PTR record
          type:
            - 'null'
            - string
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
          readOnly: true
          type: string
        ttl:
          description: |-
            Time to live for this PTR record
          type: integer
      type: object
    ReverseFloatingipUpdateRequest:
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type: string
        address:
          description: |-
            The floatingip address for this PTR record.
          type: string
        description:
          description: |-
            Description for this PTR record
          type: string
        id:
          description: |-
            ID for PTR record in the format of <region>:<floatingip_id>
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        ptrdname:
          description: |-
            Domain name for this PTR record
          type:
            - 'null'
            - string
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
          readOnly: true
          type: string
        ttl:
          description: |-
            Time to live for this PTR record
          type: integer
      type: object
    ReverseFloatingipUpdateResponse:
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type: string
        address:
          description: |-
            The floatingip address for this PTR record.
          type: string
        description:
          description: |-
            Description for this PTR record
          type: string
        id:
          description: |-
            ID for PTR record in the format of <region>:<floatingip_id>
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        ptrdname:
          description: |-
            Domain name for this PTR record
          type:
            - 'null'
            - string
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
          readOnly: true
          type: string
        ttl:
          description: |-
            Time to live for this PTR record
          type: integer
      type: object
    ReverseFloatingipsListResponse:
      additionalProperties: false
      properties:
        floatingips:
          items:
            properties:
              action:
                description: |-
                  current action in progress on the resource
                enum:
                  - DELETE
                  - NONE
                  - UPDATE
                readOnly: true
                type: string
              address:
                description: |-
                  The floatingip address for this PTR record.
                type: string
              description:
                description: |-
                  Description for this PTR record
                type: string
              id:
                description: |-
                  ID for PTR record in the format of <region>:<floatingip_id>
                format: uuid
                readOnly: true
                type: string
              links:
                description: |-
                  Links to the resource, and other related resources.
                  When a response has been broken into pages, we will include
                  a `next` link that should be followed to retrieve all results
                properties:
                  self:
                    format: uri
                    type: string
                readOnly: true
                type: object
              ptrdname:
                description: |-
                  Domain name for this PTR record
                type:
                  - 'null'
                  - string
              status:
                description: |-
                  The status of the resource.
                enum:
                  - ACTIVE
                  - DELETED
                  - ERROR
                  - PENDING
                  - SUCCESS
                readOnly: true
                type: string
              ttl:
                description: |-
                  Time to live for this PTR record
                type: integer
            type: object
          type: array
        links:
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
      type: object
    Service_StatusShowResponse:
      description: Response of the service_statuses/service_id:get operation
      type: object
    Service_StatusesListResponse:
      description: Response of the service_statuses:get operation
      type: object
    TldShowResponse:
      description: Response of the tlds/tld_id:get operation
      type: object
    TldUpdateRequest:
      description: Request of the tlds/tld_id:patch operation
      type: object
      x-openstack:
        action-name: update
    TldUpdateResponse:
      description: Response of the tlds/tld_id:patch operation
      type: object
    TldsCreateRequest:
      description: Request of the tlds:post operation
      type: object
      x-openstack:
        action-name: create
    TldsCreateResponse:
      description: Response of the tlds:post operation
      type: object
    TldsListResponse:
      description: Response of the tlds:get operation
      type: object
    TsigkeyShowResponse:
      description: Response of the tsigkeys/tsigkey_id:get operation
      type: object
    TsigkeyUpdateRequest:
      description: Request of the tsigkeys/tsigkey_id:patch operation
      type: object
      x-openstack:
        action-name: update
    TsigkeyUpdateResponse:
      description: Response of the tsigkeys/tsigkey_id:patch operation
      type: object
    TsigkeysCreateRequest:
      description: Request of the tsigkeys:post operation
      type: object
      x-openstack:
        action-name: create
    TsigkeysCreateResponse:
      description: Response of the tsigkeys:post operation
      type: object
    TsigkeysListResponse:
      description: Response of the tsigkeys:get operation
      type: object
    ZoneShowResponse:
      additionalProperties: false
      description: DNS Zone
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        attributes:
          additionalProperties:
            type: string
          description: |-
            Key:Value pairs of information about this zone, and the pool the user
            would like to place the zone in. This information can be used by the
            scheduler to place zones on the correct pool.
          type: object
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this zone
          type: string
        email:
          description: |-
            e-mail for the zone. Used in SOA records for the zone
          format: uuid
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        masters:
          description: |-
            Mandatory for secondary zones. The servers to slave from to get DNS information
          items:
            type: string
          type: array
        name:
          description: |-
            DNS Name for the zone
          format: uuid
          type: string
        pool_id:
          description: |-
            ID for the pool hosting this zone
          format: uuid
          readOnly: true
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        serial:
          description: |-
            current serial number for the zone
          readOnly: true
          type: integer
        shared:
          description: |-
            True if the zone is shared with another project.

            **New in version 2.1**
          readOnly: true
          type: boolean
          x-openstack:
            min-ver: '2.1'
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
            - ZONE
          readOnly: true
          type:
            - 'null'
            - string
        transferred_at:
          description: For secondary zones. The last time an update was retrieved
            from the master servers
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the zone.
          type: integer
        type:
          default: PRIMARY
          description: |-
            Type of zone. PRIMARY is controlled by Designate, SECONDARY zones are slaved from another DNS Server. Defaults to PRIMARY
          enum:
            - CATALOG
            - PRIMARY
            - SECONDARY
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
      type: object
    ZoneUpdateRequest:
      additionalProperties: false
      description: DNS Zone
      properties:
        description:
          description: |-
            Description for this zone
          type: string
        email:
          description: |-
            e-mail for the zone. Used in SOA records for the zone
          format: uuid
          type: string
        ttl:
          description: |-
            TTL (Time to Live) for the zone.
          type: integer
      type: object
      x-openstack:
        action-name: update
    ZoneUpdateResponse:
      additionalProperties: false
      description: DNS Zone
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        attributes:
          additionalProperties:
            type: string
          description: |-
            Key:Value pairs of information about this zone, and the pool the user
            would like to place the zone in. This information can be used by the
            scheduler to place zones on the correct pool.
          type: object
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this zone
          type: string
        email:
          description: |-
            e-mail for the zone. Used in SOA records for the zone
          format: uuid
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        masters:
          description: |-
            Mandatory for secondary zones. The servers to slave from to get DNS information
          items:
            type: string
          type: array
        name:
          description: |-
            DNS Name for the zone
          format: uuid
          type: string
        pool_id:
          description: |-
            ID for the pool hosting this zone
          format: uuid
          readOnly: true
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        serial:
          description: |-
            current serial number for the zone
          readOnly: true
          type: integer
        shared:
          description: |-
            True if the zone is shared with another project.

            **New in version 2.1**
          readOnly: true
          type: boolean
          x-openstack:
            min-ver: '2.1'
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
            - ZONE
          readOnly: true
          type:
            - 'null'
            - string
        transferred_at:
          description: For secondary zones. The last time an update was retrieved
            from the master servers
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the zone.
          type: integer
        type:
          default: PRIMARY
          description: |-
            Type of zone. PRIMARY is controlled by Designate, SECONDARY zones are slaved from another DNS Server. Defaults to PRIMARY
          enum:
            - CATALOG
            - PRIMARY
            - SECONDARY
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
      type: object
    ZonesCreateRequest:
      additionalProperties: false
      description: DNS Zone
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        attributes:
          additionalProperties:
            type: string
          description: |-
            Key:Value pairs of information about this zone, and the pool the user
            would like to place the zone in. This information can be used by the
            scheduler to place zones on the correct pool.
          type: object
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this zone
          type: string
        email:
          description: |-
            e-mail for the zone. Used in SOA records for the zone
          format: uuid
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        masters:
          description: |-
            Mandatory for secondary zones. The servers to slave from to get DNS information
          items:
            type: string
          type: array
        name:
          description: |-
            DNS Name for the zone
          format: uuid
          type: string
        pool_id:
          description: |-
            ID for the pool hosting this zone
          format: uuid
          readOnly: true
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        serial:
          description: |-
            current serial number for the zone
          readOnly: true
          type: integer
        shared:
          description: |-
            True if the zone is shared with another project.

            **New in version 2.1**
          readOnly: true
          type: boolean
          x-openstack:
            min-ver: '2.1'
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
            - ZONE
          readOnly: true
          type:
            - 'null'
            - string
        transferred_at:
          description: For secondary zones. The last time an update was retrieved
            from the master servers
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the zone.
          type: integer
        type:
          default: PRIMARY
          description: |-
            Type of zone. PRIMARY is controlled by Designate, SECONDARY zones are slaved from another DNS Server. Defaults to PRIMARY
          enum:
            - CATALOG
            - PRIMARY
            - SECONDARY
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
      type: object
      x-openstack:
        action-name: create
    ZonesCreateResponse:
      additionalProperties: false
      description: DNS Zone
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        attributes:
          additionalProperties:
            type: string
          description: |-
            Key:Value pairs of information about this zone, and the pool the user
            would like to place the zone in. This information can be used by the
            scheduler to place zones on the correct pool.
          type: object
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this zone
          type: string
        email:
          description: |-
            e-mail for the zone. Used in SOA records for the zone
          format: uuid
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        masters:
          description: |-
            Mandatory for secondary zones. The servers to slave from to get DNS information
          items:
            type: string
          type: array
        name:
          description: |-
            DNS Name for the zone
          format: uuid
          type: string
        pool_id:
          description: |-
            ID for the pool hosting this zone
          format: uuid
          readOnly: true
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        serial:
          description: |-
            current serial number for the zone
          readOnly: true
          type: integer
        shared:
          description: |-
            True if the zone is shared with another project.

            **New in version 2.1**
          readOnly: true
          type: boolean
          x-openstack:
            min-ver: '2.1'
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
            - ZONE
          readOnly: true
          type:
            - 'null'
            - string
        transferred_at:
          description: For secondary zones. The last time an update was retrieved
            from the master servers
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the zone.
          type: integer
        type:
          default: PRIMARY
          description: |-
            Type of zone. PRIMARY is controlled by Designate, SECONDARY zones are slaved from another DNS Server. Defaults to PRIMARY
          enum:
            - CATALOG
            - PRIMARY
            - SECONDARY
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
      type: object
    ZonesListResponse:
      additionalProperties: false
      properties:
        links:
          properties:
            self:
              format: uri
              type: string
          type: object
        zones:
          items:
            additionalProperties: false
            description: DNS Zone
            properties:
              action:
                description: |-
                  current action in progress on the resource
                enum:
                  - CREATE
                  - DELETE
                  - NONE
                  - UPDATE
                readOnly: true
                type:
                  - 'null'
                  - string
              attributes:
                additionalProperties:
                  type: string
                description: |-
                  Key:Value pairs of information about this zone, and the pool the user
                  would like to place the zone in. This information can be used by the
                  scheduler to place zones on the correct pool.
                type: object
              created_at:
                description: |-
                  Date / Time when resource was created.
                format: date-time
                readOnly: true
                type: string
              description:
                description: |-
                  Description for this zone
                type: string
              email:
                description: |-
                  e-mail for the zone. Used in SOA records for the zone
                format: uuid
                type: string
              id:
                description: |-
                  ID for the resource
                format: uuid
                readOnly: true
                type: string
              links:
                description: |-
                  Links to the resource, and other related resources.
                  When a response has been broken into pages, we will include
                  a `next` link that should be followed to retrieve all results
                properties:
                  self:
                    format: uri
                    type: string
                readOnly: true
                type: object
              masters:
                description: |-
                  Mandatory for secondary zones. The servers to slave from to get DNS information
                items:
                  type: string
                type: array
              name:
                description: |-
                  DNS Name for the zone
                format: uuid
                type: string
              pool_id:
                description: |-
                  ID for the pool hosting this zone
                format: uuid
                readOnly: true
                type: string
              project_id:
                description: |-
                  ID for the project that owns the resource
                format: uuid
                readOnly: true
                type: string
              serial:
                description: |-
                  current serial number for the zone
                readOnly: true
                type: integer
              shared:
                description: |-
                  True if the zone is shared with another project.

                  **New in version 2.1**
                readOnly: true
                type: boolean
                x-openstack:
                  min-ver: '2.1'
              status:
                description: |-
                  The status of the resource.
                enum:
                  - ACTIVE
                  - DELETED
                  - ERROR
                  - PENDING
                  - SUCCESS
                  - ZONE
                readOnly: true
                type:
                  - 'null'
                  - string
              transferred_at:
                description: For secondary zones. The last time an update was retrieved
                  from the master servers
                format: date-time
                readOnly: true
                type:
                  - 'null'
                  - string
              ttl:
                description: |-
                  TTL (Time to Live) for the zone.
                type: integer
              type:
                default: PRIMARY
                description: |-
                  Type of zone. PRIMARY is controlled by Designate, SECONDARY zones are slaved from another DNS Server. Defaults to PRIMARY
                enum:
                  - CATALOG
                  - PRIMARY
                  - SECONDARY
                type: string
              updated_at:
                description: |-
                  Date / Time when resource last updated.
                format: date-time
                readOnly: true
                type:
                  - 'null'
                  - string
              version:
                description: |-
                  Version of the resource
                readOnly: true
                type: integer
            type: object
          type: array
      type: object
    ZonesNameserversListResponse:
      additionalProperties: false
      properties:
        links:
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        nameservers:
          items:
            additionalProperties: false
            description: DNS NAmeserver object
            properties:
              hostname:
                description: |-
                  The hostname of the nameserver that the zone should be delegated to
                format: hostname
                readOnly: true
                type: string
              links:
                properties:
                  self:
                    format: uri
                    type: string
                type: object
              priority:
                description: |-
                  The priority of the nameserver. This is used to determine the order of the
                  the nameserver listings, and which server is used in the SOA record for the
                  zone.
                readOnly: true
                type: integer
            type: object
          type: array
      type: object
    ZonesRecordsetShowResponse:
      additionalProperties: false
      description: Zone Record object
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this recordset
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        name:
          description: |-
            DNS Name for the recordset
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        records:
          description: |-
            A list of data for this recordset. Each item will be a separate record in Designate
            These items should conform to the DNS spec for the record type - e.g. A records
            must be IPv4 addresses, CNAME records must be a hostname.
          items:
            type: string
          type: array
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the recordset.
          type: integer
        type:
          description: |-
            They RRTYPE of the recordset.
          enum:
            - A
            - AAAA
            - CAA
            - CERT
            - CNAME
            - MX
            - NAPTR
            - NS
            - PTR
            - SOA
            - SPF
            - SRV
            - SSHFP
            - TXT
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
        zone_id:
          description: |-
            ID for the zone that contains this recordset
          format: uuid
          readOnly: true
          type: string
        zone_name:
          description: |-
            The name of the zone that contains this recordset
          readOnly: true
          type: string
      type: object
    ZonesRecordsetUpdateRequest:
      additionalProperties: false
      description: Zone Record object
      properties:
        description:
          description: |-
            Description for this recordset
          type: string
        records:
          description: |-
            A list of data for this recordset. Each item will be a separate record in Designate
            These items should conform to the DNS spec for the record type - e.g. A records
            must be IPv4 addresses, CNAME records must be a hostname.
          items:
            type: string
          type: array
        ttl:
          description: |-
            TTL (Time to Live) for the recordset.
          type: integer
      type: object
      x-openstack:
        action-name: update
    ZonesRecordsetUpdateResponse:
      additionalProperties: false
      description: Zone Record object
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this recordset
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        name:
          description: |-
            DNS Name for the recordset
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        records:
          description: |-
            A list of data for this recordset. Each item will be a separate record in Designate
            These items should conform to the DNS spec for the record type - e.g. A records
            must be IPv4 addresses, CNAME records must be a hostname.
          items:
            type: string
          type: array
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the recordset.
          type: integer
        type:
          description: |-
            They RRTYPE of the recordset.
          enum:
            - A
            - AAAA
            - CAA
            - CERT
            - CNAME
            - MX
            - NAPTR
            - NS
            - PTR
            - SOA
            - SPF
            - SRV
            - SSHFP
            - TXT
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
        zone_id:
          description: |-
            ID for the zone that contains this recordset
          format: uuid
          readOnly: true
          type: string
        zone_name:
          description: |-
            The name of the zone that contains this recordset
          readOnly: true
          type: string
      type: object
    ZonesRecordsetsCreateRequest:
      additionalProperties: false
      description: Zone Record object
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this recordset
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        name:
          description: |-
            DNS Name for the recordset
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        records:
          description: |-
            A list of data for this recordset. Each item will be a separate record in Designate
            These items should conform to the DNS spec for the record type - e.g. A records
            must be IPv4 addresses, CNAME records must be a hostname.
          items:
            type: string
          type: array
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the recordset.
          type: integer
        type:
          description: |-
            They RRTYPE of the recordset.
          enum:
            - A
            - AAAA
            - CAA
            - CERT
            - CNAME
            - MX
            - NAPTR
            - NS
            - PTR
            - SOA
            - SPF
            - SRV
            - SSHFP
            - TXT
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
        zone_id:
          description: |-
            ID for the zone that contains this recordset
          format: uuid
          readOnly: true
          type: string
        zone_name:
          description: |-
            The name of the zone that contains this recordset
          readOnly: true
          type: string
      type: object
      x-openstack:
        action-name: create
    ZonesRecordsetsCreateResponse:
      additionalProperties: false
      description: Zone Record object
      properties:
        action:
          description: |-
            current action in progress on the resource
          enum:
            - CREATE
            - DELETE
            - NONE
            - UPDATE
          readOnly: true
          type:
            - 'null'
            - string
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        description:
          description: |-
            Description for this recordset
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        name:
          description: |-
            DNS Name for the recordset
          type: string
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        records:
          description: |-
            A list of data for this recordset. Each item will be a separate record in Designate
            These items should conform to the DNS spec for the record type - e.g. A records
            must be IPv4 addresses, CNAME records must be a hostname.
          items:
            type: string
          type: array
        status:
          description: |-
            The status of the resource.
          enum:
            - ACTIVE
            - DELETED
            - ERROR
            - PENDING
            - SUCCESS
          readOnly: true
          type:
            - 'null'
            - string
        ttl:
          description: |-
            TTL (Time to Live) for the recordset.
          type: integer
        type:
          description: |-
            They RRTYPE of the recordset.
          enum:
            - A
            - AAAA
            - CAA
            - CERT
            - CNAME
            - MX
            - NAPTR
            - NS
            - PTR
            - SOA
            - SPF
            - SRV
            - SSHFP
            - TXT
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
        version:
          description: |-
            Version of the resource
          readOnly: true
          type: integer
        zone_id:
          description: |-
            ID for the zone that contains this recordset
          format: uuid
          readOnly: true
          type: string
        zone_name:
          description: |-
            The name of the zone that contains this recordset
          readOnly: true
          type: string
      type: object
    ZonesRecordsetsListResponse:
      additionalProperties: false
      properties:
        links:
          properties:
            self:
              format: uri
              type: string
          type: object
        recordsets:
          items:
            additionalProperties: false
            description: Zone Record object
            properties:
              action:
                description: |-
                  current action in progress on the resource
                enum:
                  - CREATE
                  - DELETE
                  - NONE
                  - UPDATE
                readOnly: true
                type:
                  - 'null'
                  - string
              created_at:
                description: |-
                  Date / Time when resource was created.
                format: date-time
                readOnly: true
                type: string
              description:
                description: |-
                  Description for this recordset
                type: string
              id:
                description: |-
                  ID for the resource
                format: uuid
                readOnly: true
                type: string
              links:
                description: |-
                  Links to the resource, and other related resources.
                  When a response has been broken into pages, we will include
                  a `next` link that should be followed to retrieve all results
                properties:
                  self:
                    format: uri
                    type: string
                readOnly: true
                type: object
              name:
                description: |-
                  DNS Name for the recordset
                type: string
              project_id:
                description: |-
                  ID for the project that owns the resource
                format: uuid
                readOnly: true
                type: string
              records:
                description: |-
                  A list of data for this recordset. Each item will be a separate record in Designate
                  These items should conform to the DNS spec for the record type - e.g. A records
                  must be IPv4 addresses, CNAME records must be a hostname.
                items:
                  type: string
                type: array
              status:
                description: |-
                  The status of the resource.
                enum:
                  - ACTIVE
                  - DELETED
                  - ERROR
                  - PENDING
                  - SUCCESS
                readOnly: true
                type:
                  - 'null'
                  - string
              ttl:
                description: |-
                  TTL (Time to Live) for the recordset.
                type: integer
              type:
                description: |-
                  They RRTYPE of the recordset.
                enum:
                  - A
                  - AAAA
                  - CAA
                  - CERT
                  - CNAME
                  - MX
                  - NAPTR
                  - NS
                  - PTR
                  - SOA
                  - SPF
                  - SRV
                  - SSHFP
                  - TXT
                type: string
              updated_at:
                description: |-
                  Date / Time when resource last updated.
                format: date-time
                readOnly: true
                type:
                  - 'null'
                  - string
              version:
                description: |-
                  Version of the resource
                readOnly: true
                type: integer
              zone_id:
                description: |-
                  ID for the zone that contains this recordset
                format: uuid
                readOnly: true
                type: string
              zone_name:
                description: |-
                  The name of the zone that contains this recordset
                readOnly: true
                type: string
            type: object
          type: array
      type: object
    ZonesShareShowResponse:
      additionalProperties: false
      description: Shared DNS Zone
      properties:
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
            zone:
              format: uri
              type: string
          readOnly: true
          type: object
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        target_project_id:
          description: |-
            The project ID the zone will be shared with.

            **New in version 2.1**
          format: uuid
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
      type: object
    ZonesSharesCreateRequest:
      additionalProperties: false
      description: Shared DNS Zone
      properties:
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
            zone:
              format: uri
              type: string
          readOnly: true
          type: object
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        target_project_id:
          description: |-
            The project ID the zone will be shared with.

            **New in version 2.1**
          format: uuid
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
      type: object
    ZonesSharesCreateResponse:
      additionalProperties: false
      description: Shared DNS Zone
      properties:
        created_at:
          description: |-
            Date / Time when resource was created.
          format: date-time
          readOnly: true
          type: string
        id:
          description: |-
            ID for the resource
          format: uuid
          readOnly: true
          type: string
        links:
          description: |-
            Links to the resource, and other related resources.
            When a response has been broken into pages, we will include
            a `next` link that should be followed to retrieve all results
          properties:
            self:
              format: uri
              type: string
            zone:
              format: uri
              type: string
          readOnly: true
          type: object
        project_id:
          description: |-
            ID for the project that owns the resource
          format: uuid
          readOnly: true
          type: string
        target_project_id:
          description: |-
            The project ID the zone will be shared with.

            **New in version 2.1**
          format: uuid
          type: string
        updated_at:
          description: |-
            Date / Time when resource last updated.
          format: date-time
          readOnly: true
          type:
            - 'null'
            - string
      type: object
    ZonesSharesListResponse:
      additionalProperties: false
      properties:
        links:
          properties:
            self:
              format: uri
              type: string
          readOnly: true
          type: object
        shared_zones:
          items:
            additionalProperties: false
            description: Shared DNS Zone
            properties:
              created_at:
                description: |-
                  Date / Time when resource was created.
                format: date-time
                readOnly: true
                type: string
              id:
                description: |-
                  ID for the resource
                format: uuid
                readOnly: true
                type: string
              links:
                description: |-
                  Links to the resource, and other related resources.
                  When a response has been broken into pages, we will include
                  a `next` link that should be followed to retrieve all results
                properties:
                  self:
                    format: uri
                    type: string
                  zone:
                    format: uri
                    type: string
                readOnly: true
                type: object
              project_id:
                description: |-
                  ID for the project that owns the resource
                format: uuid
                readOnly: true
                type: string
              target_project_id:
                description: |-
                  The project ID the zone will be shared with.

                  **New in version 2.1**
                format: uuid
                type: string
              updated_at:
                description: |-
                  Date / Time when resource last updated.
                format: date-time
                readOnly: true
                type:
                  - 'null'
                  - string
            type: object
          type: array
      type: object
    ZonesTasksAbandonCreateRequest:
      description: Request of the zones/zone_id/tasks/abandon:post operation
      type: object
      x-openstack:
        action-name: create
    ZonesTasksAbandonCreateResponse:
      description: Response of the zones/zone_id/tasks/abandon:post operation
      type: object
    ZonesTasksExportCreateRequest:
      description: Request of the zones/zone_id/tasks/export:post operation
      type: object
      x-openstack:
        action-name: create
    ZonesTasksExportCreateResponse:
      description: Response of the zones/zone_id/tasks/export:post operation
      type: object
    ZonesTasksExportShowResponse:
      description: Response of the zones/tasks/exports/export_id:get operation
      type: object
    ZonesTasksExportsExportListResponse:
      description: Response of the zones/tasks/exports/export_id/export:get operation
      type: object
    ZonesTasksExportsListResponse:
      description: Response of the zones/tasks/exports:get operation
      type: object
    ZonesTasksImportShowResponse:
      description: Response of the zones/tasks/imports/import_id:get operation
      type: object
    ZonesTasksImportsCreateRequest:
      description: Request of the zones/tasks/imports:post operation
      type: object
      x-openstack:
        action-name: create
    ZonesTasksImportsCreateResponse:
      description: Response of the zones/tasks/imports:post operation
      type: object
    ZonesTasksImportsListResponse:
      description: Response of the zones/tasks/imports:get operation
      type: object
    ZonesTasksPool_MoveCreateRequest:
      description: Request of the zones/zone_id/tasks/pool_move:post operation
      type: object
      x-openstack:
        action-name: create
    ZonesTasksPool_MoveCreateResponse:
      description: Response of the zones/zone_id/tasks/pool_move:post operation
      type: object
    ZonesTasksTransfer_AcceptShowResponse:
      description: Response of the zones/tasks/transfer_accepts/transfer_accept_id:get
        operation
      type: object
    ZonesTasksTransfer_AcceptsCreateRequest:
      description: Request of the zones/tasks/transfer_accepts:post operation
      type: object
      x-openstack:
        action-name: create
    ZonesTasksTransfer_AcceptsCreateResponse:
      description: Response of the zones/tasks/transfer_accepts:post operation
      type: object
    ZonesTasksTransfer_AcceptsListResponse:
      description: Response of the zones/tasks/transfer_accepts:get operation
      type: object
    ZonesTasksTransfer_RequestShowResponse:
      description: Response of the zones/tasks/transfer_requests/zone_transfer_request_id:get
        operation
      type: object
    ZonesTasksTransfer_RequestUpdateRequest:
      description: Request of the zones/tasks/transfer_requests/zone_transfer_request_id:patch
        operation
      type: object
      x-openstack:
        action-name: update
    ZonesTasksTransfer_RequestUpdateResponse:
      description: Response of the zones/tasks/transfer_requests/zone_transfer_request_id:patch
        operation
      type: object
    ZonesTasksTransfer_RequestsCreateRequest:
      description: Request of the zones/zone_id/tasks/transfer_requests:post operation
      type: object
      x-openstack:
        action-name: create
    ZonesTasksTransfer_RequestsCreateResponse:
      description: Response of the zones/zone_id/tasks/transfer_requests:post operation
      type: object
    ZonesTasksTransfer_RequestsListResponse:
      description: Response of the zones/tasks/transfer_requests:get operation
      type: object
    ZonesTasksXfrCreateRequest:
      description: Request of the zones/zone_id/tasks/xfr:post operation
      type: object
      x-openstack:
        action-name: create
    ZonesTasksXfrCreateResponse:
      description: Response of the zones/zone_id/tasks/xfr:post operation
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Auth-Token
      type: apiKey
security:
  - ApiKeyAuth: []
tags:
  - description: |-
      The blacklist entries are used to manage blacklisted zones. If a zone
      is blacklisted, then it cannot be used to create a zone. By default,
      only an admin can manage these entries. Blacklisted zones are stored
      as a regular expression (regex) pattern in the Database/Storage in
      the blacklists table.
    name: blacklists
  - description: |-
      In order to use the FloatingIPs functionality you will need to have a FloatingIP
      associated to your project in Neutron.
    name: floatingips
  - description: |-
      Show the limits for the current project
    name: limits
  - description: |-
      Get information about the pools in a designate install
    name: pools
  - description: |-
      Quota operations.
    name: quotas
  - description: |-
      Recordsets operations.
    name: recordsets
  - description: |-
      The Service Status entries are used to track the health state of the services
      in the Designate system. Each service will report in it’s health via RPC or
      using HTTP.
    name: service-statuses
  - description: |-
      Shared zones operations.
    name: shared-zones
  - description: |-
      Tld operations.
    name: tld
  - description: |-
      Transaction signatures (TSIG) is a mechanism used to secure DNS messages and
      to provide secure server-to-server communication (usually between master and
      slave server, but can be extended for dynamic updates as well).
    name: tsigkey
  - description: |-
      Zone exports can be an asynchronous operation,
      and there are different endpoints to view the status and progress of an export
    name: zone-exports
  - name: zone-imports
  - description: |-
      Designate allows users to transfer ownership of a zone between projects.
    name: zone-ownership-transfers-accepts
  - description: |-
      Designate allows users to transfer ownership of a zone between projects.
    name: zone-ownership-transfers-requests
  - description: |-
      Zone tasks.
    name: zone-tasks
  - name: zones
