openapi: 3.1.0
info:
  title: OpenStack Block Storage API
  description: |-
    Note
  version: '3.71'
paths:
  /v3/:
    get:
      description: |-
        Shows details for Block Storage API v3.
      operationId: :get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootListResponse'
      tags:
        - version
      x-openstack:
        min-ver: '3.0'
      summary: Show API v3 details
  /v3/{project_id}/volumes/detail:
    parameters:
      - $ref: '#/components/parameters/volumes_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Lists all Block Storage volumes, with details, that the project can access,
        since v3.31 if non-admin users specify invalid filters in the url, API will
        return bad request.
      operationId: project_id/volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesDetailResponse'
      tags:
        - volumes
      summary: List accessible volumes with details
  /v3/{project_id}/volumes/summary:
    parameters:
      - $ref: '#/components/parameters/volumes_summary_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
      description: |-
        Display volumes summary with total number of volumes and total size in GB.
        Available since API microversion 3.12.
      operationId: project_id/volumes/summary:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesSummaryResponse'
      tags:
        - volumes
      x-openstack:
        min-ver: '3.12'
      summary: Get volumes summary
  /v3/{project_id}/volumes:
    parameters:
      - $ref: '#/components/parameters/volumes_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Lists summary information for all Block Storage volumes that the
        project can access, since v3.31 if non-admin users specify invalid
        filters in the url, API will return bad request.
      operationId: project_id/volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesListResponse'
      tags:
        - volumes
      summary: List accessible volumes
    post:
      description: |-
        Creates a volume.

        To create a bootable volume, include the UUID of the image from
        which you want to create the volume in the `imageRef` attribute
        in the request body.

        Since the Train release, every volume must have a volume type. It
        is **optional** to specify a volume type as part of your Create a
        volume request. If you do not specify one, a default volume type
        will be supplied for you. This type may vary according to what
        project you are in and how the operator has configured the Block
        Storage service. Use the [Show default volume type](#show-default-volume-type) request to
        determine your effective default volume type.

        Preconditions

        Asynchronous Postconditions

        Troubleshooting
      operationId: project_id/volumes:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesCreateResponse'
      tags:
        - volumes
      summary: Create a volume
  /v3/{project_id}/volumes/{id}/action:
    parameters:
      - $ref: '#/components/parameters/volumes_action_project_id'
      - $ref: '#/components/parameters/volumes_action_id'
    post:
      operationId: project_id/volumes/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/VolumesActionRevertRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Reset_StatusRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Force_DeleteRequest'
                - $ref: '#/components/schemas/VolumesAction_Force_Detach'
                - $ref: '#/components/schemas/VolumesActionOs-Migrate_VolumeRequest'
                - $ref: '#/components/schemas/VolumesAction_Migrate_Volume_Completion'
                - $ref: '#/components/schemas/VolumesAction_Extend_Volume_Completion'
                - $ref: '#/components/schemas/VolumesActionOs-UnmanageRequest'
                - $ref: '#/components/schemas/VolumesAction_Attach'
                - $ref: '#/components/schemas/VolumesAction_Detach'
                - $ref: '#/components/schemas/VolumesActionOs-ReserveRequest'
                - $ref: '#/components/schemas/VolumesActionOs-UnreserveRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Begin_DetachingRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Roll_DetachingRequest'
                - $ref: '#/components/schemas/VolumesAction_Initialize_Connection'
                - $ref: '#/components/schemas/VolumesAction_Terminate_Connection'
                - $ref: '#/components/schemas/VolumesActionOs-Volume_Upload_ImageRequest'
                - $ref: '#/components/schemas/VolumesAction_Extend'
                - $ref: '#/components/schemas/VolumesAction_Volume_Readonly_Update'
                - $ref: '#/components/schemas/VolumesAction_Retype'
                - $ref: '#/components/schemas/VolumesAction_Set_Bootable'
                - $ref: '#/components/schemas/VolumesAction_Reimage_368'
                - $ref: '#/components/schemas/VolumesActionCreate'
                - $ref: '#/components/schemas/VolumesActionOs-Show_Image_MetadataRequest'
                - $ref: '#/components/schemas/VolumesActionDelete'
              x-openstack:
                discriminator: action
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/VolumesActionOs-Extend_Volume_CompletionResponse'
                  - $ref: '#/components/schemas/VolumesActionOs-Volume_Upload_ImageResponse'
        '201':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/VolumesActionOs-Set_Image_MetadataResponse'
                  - $ref: '#/components/schemas/VolumesActionOs-Show_Image_MetadataResponse'
        '200':
          description: Ok
      tags:
        - volumes
  /v3/{project_id}/volumes/{id}:
    parameters:
      - $ref: '#/components/parameters/volumes_project_id'
      - $ref: '#/components/parameters/volumes_id'
    get:
      description: |-
        Return data about the given volume.
      operationId: project_id/volumes/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeShowResponse'
      tags:
        - volumes
    delete:
      description: |-
        Delete a volume.
      operationId: project_id/volumes/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - volumes
    put:
      description: |-
        Update a volume.
      operationId: project_id/volumes/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeUpdateResponse'
      tags:
        - volumes
  /v3/volumes/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Returns a detailed list of volumes.
      operationId: volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesDetailResponse'
      tags:
        - volumes
  /v3/volumes/summary:
    get:
      description: |-
        Return summary of volumes.
      operationId: volumes/summary:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesSummaryResponse'
      tags:
        - volumes
      x-openstack:
        min-ver: '3.12'
  /v3/volumes:
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Returns a summary list of volumes.
      operationId: volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesListResponse'
      tags:
        - volumes
    post:
      description: |-
        Creates a new volume.

        |  |  |
        | --- | --- |
        | param req: | the request |
        | param body: | the request body |
        | returns: | dict -- the new volume dictionary |
        | raises HTTPNotFound, HTTPBadRequest: | |
        |  |  |
      operationId: volumes:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesCreateResponse'
      tags:
        - volumes
  /v3/volumes/{id}/action:
    parameters:
      - $ref: '#/components/parameters/volumes_action_id'
    post:
      operationId: volumes/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/VolumesActionRevertRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Reset_StatusRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Force_DeleteRequest'
                - $ref: '#/components/schemas/VolumesAction_Force_Detach'
                - $ref: '#/components/schemas/VolumesActionOs-Migrate_VolumeRequest'
                - $ref: '#/components/schemas/VolumesAction_Migrate_Volume_Completion'
                - $ref: '#/components/schemas/VolumesAction_Extend_Volume_Completion'
                - $ref: '#/components/schemas/VolumesActionOs-UnmanageRequest'
                - $ref: '#/components/schemas/VolumesAction_Attach'
                - $ref: '#/components/schemas/VolumesAction_Detach'
                - $ref: '#/components/schemas/VolumesActionOs-ReserveRequest'
                - $ref: '#/components/schemas/VolumesActionOs-UnreserveRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Begin_DetachingRequest'
                - $ref: '#/components/schemas/VolumesActionOs-Roll_DetachingRequest'
                - $ref: '#/components/schemas/VolumesAction_Initialize_Connection'
                - $ref: '#/components/schemas/VolumesAction_Terminate_Connection'
                - $ref: '#/components/schemas/VolumesActionOs-Volume_Upload_ImageRequest'
                - $ref: '#/components/schemas/VolumesAction_Extend'
                - $ref: '#/components/schemas/VolumesAction_Volume_Readonly_Update'
                - $ref: '#/components/schemas/VolumesAction_Retype'
                - $ref: '#/components/schemas/VolumesAction_Set_Bootable'
                - $ref: '#/components/schemas/VolumesAction_Reimage_368'
                - $ref: '#/components/schemas/VolumesActionCreate'
                - $ref: '#/components/schemas/VolumesActionOs-Show_Image_MetadataRequest'
                - $ref: '#/components/schemas/VolumesActionDelete'
              x-openstack:
                discriminator: action
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/VolumesActionOs-Extend_Volume_CompletionResponse'
                  - $ref: '#/components/schemas/VolumesActionOs-Volume_Upload_ImageResponse'
        '201':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/VolumesActionOs-Set_Image_MetadataResponse'
                  - $ref: '#/components/schemas/VolumesActionOs-Show_Image_MetadataResponse'
        '200':
          description: Ok
      tags:
        - volumes
  /v3/volumes/{id}:
    parameters:
      - $ref: '#/components/parameters/volumes_id'
    get:
      description: |-
        Return data about the given volume.
      operationId: volumes/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeShowResponse'
      tags:
        - volumes
    delete:
      description: |-
        Delete a volume.
      operationId: volumes/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - volumes
    put:
      description: |-
        Update a volume.
      operationId: volumes/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeUpdateResponse'
      tags:
        - volumes
  /v3/{project_id}/messages:
    parameters:
      - $ref: '#/components/parameters/messages_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Lists all messages, since v3.31 if non-admin users
        specify invalid filters in the url, API will return bad request.
      operationId: project_id/messages:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesListResponse'
      tags:
        - messages
      x-openstack:
        min-ver: '3.3'
      summary: List messages
  /v3/{project_id}/messages/{id}:
    parameters:
      - $ref: '#/components/parameters/messages_project_id'
      - $ref: '#/components/parameters/messages_id'
    get:
      description: |-
        Return the given message.
      operationId: project_id/messages/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageShowResponse'
      tags:
        - messages
      x-openstack:
        min-ver: '3.3'
    delete:
      description: |-
        Delete a message.
      operationId: project_id/messages/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - messages
      x-openstack:
        min-ver: '3.3'
  /v3/messages:
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Returns a list of messages, transformed through view builder.
      operationId: messages:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesListResponse'
      tags:
        - messages
      x-openstack:
        min-ver: '3.3'
  /v3/messages/{id}:
    parameters:
      - $ref: '#/components/parameters/messages_id'
    get:
      description: |-
        Return the given message.
      operationId: messages/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageShowResponse'
      tags:
        - messages
      x-openstack:
        min-ver: '3.3'
    delete:
      description: |-
        Delete a message.
      operationId: messages/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - messages
      x-openstack:
        min-ver: '3.3'
  /v3/{project_id}/clusters/detail:
    parameters:
      - $ref: '#/components/parameters/clusters_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/cluster_frozen'
        - $ref: '#/components/parameters/cluster_active_backend_id'
        - $ref: '#/components/parameters/cluster_name'
        - $ref: '#/components/parameters/cluster_binary'
        - $ref: '#/components/parameters/cluster_is_up'
        - $ref: '#/components/parameters/cluster_disabled'
        - $ref: '#/components/parameters/cluster_num_hosts'
        - $ref: '#/components/parameters/cluster_num_down_hosts'
        - $ref: '#/components/parameters/cluster_replication_status'
      description: |-
        Lists all clusters with details.

        Available starting in the 3.7 microversion.
      operationId: project_id/clusters/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersDetailResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
      summary: List clusters with details
  /v3/{project_id}/clusters:
    parameters:
      - $ref: '#/components/parameters/clusters_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/cluster_name'
        - $ref: '#/components/parameters/cluster_binary'
        - $ref: '#/components/parameters/cluster_is_up'
        - $ref: '#/components/parameters/cluster_disabled'
        - $ref: '#/components/parameters/cluster_num_hosts'
        - $ref: '#/components/parameters/cluster_num_down_hosts'
        - $ref: '#/components/parameters/cluster_replication_status'
      description: |-
        Lists all clusters.

        Available starting in the 3.7 microversion.
      operationId: project_id/clusters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersListResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
      summary: List clusters
  /v3/{project_id}/clusters/{id}:
    parameters:
      - $ref: '#/components/parameters/clusters_project_id'
      - $ref: '#/components/parameters/clusters_id'
    get:
      description: |-
        Return data for a given cluster name with optional binary.
      operationId: project_id/clusters/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterShowResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
    put:
      description: |-
        Enable/Disable scheduling for a cluster.
      operationId: project_id/clusters/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterUpdateResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/clusters/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/cluster_frozen'
        - $ref: '#/components/parameters/cluster_active_backend_id'
        - $ref: '#/components/parameters/cluster_name'
        - $ref: '#/components/parameters/cluster_binary'
        - $ref: '#/components/parameters/cluster_is_up'
        - $ref: '#/components/parameters/cluster_disabled'
        - $ref: '#/components/parameters/cluster_num_hosts'
        - $ref: '#/components/parameters/cluster_num_down_hosts'
        - $ref: '#/components/parameters/cluster_replication_status'
      description: |-
        Return a detailed list of all existing clusters.

        Filter by is_up, disabled, num_hosts, and num_down_hosts.
      operationId: clusters/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersDetailResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/clusters:
    get:
      parameters:
        - $ref: '#/components/parameters/cluster_name'
        - $ref: '#/components/parameters/cluster_binary'
        - $ref: '#/components/parameters/cluster_is_up'
        - $ref: '#/components/parameters/cluster_disabled'
        - $ref: '#/components/parameters/cluster_num_hosts'
        - $ref: '#/components/parameters/cluster_num_down_hosts'
        - $ref: '#/components/parameters/cluster_replication_status'
      description: |-
        Return a non detailed list of all existing clusters.

        Filter by is_up, disabled, num_hosts, and num_down_hosts.
      operationId: clusters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClustersListResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/clusters/{id}:
    parameters:
      - $ref: '#/components/parameters/clusters_id'
    get:
      description: |-
        Return data for a given cluster name with optional binary.
      operationId: clusters/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterShowResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
    put:
      description: |-
        Enable/Disable scheduling for a cluster.
      operationId: clusters/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterUpdateResponse'
      tags:
        - clusters
      x-openstack:
        min-ver: '3.7'
  /v3/{project_id}/types:
    parameters:
      - $ref: '#/components/parameters/types_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/type_is_public'
        - $ref: '#/components/parameters/type_sort'
        - $ref: '#/components/parameters/type_sort_key'
        - $ref: '#/components/parameters/type_sort_dir'
        - $ref: '#/components/parameters/type_limit'
        - $ref: '#/components/parameters/type_marker'
        - $ref: '#/components/parameters/type_offset'
      description: |-
        Lists volume types.

        To determine which of these is the default type that will be used if you
        do not specify one in the [Create a volume](#create-a-volume) request, use the
        [Show default volume type](#show-default-volume-type) request.

        *Note to users:* There may be a volume type named `__DEFAULT__` in the
        list. Try not to use this volume type, unless necessary or instructed by the
        operator, in a [Create a volume](#create-a-volume) request. If you wish to create a volume of
        *your* default volume type, simply omit the `volume_type` parameter in your
        [Create a volume](#create-a-volume) request.

        *Note to operators:* The `__DEFAULT__` volume type was introduced in
        the Train release as a placeholder to prevent the creation of untyped
        volumes. Under the proper conditions, it may be removed from your
        deployment. Consult the Default Volume Types section in
        [Cinder Administration Guide](https://docs.openstack.org/cinder/latest/admin/index.html)
        for details.
      operationId: project_id/types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesListResponse'
      tags:
        - types
      summary: List all volume types
    post:
      description: |-
        Creates a volume type.
      operationId: project_id/types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Types_Create'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesCreateResponse'
      tags:
        - types
      summary: Create a volume type
  /v3/{project_id}/types/{id}/action:
    parameters:
      - $ref: '#/components/parameters/types_action_project_id'
      - $ref: '#/components/parameters/types_action_id'
    post:
      operationId: project_id/types/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TypesAction_Create'
                - $ref: '#/components/schemas/TypesAction_Update'
                - $ref: '#/components/schemas/TypesActionDeleteRequest'
                - $ref: '#/components/schemas/TypesAction_Addprojectaccess'
                - $ref: '#/components/schemas/TypesAction_Removeprojectaccess'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TypesActionCreateResponse'
                  - $ref: '#/components/schemas/TypesActionUpdateResponse'
                  - $ref: '#/components/schemas/TypesActionDeleteResponse'
      tags:
        - types
  /v3/{project_id}/types/{id}:
    parameters:
      - $ref: '#/components/parameters/types_project_id'
      - $ref: '#/components/parameters/types_id'
    get:
      description: |-
        Return a single volume type item.
      operationId: project_id/types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeShowResponse'
      tags:
        - types
    delete:
      description: |-
        Deletes an existing volume type.
      operationId: project_id/types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - types
    put:
      operationId: project_id/types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Type_Update'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeUpdateResponse'
      tags:
        - types
  /v3/types:
    get:
      description: |-
        Returns the list of volume types.
      operationId: types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesListResponse'
      tags:
        - types
    post:
      description: |-
        Creates a new volume type.
      operationId: types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Types_Create'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesCreateResponse'
      tags:
        - types
  /v3/types/{id}/action:
    parameters:
      - $ref: '#/components/parameters/types_action_id'
    post:
      operationId: types/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TypesAction_Create'
                - $ref: '#/components/schemas/TypesAction_Update'
                - $ref: '#/components/schemas/TypesActionDeleteRequest'
                - $ref: '#/components/schemas/TypesAction_Addprojectaccess'
                - $ref: '#/components/schemas/TypesAction_Removeprojectaccess'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TypesActionCreateResponse'
                  - $ref: '#/components/schemas/TypesActionUpdateResponse'
                  - $ref: '#/components/schemas/TypesActionDeleteResponse'
      tags:
        - types
  /v3/types/{id}:
    parameters:
      - $ref: '#/components/parameters/types_id'
    get:
      description: |-
        Return a single volume type item.
      operationId: types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeShowResponse'
      tags:
        - types
    delete:
      description: |-
        Deletes an existing volume type.
      operationId: types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - types
    put:
      operationId: types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Type_Update'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeUpdateResponse'
      tags:
        - types
  /v3/{project_id}/group_types:
    parameters:
      - $ref: '#/components/parameters/group_types_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Lists group types.
      operationId: project_id/group_types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesListResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
      summary: List group types
    post:
      description: |-
        Creates a group type.
      operationId: project_id/group_types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypesCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesCreateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
      summary: Create group type
  /v3/{project_id}/group_types/{id}:
    parameters:
      - $ref: '#/components/parameters/group_types_project_id'
      - $ref: '#/components/parameters/group_types_id'
    get:
      description: |-
        Return a single group type item.
      operationId: project_id/group_types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypeShowResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    delete:
      description: |-
        Deletes an existing group type.
      operationId: project_id/group_types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    put:
      operationId: project_id/group_types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypeUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypeUpdateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types:
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Returns the list of group types.
      operationId: group_types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesListResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    post:
      description: |-
        Creates a new group type.
      operationId: group_types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypesCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesCreateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types/{id}:
    parameters:
      - $ref: '#/components/parameters/group_types_id'
    get:
      description: |-
        Return a single group type item.
      operationId: group_types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypeShowResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    delete:
      description: |-
        Deletes an existing group type.
      operationId: group_types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    put:
      operationId: group_types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypeUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypeUpdateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/{project_id}/group_types/{group_type_id}/group_specs:
    parameters:
      - $ref: '#/components/parameters/group_types_group_specs_project_id'
      - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
    get:
      description: |-
        List all the group specs for a group type,
      operationId: project_id/group_types/group_type_id/group_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecsListResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
      summary: List group specs for a group type
    post:
      description: |-
        Create group specs for a group type, if the specification key already exists in
        group specs, this API will update the specification as well.
      operationId: project_id/group_types/group_type_id/group_specs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypesGroup_SpecsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecsCreateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
      summary: Create or update group specs for a group type
  /v3/{project_id}/group_types/{group_type_id}/group_specs/{id}:
    parameters:
      - $ref: '#/components/parameters/group_types_group_specs_project_id'
      - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
      - $ref: '#/components/parameters/group_types_group_specs_id'
    get:
      description: |-
        Return a single extra spec item.
      operationId: project_id/group_types/group_type_id/group_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecShowResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    delete:
      description: |-
        Deletes an existing group spec.
      operationId: project_id/group_types/group_type_id/group_specs/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    put:
      operationId: project_id/group_types/group_type_id/group_specs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypesGroup_SpecUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecUpdateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types/{group_type_id}/group_specs:
    parameters:
      - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
    get:
      description: |-
        Returns the list of group specs for a given group type.
      operationId: group_types/group_type_id/group_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecsListResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    post:
      operationId: group_types/group_type_id/group_specs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypesGroup_SpecsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecsCreateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/group_types/{group_type_id}/group_specs/{id}:
    parameters:
      - $ref: '#/components/parameters/group_types_group_specs_group_type_id'
      - $ref: '#/components/parameters/group_types_group_specs_id'
    get:
      description: |-
        Return a single extra spec item.
      operationId: group_types/group_type_id/group_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecShowResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    delete:
      description: |-
        Deletes an existing group spec.
      operationId: group_types/group_type_id/group_specs/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
    put:
      operationId: group_types/group_type_id/group_specs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_TypesGroup_SpecUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_TypesGroup_SpecUpdateResponse'
      tags:
        - group_types
      x-openstack:
        min-ver: '3.11'
  /v3/{project_id}/groups/detail:
    parameters:
      - $ref: '#/components/parameters/groups_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Lists groups with details, since v3.31 if non-admin
        users specify invalid filters in the url, API will return bad request.
      operationId: project_id/groups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsDetailResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
      summary: List groups with details
  /v3/{project_id}/groups:
    parameters:
      - $ref: '#/components/parameters/groups_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Lists groups. Since v3.31 if non-admin users specify
        invalid filters in the url, API will return bad request.
      operationId: project_id/groups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
      summary: List groups
    post:
      description: |-
        Creates a group.
      operationId: project_id/groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsCreateResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
      summary: Create group
  /v3/{project_id}/groups/{id}/action:
    parameters:
      - $ref: '#/components/parameters/groups_action_project_id'
      - $ref: '#/components/parameters/groups_action_id'
    post:
      operationId: project_id/groups/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/GroupsActionReset_Status'
                - $ref: '#/components/schemas/GroupsActionDelete_Group'
                - $ref: '#/components/schemas/GroupsActionCreate_From_Src'
                - $ref: '#/components/schemas/GroupsActionEnable_Replication'
                - $ref: '#/components/schemas/GroupsActionDisable_Replication'
                - $ref: '#/components/schemas/GroupsActionFailover_Replication'
                - $ref: '#/components/schemas/GroupsActionList_Replication_Targets'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionList_Replication_TargetsResponse'
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionCreate-From-SrcResponse'
      tags:
        - groups
  /v3/{project_id}/groups/{id}:
    parameters:
      - $ref: '#/components/parameters/groups_project_id'
      - $ref: '#/components/parameters/groups_id'
    get:
      description: |-
        Return data about the given group.
      operationId: project_id/groups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShowResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
    delete:
      description: |-
        Select and call the matching version of the specified method.

        Look for the method which matches the name supplied and version
        constraints and calls it with the supplied arguments.

        |  |  |
        | --- | --- |
        | returns: | Returns the result of the method called |
        | raises VersionNotFoundForAPIMethod: | |
        |  | if there is no method which matches the name and version constraints |
      operationId: project_id/groups/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - groups
    put:
      description: |-
        Update the group.

        Expected format of the input parameter 'body':

        ```

        {
            "group":
            {
                "name": "my_group",
                "description": "My group",
                "add_volumes": "volume-uuid-1,volume-uuid-2,...",
                "remove_volumes": "volume-uuid-8,volume-uuid-9,..."
            }
        }

        ```
      operationId: project_id/groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUpdateResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
  /v3/groups/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Returns a detailed list of groups.
      operationId: groups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsDetailResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
  /v3/groups:
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Returns a summary list of groups.
      operationId: groups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
    post:
      description: |-
        Create a new group.
      operationId: groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsCreateResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
  /v3/groups/{id}/action:
    parameters:
      - $ref: '#/components/parameters/groups_action_id'
    post:
      operationId: groups/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/GroupsActionReset_Status'
                - $ref: '#/components/schemas/GroupsActionDelete_Group'
                - $ref: '#/components/schemas/GroupsActionCreate_From_Src'
                - $ref: '#/components/schemas/GroupsActionEnable_Replication'
                - $ref: '#/components/schemas/GroupsActionDisable_Replication'
                - $ref: '#/components/schemas/GroupsActionFailover_Replication'
                - $ref: '#/components/schemas/GroupsActionList_Replication_Targets'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionList_Replication_TargetsResponse'
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionCreate-From-SrcResponse'
      tags:
        - groups
  /v3/groups/{id}:
    parameters:
      - $ref: '#/components/parameters/groups_id'
    get:
      description: |-
        Return data about the given group.
      operationId: groups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShowResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
    delete:
      description: |-
        Select and call the matching version of the specified method.

        Look for the method which matches the name supplied and version
        constraints and calls it with the supplied arguments.

        |  |  |
        | --- | --- |
        | returns: | Returns the result of the method called |
        | raises VersionNotFoundForAPIMethod: | |
        |  | if there is no method which matches the name and version constraints |
      operationId: groups/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - groups
    put:
      description: |-
        Update the group.

        Expected format of the input parameter 'body':

        ```

        {
            "group":
            {
                "name": "my_group",
                "description": "My group",
                "add_volumes": "volume-uuid-1,volume-uuid-2,...",
                "remove_volumes": "volume-uuid-8,volume-uuid-9,..."
            }
        }

        ```
      operationId: groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUpdateResponse'
      tags:
        - groups
      x-openstack:
        min-ver: '3.13'
  /v3/{project_id}/groups/action:
    parameters:
      - $ref: '#/components/parameters/groups_action_project_id'
    post:
      operationId: project_id/groups/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/GroupsActionReset_Status'
                - $ref: '#/components/schemas/GroupsActionDelete_Group'
                - $ref: '#/components/schemas/GroupsActionCreate_From_Src'
                - $ref: '#/components/schemas/GroupsActionEnable_Replication'
                - $ref: '#/components/schemas/GroupsActionDisable_Replication'
                - $ref: '#/components/schemas/GroupsActionFailover_Replication'
                - $ref: '#/components/schemas/GroupsActionList_Replication_Targets'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionList_Replication_TargetsResponse'
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionCreate-From-SrcResponse'
      tags:
        - groups
  /v3/groups/action:
    post:
      operationId: groups/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/GroupsActionReset_Status'
                - $ref: '#/components/schemas/GroupsActionDelete_Group'
                - $ref: '#/components/schemas/GroupsActionCreate_From_Src'
                - $ref: '#/components/schemas/GroupsActionEnable_Replication'
                - $ref: '#/components/schemas/GroupsActionDisable_Replication'
                - $ref: '#/components/schemas/GroupsActionFailover_Replication'
                - $ref: '#/components/schemas/GroupsActionList_Replication_Targets'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionList_Replication_TargetsResponse'
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsActionCreate-From-SrcResponse'
      tags:
        - groups
  /v3/{project_id}/group_snapshots/detail:
    parameters:
      - $ref: '#/components/parameters/group_snapshots_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Lists all group snapshots with details. Since v3.31 if non-admin
        users specify invalid filters in the url, API will return bad request.
      operationId: project_id/group_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsDetailResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
      summary: List group snapshots with details
  /v3/{project_id}/group_snapshots:
    parameters:
      - $ref: '#/components/parameters/group_snapshots_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Lists all group snapshots, since v3.31 if non-admin users
        specify invalid filters in the url, API will return bad request.
      operationId: project_id/group_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsListResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
      summary: List group snapshots
    post:
      description: |-
        Creates a group snapshot.
      operationId: project_id/group_snapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_SnapshotsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsCreateResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
      summary: Create group snapshot
  /v3/{project_id}/group_snapshots/{id}/action:
    parameters:
      - $ref: '#/components/parameters/group_snapshots_action_project_id'
      - $ref: '#/components/parameters/group_snapshots_action_id'
    post:
      operationId: project_id/group_snapshots/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Group_SnapshotsActionReset_Status'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsActionReset_StatusResponse'
      tags:
        - group_snapshots
  /v3/{project_id}/group_snapshots/{id}:
    parameters:
      - $ref: '#/components/parameters/group_snapshots_project_id'
      - $ref: '#/components/parameters/group_snapshots_id'
    get:
      description: |-
        Return data about the given group_snapshot.
      operationId: project_id/group_snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotShowResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
    delete:
      description: |-
        Delete a group_snapshot.
      operationId: project_id/group_snapshots/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/group_snapshots/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Returns a detailed list of group_snapshots.
      operationId: group_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsDetailResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/group_snapshots:
    get:
      parameters:
        - $ref: '#/components/parameters/group_all_tenants'
        - $ref: '#/components/parameters/group_sort'
        - $ref: '#/components/parameters/group_sort_key'
        - $ref: '#/components/parameters/group_sort_dir'
        - $ref: '#/components/parameters/group_limit'
        - $ref: '#/components/parameters/group_marker'
        - $ref: '#/components/parameters/group_offset'
      description: |-
        Returns a summary list of group_snapshots.
      operationId: group_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsListResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
    post:
      description: |-
        Create a new group_snapshot.
      operationId: group_snapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group_SnapshotsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsCreateResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/group_snapshots/{id}/action:
    parameters:
      - $ref: '#/components/parameters/group_snapshots_action_id'
    post:
      operationId: group_snapshots/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Group_SnapshotsActionReset_Status'
              x-openstack:
                discriminator: action
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotsActionReset_StatusResponse'
      tags:
        - group_snapshots
  /v3/group_snapshots/{id}:
    parameters:
      - $ref: '#/components/parameters/group_snapshots_id'
    get:
      description: |-
        Return data about the given group_snapshot.
      operationId: group_snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group_SnapshotShowResponse'
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
    delete:
      description: |-
        Delete a group_snapshot.
      operationId: group_snapshots/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - group_snapshots
      x-openstack:
        min-ver: '3.14'
  /v3/{project_id}/snapshots/detail:
    parameters:
      - $ref: '#/components/parameters/snapshots_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Lists all Block Storage snapshots, with details, that the project can access,
        since v3.31 if non-admin users specify invalid filters in the url, API will
        return bad request.
      operationId: project_id/snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsDetailResponse'
      tags:
        - snapshots
      summary: List snapshots and details
  /v3/{project_id}/snapshots:
    parameters:
      - $ref: '#/components/parameters/snapshots_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Lists all Block Storage snapshots, with summary information,
        that the project can access, since v3.31 if non-admin users
        specify invalid filters in the url, API will return bad request.
      operationId: project_id/snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsListResponse'
      tags:
        - snapshots
      summary: List accessible snapshots
    post:
      description: |-
        Creates a volume snapshot, which is a point-in-time, complete copy of a volume.
        You can create a volume from a snapshot.

        Prior to API version 3.66, a ‘force’ flag was required to create a snapshot of
        an in-use volume, but this is no longer the case. From API version 3.66, the
        ‘force’ flag is invalid when passed in a volume snapshot request. (For
        backward compatibility, however, a ‘force’ flag with a value evaluating to
        True is silently ignored.)
      operationId: project_id/snapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsCreateResponse'
      tags:
        - snapshots
      summary: Create a snapshot
  /v3/{project_id}/snapshots/{id}/action:
    parameters:
      - $ref: '#/components/parameters/snapshots_action_project_id'
      - $ref: '#/components/parameters/snapshots_action_id'
    post:
      operationId: project_id/snapshots/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SnapshotsActionOs-Reset_StatusRequest'
                - $ref: '#/components/schemas/SnapshotsActionOs-Force_DeleteRequest'
                - $ref: '#/components/schemas/SnapshotsAction_Update_Snapshot_Status'
                - $ref: '#/components/schemas/SnapshotsActionOs-UnmanageRequest'
              x-openstack:
                discriminator: action
      responses:
        '202':
          description: Ok
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsActionOs-Update_Snapshot_StatusResponse'
      tags:
        - snapshots
  /v3/{project_id}/snapshots/{id}:
    parameters:
      - $ref: '#/components/parameters/snapshots_project_id'
      - $ref: '#/components/parameters/snapshots_id'
    get:
      description: |-
        Return data about the given snapshot.
      operationId: project_id/snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotShowResponse'
      tags:
        - snapshots
    delete:
      description: |-
        Delete a snapshot.
      operationId: project_id/snapshots/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - snapshots
    put:
      description: |-
        Update a snapshot.
      operationId: project_id/snapshots/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotUpdateResponse'
      tags:
        - snapshots
  /v3/snapshots/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Returns a detailed list of snapshots.
      operationId: snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsDetailResponse'
      tags:
        - snapshots
  /v3/snapshots:
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/with_count'
        - $ref: '#/components/parameters/consumes_quota'
      description: |-
        Returns a summary list of snapshots.
      operationId: snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsListResponse'
      tags:
        - snapshots
    post:
      description: |-
        Creates a new snapshot.
      operationId: snapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsCreateResponse'
      tags:
        - snapshots
  /v3/snapshots/{id}/action:
    parameters:
      - $ref: '#/components/parameters/snapshots_action_id'
    post:
      operationId: snapshots/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SnapshotsActionOs-Reset_StatusRequest'
                - $ref: '#/components/schemas/SnapshotsActionOs-Force_DeleteRequest'
                - $ref: '#/components/schemas/SnapshotsAction_Update_Snapshot_Status'
                - $ref: '#/components/schemas/SnapshotsActionOs-UnmanageRequest'
              x-openstack:
                discriminator: action
      responses:
        '202':
          description: Ok
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsActionOs-Update_Snapshot_StatusResponse'
      tags:
        - snapshots
  /v3/snapshots/{id}:
    parameters:
      - $ref: '#/components/parameters/snapshots_id'
    get:
      description: |-
        Return data about the given snapshot.
      operationId: snapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotShowResponse'
      tags:
        - snapshots
    delete:
      description: |-
        Delete a snapshot.
      operationId: snapshots/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - snapshots
    put:
      description: |-
        Update a snapshot.
      operationId: snapshots/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotUpdateResponse'
      tags:
        - snapshots
  /v3/{project_id}/limits:
    parameters:
      - $ref: '#/components/parameters/limits_project_id'
    get:
      description: |-
        Shows absolute limits for a project.

        An absolute limit value of `-1` indicates that the absolute limit
        for the item is infinite.
      operationId: project_id/limits:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsListResponse'
      tags:
        - limits
      summary: Show absolute limits for project
  /v3/limits:
    get:
      description: |-
        Return all global and rate limit information.
      operationId: limits:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsListResponse'
      tags:
        - limits
  /v3/{project_id}/snapshots/{snapshot_id}/metadata:
    parameters:
      - $ref: '#/components/parameters/snapshots_metadata_project_id'
      - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
    get:
      description: |-
        Shows metadata for a snapshot.
      operationId: project_id/snapshots/snapshot_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataListResponse'
      tags:
        - snapshots
      summary: Show a snapshot’s metadata
    post:
      description: |-
        Updates metadata for a snapshot.

        Creates or replaces metadata items that match keys. Does not modify items that
        are not in the request.
      operationId: project_id/snapshots/snapshot_id/metadata:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsMetadataCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataCreateResponse'
      tags:
        - snapshots
      summary: Create a snapshot’s metadata
    put:
      description: |-
        Replaces all the snapshot’s metadata with the key-value pairs in the request.
      operationId: project_id/snapshots/snapshot_id/metadata:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsMetadataUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataUpdate_AllResponse'
      tags:
        - snapshots
      summary: Update a snapshot’s metadata
  /v3/{project_id}/snapshots/{snapshot_id}/metadata/{id}:
    parameters:
      - $ref: '#/components/parameters/snapshots_metadata_project_id'
      - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
      - $ref: '#/components/parameters/snapshots_metadata_id'
    get:
      description: |-
        Return a single metadata item.
      operationId: project_id/snapshots/snapshot_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataShowResponse'
      tags:
        - snapshots
    delete:
      description: |-
        Deletes an existing metadata.
      operationId: project_id/snapshots/snapshot_id/metadata/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - snapshots
    put:
      operationId: project_id/snapshots/snapshot_id/metadata/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsMetadataUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataUpdateResponse'
      tags:
        - snapshots
  /v3/snapshots/{snapshot_id}/metadata:
    parameters:
      - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
    get:
      description: |-
        Returns the list of metadata for a given snapshot.
      operationId: snapshots/snapshot_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataListResponse'
      tags:
        - snapshots
    post:
      operationId: snapshots/snapshot_id/metadata:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsMetadataCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataCreateResponse'
      tags:
        - snapshots
    put:
      operationId: snapshots/snapshot_id/metadata:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsMetadataUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataUpdate_AllResponse'
      tags:
        - snapshots
  /v3/snapshots/{snapshot_id}/metadata/{id}:
    parameters:
      - $ref: '#/components/parameters/snapshots_metadata_snapshot_id'
      - $ref: '#/components/parameters/snapshots_metadata_id'
    get:
      description: |-
        Return a single metadata item.
      operationId: snapshots/snapshot_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataShowResponse'
      tags:
        - snapshots
    delete:
      description: |-
        Deletes an existing metadata.
      operationId: snapshots/snapshot_id/metadata/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - snapshots
    put:
      operationId: snapshots/snapshot_id/metadata/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotsMetadataUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsMetadataUpdateResponse'
      tags:
        - snapshots
  /v3/{project_id}/volumes/{volume_id}/metadata:
    parameters:
      - $ref: '#/components/parameters/volumes_metadata_project_id'
      - $ref: '#/components/parameters/volumes_metadata_volume_id'
    get:
      description: |-
        Shows metadata for a volume.
      operationId: project_id/volumes/volume_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataListResponse'
      tags:
        - volumes
      summary: Show a volume’s metadata
    post:
      description: |-
        Creates or replaces metadata for a volume. Does not modify items that are not
        in the request.
      operationId: project_id/volumes/volume_id/metadata:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesMetadataCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataCreateResponse'
      tags:
        - volumes
      summary: Create metadata for volume
    put:
      description: |-
        Replaces all the volume’s metadata with the key-value pairs in the request.
      operationId: project_id/volumes/volume_id/metadata:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesMetadataUpdate_All'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataUpdate_AllResponse'
      tags:
        - volumes
      summary: Update a volume’s metadata
  /v3/{project_id}/volumes/{volume_id}/metadata/{id}:
    parameters:
      - $ref: '#/components/parameters/volumes_metadata_project_id'
      - $ref: '#/components/parameters/volumes_metadata_volume_id'
      - $ref: '#/components/parameters/volumes_metadata_id'
    get:
      description: |-
        Return a single metadata item.
      operationId: project_id/volumes/volume_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataShowResponse'
      tags:
        - volumes
    delete:
      description: |-
        Deletes an existing metadata.
      operationId: project_id/volumes/volume_id/metadata/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - volumes
    put:
      operationId: project_id/volumes/volume_id/metadata/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesMetadataUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataUpdateResponse'
      tags:
        - volumes
  /v3/volumes/{volume_id}/metadata:
    parameters:
      - $ref: '#/components/parameters/volumes_metadata_volume_id'
    get:
      description: |-
        Returns the list of metadata for a given volume.
      operationId: volumes/volume_id/metadata:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataListResponse'
      tags:
        - volumes
    post:
      operationId: volumes/volume_id/metadata:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesMetadataCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataCreateResponse'
      tags:
        - volumes
    put:
      operationId: volumes/volume_id/metadata:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesMetadataUpdate_All'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataUpdate_AllResponse'
      tags:
        - volumes
  /v3/volumes/{volume_id}/metadata/{id}:
    parameters:
      - $ref: '#/components/parameters/volumes_metadata_volume_id'
      - $ref: '#/components/parameters/volumes_metadata_id'
    get:
      description: |-
        Return a single metadata item.
      operationId: volumes/volume_id/metadata/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataShowResponse'
      tags:
        - volumes
    delete:
      description: |-
        Deletes an existing metadata.
      operationId: volumes/volume_id/metadata/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - volumes
    put:
      operationId: volumes/volume_id/metadata/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumesMetadataUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesMetadataUpdateResponse'
      tags:
        - volumes
  /v3/{project_id}/consistencygroups/detail:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_detail_project_id'
    get:
      description: |-
        Lists consistency groups with details.
      operationId: project_id/consistencygroups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsDetailResponse'
      tags:
        - consistencygroups
      deprecated: true
      summary: List consistency groups and details
  /v3/{project_id}/consistencygroups:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_project_id'
    get:
      description: |-
        Lists consistency groups.
      operationId: project_id/consistencygroups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsListResponse'
      tags:
        - consistencygroups
      deprecated: true
      summary: List project’s consistency groups
    post:
      description: |-
        Creates a consistency group.
      operationId: project_id/consistencygroups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsCreateResponse'
      tags:
        - consistencygroups
      deprecated: true
      summary: Create a consistency group
  /v3/{project_id}/consistencygroups/{id}:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_project_id'
      - $ref: '#/components/parameters/consistencygroups_id'
    get:
      description: |-
        Return data about the given consistency group.
      operationId: project_id/consistencygroups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupShowResponse'
      tags:
        - consistencygroups
      deprecated: true
    delete:
      description: |-
        Delete a consistency group.
      operationId: project_id/consistencygroups/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - consistencygroups
      deprecated: true
    put:
      description: |-
        Update the consistency group.

        Expected format of the input parameter 'body':

        ```

        {
            "consistencygroup":
            {
                "name": "my_cg",
                "description": "My consistency group",
                "add_volumes": "volume-uuid-1,volume-uuid-2,...",
                "remove_volumes": "volume-uuid-8,volume-uuid-9,..."
            }
        }

        ```
      operationId: project_id/consistencygroups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupUpdateResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/consistencygroups/detail:
    get:
      description: |-
        Returns a detailed list of consistency groups.
      operationId: consistencygroups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsDetailResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/consistencygroups:
    get:
      description: |-
        Returns a summary list of consistency groups.
      operationId: consistencygroups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsListResponse'
      tags:
        - consistencygroups
      deprecated: true
    post:
      description: |-
        Create a new consistency group.
      operationId: consistencygroups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsCreateResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/consistencygroups/{id}:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_id'
    get:
      description: |-
        Return data about the given consistency group.
      operationId: consistencygroups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupShowResponse'
      tags:
        - consistencygroups
      deprecated: true
    delete:
      description: |-
        Delete a consistency group.
      operationId: consistencygroups/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - consistencygroups
      deprecated: true
    put:
      description: |-
        Update the consistency group.

        Expected format of the input parameter 'body':

        ```

        {
            "consistencygroup":
            {
                "name": "my_cg",
                "description": "My consistency group",
                "add_volumes": "volume-uuid-1,volume-uuid-2,...",
                "remove_volumes": "volume-uuid-8,volume-uuid-9,..."
            }
        }

        ```
      operationId: consistencygroups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupUpdateResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/{project_id}/manageable_volumes/detail:
    parameters:
      - $ref: '#/components/parameters/manageable_volumes_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Search a volume backend and list detail of volumes which are available to
        manage.
      operationId: project_id/manageable_volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesDetailResponse'
      tags:
        - manageable_volumes
      summary: List detail of volumes available to manage
  /v3/{project_id}/manageable_volumes:
    parameters:
      - $ref: '#/components/parameters/manageable_volumes_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Search a volume backend and list summary of volumes which are available to
        manage.
      operationId: project_id/manageable_volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesListResponse'
      tags:
        - manageable_volumes
      summary: List summary of volumes available to manage
    post:
      description: |-
        Creates a Block Storage volume by using existing storage rather than allocating
        new storage.

        The caller must specify a reference to an existing storage volume
        in the ref parameter in the request. Although each storage driver
        might interpret this reference differently, the driver should
        accept a reference structure that contains either a source-id
        or source-name element, if possible.

        The API chooses the size of the volume by rounding up the size of
        the existing storage volume to the next gibibyte (GiB).

        You cannot manage a volume to an encrypted volume type.

        Prior to microversion 3.16 host field was required, with the possibility of
        defining the cluster it is no longer required, but we must have either a host
        or a cluster field but we cannot have them both with values.
      operationId: project_id/manageable_volumes:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manageable_VolumesCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesCreateResponse'
      tags:
        - manageable_volumes
      summary: Manage an existing volume
  /v3/manageable_volumes/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Returns a detailed list of volumes available to manage.
      operationId: manageable_volumes/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesDetailResponse'
      tags:
        - manageable_volumes
  /v3/manageable_volumes:
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Returns a summary list of volumes available to manage.
      operationId: manageable_volumes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesListResponse'
      tags:
        - manageable_volumes
    post:
      description: |-
        Instruct Cinder to manage a storage object.

        Manages an existing backend storage object (e.g. a Linux logical
        volume or a SAN disk) by creating the Cinder objects required to manage
        it, and possibly renaming the backend storage object
        (driver dependent)

        From an API perspective, this operation behaves very much like a
        volume creation operation, except that properties such as image,
        snapshot and volume references don't make sense, because we are taking
        an existing storage object into Cinder management.

        Required HTTP Body:

        ```

        {
          "volume": {
            "host": "<Cinder host on which the existing storage resides>",
            "cluster": "<Cinder cluster on which the storage resides>",
            "ref": "<Driver-specific reference to existing storage object>"
          }
        }

        ```

        See the appropriate Cinder drivers' implementations of the
        manage_volume method to find out the accepted format of 'ref'.

        This API call will return with an error if any of the above elements
        are missing from the request, or if the 'host' element refers to a
        cinder host that is not registered.

        The volume will later enter the error state if it is discovered that
        'ref' is bad.

        Optional elements to 'volume' are:

        ```

        name               A name for the new volume.
        description        A description for the new volume.
        volume_type        ID or name of a volume type to associate with
                           the new Cinder volume. Does not necessarily
                           guarantee that the managed volume will have the
                           properties described in the volume_type. The
                           driver may choose to fail if it identifies that
                           the specified volume_type is not compatible with
                           the backend storage object.
        metadata           Key/value pairs to be associated with the new
                           volume.
        availability_zone  The availability zone to associate with the new
                           volume.
        bootable           If set to True, marks the volume as bootable.

        ```
      operationId: manageable_volumes:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manageable_VolumesCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_VolumesCreateResponse'
      tags:
        - manageable_volumes
  /v3/{project_id}/manageable_snapshots/detail:
    parameters:
      - $ref: '#/components/parameters/manageable_snapshots_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Search a volume backend and list detail of snapshots which are available to
        manage.
      operationId: project_id/manageable_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsDetailResponse'
      tags:
        - manageable_snapshots
      summary: List detail of snapshots available to manage
  /v3/{project_id}/manageable_snapshots:
    parameters:
      - $ref: '#/components/parameters/manageable_snapshots_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Search a volume backend and list summary of snapshots which are available to
        manage.
      operationId: project_id/manageable_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsListResponse'
      tags:
        - manageable_snapshots
      summary: List summary of snapshots available to manage
    post:
      description: |-
        Creates a snapshot by using existing storage rather than allocating new
        storage.

        The caller must specify a reference to an existing storage volume
        in the ref parameter in the request. Although each storage driver
        might interpret this reference differently, the driver should
        accept a reference structure that contains either a source-id
        or source-name element, if possible.

        The API chooses the size of the snapshot by rounding up the size of
        the existing snapshot to the next gibibyte (GiB).
      operationId: project_id/manageable_snapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manageable_SnapshotsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsCreateResponse'
      tags:
        - manageable_snapshots
      summary: Manage an existing snapshot
  /v3/manageable_snapshots/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Returns a detailed list of volumes available to manage.
      operationId: manageable_snapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsDetailResponse'
      tags:
        - manageable_snapshots
  /v3/manageable_snapshots:
    get:
      parameters:
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Returns a summary list of volumes available to manage.
      operationId: manageable_snapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsListResponse'
      tags:
        - manageable_snapshots
    post:
      description: |-
        Instruct Cinder to manage a storage snapshot object.

        Manages an existing backend storage snapshot object (e.g. a Linux
        logical volume or a SAN disk) by creating the Cinder objects required
        to manage it, and possibly renaming the backend storage snapshot object
        (driver dependent).

        From an API perspective, this operation behaves very much like a
        snapshot creation operation.

        Required HTTP Body:

        ```

        {
          "snapshot":
          {
            "volume_id": "<Cinder volume already exists in volume backend>",
            "ref":
               "<Driver-specific reference to the existing storage object>"
          }
        }

        ```

        See the appropriate Cinder drivers' implementations of the
        manage_snapshot method to find out the accepted format of 'ref'.
        For example,in LVM driver, it will be the logic volume name of snapshot
        which you want to manage.

        This API call will return with an error if any of the above elements
        are missing from the request, or if the 'volume_id' element refers to
        a cinder volume that could not be found.

        The snapshot will later enter the error state if it is discovered that
        'ref' is bad.

        Optional elements to 'snapshot' are:

        ```

        name           A name for the new snapshot.
        description    A description for the new snapshot.
        metadata       Key/value pairs to be associated with the new snapshot.

        ```
      operationId: manageable_snapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manageable_SnapshotsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manageable_SnapshotsCreateResponse'
      tags:
        - manageable_snapshots
  /v3/{project_id}/backups/detail:
    parameters:
      - $ref: '#/components/parameters/backups_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/backup_all_tenants'
        - $ref: '#/components/parameters/backup_with_count'
        - $ref: '#/components/parameters/backup_sort'
        - $ref: '#/components/parameters/backup_sort_key'
        - $ref: '#/components/parameters/backup_sort_dir'
        - $ref: '#/components/parameters/backup_limit'
        - $ref: '#/components/parameters/backup_marker'
        - $ref: '#/components/parameters/backup_offset'
      description: |-
        Lists Block Storage backups, with details, to which the project has access,
        since v3.31 if non-admin users specify invalid filters in the url,
        API will return bad request.
      operationId: project_id/backups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsDetailResponse'
      tags:
        - backups
      summary: List backups with detail
  /v3/{project_id}/backups:
    parameters:
      - $ref: '#/components/parameters/backups_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/backup_all_tenants'
        - $ref: '#/components/parameters/backup_with_count'
        - $ref: '#/components/parameters/backup_sort'
        - $ref: '#/components/parameters/backup_sort_key'
        - $ref: '#/components/parameters/backup_sort_dir'
        - $ref: '#/components/parameters/backup_limit'
        - $ref: '#/components/parameters/backup_marker'
        - $ref: '#/components/parameters/backup_offset'
      description: |-
        Lists Block Storage backups to which the project has access,
        since v3.31 if non-admin users specify invalid filters in the
        url, API will return bad request.
      operationId: project_id/backups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsListResponse'
      tags:
        - backups
      summary: List backups for project
    post:
      description: |-
        Creates a Block Storage backup from a volume or snapshot.

        The status of the volume must be `available` or if the `force` flag is
        used, backups of `in-use` volumes may also be created.
      operationId: project_id/backups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsCreateResponse'
      tags:
        - backups
      summary: Create a backup
  /v3/{project_id}/backups/{id}:
    parameters:
      - $ref: '#/components/parameters/backups_project_id'
      - $ref: '#/components/parameters/backups_id'
    get:
      description: |-
        Return data about the given backup.
      operationId: project_id/backups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupShowResponse'
      tags:
        - backups
    delete:
      description: |-
        Delete a backup.
      operationId: project_id/backups/id:delete
      responses:
        '202':
          description: Ok
      tags:
        - backups
    put:
      description: |-
        Update a backup.
      operationId: project_id/backups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUpdateResponse'
      tags:
        - backups
      x-openstack:
        min-ver: '3.9'
  /v3/backups/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/backup_all_tenants'
        - $ref: '#/components/parameters/backup_with_count'
        - $ref: '#/components/parameters/backup_sort'
        - $ref: '#/components/parameters/backup_sort_key'
        - $ref: '#/components/parameters/backup_sort_dir'
        - $ref: '#/components/parameters/backup_limit'
        - $ref: '#/components/parameters/backup_marker'
        - $ref: '#/components/parameters/backup_offset'
      description: |-
        Returns a detailed list of backups.
      operationId: backups/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsDetailResponse'
      tags:
        - backups
  /v3/backups:
    get:
      parameters:
        - $ref: '#/components/parameters/backup_all_tenants'
        - $ref: '#/components/parameters/backup_with_count'
        - $ref: '#/components/parameters/backup_sort'
        - $ref: '#/components/parameters/backup_sort_key'
        - $ref: '#/components/parameters/backup_sort_dir'
        - $ref: '#/components/parameters/backup_limit'
        - $ref: '#/components/parameters/backup_marker'
        - $ref: '#/components/parameters/backup_offset'
      description: |-
        Returns a summary list of backups.
      operationId: backups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsListResponse'
      tags:
        - backups
    post:
      description: |-
        Create a new backup.
      operationId: backups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsCreateResponse'
      tags:
        - backups
  /v3/backups/{id}:
    parameters:
      - $ref: '#/components/parameters/backups_id'
    get:
      description: |-
        Return data about the given backup.
      operationId: backups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupShowResponse'
      tags:
        - backups
    delete:
      description: |-
        Delete a backup.
      operationId: backups/id:delete
      responses:
        '202':
          description: Ok
      tags:
        - backups
    put:
      description: |-
        Update a backup.
      operationId: backups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupUpdateResponse'
      tags:
        - backups
      x-openstack:
        min-ver: '3.9'
  /v3/{project_id}/attachments/detail:
    parameters:
      - $ref: '#/components/parameters/attachments_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Lists all attachments with details. Since v3.31 if non-admin
        users specify invalid filters in the url, API will return bad request.

        Available starting in the 3.27 microversion.
      operationId: project_id/attachments/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDetailResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
      summary: List attachments with details
  /v3/{project_id}/attachments:
    parameters:
      - $ref: '#/components/parameters/attachments_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Lists all attachments, since v3.31 if non-admin users
        specify invalid filters in the url, API will return bad request.

        Available starting in the 3.27 microversion.
      operationId: project_id/attachments:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsListResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
      summary: List attachments
    post:
      description: |-
        Creates an attachment.

        Available starting in the 3.27 microversion.
      operationId: project_id/attachments:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentsCreateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsCreateResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
      summary: Create attachment
  /v3/{project_id}/attachments/{id}/action:
    parameters:
      - $ref: '#/components/parameters/attachments_action_project_id'
      - $ref: '#/components/parameters/attachments_action_id'
    post:
      operationId: project_id/attachments/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AttachmentsActionOs-CompleteRequest'
              x-openstack:
                discriminator: action
      responses:
        '204':
          description: Ok
      tags:
        - attachments
  /v3/{project_id}/attachments/{id}:
    parameters:
      - $ref: '#/components/parameters/attachments_project_id'
      - $ref: '#/components/parameters/attachments_id'
    get:
      description: |-
        Return data about the given attachment.
      operationId: project_id/attachments/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentShowResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
    delete:
      description: |-
        Delete an attachment.

        Disconnects/Deletes the specified attachment, returns a list of any
        known shared attachment-id's for the effected backend device.

        returns: A summary list of any attachments sharing this connection
      operationId: project_id/attachments/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
    put:
      description: |-
        Update an attachment record.

        Update a reserved attachment record with connector information and set
        up the appropriate connection_info from the driver.

        Expected format of the input parameter 'body':

        ```

        {
            "attachment":
            {
                "connector":
                {
                    "initiator": "iqn.1993-08.org.debian:01:cad181614cec",
                    "ip": "192.168.1.20",
                    "platform": "x86_64",
                    "host": "tempest-1",
                    "os_type": "linux2",
                    "multipath": false,
                    "mountpoint": "/dev/vdb",
                    "mode": "None|rw|ro"
                }
            }
        }

        ```
      operationId: project_id/attachments/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentUpdateResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/attachments/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Return a detailed list of attachments.
      operationId: attachments/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDetailResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/attachments:
    get:
      parameters:
        - $ref: '#/components/parameters/all_tenants'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/marker'
      description: |-
        Return a summary list of attachments.
      operationId: attachments:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsListResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
    post:
      description: |-
        Create an attachment.

        This method can be used to create an empty attachment (reserve) or to
        create and initialize a volume attachment based on the provided input
        parameters.

        If the caller does not yet have the connector information but needs to
        reserve an attachment for the volume (ie Nova BootFromVolume) the
        create can be called with just the volume-uuid and the server
        identifier. This will reserve an attachment, mark the volume as
        reserved and prevent any new attachment_create calls from being made
        until the attachment is updated (completed).

        The alternative is that the connection can be reserved and initialized
        all at once with a single call if the caller has all of the required
        information (connector data) at the time of the call.

        NOTE: In Nova terms server == instance, the server_id parameter
        referenced below is the UUID of the Instance, for non-nova consumers
        this can be a server UUID or some other arbitrary unique identifier.

        Starting from microversion 3.54, we can pass the attach mode as
        argument in the request body.

        Expected format of the input parameter 'body':

        ```

        {
            "attachment":
            {
                "volume_uuid": "volume-uuid",
                "instance_uuid": "null|nova-server-uuid",
                "connector": "null|<connector-object>",
                "mode": "null|rw|ro"
            }
        }

        ```

        Example connector:

        ```

        {
            "connector":
            {
                "initiator": "iqn.1993-08.org.debian:01:cad181614cec",
                "ip": "192.168.1.20",
                "platform": "x86_64",
                "host": "tempest-1",
                "os_type": "linux2",
                "multipath": false,
                "mountpoint": "/dev/vdb",
                "mode": "null|rw|ro"
            }
        }

        ```

        NOTE all that's required for a reserve is volume_uuid
        and an instance_uuid.

        returns: A summary view of the attachment object
      operationId: attachments:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentsCreateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsCreateResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/attachments/{id}/action:
    parameters:
      - $ref: '#/components/parameters/attachments_action_id'
    post:
      operationId: attachments/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AttachmentsActionOs-CompleteRequest'
              x-openstack:
                discriminator: action
      responses:
        '204':
          description: Ok
      tags:
        - attachments
  /v3/attachments/{id}:
    parameters:
      - $ref: '#/components/parameters/attachments_id'
    get:
      description: |-
        Return data about the given attachment.
      operationId: attachments/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentShowResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
    delete:
      description: |-
        Delete an attachment.

        Disconnects/Deletes the specified attachment, returns a list of any
        known shared attachment-id's for the effected backend device.

        returns: A summary list of any attachments sharing this connection
      operationId: attachments/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
    put:
      description: |-
        Update an attachment record.

        Update a reserved attachment record with connector information and set
        up the appropriate connection_info from the driver.

        Expected format of the input parameter 'body':

        ```

        {
            "attachment":
            {
                "connector":
                {
                    "initiator": "iqn.1993-08.org.debian:01:cad181614cec",
                    "ip": "192.168.1.20",
                    "platform": "x86_64",
                    "host": "tempest-1",
                    "os_type": "linux2",
                    "multipath": false,
                    "mountpoint": "/dev/vdb",
                    "mode": "None|rw|ro"
                }
            }
        }

        ```
      operationId: attachments/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentUpdateResponse'
      tags:
        - attachments
      x-openstack:
        min-ver: '3.27'
  /v3/{project_id}/workers/cleanup:
    parameters:
      - $ref: '#/components/parameters/workers_cleanup_project_id'
    post:
      description: |-
        Do the cleanup on resources from a specific service/host/node.
      operationId: project_id/workers/cleanup:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkersCleanupCleanup'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkersCleanupResponse'
      tags:
        - workers
      x-openstack:
        min-ver: '3.24'
  /v3/workers/cleanup:
    post:
      description: |-
        Do the cleanup on resources from a specific service/host/node.
      operationId: workers/cleanup:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkersCleanupCleanup'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkersCleanupResponse'
      tags:
        - workers
      x-openstack:
        min-ver: '3.24'
  /v3/{project_id}/resource_filters:
    parameters:
      - $ref: '#/components/parameters/resource_filters_project_id'
    get:
      description: |-
        List filters.
      operationId: project_id/resource_filters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_FiltersListResponse'
      tags:
        - resource_filters
      x-openstack:
        min-ver: '3.33'
      summary: List resource filters
  /v3/resource_filters:
    get:
      description: |-
        Return a list of resource filters.
      operationId: resource_filters:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource_FiltersListResponse'
      tags:
        - resource_filters
      x-openstack:
        min-ver: '3.33'
  /v3/{project_id}/volume-transfers/detail:
    parameters:
      - $ref: '#/components/parameters/volume_transfers_detail_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/transfer_is_public'
        - $ref: '#/components/parameters/transfer_all_tenants'
        - $ref: '#/components/parameters/transfer_sort'
        - $ref: '#/components/parameters/transfer_sort_key'
        - $ref: '#/components/parameters/transfer_sort_dir'
        - $ref: '#/components/parameters/transfer_limit'
        - $ref: '#/components/parameters/transfer_marker'
        - $ref: '#/components/parameters/transfer_offset'
      description: |-
        Lists volume transfers, with details.
      operationId: project_id/volume-transfers/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersDetailResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
      summary: List volume transfers and details
  /v3/{project_id}/volume-transfers:
    parameters:
      - $ref: '#/components/parameters/volume_transfers_project_id'
    get:
      description: |-
        Lists volume transfers.
      operationId: project_id/volume-transfers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersListResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
      summary: List volume transfers for a project
    post:
      description: |-
        Creates a volume transfer.

        **Preconditions**
      operationId: project_id/volume-transfers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume_TransfersCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersCreateResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
      summary: Create a volume transfer
  /v3/{project_id}/volume-transfers/{id}/accept:
    parameters:
      - $ref: '#/components/parameters/volume_transfers_accept_project_id'
      - $ref: '#/components/parameters/volume_transfers_accept_id'
    post:
      description: |-
        Accept a new volume transfer.
      operationId: project_id/volume-transfers/id/accept:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume_TransfersAcceptAccept'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersAcceptResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/{project_id}/volume-transfers/{id}:
    parameters:
      - $ref: '#/components/parameters/volume_transfers_project_id'
      - $ref: '#/components/parameters/volume_transfers_id'
    get:
      description: |-
        Return data about active transfers.
      operationId: project_id/volume-transfers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransferShowResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
    delete:
      description: |-
        Delete a transfer.
      operationId: project_id/volume-transfers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/volume-transfers/detail:
    get:
      parameters:
        - $ref: '#/components/parameters/transfer_is_public'
        - $ref: '#/components/parameters/transfer_all_tenants'
        - $ref: '#/components/parameters/transfer_sort'
        - $ref: '#/components/parameters/transfer_sort_key'
        - $ref: '#/components/parameters/transfer_sort_dir'
        - $ref: '#/components/parameters/transfer_limit'
        - $ref: '#/components/parameters/transfer_marker'
        - $ref: '#/components/parameters/transfer_offset'
      description: |-
        Returns a detailed list of transfers.
      operationId: volume-transfers/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersDetailResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/volume-transfers:
    get:
      description: |-
        Returns a summary list of transfers.
      operationId: volume-transfers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersListResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
    post:
      description: |-
        Create a new volume transfer.
      operationId: volume-transfers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume_TransfersCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersCreateResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/volume-transfers/{id}/accept:
    parameters:
      - $ref: '#/components/parameters/volume_transfers_accept_id'
    post:
      description: |-
        Accept a new volume transfer.
      operationId: volume-transfers/id/accept:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume_TransfersAcceptAccept'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransfersAcceptResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/volume-transfers/{id}:
    parameters:
      - $ref: '#/components/parameters/volume_transfers_id'
    get:
      description: |-
        Return data about active transfers.
      operationId: volume-transfers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume_TransferShowResponse'
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
    delete:
      description: |-
        Delete a transfer.
      operationId: volume-transfers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - volume-transfers
      x-openstack:
        min-ver: '3.55'
  /v3/{project_id}/default-types/{id}:
    parameters:
      - $ref: '#/components/parameters/default_types_project_id'
      - $ref: '#/components/parameters/default_types_id'
    get:
      description: |-
        Return detail of a default type.
      operationId: project_id/default-types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypeDetailResponse'
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
    delete:
      description: |-
        Unset a default volume type for a project.
      operationId: project_id/default-types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
    put:
      description: |-
        Set a default volume type for the specified project.
      operationId: project_id/default-types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default_TypeCreate_Update'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypeCreate_UpdateResponse'
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/{project_id}/default-types:
    parameters:
      - $ref: '#/components/parameters/default_types_project_id'
    get:
      description: |-
        Return a list of default types.
      operationId: project_id/default-types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypesListResponse'
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/default-types/{id}:
    parameters:
      - $ref: '#/components/parameters/default_types_id'
    get:
      description: |-
        Return detail of a default type.
      operationId: default-types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypeDetailResponse'
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
    delete:
      description: |-
        Unset a default volume type for a project.
      operationId: default-types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
    put:
      description: |-
        Set a default volume type for the specified project.
      operationId: default-types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default_TypeCreate_Update'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypeCreate_UpdateResponse'
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/default-types:
    get:
      description: |-
        Return a list of default types.
      operationId: default-types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_TypesListResponse'
      tags:
        - default-types
      x-openstack:
        min-ver: '3.62'
  /v3/{project_id}/extensions:
    parameters:
      - $ref: '#/components/parameters/extensions_project_id'
    get:
      description: |-
        Lists Block Storage API extensions.
      operationId: project_id/extensions:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionsListResponse'
      tags:
        - extensions
      summary: List Known API extensions
  /v3/extensions:
    get:
      operationId: extensions:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionsListResponse'
      tags:
        - extensions
  /v3/{project_id}/qos-specs:
    parameters:
      - $ref: '#/components/parameters/qos_specs_project_id'
    get:
      parameters:
        - $ref: '#/components/parameters/qos_spec_sort'
        - $ref: '#/components/parameters/qos_spec_sort_key'
        - $ref: '#/components/parameters/qos_spec_sort_dir'
        - $ref: '#/components/parameters/qos_spec_limit'
        - $ref: '#/components/parameters/qos_spec_marker'
        - $ref: '#/components/parameters/qos_spec_offset'
      description: |-
        Lists quality of service (QoS) specifications.
      operationId: project_id/qos-specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsListResponse'
      tags:
        - qos-specs
      summary: List QoS Specifications
    post:
      description: |-
        Creates a QoS specification.

        Specify one or more key and value pairs in the request body.
      operationId: project_id/qos-specs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qos_SpecsCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsCreateResponse'
      tags:
        - qos-specs
      summary: Create a QoS specification
  /v3/{project_id}/qos-specs/{id}/associations:
    parameters:
      - $ref: '#/components/parameters/qos_specs_associations_project_id'
      - $ref: '#/components/parameters/qos_specs_associations_id'
    get:
      description: |-
        List all associations of given qos specs.
      operationId: project_id/qos-specs/id/associations:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsAssociationsResponse'
      tags:
        - qos-specs
  /v3/{project_id}/qos-specs/{id}/associate:
    parameters:
      - $ref: '#/components/parameters/qos_specs_associate_project_id'
      - $ref: '#/components/parameters/qos_specs_associate_id'
    get:
      description: |-
        Associate a qos specs with a volume type.
      operationId: project_id/qos-specs/id/associate:get
      responses:
        '202':
          description: Accepted
      tags:
        - qos-specs
  /v3/{project_id}/qos-specs/{id}/disassociate:
    parameters:
      - $ref: '#/components/parameters/qos_specs_disassociate_project_id'
      - $ref: '#/components/parameters/qos_specs_disassociate_id'
    get:
      description: |-
        Disassociate a qos specs from a volume type.
      operationId: project_id/qos-specs/id/disassociate:get
      responses:
        '202':
          description: Accepted
      tags:
        - qos-specs
  /v3/{project_id}/qos-specs/{id}/disassociate_all:
    parameters:
      - $ref: '#/components/parameters/qos_specs_disassociate_all_project_id'
      - $ref: '#/components/parameters/qos_specs_disassociate_all_id'
    get:
      description: |-
        Disassociate a qos specs from all volume types.
      operationId: project_id/qos-specs/id/disassociate_all:get
      responses:
        '202':
          description: Accepted
      tags:
        - qos-specs
  /v3/{project_id}/qos-specs/{id}/delete_keys:
    parameters:
      - $ref: '#/components/parameters/qos_specs_delete_keys_project_id'
      - $ref: '#/components/parameters/qos_specs_delete_keys_id'
    put:
      description: |-
        Deletes specified keys in qos specs.
      operationId: project_id/qos-specs/id/delete_keys:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qos_SpecsDelete_KeysDelete_Keys'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsDelete_KeysResponse'
      tags:
        - qos-specs
  /v3/{project_id}/qos-specs/{id}:
    parameters:
      - $ref: '#/components/parameters/qos_specs_project_id'
      - $ref: '#/components/parameters/qos_specs_id'
    get:
      description: |-
        Return a single qos spec item.
      operationId: project_id/qos-specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecShowResponse'
      tags:
        - qos-specs
    delete:
      description: |-
        Deletes an existing qos specs.
      operationId: project_id/qos-specs/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos-specs
    put:
      operationId: project_id/qos-specs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qos_SpecUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecUpdateResponse'
      tags:
        - qos-specs
  /v3/qos-specs:
    get:
      parameters:
        - $ref: '#/components/parameters/qos_spec_sort'
        - $ref: '#/components/parameters/qos_spec_sort_key'
        - $ref: '#/components/parameters/qos_spec_sort_dir'
        - $ref: '#/components/parameters/qos_spec_limit'
        - $ref: '#/components/parameters/qos_spec_marker'
        - $ref: '#/components/parameters/qos_spec_offset'
      description: |-
        Returns the list of qos_specs.
      operationId: qos-specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsListResponse'
      tags:
        - qos-specs
    post:
      operationId: qos-specs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qos_SpecsCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsCreateResponse'
      tags:
        - qos-specs
  /v3/qos-specs/{id}/associations:
    parameters:
      - $ref: '#/components/parameters/qos_specs_associations_id'
    get:
      description: |-
        List all associations of given qos specs.
      operationId: qos-specs/id/associations:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsAssociationsResponse'
      tags:
        - qos-specs
  /v3/qos-specs/{id}/associate:
    parameters:
      - $ref: '#/components/parameters/qos_specs_associate_id'
    get:
      description: |-
        Associate a qos specs with a volume type.
      operationId: qos-specs/id/associate:get
      responses:
        '202':
          description: Accepted
      tags:
        - qos-specs
  /v3/qos-specs/{id}/disassociate:
    parameters:
      - $ref: '#/components/parameters/qos_specs_disassociate_id'
    get:
      description: |-
        Disassociate a qos specs from a volume type.
      operationId: qos-specs/id/disassociate:get
      responses:
        '202':
          description: Accepted
      tags:
        - qos-specs
  /v3/qos-specs/{id}/disassociate_all:
    parameters:
      - $ref: '#/components/parameters/qos_specs_disassociate_all_id'
    get:
      description: |-
        Disassociate a qos specs from all volume types.
      operationId: qos-specs/id/disassociate_all:get
      responses:
        '202':
          description: Accepted
      tags:
        - qos-specs
  /v3/qos-specs/{id}/delete_keys:
    parameters:
      - $ref: '#/components/parameters/qos_specs_delete_keys_id'
    put:
      description: |-
        Deletes specified keys in qos specs.
      operationId: qos-specs/id/delete_keys:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qos_SpecsDelete_KeysDelete_Keys'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecsDelete_KeysResponse'
      tags:
        - qos-specs
  /v3/qos-specs/{id}:
    parameters:
      - $ref: '#/components/parameters/qos_specs_id'
    get:
      description: |-
        Return a single qos spec item.
      operationId: qos-specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecShowResponse'
      tags:
        - qos-specs
    delete:
      description: |-
        Deletes an existing qos specs.
      operationId: qos-specs/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos-specs
    put:
      operationId: qos-specs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Qos_SpecUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Qos_SpecUpdateResponse'
      tags:
        - qos-specs
  /v3/{project_id}/os-volume-manage/detail:
    parameters:
      - $ref: '#/components/parameters/os_volume_manage_detail_project_id'
    get:
      description: |-
        Returns a detailed list of volumes available to manage.
      operationId: project_id/os-volume-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageDetailResponse'
      tags:
        - os-volume-manage
  /v3/{project_id}/os-volume-manage:
    parameters:
      - $ref: '#/components/parameters/os_volume_manage_project_id'
    get:
      description: |-
        Returns a summary list of volumes available to manage.
      operationId: project_id/os-volume-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageListResponse'
      tags:
        - os-volume-manage
    post:
      description: |-
        Instruct Cinder to manage a storage object.

        Manages an existing backend storage object (e.g. a Linux logical
        volume or a SAN disk) by creating the Cinder objects required to manage
        it, and possibly renaming the backend storage object
        (driver dependent)

        From an API perspective, this operation behaves very much like a
        volume creation operation, except that properties such as image,
        snapshot and volume references don't make sense, because we are taking
        an existing storage object into Cinder management.

        Required HTTP Body:

        ```

        {
          "volume": {
            "host": "<Cinder host on which the existing storage resides>",
            "cluster": "<Cinder cluster on which the storage resides>",
            "ref": "<Driver-specific reference to existing storage object>"
          }
        }

        ```

        See the appropriate Cinder drivers' implementations of the
        manage_volume method to find out the accepted format of 'ref'.

        This API call will return with an error if any of the above elements
        are missing from the request, or if the 'host' element refers to a
        cinder host that is not registered.

        The volume will later enter the error state if it is discovered that
        'ref' is bad.

        Optional elements to 'volume' are:

        ```

        name               A name for the new volume.
        description        A description for the new volume.
        volume_type        ID or name of a volume type to associate with
                           the new Cinder volume. Does not necessarily
                           guarantee that the managed volume will have the
                           properties described in the volume_type. The
                           driver may choose to fail if it identifies that
                           the specified volume_type is not compatible with
                           the backend storage object.
        metadata           Key/value pairs to be associated with the new
                           volume.
        availability_zone  The availability zone to associate with the new
                           volume.
        bootable           If set to True, marks the volume as bootable.

        ```
      operationId: project_id/os-volume-manage:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Volume_ManageCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageCreateResponse'
      tags:
        - os-volume-manage
  /v3/os-volume-manage/detail:
    get:
      description: |-
        Returns a detailed list of volumes available to manage.
      operationId: os-volume-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageDetailResponse'
      tags:
        - os-volume-manage
  /v3/os-volume-manage:
    get:
      description: |-
        Returns a summary list of volumes available to manage.
      operationId: os-volume-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageListResponse'
      tags:
        - os-volume-manage
    post:
      description: |-
        Instruct Cinder to manage a storage object.

        Manages an existing backend storage object (e.g. a Linux logical
        volume or a SAN disk) by creating the Cinder objects required to manage
        it, and possibly renaming the backend storage object
        (driver dependent)

        From an API perspective, this operation behaves very much like a
        volume creation operation, except that properties such as image,
        snapshot and volume references don't make sense, because we are taking
        an existing storage object into Cinder management.

        Required HTTP Body:

        ```

        {
          "volume": {
            "host": "<Cinder host on which the existing storage resides>",
            "cluster": "<Cinder cluster on which the storage resides>",
            "ref": "<Driver-specific reference to existing storage object>"
          }
        }

        ```

        See the appropriate Cinder drivers' implementations of the
        manage_volume method to find out the accepted format of 'ref'.

        This API call will return with an error if any of the above elements
        are missing from the request, or if the 'host' element refers to a
        cinder host that is not registered.

        The volume will later enter the error state if it is discovered that
        'ref' is bad.

        Optional elements to 'volume' are:

        ```

        name               A name for the new volume.
        description        A description for the new volume.
        volume_type        ID or name of a volume type to associate with
                           the new Cinder volume. Does not necessarily
                           guarantee that the managed volume will have the
                           properties described in the volume_type. The
                           driver may choose to fail if it identifies that
                           the specified volume_type is not compatible with
                           the backend storage object.
        metadata           Key/value pairs to be associated with the new
                           volume.
        availability_zone  The availability zone to associate with the new
                           volume.
        bootable           If set to True, marks the volume as bootable.

        ```
      operationId: os-volume-manage:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Volume_ManageCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_ManageCreateResponse'
      tags:
        - os-volume-manage
  /v3/{project_id}/scheduler-stats/get_pools:
    parameters:
      - $ref: '#/components/parameters/scheduler_stats_get_pools_project_id'
    get:
      description: |-
        Lists all back-end storage pools. Since v3.31 if non-admin users
        specify invalid filters in the url, API will return bad request.
      operationId: project_id/scheduler-stats/get_pools:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler_StatsGet_PoolsResponse'
      tags:
        - scheduler-stats
      summary: List all back-end storage pools
  /v3/scheduler-stats/get_pools:
    get:
      description: |-
        List all active pools in scheduler.
      operationId: scheduler-stats/get_pools:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler_StatsGet_PoolsResponse'
      tags:
        - scheduler-stats
  /v3/{project_id}/consistencygroups/create_from_src:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_create_from_src_project_id'
    post:
      description: |-
        Creates a consistency group from source.
      operationId: project_id/consistencygroups/create_from_src:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsCreate_From_SrcCreate_From_SrcRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsCreate_From_SrcResponse'
      tags:
        - consistencygroups
      deprecated: true
      summary: Create a consistency group from source
  /v3/{project_id}/consistencygroups/{id}/delete:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_delete_project_id'
      - $ref: '#/components/parameters/consistencygroups_delete_id'
    post:
      description: |-
        Delete a consistency group.
      operationId: project_id/consistencygroups/id/delete:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsDeleteDeleteRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsDeleteResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/{project_id}/consistencygroups/{id}/update:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_update_project_id'
      - $ref: '#/components/parameters/consistencygroups_update_id'
    put:
      description: |-
        Update the consistency group.

        Expected format of the input parameter 'body':

        ```

        {
            "consistencygroup":
            {
                "name": "my_cg",
                "description": "My consistency group",
                "add_volumes": "volume-uuid-1,volume-uuid-2,...",
                "remove_volumes": "volume-uuid-8,volume-uuid-9,..."
            }
        }

        ```
      operationId: project_id/consistencygroups/id/update:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsUpdateUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsUpdateResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/consistencygroups/create_from_src:
    post:
      description: |-
        Create a new consistency group from a source.

        The source can be a CG snapshot or a CG. Note that
        this does not require volume_types as the "create"
        API above.
      operationId: consistencygroups/create_from_src:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsCreate_From_SrcCreate_From_SrcRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsCreate_From_SrcResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/consistencygroups/{id}/delete:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_delete_id'
    post:
      description: |-
        Delete a consistency group.
      operationId: consistencygroups/id/delete:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsDeleteDeleteRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsDeleteResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/consistencygroups/{id}/update:
    parameters:
      - $ref: '#/components/parameters/consistencygroups_update_id'
    put:
      description: |-
        Update the consistency group.

        Expected format of the input parameter 'body':

        ```

        {
            "consistencygroup":
            {
                "name": "my_cg",
                "description": "My consistency group",
                "add_volumes": "volume-uuid-1,volume-uuid-2,...",
                "remove_volumes": "volume-uuid-8,volume-uuid-9,..."
            }
        }

        ```
      operationId: consistencygroups/id/update:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsistencygroupsUpdateUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencygroupsUpdateResponse'
      tags:
        - consistencygroups
      deprecated: true
  /v3/{project_id}/os-quota-class-sets/{id}:
    parameters:
      - $ref: '#/components/parameters/os_quota_class_sets_project_id'
      - $ref: '#/components/parameters/os_quota_class_sets_id'
    get:
      operationId: project_id/os-quota-class-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_Class_SetShowResponse'
      tags:
        - os-quota-class-sets
    put:
      operationId: project_id/os-quota-class-sets/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Quota_Class_SetUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_Class_SetUpdateResponse'
      tags:
        - os-quota-class-sets
  /v3/os-quota-class-sets/{id}:
    parameters:
      - $ref: '#/components/parameters/os_quota_class_sets_id'
    get:
      operationId: os-quota-class-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_Class_SetShowResponse'
      tags:
        - os-quota-class-sets
    put:
      operationId: os-quota-class-sets/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Quota_Class_SetUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_Class_SetUpdateResponse'
      tags:
        - os-quota-class-sets
  /v3/{project_id}/cgsnapshots/detail:
    parameters:
      - $ref: '#/components/parameters/cgsnapshots_detail_project_id'
    get:
      description: |-
        Lists all consistency group snapshots with details.
      operationId: project_id/cgsnapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsDetailResponse'
      tags:
        - cgsnapshots
      deprecated: true
      summary: List all consistency group snapshots with details
  /v3/{project_id}/cgsnapshots:
    parameters:
      - $ref: '#/components/parameters/cgsnapshots_project_id'
    get:
      description: |-
        Lists all consistency group snapshots.
      operationId: project_id/cgsnapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsListResponse'
      tags:
        - cgsnapshots
      deprecated: true
      summary: List all consistency group snapshots
    post:
      description: |-
        Creates a consistency group snapshot.
      operationId: project_id/cgsnapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CgsnapshotsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsCreateResponse'
      tags:
        - cgsnapshots
      deprecated: true
      summary: Create a consistency group snapshot
  /v3/{project_id}/cgsnapshots/{id}:
    parameters:
      - $ref: '#/components/parameters/cgsnapshots_project_id'
      - $ref: '#/components/parameters/cgsnapshots_id'
    get:
      description: |-
        Return data about the given cgsnapshot.
      operationId: project_id/cgsnapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotShowResponse'
      tags:
        - cgsnapshots
      deprecated: true
    delete:
      description: |-
        Delete a cgsnapshot.
      operationId: project_id/cgsnapshots/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - cgsnapshots
      deprecated: true
  /v3/cgsnapshots/detail:
    get:
      description: |-
        Returns a detailed list of cgsnapshots.
      operationId: cgsnapshots/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsDetailResponse'
      tags:
        - cgsnapshots
      deprecated: true
  /v3/cgsnapshots:
    get:
      description: |-
        Returns a summary list of cgsnapshots.
      operationId: cgsnapshots:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsListResponse'
      tags:
        - cgsnapshots
      deprecated: true
    post:
      description: |-
        Create a new cgsnapshot.
      operationId: cgsnapshots:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CgsnapshotsCreateRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotsCreateResponse'
      tags:
        - cgsnapshots
      deprecated: true
  /v3/cgsnapshots/{id}:
    parameters:
      - $ref: '#/components/parameters/cgsnapshots_id'
    get:
      description: |-
        Return data about the given cgsnapshot.
      operationId: cgsnapshots/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CgsnapshotShowResponse'
      tags:
        - cgsnapshots
      deprecated: true
    delete:
      description: |-
        Delete a cgsnapshot.
      operationId: cgsnapshots/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - cgsnapshots
      deprecated: true
  /v3/{project_id}/types/{type_id}/os-volume-type-access:
    parameters:
      - $ref: '#/components/parameters/types_os_volume_type_access_project_id'
      - $ref: '#/components/parameters/types_os_volume_type_access_type_id'
    get:
      operationId: project_id/types/type_id/os-volume-type-access:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesOs_Volume_Type_AccessListResponse'
      tags:
        - types
  /v3/types/{type_id}/os-volume-type-access:
    parameters:
      - $ref: '#/components/parameters/types_os_volume_type_access_type_id'
    get:
      operationId: types/type_id/os-volume-type-access:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesOs_Volume_Type_AccessListResponse'
      tags:
        - types
  /v3/{project_id}/os-availability-zone:
    parameters:
      - $ref: '#/components/parameters/os_availability_zone_project_id'
    get:
      description: |-
        List availability zone information.
      operationId: project_id/os-availability-zone:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Availability_ZoneListResponse'
      tags:
        - os-availability-zone
      summary: List Availability Zone Information
  /v3/os-availability-zone:
    get:
      description: |-
        Describe all known availability zones.
      operationId: os-availability-zone:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Availability_ZoneListResponse'
      tags:
        - os-availability-zone
  /v3/{project_id}/types/{type_id}/encryption:
    parameters:
      - $ref: '#/components/parameters/types_encryption_project_id'
      - $ref: '#/components/parameters/types_encryption_type_id'
    get:
      description: |-
        Returns the encryption specs for a given volume type.
      operationId: project_id/types/type_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionListResponse'
      tags:
        - types
    post:
      description: |-
        Create encryption specs for an existing volume type.
      operationId: project_id/types/type_id/encryption:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesEncryptionCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionCreateResponse'
      tags:
        - types
  /v3/{project_id}/types/{type_id}/encryption/{id}:
    parameters:
      - $ref: '#/components/parameters/types_encryption_project_id'
      - $ref: '#/components/parameters/types_encryption_type_id'
      - $ref: '#/components/parameters/types_encryption_id'
    get:
      description: |-
        Return a single encryption item.
      operationId: project_id/types/type_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionShowResponse'
      tags:
        - types
    delete:
      description: |-
        Delete encryption specs for a given volume type.
      operationId: project_id/types/type_id/encryption/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - types
    put:
      description: |-
        Update encryption specs for a given volume type.
      operationId: project_id/types/type_id/encryption/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesEncryptionUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionUpdateResponse'
      tags:
        - types
  /v3/types/{type_id}/encryption:
    parameters:
      - $ref: '#/components/parameters/types_encryption_type_id'
    get:
      description: |-
        Returns the encryption specs for a given volume type.
      operationId: types/type_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionListResponse'
      tags:
        - types
    post:
      description: |-
        Create encryption specs for an existing volume type.
      operationId: types/type_id/encryption:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesEncryptionCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionCreateResponse'
      tags:
        - types
  /v3/types/{type_id}/encryption/{id}:
    parameters:
      - $ref: '#/components/parameters/types_encryption_type_id'
      - $ref: '#/components/parameters/types_encryption_id'
    get:
      description: |-
        Return a single encryption item.
      operationId: types/type_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionShowResponse'
      tags:
        - types
    delete:
      description: |-
        Delete encryption specs for a given volume type.
      operationId: types/type_id/encryption/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - types
    put:
      description: |-
        Update encryption specs for a given volume type.
      operationId: types/type_id/encryption/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesEncryptionUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesEncryptionUpdateResponse'
      tags:
        - types
  /v3/{project_id}/types/{type_id}/extra_specs:
    parameters:
      - $ref: '#/components/parameters/types_extra_specs_project_id'
      - $ref: '#/components/parameters/types_extra_specs_type_id'
    get:
      description: |-
        Returns the list of extra specs for a given volume type.
      operationId: project_id/types/type_id/extra_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecsListResponse'
      tags:
        - types
    post:
      operationId: project_id/types/type_id/extra_specs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesExtra_SpecsCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecsCreateResponse'
      tags:
        - types
  /v3/{project_id}/types/{type_id}/extra_specs/{id}:
    parameters:
      - $ref: '#/components/parameters/types_extra_specs_project_id'
      - $ref: '#/components/parameters/types_extra_specs_type_id'
      - $ref: '#/components/parameters/types_extra_specs_id'
    get:
      description: |-
        Return a single extra spec item.
      operationId: project_id/types/type_id/extra_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecShowResponse'
      tags:
        - types
    delete:
      description: |-
        Deletes an existing extra spec.
      operationId: project_id/types/type_id/extra_specs/id:delete
      responses:
        '202':
          description: Ok
      tags:
        - types
    put:
      operationId: project_id/types/type_id/extra_specs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesExtra_SpecUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecUpdateResponse'
      tags:
        - types
  /v3/types/{type_id}/extra_specs:
    parameters:
      - $ref: '#/components/parameters/types_extra_specs_type_id'
    get:
      description: |-
        Returns the list of extra specs for a given volume type.
      operationId: types/type_id/extra_specs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecsListResponse'
      tags:
        - types
    post:
      operationId: types/type_id/extra_specs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesExtra_SpecsCreate'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecsCreateResponse'
      tags:
        - types
  /v3/types/{type_id}/extra_specs/{id}:
    parameters:
      - $ref: '#/components/parameters/types_extra_specs_type_id'
      - $ref: '#/components/parameters/types_extra_specs_id'
    get:
      description: |-
        Return a single extra spec item.
      operationId: types/type_id/extra_specs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecShowResponse'
      tags:
        - types
    delete:
      description: |-
        Deletes an existing extra spec.
      operationId: types/type_id/extra_specs/id:delete
      responses:
        '202':
          description: Ok
      tags:
        - types
    put:
      operationId: types/type_id/extra_specs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypesExtra_SpecUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypesExtra_SpecUpdateResponse'
      tags:
        - types
  /v3/{project_id}/backups/import_record:
    parameters:
      - $ref: '#/components/parameters/backups_import_record_project_id'
    post:
      description: |-
        Import information about a backup.
      operationId: project_id/backups/import_record:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupsImport_RecordImport_Record'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsImport_RecordResponse'
      tags:
        - backups
      summary: Import a backup
  /v3/{project_id}/backups/{id}/restore:
    parameters:
      - $ref: '#/components/parameters/backups_restore_project_id'
      - $ref: '#/components/parameters/backups_restore_id'
    post:
      description: |-
        Restore an existing backup to a volume.
      operationId: project_id/backups/id/restore:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupsRestoreRestore'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsRestoreResponse'
      tags:
        - backups
  /v3/{project_id}/backups/{id}/action:
    parameters:
      - $ref: '#/components/parameters/backups_action_project_id'
      - $ref: '#/components/parameters/backups_action_id'
    post:
      operationId: project_id/backups/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BackupsAction_Reset_Status'
                - $ref: '#/components/schemas/BackupsActionOs-Force_DeleteRequest'
              x-openstack:
                discriminator: action
      responses:
        '202':
          description: Ok
      tags:
        - backups
  /v3/{project_id}/backups/{id}/export_record:
    parameters:
      - $ref: '#/components/parameters/backups_export_record_project_id'
      - $ref: '#/components/parameters/backups_export_record_id'
    get:
      description: |-
        Export a backup.
      operationId: project_id/backups/id/export_record:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsExport_RecordResponse'
      tags:
        - backups
  /v3/backups/import_record:
    post:
      description: |-
        Import a backup.
      operationId: backups/import_record:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupsImport_RecordImport_Record'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsImport_RecordResponse'
      tags:
        - backups
  /v3/backups/{id}/restore:
    parameters:
      - $ref: '#/components/parameters/backups_restore_id'
    post:
      description: |-
        Restore an existing backup to a volume.
      operationId: backups/id/restore:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupsRestoreRestore'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsRestoreResponse'
      tags:
        - backups
  /v3/backups/{id}/action:
    parameters:
      - $ref: '#/components/parameters/backups_action_id'
    post:
      operationId: backups/id/action:post
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BackupsAction_Reset_Status'
                - $ref: '#/components/schemas/BackupsActionOs-Force_DeleteRequest'
              x-openstack:
                discriminator: action
      responses:
        '202':
          description: Ok
      tags:
        - backups
  /v3/backups/{id}/export_record:
    parameters:
      - $ref: '#/components/parameters/backups_export_record_id'
    get:
      description: |-
        Export a backup.
      operationId: backups/id/export_record:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsExport_RecordResponse'
      tags:
        - backups
  /v3/{project_id}/os-volume-transfer/detail:
    parameters:
      - $ref: '#/components/parameters/os_volume_transfer_detail_project_id'
    get:
      description: |-
        Lists volume transfers, with details.
      operationId: project_id/os-volume-transfer/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferDetailResponse'
      tags:
        - os-volume-transfer
      summary: List volume transfers and details
  /v3/{project_id}/os-volume-transfer:
    parameters:
      - $ref: '#/components/parameters/os_volume_transfer_project_id'
    get:
      description: |-
        Lists volume transfers.
      operationId: project_id/os-volume-transfer:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferListResponse'
      tags:
        - os-volume-transfer
      summary: List volume transfers for a project
    post:
      description: |-
        Creates a volume transfer.

        **Preconditions**
      operationId: project_id/os-volume-transfer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Volume_TransferCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferCreateResponse'
      tags:
        - os-volume-transfer
      summary: Create a volume transfer
  /v3/{project_id}/os-volume-transfer/{id}/accept:
    parameters:
      - $ref: '#/components/parameters/os_volume_transfer_accept_project_id'
      - $ref: '#/components/parameters/os_volume_transfer_accept_id'
    post:
      description: |-
        Accept a new volume transfer.
      operationId: project_id/os-volume-transfer/id/accept:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Volume_TransferAcceptAccept'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferAcceptResponse'
      tags:
        - os-volume-transfer
  /v3/{project_id}/os-volume-transfer/{id}:
    parameters:
      - $ref: '#/components/parameters/os_volume_transfer_project_id'
      - $ref: '#/components/parameters/os_volume_transfer_id'
    get:
      description: |-
        Return data about active transfers.
      operationId: project_id/os-volume-transfer/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferShowResponse'
      tags:
        - os-volume-transfer
    delete:
      description: |-
        Delete a transfer.
      operationId: project_id/os-volume-transfer/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - os-volume-transfer
  /v3/os-volume-transfer/detail:
    get:
      description: |-
        Returns a detailed list of transfers.
      operationId: os-volume-transfer/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferDetailResponse'
      tags:
        - os-volume-transfer
  /v3/os-volume-transfer:
    get:
      description: |-
        Returns a summary list of transfers.
      operationId: os-volume-transfer:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferListResponse'
      tags:
        - os-volume-transfer
    post:
      description: |-
        Create a new volume transfer.
      operationId: os-volume-transfer:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Volume_TransferCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferCreateResponse'
      tags:
        - os-volume-transfer
  /v3/os-volume-transfer/{id}/accept:
    parameters:
      - $ref: '#/components/parameters/os_volume_transfer_accept_id'
    post:
      description: |-
        Accept a new volume transfer.
      operationId: os-volume-transfer/id/accept:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Volume_TransferAcceptAccept'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferAcceptResponse'
      tags:
        - os-volume-transfer
  /v3/os-volume-transfer/{id}:
    parameters:
      - $ref: '#/components/parameters/os_volume_transfer_id'
    get:
      description: |-
        Return data about active transfers.
      operationId: os-volume-transfer/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Volume_TransferShowResponse'
      tags:
        - os-volume-transfer
    delete:
      description: |-
        Delete a transfer.
      operationId: os-volume-transfer/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - os-volume-transfer
  /v3/{project_id}/capabilities/{id}:
    parameters:
      - $ref: '#/components/parameters/capabilities_project_id'
      - $ref: '#/components/parameters/capabilities_id'
    get:
      description: |-
        Return capabilities list of given backend.
      operationId: project_id/capabilities/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityShowResponse'
      tags:
        - capabilities
  /v3/capabilities/{id}:
    parameters:
      - $ref: '#/components/parameters/capabilities_id'
    get:
      description: |-
        Return capabilities list of given backend.
      operationId: capabilities/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityShowResponse'
      tags:
        - capabilities
  /v3/{project_id}/os-snapshot-manage/detail:
    parameters:
      - $ref: '#/components/parameters/os_snapshot_manage_detail_project_id'
    get:
      description: |-
        Returns a detailed list of snapshots available to manage.
      operationId: project_id/os-snapshot-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageDetailResponse'
      tags:
        - os-snapshot-manage
  /v3/{project_id}/os-snapshot-manage:
    parameters:
      - $ref: '#/components/parameters/os_snapshot_manage_project_id'
    get:
      description: |-
        Returns a summary list of snapshots available to manage.
      operationId: project_id/os-snapshot-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageListResponse'
      tags:
        - os-snapshot-manage
    post:
      description: |-
        Instruct Cinder to manage a storage snapshot object.

        Manages an existing backend storage snapshot object (e.g. a Linux
        logical volume or a SAN disk) by creating the Cinder objects required
        to manage it, and possibly renaming the backend storage snapshot object
        (driver dependent).

        From an API perspective, this operation behaves very much like a
        snapshot creation operation.

        Required HTTP Body:

        ```

        {
          "snapshot":
          {
            "volume_id": "<Cinder volume already exists in volume backend>",
            "ref":
               "<Driver-specific reference to the existing storage object>"
          }
        }

        ```

        See the appropriate Cinder drivers' implementations of the
        manage_snapshot method to find out the accepted format of 'ref'.
        For example,in LVM driver, it will be the logic volume name of snapshot
        which you want to manage.

        This API call will return with an error if any of the above elements
        are missing from the request, or if the 'volume_id' element refers to
        a cinder volume that could not be found.

        The snapshot will later enter the error state if it is discovered that
        'ref' is bad.

        Optional elements to 'snapshot' are:

        ```

        name           A name for the new snapshot.
        description    A description for the new snapshot.
        metadata       Key/value pairs to be associated with the new snapshot.

        ```
      operationId: project_id/os-snapshot-manage:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Snapshot_ManageCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageCreateResponse'
      tags:
        - os-snapshot-manage
  /v3/os-snapshot-manage/detail:
    get:
      description: |-
        Returns a detailed list of snapshots available to manage.
      operationId: os-snapshot-manage/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageDetailResponse'
      tags:
        - os-snapshot-manage
  /v3/os-snapshot-manage:
    get:
      description: |-
        Returns a summary list of snapshots available to manage.
      operationId: os-snapshot-manage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageListResponse'
      tags:
        - os-snapshot-manage
    post:
      description: |-
        Instruct Cinder to manage a storage snapshot object.

        Manages an existing backend storage snapshot object (e.g. a Linux
        logical volume or a SAN disk) by creating the Cinder objects required
        to manage it, and possibly renaming the backend storage snapshot object
        (driver dependent).

        From an API perspective, this operation behaves very much like a
        snapshot creation operation.

        Required HTTP Body:

        ```

        {
          "snapshot":
          {
            "volume_id": "<Cinder volume already exists in volume backend>",
            "ref":
               "<Driver-specific reference to the existing storage object>"
          }
        }

        ```

        See the appropriate Cinder drivers' implementations of the
        manage_snapshot method to find out the accepted format of 'ref'.
        For example,in LVM driver, it will be the logic volume name of snapshot
        which you want to manage.

        This API call will return with an error if any of the above elements
        are missing from the request, or if the 'volume_id' element refers to
        a cinder volume that could not be found.

        The snapshot will later enter the error state if it is discovered that
        'ref' is bad.

        Optional elements to 'snapshot' are:

        ```

        name           A name for the new snapshot.
        description    A description for the new snapshot.
        metadata       Key/value pairs to be associated with the new snapshot.

        ```
      operationId: os-snapshot-manage:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Snapshot_ManageCreate'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Snapshot_ManageCreateResponse'
      tags:
        - os-snapshot-manage
  /v3/{project_id}/os-services:
    parameters:
      - $ref: '#/components/parameters/os_services_project_id'
    get:
      description: |-
        Lists all Cinder services. Provides details why any services
        were disabled.
      operationId: project_id/os-services:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_ServicesListResponse'
      tags:
        - os-services
      summary: List All Cinder Services
  /v3/{project_id}/os-services/{id}:
    parameters:
      - $ref: '#/components/parameters/os_services_project_id'
      - $ref: '#/components/parameters/os_services_id'
    put:
      description: |-
        Enable/Disable scheduling for a service.

        Includes Freeze/Thaw which sends call down to drivers
        and allows volume.manager for the specified host to
        disable the service rather than accessing the service
        directly in this API layer.
      operationId: project_id/os-services/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_ServiceUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_ServiceUpdateResponse'
      tags:
        - os-services
  /v3/os-services:
    get:
      description: |-
        Return a list of all running services.

        Filter by host & service name.
      operationId: os-services:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_ServicesListResponse'
      tags:
        - os-services
  /v3/os-services/{id}:
    parameters:
      - $ref: '#/components/parameters/os_services_id'
    put:
      description: |-
        Enable/Disable scheduling for a service.

        Includes Freeze/Thaw which sends call down to drivers
        and allows volume.manager for the specified host to
        disable the service rather than accessing the service
        directly in this API layer.
      operationId: os-services/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_ServiceUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_ServiceUpdateResponse'
      tags:
        - os-services
  /v3/{project_id}/volumes/{volume_id}/encryption:
    parameters:
      - $ref: '#/components/parameters/volumes_encryption_project_id'
      - $ref: '#/components/parameters/volumes_encryption_volume_id'
    get:
      description: |-
        Returns the encryption metadata for a given volume.
      operationId: project_id/volumes/volume_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionListResponse'
      tags:
        - volumes
  /v3/{project_id}/volumes/{volume_id}/encryption/{id}:
    parameters:
      - $ref: '#/components/parameters/volumes_encryption_project_id'
      - $ref: '#/components/parameters/volumes_encryption_volume_id'
      - $ref: '#/components/parameters/volumes_encryption_id'
    get:
      description: |-
        Return a single encryption item.
      operationId: project_id/volumes/volume_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionShowResponse'
      tags:
        - volumes
  /v3/volumes/{volume_id}/encryption:
    parameters:
      - $ref: '#/components/parameters/volumes_encryption_volume_id'
    get:
      description: |-
        Returns the encryption metadata for a given volume.
      operationId: volumes/volume_id/encryption:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionListResponse'
      tags:
        - volumes
  /v3/volumes/{volume_id}/encryption/{id}:
    parameters:
      - $ref: '#/components/parameters/volumes_encryption_volume_id'
      - $ref: '#/components/parameters/volumes_encryption_id'
    get:
      description: |-
        Return a single encryption item.
      operationId: volumes/volume_id/encryption/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesEncryptionShowResponse'
      tags:
        - volumes
  /v3/{project_id}/os-hosts:
    parameters:
      - $ref: '#/components/parameters/os_hosts_project_id'
    get:
      operationId: project_id/os-hosts:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostsListResponse'
      tags:
        - os-hosts
    put:
      operationId: project_id/os-hosts:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_HostsUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostsUpdateResponse'
      tags:
        - os-hosts
  /v3/{project_id}/os-hosts/{id}:
    parameters:
      - $ref: '#/components/parameters/os_hosts_project_id'
      - $ref: '#/components/parameters/os_hosts_id'
    get:
      description: |-
        Shows the volume usage info given by hosts.

        |  |  |
        | --- | --- |
        | param req: | security context |
        | param id: | hostname |
        | returns: | dict -- the host resources dictionary. ex.:   ```  {'host': [{'resource': D},..]} D: {'host': 'hostname','project': 'admin',     'volume_count': 1, 'total_volume_gb': 2048}  ``` |
      operationId: project_id/os-hosts/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostShowResponse'
      tags:
        - os-hosts
    put:
      operationId: project_id/os-hosts/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_HostUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostUpdateResponse'
      tags:
        - os-hosts
  /v3/os-hosts:
    get:
      operationId: os-hosts:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostsListResponse'
      tags:
        - os-hosts
    put:
      operationId: os-hosts:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_HostsUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostsUpdateResponse'
      tags:
        - os-hosts
  /v3/os-hosts/{id}:
    parameters:
      - $ref: '#/components/parameters/os_hosts_id'
    get:
      description: |-
        Shows the volume usage info given by hosts.

        |  |  |
        | --- | --- |
        | param req: | security context |
        | param id: | hostname |
        | returns: | dict -- the host resources dictionary. ex.:   ```  {'host': [{'resource': D},..]} D: {'host': 'hostname','project': 'admin',     'volume_count': 1, 'total_volume_gb': 2048}  ``` |
      operationId: os-hosts/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostShowResponse'
      tags:
        - os-hosts
    put:
      operationId: os-hosts/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_HostUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_HostUpdateResponse'
      tags:
        - os-hosts
  /v3/{project_id}/os-quota-sets/{id}/defaults:
    parameters:
      - $ref: '#/components/parameters/os_quota_sets_defaults_project_id'
      - $ref: '#/components/parameters/os_quota_sets_defaults_id'
    get:
      operationId: project_id/os-quota-sets/id/defaults:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetsDefaultsResponse'
      tags:
        - os-quota-sets
  /v3/{project_id}/os-quota-sets/{id}:
    parameters:
      - $ref: '#/components/parameters/os_quota_sets_project_id'
      - $ref: '#/components/parameters/os_quota_sets_id'
    get:
      description: |-
        Show quota for a particular tenant

        |  |  |
        | --- | --- |
        | param req: | request |
        | param id: | target project id that needs to be shown |
      operationId: project_id/os-quota-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetShowResponse'
      tags:
        - os-quota-sets
    delete:
      description: |-
        Delete Quota for a particular tenant.

        |  |  |
        | --- | --- |
        | param req: | request |
        | param id: | target project id that needs to be deleted |
      operationId: project_id/os-quota-sets/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - os-quota-sets
    put:
      description: |-
        Update Quota for a particular tenant

        |  |  |
        | --- | --- |
        | param req: | request |
        | param id: | target project id that needs to be updated |
        | param body: | key, value pair that will be applied to the resources if the update succeeds |
      operationId: project_id/os-quota-sets/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Quota_SetUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetUpdateResponse'
      tags:
        - os-quota-sets
  /v3/os-quota-sets/{id}/defaults:
    parameters:
      - $ref: '#/components/parameters/os_quota_sets_defaults_id'
    get:
      operationId: os-quota-sets/id/defaults:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetsDefaultsResponse'
      tags:
        - os-quota-sets
  /v3/os-quota-sets/{id}:
    parameters:
      - $ref: '#/components/parameters/os_quota_sets_id'
    get:
      description: |-
        Show quota for a particular tenant

        |  |  |
        | --- | --- |
        | param req: | request |
        | param id: | target project id that needs to be shown |
      operationId: os-quota-sets/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetShowResponse'
      tags:
        - os-quota-sets
    delete:
      description: |-
        Delete Quota for a particular tenant.

        |  |  |
        | --- | --- |
        | param req: | request |
        | param id: | target project id that needs to be deleted |
      operationId: os-quota-sets/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - os-quota-sets
    put:
      description: |-
        Update Quota for a particular tenant

        |  |  |
        | --- | --- |
        | param req: | request |
        | param id: | target project id that needs to be updated |
        | param body: | key, value pair that will be applied to the resources if the update succeeds |
      operationId: os-quota-sets/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Quota_SetUpdate'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Quota_SetUpdateResponse'
      tags:
        - os-quota-sets
components:
  schemas:
    RootListResponse:
      type: object
      description: Response of the :get operation
    VolumesDetailResponse:
      type: object
      description: A container with list of volume objects.
      properties:
        volumes:
          type: array
          items:
            type: object
            description: A volume object.
            properties:
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The volume name.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The volume description.
              volume_type:
                type: string
                description: |-
                  The associated volume type name for the volume.
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: |-
                  A `metadata` object. Contains one or more
                  metadata key and value pairs that are associated with the volume.
              snapshot_id:
                type: string
                format: uuid
                description: |-
                  To create a volume from an existing snapshot,
                  specify the UUID of the volume snapshot. The volume is created in
                  same availability zone and with same size as the snapshot.
              source_volid:
                type: string
                format: uuid
                description: |-
                  The UUID of the source volume. The API creates a new volume with the same
                  size as the source volume unless a larger size is requested.
              consistencygroup_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the consistency group.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
              availability_zone:
                type: string
                description: |-
                  The name of the availability zone.
              bootable:
                type: string
                description: |-
                  Enables or disables the bootable attribute. You
                  can boot an instance from a bootable volume.
              multiattach:
                type: boolean
                description: |-
                  If true, this volume can attach to more than one
                  instance.
              status:
                type: string
                description: |-
                  The volume status.
              migration_status:
                type: string
                description: |-
                  The volume migration status. Admin only.
              attachments:
                description: |-
                  Instance attachment information. If this volume
                  is attached to a server instance, the attachments list includes
                  the UUID of the attached server, an attachment UUID, the name of
                  the attached host, if any, the volume UUID, the device, and the
                  device UUID. Otherwise, this list is empty. For example:

                  ```
                  [
                    {
                      'server_id': '6c8cf6e0-4c8f-442f-9196-9679737feec6',
                      'attachment_id': '3dafcac4-1cb9-4b60-a227-d729baa10cf6',
                      'attached_at': '2019-09-30T19:30:34.000000',
                      'host_name': null,
                      'volume_id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53',
                      'device': '/dev/vda',
                      'id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53'
                    }
                  ]

                  ```
                type: array
                items:
                  type: object
                  properties:
                    server_id:
                      type:
                        - string
                        - 'null'
                      format: uuid
                    attachment_id:
                      type: string
                      format: uuid
                    attached_at:
                      type: string
                      format: date-time
                    host_name:
                      type:
                        - string
                        - 'null'
                    volume_id:
                      type: string
                      format: uuid
                    device:
                      type:
                        - string
                        - 'null'
                    id:
                      type: string
                      format: uuid
                      description: |-
                        The UUID of the volume.
                  additionalProperties: false
                  required:
                    - server_id
                    - attachment_id
                    - host_name
                    - volume_id
                    - device
                    - id
              links:
                description: |-
                  The volume links.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              encrypted:
                type: boolean
                description: |-
                  If true, this volume is encrypted.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was updated.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC. In the previous example, the offset value is `-05:00`.

                  If the `updated_at` date and time stamp is not set, its value is
                  `null`.
              replication_status:
                type:
                  - string
                  - 'null'
                description: |-
                  The volume replication status.
              id:
                type: string
                format: uuid
                description: The UUID of the volume.
              user_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the user.
              volume_type_id:
                type: string
                format: uuid
                description: |-
                  The associated volume type ID for the volume.

                  **New in version 3.63**
                x-openstack:
                  min-ver: '3.63'
              group_id:
                type: string
                format: uuid
                description: |-
                  The ID of the group.

                  **New in version 3.13**
                x-openstack:
                  min-ver: '3.63'
              provider_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The provider ID for the volume. The value is either a string set by the
                  driver or `null` if the driver doesn’t use the field or if it hasn’t
                  created it yet. Only returned for administrators.

                  **New in version 3.21**
                x-openstack:
                  min-ver: '3.21'
              service_uuid:
                type: string
                format: uuid
                description: |-
                  A unique identifier that’s used to indicate what node the volume-service
                  for a particular volume is being serviced by.

                  **New in version 3.48**
                x-openstack:
                  min-ver: '3.48'
              shared_targets:
                type: boolean
                description: |-
                  An indicator whether the host connecting the volume should lock for the
                  whole attach/detach process or not. `true` means only is iSCSI initiator
                  running on host doesn’t support manual scans, `false` means never use
                  locks, and `null` means to always use locks. Look at os-brick’s
                  `guard_connection` context manager. Default=True.

                  **New in version 3.69**
                x-openstack:
                  min-ver: '3.48'
              cluster_name:
                type: string
                description: |-
                  The cluster name of volume backend.

                  **New in version 3.61**
                x-openstack:
                  min-ver: '3.61'
              consumes_quota:
                type: boolean
                description: |-
                  Whether this resource consumes quota or not. Resources that not counted
                  for quota usage are usually temporary internal resources created to perform
                  an operation.

                  **New in version 3.65**
                x-openstack:
                  min-ver: '3.65'
            required:
              - attachments
              - bootable
              - encrypted
              - id
              - name
              - replication_status
              - size
              - status
              - user_id
            additionalProperties: true
          description: |-
            A list of `volume` objects.
    VolumesSummaryResponse:
      type: object
      description: Response of the project_id/volumes/summary:get operation
    VolumesCreate_30:
      type: object
      properties:
        volume:
          type: object
          description: |-
            A `volume` object.
          properties:
            name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
              description: |-
                The volume name.
            description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
              description: |-
                The volume description.
            display_name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            display_description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            volume_type:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The volume type (either name or ID). To create an environment with
                multiple-storage back ends, you must specify a volume type. Block
                Storage volume back ends are spawned as children to `cinder-
                volume`, and they are keyed from a unique queue. They are named
                `cinder- volume.HOST.BACKEND`. For example, `cinder-
                volume.ubuntu.lvmdriver`. When a volume is created, the scheduler
                chooses an appropriate back end to handle the request based on the
                volume type. Default is `None`. For information about how to
                use volume types to create multiple- storage back ends, see
                [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs to be associated
                with the new volume.
            snapshot_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            source_volid:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            consistencygroup_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            size:
              type:
                - integer
                - string
                - 'null'
              pattern: ^[0-9]+$
              minimum: 1
              maximum: 2147483647
              description: |-
                The size of the volume, in gibibytes (GiB).
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              description: |-
                The name of the availability zone.
            multiattach:
              oneOf:
                - type: 'null'
                - type:
                    - boolean
                    - string
                  enum:
                    - true
                    - 'True'
                    - 'TRUE'
                    - 'true'
                    - '1'
                    - ON
                    - On
                    - on
                    - YES
                    - Yes
                    - yes
                    - y
                    - t
                    - false
                    - 'False'
                    - 'FALSE'
                    - 'false'
                    - '0'
                    - OFF
                    - Off
                    - off
                    - NO
                    - No
                    - no
                    - n
                    - f
            image_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            imageRef:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The UUID of the image from which you want to
                create the volume. Required to create a bootable volume.

                **New in version 3.46**: Instead of directly consuming a zero-byte
                image that has been created by the Compute service when an instance
                snapshot was requested, the Block Storage service will use the
                `snapshot_id` contained in the `block_device_mapping` image
                property to locate the volume snapshot, and will use that to create
                the volume instead.
          additionalProperties: true
        OS-SCH-HNT:scheduler_hints:
          type:
            - object
            - 'null'
          description: |-
            The dictionary of data to send to the scheduler.
      additionalProperties: false
      x-openstack:
        min-ver: '3.0'
        max-ver: '3.12'
      required:
        - volume
    VolumesCreate_313:
      type: object
      properties:
        volume:
          type: object
          description: |-
            A `volume` object.
          properties:
            name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
              description: |-
                The volume name.
            description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
              description: |-
                The volume description.
            display_name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            display_description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            volume_type:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The volume type (either name or ID). To create an environment with
                multiple-storage back ends, you must specify a volume type. Block
                Storage volume back ends are spawned as children to `cinder-
                volume`, and they are keyed from a unique queue. They are named
                `cinder- volume.HOST.BACKEND`. For example, `cinder-
                volume.ubuntu.lvmdriver`. When a volume is created, the scheduler
                chooses an appropriate back end to handle the request based on the
                volume type. Default is `None`. For information about how to
                use volume types to create multiple- storage back ends, see
                [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs to be associated
                with the new volume.
            snapshot_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            source_volid:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            consistencygroup_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            size:
              type:
                - integer
                - string
                - 'null'
              pattern: ^[0-9]+$
              minimum: 1
              maximum: 2147483647
              description: |-
                The size of the volume, in gibibytes (GiB).
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              description: |-
                The name of the availability zone.
            multiattach:
              oneOf:
                - type: 'null'
                - type:
                    - boolean
                    - string
                  enum:
                    - true
                    - 'True'
                    - 'TRUE'
                    - 'true'
                    - '1'
                    - ON
                    - On
                    - on
                    - YES
                    - Yes
                    - yes
                    - y
                    - t
                    - false
                    - 'False'
                    - 'FALSE'
                    - 'false'
                    - '0'
                    - OFF
                    - Off
                    - off
                    - NO
                    - No
                    - no
                    - n
                    - f
            image_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            imageRef:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The UUID of the image from which you want to
                create the volume. Required to create a bootable volume.

                **New in version 3.46**: Instead of directly consuming a zero-byte
                image that has been created by the Compute service when an instance
                snapshot was requested, the Block Storage service will use the
                `snapshot_id` contained in the `block_device_mapping` image
                property to locate the volume snapshot, and will use that to create
                the volume instead.
            group_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: true
        OS-SCH-HNT:scheduler_hints:
          type:
            - object
            - 'null'
          description: |-
            The dictionary of data to send to the scheduler.
      additionalProperties: false
      x-openstack:
        min-ver: '3.13'
        max-ver: '3.46'
      required:
        - volume
    VolumesCreate_347:
      type: object
      properties:
        volume:
          type: object
          description: |-
            A `volume` object.
          properties:
            name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
              description: |-
                The volume name.
            description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
              description: |-
                The volume description.
            display_name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            display_description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            volume_type:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The volume type (either name or ID). To create an environment with
                multiple-storage back ends, you must specify a volume type. Block
                Storage volume back ends are spawned as children to `cinder-
                volume`, and they are keyed from a unique queue. They are named
                `cinder- volume.HOST.BACKEND`. For example, `cinder-
                volume.ubuntu.lvmdriver`. When a volume is created, the scheduler
                chooses an appropriate back end to handle the request based on the
                volume type. Default is `None`. For information about how to
                use volume types to create multiple- storage back ends, see
                [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs to be associated
                with the new volume.
            snapshot_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            source_volid:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            consistencygroup_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            size:
              type:
                - integer
                - string
                - 'null'
              pattern: ^[0-9]+$
              minimum: 1
              maximum: 2147483647
              description: |-
                The size of the volume, in gibibytes (GiB).
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              description: |-
                The name of the availability zone.
            multiattach:
              oneOf:
                - type: 'null'
                - type:
                    - boolean
                    - string
                  enum:
                    - true
                    - 'True'
                    - 'TRUE'
                    - 'true'
                    - '1'
                    - ON
                    - On
                    - on
                    - YES
                    - Yes
                    - yes
                    - y
                    - t
                    - false
                    - 'False'
                    - 'FALSE'
                    - 'false'
                    - '0'
                    - OFF
                    - Off
                    - off
                    - NO
                    - No
                    - no
                    - n
                    - f
            image_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            imageRef:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The UUID of the image from which you want to
                create the volume. Required to create a bootable volume.

                **New in version 3.46**: Instead of directly consuming a zero-byte
                image that has been created by the Compute service when an instance
                snapshot was requested, the Block Storage service will use the
                `snapshot_id` contained in the `block_device_mapping` image
                property to locate the volume snapshot, and will use that to create
                the volume instead.
            group_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            backup_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the backup.

                **New in version 3.47**
          additionalProperties: true
        OS-SCH-HNT:scheduler_hints:
          type:
            - object
            - 'null'
          description: |-
            The dictionary of data to send to the scheduler.
      additionalProperties: false
      x-openstack:
        min-ver: '3.47'
        max-ver: '3.52'
      required:
        - volume
    VolumesCreate_353:
      type: object
      properties:
        volume:
          type: object
          description: |-
            A `volume` object.
          properties:
            name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
              description: |-
                The volume name.
            description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
              description: |-
                The volume description.
            display_name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            display_description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            volume_type:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The volume type (either name or ID). To create an environment with
                multiple-storage back ends, you must specify a volume type. Block
                Storage volume back ends are spawned as children to `cinder-
                volume`, and they are keyed from a unique queue. They are named
                `cinder- volume.HOST.BACKEND`. For example, `cinder-
                volume.ubuntu.lvmdriver`. When a volume is created, the scheduler
                chooses an appropriate back end to handle the request based on the
                volume type. Default is `None`. For information about how to
                use volume types to create multiple- storage back ends, see
                [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs to be associated
                with the new volume.
            snapshot_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            source_volid:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            consistencygroup_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the consistency group.
            size:
              type:
                - integer
                - string
                - 'null'
              pattern: ^[0-9]+$
              minimum: 1
              maximum: 2147483647
              description: |-
                The size of the volume, in gibibytes (GiB).
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              description: |-
                The name of the availability zone.
            multiattach:
              oneOf:
                - type: 'null'
                - type:
                    - boolean
                    - string
                  enum:
                    - true
                    - 'True'
                    - 'TRUE'
                    - 'true'
                    - '1'
                    - ON
                    - On
                    - on
                    - YES
                    - Yes
                    - yes
                    - y
                    - t
                    - false
                    - 'False'
                    - 'FALSE'
                    - 'false'
                    - '0'
                    - OFF
                    - Off
                    - off
                    - NO
                    - No
                    - no
                    - n
                    - f
            image_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            imageRef:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The UUID of the image from which you want to
                create the volume. Required to create a bootable volume.

                **New in version 3.46**: Instead of directly consuming a zero-byte
                image that has been created by the Compute service when an instance
                snapshot was requested, the Block Storage service will use the
                `snapshot_id` contained in the `block_device_mapping` image
                property to locate the volume snapshot, and will use that to create
                the volume instead.
            group_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            backup_id:
              oneOf:
                - type: 'null'
                - type: string
                  format: uuid
              description: |-
                The UUID of the backup.

                **New in version 3.47**
          additionalProperties: false
        OS-SCH-HNT:scheduler_hints:
          type:
            - object
            - 'null'
          description: |-
            The dictionary of data to send to the scheduler.
      additionalProperties: false
      x-openstack:
        min-ver: '3.53'
      required:
        - volume
    VolumesCreateRequest:
      oneOf:
        - $ref: '#/components/schemas/VolumesCreate_30'
        - $ref: '#/components/schemas/VolumesCreate_313'
        - $ref: '#/components/schemas/VolumesCreate_347'
        - $ref: '#/components/schemas/VolumesCreate_353'
      x-openstack:
        discriminator: microversion
    VolumesCreateResponse:
      type: object
      description: A volume object.
      properties:
        volume:
          type: object
          description: |-
            A `volume` object.
          properties:
            name:
              type:
                - string
                - 'null'
              description: |-
                The volume name.
            description:
              type:
                - string
                - 'null'
              description: |-
                The volume description.
            volume_type:
              type: string
              description: |-
                The associated volume type name for the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                A `metadata` object. Contains one or more
                metadata key and value pairs that are associated with the volume.
            snapshot_id:
              type: string
              format: uuid
              description: |-
                To create a volume from an existing snapshot,
                specify the UUID of the volume snapshot. The volume is created in
                same availability zone and with same size as the snapshot.
            source_volid:
              type: string
              format: uuid
              description: |-
                The UUID of the source volume. The API creates a new volume with the same
                size as the source volume unless a larger size is requested.
            consistencygroup_id:
              type: string
              format: uuid
              description: |-
                The UUID of the consistency group.
            size:
              type: integer
              format: int64
              description: |-
                The size of the volume, in gibibytes (GiB).
            availability_zone:
              type: string
              description: |-
                The name of the availability zone.
            bootable:
              type: string
              description: |-
                Enables or disables the bootable attribute. You
                can boot an instance from a bootable volume.
            multiattach:
              type: boolean
              description: |-
                If true, this volume can attach to more than one
                instance.
            status:
              type: string
              description: |-
                The volume status.
            migration_status:
              type: string
              description: |-
                The volume migration status. Admin only.
            attachments:
              description: |-
                Instance attachment information. If this volume
                is attached to a server instance, the attachments list includes
                the UUID of the attached server, an attachment UUID, the name of
                the attached host, if any, the volume UUID, the device, and the
                device UUID. Otherwise, this list is empty. For example:

                ```
                [
                  {
                    'server_id': '6c8cf6e0-4c8f-442f-9196-9679737feec6',
                    'attachment_id': '3dafcac4-1cb9-4b60-a227-d729baa10cf6',
                    'attached_at': '2019-09-30T19:30:34.000000',
                    'host_name': null,
                    'volume_id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53',
                    'device': '/dev/vda',
                    'id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53'
                  }
                ]

                ```
              type: array
              items:
                type: object
                properties:
                  server_id:
                    type:
                      - string
                      - 'null'
                    format: uuid
                  attachment_id:
                    type: string
                    format: uuid
                  attached_at:
                    type: string
                    format: date-time
                  host_name:
                    type:
                      - string
                      - 'null'
                  volume_id:
                    type: string
                    format: uuid
                  device:
                    type:
                      - string
                      - 'null'
                  id:
                    type: string
                    format: uuid
                    description: |-
                      The UUID of the volume.
                additionalProperties: false
                required:
                  - server_id
                  - attachment_id
                  - host_name
                  - volume_id
                  - device
                  - id
            links:
              description: |-
                The volume links.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            encrypted:
              type: boolean
              description: |-
                If true, this volume is encrypted.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            updated_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was updated.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC. In the previous example, the offset value is `-05:00`.

                If the `updated_at` date and time stamp is not set, its value is
                `null`.
            replication_status:
              type:
                - string
                - 'null'
              description: |-
                The volume replication status.
            id:
              type: string
              format: uuid
              description: The UUID of the volume.
            user_id:
              type: string
              format: uuid
              description: |-
                The UUID of the user.
            volume_type_id:
              type: string
              format: uuid
              description: |-
                The associated volume type ID for the volume.

                **New in version 3.63**
              x-openstack:
                min-ver: '3.63'
            group_id:
              type: string
              format: uuid
              description: |-
                The ID of the group.

                **New in version 3.13**
              x-openstack:
                min-ver: '3.63'
            provider_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The provider ID for the volume. The value is either a string set by the
                driver or `null` if the driver doesn’t use the field or if it hasn’t
                created it yet. Only returned for administrators.

                **New in version 3.21**
              x-openstack:
                min-ver: '3.21'
            service_uuid:
              type: string
              format: uuid
              description: |-
                A unique identifier that’s used to indicate what node the volume-service
                for a particular volume is being serviced by.

                **New in version 3.48**
              x-openstack:
                min-ver: '3.48'
            shared_targets:
              type: boolean
              description: |-
                An indicator whether the host connecting the volume should lock for the
                whole attach/detach process or not. `true` means only is iSCSI initiator
                running on host doesn’t support manual scans, `false` means never use
                locks, and `null` means to always use locks. Look at os-brick’s
                `guard_connection` context manager. Default=True.

                **New in version 3.69**
              x-openstack:
                min-ver: '3.48'
            cluster_name:
              type: string
              description: |-
                The cluster name of volume backend.

                **New in version 3.61**
              x-openstack:
                min-ver: '3.61'
            consumes_quota:
              type: boolean
              description: |-
                Whether this resource consumes quota or not. Resources that not counted
                for quota usage are usually temporary internal resources created to perform
                an operation.

                **New in version 3.65**
              x-openstack:
                min-ver: '3.65'
          required:
            - attachments
            - bootable
            - encrypted
            - id
            - name
            - replication_status
            - size
            - status
            - user_id
          additionalProperties: true
      additionalProperties: false
      required:
        - volume
    VolumesListResponse:
      type: object
      description: A container with list of volume objects.
      properties:
        volumes:
          type: array
          items:
            type: object
            description: A volume object.
            properties:
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The volume name.
              links:
                description: |-
                  The volume links.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume.
            required:
              - id
              - name
          description: |-
            A list of `volume` objects.
    VolumesActionRevertRequest:
      type: object
      description: Empty body for revert action
      properties:
        revert:
          type: 'null'
      x-openstack:
        action-name: revert
    VolumesActionOs-Reset_StatusRequest:
      type: object
      description: Empty body for os-reset_status action
      properties:
        os-reset_status:
          type: 'null'
      x-openstack:
        action-name: os-reset_status
    VolumesActionOs-Force_DeleteRequest:
      type: object
      description: Empty body for os-force_delete action
      properties:
        os-force_delete:
          type: 'null'
      x-openstack:
        action-name: os-force_delete
    VolumesAction_Force_Detach:
      type: object
      properties:
        os-force_detach:
          type: object
          properties:
            connector:
              type:
                - string
                - object
                - 'null'
            attachment_id:
              type:
                - string
                - 'null'
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        action-name: os-force_detach
      required:
        - os-force_detach
    VolumesAction_Migrate_Volume_30:
      type: object
      properties:
        os-migrate_volume:
          type: object
          properties:
            host:
              type: string
              maxLength: 255
            force_host_copy:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            lock_volume:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
          required:
            - host
      additionalProperties: false
      x-openstack:
        min-ver: '3.0'
        max-ver: '3.15'
        action-name: os-migrate_volume
      required:
        - os-migrate_volume
    VolumesAction_Migrate_Volume_316:
      type: object
      properties:
        os-migrate_volume:
          type: object
          properties:
            host:
              type:
                - string
                - 'null'
              maxLength: 255
            force_host_copy:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            lock_volume:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            cluster:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        min-ver: '3.16'
        action-name: os-migrate_volume
      required:
        - os-migrate_volume
    VolumesActionOs-Migrate_VolumeRequest:
      oneOf:
        - $ref: '#/components/schemas/VolumesAction_Migrate_Volume_30'
        - $ref: '#/components/schemas/VolumesAction_Migrate_Volume_316'
      x-openstack:
        discriminator: microversion
        action-name: os-migrate_volume
    VolumesAction_Migrate_Volume_Completion:
      type: object
      properties:
        os-migrate_volume_completion:
          type: object
          properties:
            new_volume:
              type: string
              format: uuid
            error:
              type:
                - string
                - 'null'
                - boolean
          additionalProperties: false
          required:
            - new_volume
      additionalProperties: false
      x-openstack:
        action-name: os-migrate_volume_completion
      required:
        - os-migrate_volume_completion
    VolumesAction_Extend_Volume_Completion:
      type: object
      properties:
        os-extend_volume_completion:
          type: object
          properties:
            error:
              type:
                - string
                - 'null'
                - boolean
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        action-name: os-extend_volume_completion
      required:
        - os-extend_volume_completion
    VolumesActionOs-Extend_Volume_CompletionResponse:
      type: object
      description: Response of the project_id/volumes/id/action:post:os-extend_volume_completion
        action
      x-openstack:
        action-name: os-extend_volume_completion
    VolumesActionOs-UnmanageRequest:
      type: object
      description: Empty body for os-unmanage action
      properties:
        os-unmanage:
          type: 'null'
      x-openstack:
        action-name: os-unmanage
    VolumesAction_Attach:
      type: object
      properties:
        os-attach:
          type: object
          properties:
            instance_uuid:
              type: string
              format: uuid
            mountpoint:
              type: string
              minLength: 1
              maxLength: 255
            host_name:
              type: string
              maxLength: 255
            mode:
              type: string
              enum:
                - rw
                - ro
          additionalProperties: false
          anyOf:
            - required:
                - instance_uuid
            - required:
                - host_name
          required:
            - mountpoint
      additionalProperties: false
      x-openstack:
        action-name: os-attach
      required:
        - os-attach
    VolumesAction_Detach:
      type: object
      properties:
        os-detach:
          type:
            - object
            - 'null'
          properties:
            attachment_id:
              oneOf:
                - type: string
                  format: uuid
                - type: 'null'
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        action-name: os-detach
      required:
        - os-detach
    VolumesActionOs-ReserveRequest:
      type: object
      description: Empty body for os-reserve action
      properties:
        os-reserve:
          type: 'null'
      x-openstack:
        action-name: os-reserve
    VolumesActionOs-UnreserveRequest:
      type: object
      description: Empty body for os-unreserve action
      properties:
        os-unreserve:
          type: 'null'
      x-openstack:
        action-name: os-unreserve
    VolumesActionOs-Begin_DetachingRequest:
      type: object
      description: Empty body for os-begin_detaching action
      properties:
        os-begin_detaching:
          type: 'null'
      x-openstack:
        action-name: os-begin_detaching
    VolumesActionOs-Roll_DetachingRequest:
      type: object
      description: Empty body for os-roll_detaching action
      properties:
        os-roll_detaching:
          type: 'null'
      x-openstack:
        action-name: os-roll_detaching
    VolumesAction_Initialize_Connection:
      type: object
      properties:
        os-initialize_connection:
          type: object
          properties:
            connector:
              type:
                - object
                - string
          additionalProperties: false
          required:
            - connector
      additionalProperties: false
      x-openstack:
        action-name: os-initialize_connection
      required:
        - os-initialize_connection
    VolumesAction_Terminate_Connection:
      type: object
      properties:
        os-terminate_connection:
          type: object
          properties:
            connector:
              type:
                - string
                - object
                - 'null'
          additionalProperties: false
          required:
            - connector
      additionalProperties: false
      x-openstack:
        action-name: os-terminate_connection
      required:
        - os-terminate_connection
    VolumesAction_Volume_Upload_Image_30:
      type: object
      properties:
        os-volume_upload_image:
          type: object
          properties:
            image_name:
              type: string
              minLength: 1
              maxLength: 255
            force:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            disk_format:
              type: string
              enum:
                - raw
                - vmdk
                - vdi
                - qcow2
                - vhd
                - vhdx
                - ploop
            container_format:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
          additionalProperties: false
          required:
            - image_name
      additionalProperties: false
      x-openstack:
        min-ver: '3.0'
        max-ver: '3.0'
        action-name: os-volume_upload_image
      required:
        - os-volume_upload_image
    VolumesAction_Volume_Upload_Image_31:
      type: object
      properties:
        os-volume_upload_image:
          type: object
          properties:
            image_name:
              type: string
              minLength: 1
              maxLength: 255
            force:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            disk_format:
              type: string
              enum:
                - raw
                - vmdk
                - vdi
                - qcow2
                - vhd
                - vhdx
                - ploop
            container_format:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            visibility:
              type: string
              enum:
                - community
                - public
                - private
                - shared
            protected:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
          required:
            - image_name
      additionalProperties: false
      x-openstack:
        min-ver: '3.1'
        action-name: os-volume_upload_image
      required:
        - os-volume_upload_image
    VolumesActionOs-Volume_Upload_ImageRequest:
      oneOf:
        - $ref: '#/components/schemas/VolumesAction_Volume_Upload_Image_30'
        - $ref: '#/components/schemas/VolumesAction_Volume_Upload_Image_31'
      x-openstack:
        discriminator: microversion
        action-name: os-volume_upload_image
    VolumesActionOs-Volume_Upload_ImageResponse:
      type: object
      properties:
        container_format:
          type: string
          description: Container format for the new image. Default is bare.
        disk_format:
          type: string
          description: Disk format for the new image. Default is raw.
        display_description:
          type: string
          description: The volume description.
        id:
          type: string
          format: uuid
          description: The UUID of the volume.
        image_id:
          type: string
          format: uuid
          description: The uuid for the new image.
        image_name:
          type: string
          description: The name for the new image.
        protected:
          type: boolean
          description: Whether the new image is protected. Default=False.
          x-openstack:
            min-ver: '3.1'
        size:
          type: integer
          format: int64
          description: The size of the volume, in gibibytes (GiB).
        status:
          type: integer
          description: The volume status.
        updated_at:
          type: string
          format: date-time
          description: The date and time when the resource was updated.
        visibility:
          type: string
          description: The visibility property of the new image. Default is private.
          x-openstack:
            min-ver: '3.1'
        volume_type:
          type: string
          description: The associated volume type name for the volume.
    VolumesAction_Extend:
      type: object
      properties:
        os-extend:
          type: object
          properties:
            new_size:
              type:
                - integer
                - string
              pattern: ^[0-9]+$
              minimum: 1
              maximum: 2147483647
          additionalProperties: false
          required:
            - new_size
      additionalProperties: false
      x-openstack:
        action-name: os-extend
      required:
        - os-extend
    VolumesAction_Volume_Readonly_Update:
      type: object
      properties:
        os-update_readonly_flag:
          type: object
          properties:
            readonly:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
          required:
            - readonly
      additionalProperties: false
      x-openstack:
        action-name: os-update_readonly_flag
      required:
        - os-update_readonly_flag
    VolumesAction_Retype:
      type: object
      properties:
        os-retype:
          type: object
          properties:
            new_type:
              type: string
            migration_policy:
              type:
                - string
                - 'null'
              enum:
                - on-demand
                - never
          additionalProperties: false
          required:
            - new_type
      additionalProperties: false
      x-openstack:
        action-name: os-retype
      required:
        - os-retype
    VolumesAction_Set_Bootable:
      type: object
      properties:
        os-set_bootable:
          type: object
          properties:
            bootable:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
          required:
            - bootable
      additionalProperties: false
      x-openstack:
        action-name: os-set_bootable
      required:
        - os-set_bootable
    VolumesAction_Reimage_368:
      type: object
      properties:
        os-reimage:
          type: object
          properties:
            image_id:
              type: string
              format: uuid
            reimage_reserved:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
          required:
            - image_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.68'
        action-name: os-reimage
      required:
        - os-reimage
    VolumesActionCreate:
      type: object
      properties:
        os-set_image_metadata:
          type: object
          properties:
            metadata:
              type: object
              additionalProperties: false
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  format: mysql_text
          additionalProperties: false
          required:
            - metadata
      additionalProperties: false
      x-openstack:
        action-name: os-set_image_metadata
      required:
        - os-set_image_metadata
    VolumesActionOs-Set_Image_MetadataResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    VolumesActionOs-Show_Image_MetadataRequest:
      type: object
      description: Empty body for os-show_image_metadata action
      properties:
        os-show_image_metadata:
          type: 'null'
      x-openstack:
        action-name: os-show_image_metadata
    VolumesActionOs-Show_Image_MetadataResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    VolumesActionDelete:
      type: object
      properties:
        os-unset_image_metadata:
          type: object
          properties:
            key:
              type: string
              minLength: 1
              maxLength: 255
          additionalProperties: false
          required:
            - key
      additionalProperties: false
      x-openstack:
        action-name: os-unset_image_metadata
      required:
        - os-unset_image_metadata
    VolumeUpdate_30:
      type: object
      properties:
        volume:
          type: object
          properties:
            name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            display_name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            display_description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            metadata:
              type: object
              additionalProperties: false
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        min-ver: '3.0'
        max-ver: '3.52'
      required:
        - volume
    VolumeUpdate_353:
      type: object
      properties:
        volume:
          type: object
          properties:
            name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            display_name:
              type:
                - string
                - 'null'
              format: name_non_mandatory_remove_white_spaces
            display_description:
              type:
                - string
                - 'null'
              format: description_non_mandatory_remove_white_spaces
            metadata:
              type: object
              additionalProperties: false
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
          additionalProperties: false
          anyOf:
            - required:
                - name
            - required:
                - description
            - required:
                - display_name
            - required:
                - display_description
            - required:
                - metadata
      additionalProperties: false
      x-openstack:
        min-ver: '3.53'
      required:
        - volume
    VolumeUpdateRequest:
      oneOf:
        - $ref: '#/components/schemas/VolumeUpdate_30'
        - $ref: '#/components/schemas/VolumeUpdate_353'
      x-openstack:
        discriminator: microversion
    VolumeUpdateResponse:
      type: object
      description: A volume object.
      properties:
        volume:
          type: object
          description: |-
            A `volume` object.
          properties:
            name:
              type:
                - string
                - 'null'
              description: |-
                The volume name.
            description:
              type:
                - string
                - 'null'
              description: |-
                The volume description.
            volume_type:
              type: string
              description: |-
                The associated volume type name for the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                A `metadata` object. Contains one or more
                metadata key and value pairs that are associated with the volume.
            snapshot_id:
              type: string
              format: uuid
              description: |-
                To create a volume from an existing snapshot,
                specify the UUID of the volume snapshot. The volume is created in
                same availability zone and with same size as the snapshot.
            source_volid:
              type: string
              format: uuid
              description: |-
                The UUID of the source volume. The API creates a new volume with the same
                size as the source volume unless a larger size is requested.
            consistencygroup_id:
              type: string
              format: uuid
              description: |-
                The UUID of the consistency group.
            size:
              type: integer
              format: int64
              description: |-
                The size of the volume, in gibibytes (GiB).
            availability_zone:
              type: string
              description: |-
                The name of the availability zone.
            bootable:
              type: string
              description: |-
                Enables or disables the bootable attribute. You
                can boot an instance from a bootable volume.
            multiattach:
              type: boolean
              description: |-
                If true, this volume can attach to more than one
                instance.
            status:
              type: string
              description: |-
                The volume status.
            migration_status:
              type: string
              description: |-
                The volume migration status. Admin only.
            attachments:
              description: |-
                Instance attachment information. If this volume
                is attached to a server instance, the attachments list includes
                the UUID of the attached server, an attachment UUID, the name of
                the attached host, if any, the volume UUID, the device, and the
                device UUID. Otherwise, this list is empty. For example:

                ```
                [
                  {
                    'server_id': '6c8cf6e0-4c8f-442f-9196-9679737feec6',
                    'attachment_id': '3dafcac4-1cb9-4b60-a227-d729baa10cf6',
                    'attached_at': '2019-09-30T19:30:34.000000',
                    'host_name': null,
                    'volume_id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53',
                    'device': '/dev/vda',
                    'id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53'
                  }
                ]

                ```
              type: array
              items:
                type: object
                properties:
                  server_id:
                    type:
                      - string
                      - 'null'
                    format: uuid
                  attachment_id:
                    type: string
                    format: uuid
                  attached_at:
                    type: string
                    format: date-time
                  host_name:
                    type:
                      - string
                      - 'null'
                  volume_id:
                    type: string
                    format: uuid
                  device:
                    type:
                      - string
                      - 'null'
                  id:
                    type: string
                    format: uuid
                    description: |-
                      The UUID of the volume.
                additionalProperties: false
                required:
                  - server_id
                  - attachment_id
                  - host_name
                  - volume_id
                  - device
                  - id
            links:
              description: |-
                The volume links.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            encrypted:
              type: boolean
              description: |-
                If true, this volume is encrypted.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            updated_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was updated.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC. In the previous example, the offset value is `-05:00`.

                If the `updated_at` date and time stamp is not set, its value is
                `null`.
            replication_status:
              type:
                - string
                - 'null'
              description: |-
                The volume replication status.
            id:
              type: string
              format: uuid
              description: The UUID of the volume.
            user_id:
              type: string
              format: uuid
              description: |-
                The UUID of the user.
            volume_type_id:
              type: string
              format: uuid
              description: |-
                The associated volume type ID for the volume.

                **New in version 3.63**
              x-openstack:
                min-ver: '3.63'
            group_id:
              type: string
              format: uuid
              description: |-
                The ID of the group.

                **New in version 3.13**
              x-openstack:
                min-ver: '3.63'
            provider_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The provider ID for the volume. The value is either a string set by the
                driver or `null` if the driver doesn’t use the field or if it hasn’t
                created it yet. Only returned for administrators.

                **New in version 3.21**
              x-openstack:
                min-ver: '3.21'
            service_uuid:
              type: string
              format: uuid
              description: |-
                A unique identifier that’s used to indicate what node the volume-service
                for a particular volume is being serviced by.

                **New in version 3.48**
              x-openstack:
                min-ver: '3.48'
            shared_targets:
              type: boolean
              description: |-
                An indicator whether the host connecting the volume should lock for the
                whole attach/detach process or not. `true` means only is iSCSI initiator
                running on host doesn’t support manual scans, `false` means never use
                locks, and `null` means to always use locks. Look at os-brick’s
                `guard_connection` context manager. Default=True.

                **New in version 3.69**
              x-openstack:
                min-ver: '3.48'
            cluster_name:
              type: string
              description: |-
                The cluster name of volume backend.

                **New in version 3.61**
              x-openstack:
                min-ver: '3.61'
            consumes_quota:
              type: boolean
              description: |-
                Whether this resource consumes quota or not. Resources that not counted
                for quota usage are usually temporary internal resources created to perform
                an operation.

                **New in version 3.65**
              x-openstack:
                min-ver: '3.65'
          required:
            - attachments
            - bootable
            - encrypted
            - id
            - name
            - replication_status
            - size
            - status
            - user_id
          additionalProperties: true
      additionalProperties: false
      required:
        - volume
    VolumeShowResponse:
      type: object
      description: A volume object.
      properties:
        volume:
          type: object
          description: |-
            A `volume` object.
          properties:
            name:
              type:
                - string
                - 'null'
              description: |-
                The volume name.
            description:
              type:
                - string
                - 'null'
              description: |-
                The volume description.
            volume_type:
              type: string
              description: |-
                The associated volume type name for the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                A `metadata` object. Contains one or more
                metadata key and value pairs that are associated with the volume.
            snapshot_id:
              type: string
              format: uuid
              description: |-
                To create a volume from an existing snapshot,
                specify the UUID of the volume snapshot. The volume is created in
                same availability zone and with same size as the snapshot.
            source_volid:
              type: string
              format: uuid
              description: |-
                The UUID of the source volume. The API creates a new volume with the same
                size as the source volume unless a larger size is requested.
            consistencygroup_id:
              type: string
              format: uuid
              description: |-
                The UUID of the consistency group.
            size:
              type: integer
              format: int64
              description: |-
                The size of the volume, in gibibytes (GiB).
            availability_zone:
              type: string
              description: |-
                The name of the availability zone.
            bootable:
              type: string
              description: |-
                Enables or disables the bootable attribute. You
                can boot an instance from a bootable volume.
            multiattach:
              type: boolean
              description: |-
                If true, this volume can attach to more than one
                instance.
            status:
              type: string
              description: |-
                The volume status.
            migration_status:
              type: string
              description: |-
                The volume migration status. Admin only.
            attachments:
              description: |-
                Instance attachment information. If this volume
                is attached to a server instance, the attachments list includes
                the UUID of the attached server, an attachment UUID, the name of
                the attached host, if any, the volume UUID, the device, and the
                device UUID. Otherwise, this list is empty. For example:

                ```
                [
                  {
                    'server_id': '6c8cf6e0-4c8f-442f-9196-9679737feec6',
                    'attachment_id': '3dafcac4-1cb9-4b60-a227-d729baa10cf6',
                    'attached_at': '2019-09-30T19:30:34.000000',
                    'host_name': null,
                    'volume_id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53',
                    'device': '/dev/vda',
                    'id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53'
                  }
                ]

                ```
              type: array
              items:
                type: object
                properties:
                  server_id:
                    type:
                      - string
                      - 'null'
                    format: uuid
                  attachment_id:
                    type: string
                    format: uuid
                  attached_at:
                    type: string
                    format: date-time
                  host_name:
                    type:
                      - string
                      - 'null'
                  volume_id:
                    type: string
                    format: uuid
                  device:
                    type:
                      - string
                      - 'null'
                  id:
                    type: string
                    format: uuid
                    description: |-
                      The UUID of the volume.
                additionalProperties: false
                required:
                  - server_id
                  - attachment_id
                  - host_name
                  - volume_id
                  - device
                  - id
            links:
              description: |-
                The volume links.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            encrypted:
              type: boolean
              description: |-
                If true, this volume is encrypted.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            updated_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was updated.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC. In the previous example, the offset value is `-05:00`.

                If the `updated_at` date and time stamp is not set, its value is
                `null`.
            replication_status:
              type:
                - string
                - 'null'
              description: |-
                The volume replication status.
            id:
              type: string
              format: uuid
              description: The UUID of the volume.
            user_id:
              type: string
              format: uuid
              description: |-
                The UUID of the user.
            volume_type_id:
              type: string
              format: uuid
              description: |-
                The associated volume type ID for the volume.

                **New in version 3.63**
              x-openstack:
                min-ver: '3.63'
            group_id:
              type: string
              format: uuid
              description: |-
                The ID of the group.

                **New in version 3.13**
              x-openstack:
                min-ver: '3.63'
            provider_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The provider ID for the volume. The value is either a string set by the
                driver or `null` if the driver doesn’t use the field or if it hasn’t
                created it yet. Only returned for administrators.

                **New in version 3.21**
              x-openstack:
                min-ver: '3.21'
            service_uuid:
              type: string
              format: uuid
              description: |-
                A unique identifier that’s used to indicate what node the volume-service
                for a particular volume is being serviced by.

                **New in version 3.48**
              x-openstack:
                min-ver: '3.48'
            shared_targets:
              type: boolean
              description: |-
                An indicator whether the host connecting the volume should lock for the
                whole attach/detach process or not. `true` means only is iSCSI initiator
                running on host doesn’t support manual scans, `false` means never use
                locks, and `null` means to always use locks. Look at os-brick’s
                `guard_connection` context manager. Default=True.

                **New in version 3.69**
              x-openstack:
                min-ver: '3.48'
            cluster_name:
              type: string
              description: |-
                The cluster name of volume backend.

                **New in version 3.61**
              x-openstack:
                min-ver: '3.61'
            consumes_quota:
              type: boolean
              description: |-
                Whether this resource consumes quota or not. Resources that not counted
                for quota usage are usually temporary internal resources created to perform
                an operation.

                **New in version 3.65**
              x-openstack:
                min-ver: '3.65'
          required:
            - attachments
            - bootable
            - encrypted
            - id
            - name
            - replication_status
            - size
            - status
            - user_id
          additionalProperties: true
      additionalProperties: false
      required:
        - volume
    MessagesListResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              request_id:
                type: string
                description: |-
                  The id of the request during which the message was created.
              message_level:
                type: string
                description: |-
                  The level of the message, possible value is
                  only ‘ERROR’ now.
              links:
                type: array
                description: |-
                  Links for the message.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              event_id:
                type: string
                description: |-
                  The id of the event to this message, this id could
                  eventually be translated into `user_message`.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              guaranteed_until:
                type: string
                format: date-time
                description: |-
                  The expire time of the message, this message could be
                  deleted after this time.
              resource_uuid:
                type: string
                format: uuid
                description: |-
                  The UUID of the resource during whose operation the
                  message was created.
              id:
                type: string
                format: uuid
                description: |-
                  The UUID for the message.
              resource_type:
                type: string
                description: |-
                  The resource type corresponding to `resource_uuid`.
              user_message:
                type: string
                description: |-
                  The translated readable message corresponding to `event_id`.
            additionalProperties: false
            required:
              - request_id
              - message_level
              - event_id
              - created_at
              - id
              - user_message
          description: |-
            A collection of user messages.
      additionalProperties: false
      required:
        - messages
    MessageShowResponse:
      type: object
      properties:
        message:
          type: object
          properties:
            request_id:
              type: string
              description: |-
                The id of the request during which the message was created.
            message_level:
              type: string
              description: |-
                The level of the message, possible value is
                only ‘ERROR’ now.
            links:
              type: array
              description: |-
                Links for the message.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            event_id:
              type: string
              description: |-
                The id of the event to this message, this id could
                eventually be translated into `user_message`.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            guaranteed_until:
              type: string
              format: date-time
              description: |-
                The expire time of the message, this message could be
                deleted after this time.
            resource_uuid:
              type: string
              format: uuid
              description: |-
                The UUID of the resource during whose operation the
                message was created.
            id:
              type: string
              format: uuid
              description: |-
                The UUID for the message.
            resource_type:
              type: string
              description: |-
                The resource type corresponding to `resource_uuid`.
            user_message:
              type: string
              description: |-
                The translated readable message corresponding to `event_id`.
          additionalProperties: false
          required:
            - request_id
            - message_level
            - event_id
            - created_at
            - id
            - user_message
      additionalProperties: false
      required:
        - message
    ClustersDetailResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            type: object
            properties:
              num_hosts:
                type: integer
                description: |-
                  The number of hosts in the cluster.
              num_down_hosts:
                type: integer
                description: |-
                  The number of down hosts in the cluster.
              last_heartbeat:
                type: string
                format: date-time
                description: |-
                  The last periodic heartbeat received.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was updated.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC. In the previous example, the offset value is `-05:00`.

                  If the `updated_at` date and time stamp is not set, its value is
                  `null`.
              disabled_reason:
                type:
                  - string
                  - 'null'
                description: |-
                  The reason for disabling a resource.
              frozen:
                type:
                  - boolean
                  - 'null'
                description: |-
                  Whether the cluster is frozen or not.

                  **New in version 3.26**
                x-openstack:
                  min-ver: '3.26'
              active_backend_id:
                type:
                  - string
                  - 'null'
                description: |-
                  The ID of active storage backend. Only in `cinder-volume` service.

                  **New in version 3.26**
                x-openstack:
                  min-ver: '3.26'
              binary:
                type: string
                description: |-
                  The binary name of the services in the cluster.
              name:
                type: string
                description: |-
                  The name of the service cluster.
              replication_status:
                type: string
                description: |-
                  The cluster replication status. Only included in responses if configured.
                  One of: `enabled` or `disabled`.
                enum:
                  - enabled
                  - disabled
              state:
                type: string
                description: |-
                  The state of the cluster. One of `up` or `down`.
                enum:
                  - up
                  - down
              status:
                type: string
                description: |-
                  The status of the cluster. One of `enabled` or `disabled`.
                enum:
                  - enabled
                  - disabled
          description: |-
            A list of cluster objects.
    ClustersListResponse:
      type: object
      properties:
        clusters:
          type: array
          items:
            type: object
            properties:
              binary:
                type: string
                description: |-
                  The binary name of the services in the cluster.
              name:
                type: string
                description: |-
                  The name of the service cluster.
              replication_status:
                type: string
                description: |-
                  The cluster replication status. Only included in responses if configured.
                  One of: `enabled` or `disabled`.
                enum:
                  - enabled
                  - disabled
              state:
                type: string
                description: |-
                  The state of the cluster. One of `up` or `down`.
                enum:
                  - up
                  - down
              status:
                type: string
                description: |-
                  The status of the cluster. One of `enabled` or `disabled`.
                enum:
                  - enabled
                  - disabled
          description: |-
            A list of cluster objects.
    ClusterUpdateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          format: name
          description: The name to identify the service cluster.
        binary:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 255
          description: The binary name of the services in the cluster.
        disabled_reason:
          type:
            - string
            - 'null'
          description: The reason for disabling a resource.
      additionalProperties: false
      required:
        - name
    ClusterUpdateResponse:
      type: object
      properties:
        cluster:
          type: object
          properties:
            num_hosts:
              type: integer
              description: The number of hosts in the cluster.
            num_down_hosts:
              type: integer
              description: The number of down hosts in the cluster.
            last_heartbeat:
              type: string
              format: date-time
              description: The last periodic heartbeat received.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated.
            disabled_reason:
              type:
                - string
                - 'null'
              description: The reason for disabling a resource.
            frozen:
              type:
                - boolean
                - 'null'
              description: Whether the cluster is frozen or not.
              x-openstack:
                min-ver: '3.26'
            active_backend_id:
              type:
                - string
                - 'null'
              description: The ID of active storage backend. Only in cinder-volume
                service.
              x-openstack:
                min-ver: '3.26'
            binary:
              type: string
              description: The binary name of the services in the cluster.
            name:
              type: string
              description: The name of the service cluster.
            replication_status:
              type: string
              description: The cluster replication status. Only included in responses
                if configured.
              enum:
                - enabled
                - disabled
            state:
              type: string
              description: The state of the cluster.
              enum:
                - up
                - down
            status:
              type: string
              description: The status of the cluster.
              enum:
                - enabled
                - disabled
    ClusterShowResponse:
      type: object
      properties:
        cluster:
          type: object
          properties:
            num_hosts:
              type: integer
              description: The number of hosts in the cluster.
            num_down_hosts:
              type: integer
              description: The number of down hosts in the cluster.
            last_heartbeat:
              type: string
              format: date-time
              description: The last periodic heartbeat received.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated.
            disabled_reason:
              type:
                - string
                - 'null'
              description: The reason for disabling a resource.
            frozen:
              type:
                - boolean
                - 'null'
              description: Whether the cluster is frozen or not.
              x-openstack:
                min-ver: '3.26'
            active_backend_id:
              type:
                - string
                - 'null'
              description: The ID of active storage backend. Only in cinder-volume
                service.
              x-openstack:
                min-ver: '3.26'
            binary:
              type: string
              description: The binary name of the services in the cluster.
            name:
              type: string
              description: The name of the service cluster.
            replication_status:
              type: string
              description: The cluster replication status. Only included in responses
                if configured.
              enum:
                - enabled
                - disabled
            state:
              type: string
              description: The state of the cluster.
              enum:
                - up
                - down
            status:
              type: string
              description: The status of the cluster.
              enum:
                - enabled
                - disabled
    Types_Create:
      type: object
      properties:
        volume_type:
          type: object
          description: |-
            A `volume_type` object.
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 255
              format: name
              description: |-
                The name of the volume type.
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The volume type description.
            extra_specs:
              type: object
              description: |-
                A key and value pair that contains additional
                specifications that are associated with the volume type. Examples
                include capabilities, capacity, compression, and so on, depending
                on the storage driver in use.
              additionalProperties: false
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type:
                    - string
                    - 'null'
                  maxLength: 255
            os-volume-type-access:is_public:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Whether the volume type is publicly visible.
                See [valid boolean values](#valid-boolean-values)
          additionalProperties: false
          required:
            - name
      additionalProperties: false
      required:
        - volume_type
    TypesCreateResponse:
      type: object
      properties:
        volume_type:
          type: object
          properties:
            description:
              type: string
              description: |-
                The volume type description.
            extra_specs:
              description: |-
                A key and value pair that contains additional
                specifications that are associated with the volume type. Examples
                include capabilities, capacity, compression, and so on, depending
                on the storage driver in use.
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:.]{1,255}$:
                  type:
                    - string
                    - 'null'
                  minLength: 0
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume type.
            is_public:
              type: boolean
              description: |-
                Whether the volume type is publicly visible.
            name:
              type: string
              description: |-
                The name of the volume type.
            os-volume-type-access:is_public:
              type: boolean
              description: |-
                Whether the volume type is publicly visible.
            qos_specs_id:
              type: string
              format: uuid
              description: |-
                The QoS specifications ID.
          required:
            - id
            - name
          description: |-
            A `volume_type` object.
    TypesListResponse:
      type: object
      properties:
        volume_types:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: |-
                  The volume type description.
              extra_specs:
                description: |-
                  A key and value pair that contains additional
                  specifications that are associated with the volume type. Examples
                  include capabilities, capacity, compression, and so on, depending
                  on the storage driver in use.
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:.]{1,255}$:
                    type:
                      - string
                      - 'null'
                    minLength: 0
                    maxLength: 255
                additionalProperties: false
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume type.
              is_public:
                type: boolean
                description: |-
                  Whether the volume type is publicly visible.
              name:
                type: string
                description: |-
                  The name of the volume type.
              os-volume-type-access:is_public:
                type: boolean
                description: |-
                  Whether the volume type is publicly visible.
              qos_specs_id:
                type: string
                format: uuid
                description: |-
                  The QoS specifications ID.
            required:
              - id
              - name
            description: |-
              A `volume_type` object.
          description: |-
            The list of volume types. In an environment with
            multiple-storage back ends, the scheduler determines where to send
            the volume based on the volume type. For information about how to
            use volume types to create multiple- storage back ends, see
            [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).
    TypesAction_Create:
      type: object
      properties:
        volume_type:
          type: object
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 255
              format: name
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            extra_specs:
              type: object
              additionalProperties: false
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type:
                    - string
                    - 'null'
                  maxLength: 255
            os-volume-type-access:is_public:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
          required:
            - name
      additionalProperties: false
      x-openstack:
        action-name: create
      required:
        - volume_type
    TypesActionCreateResponse:
      type: object
      description: Response of the project_id/types/id/action:post:create action
      x-openstack:
        action-name: create
    TypesAction_Update:
      type: object
      properties:
        volume_type:
          type: object
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            is_public:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        action-name: update
      required:
        - volume_type
    TypesActionUpdateResponse:
      type: object
      description: Response of the project_id/types/id/action:post:update action
      x-openstack:
        action-name: update
    TypesActionDeleteRequest:
      type: object
      description: Empty body for delete action
      properties:
        delete:
          type: 'null'
      x-openstack:
        action-name: delete
    TypesActionDeleteResponse:
      type: object
      description: Response of the project_id/types/id/action:post:delete action
      x-openstack:
        action-name: delete
    TypesAction_Addprojectaccess:
      type: object
      properties:
        addProjectAccess:
          type: object
          properties:
            project:
              type: string
              minLength: 1
              maxLength: 255
          additionalProperties: false
          required:
            - project
      additionalProperties: false
      x-openstack:
        action-name: addProjectAccess
      required:
        - addProjectAccess
    TypesAction_Removeprojectaccess:
      type: object
      properties:
        removeProjectAccess:
          type: object
          properties:
            project:
              type: string
              minLength: 1
              maxLength: 255
          additionalProperties: false
          required:
            - project
      additionalProperties: false
      x-openstack:
        action-name: removeProjectAccess
      required:
        - removeProjectAccess
    Type_Update:
      type: object
      properties:
        volume_type:
          type: object
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            is_public:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
      additionalProperties: false
      required:
        - volume_type
    TypeUpdateResponse:
      type: object
      properties:
        volume_type:
          type: object
          properties:
            description:
              type: string
              description: |-
                The volume type description.
            extra_specs:
              description: |-
                A key and value pair that contains additional
                specifications that are associated with the volume type. Examples
                include capabilities, capacity, compression, and so on, depending
                on the storage driver in use.
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:.]{1,255}$:
                  type:
                    - string
                    - 'null'
                  minLength: 0
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume type.
            is_public:
              type: boolean
              description: |-
                Whether the volume type is publicly visible.
            name:
              type: string
              description: |-
                The name of the volume type.
            os-volume-type-access:is_public:
              type: boolean
              description: |-
                Whether the volume type is publicly visible.
            qos_specs_id:
              type: string
              format: uuid
              description: |-
                The QoS specifications ID.
          required:
            - id
            - name
          description: |-
            A `volume_type` object.
    TypeShowResponse:
      type: object
      properties:
        volume_type:
          type: object
          properties:
            description:
              type: string
              description: |-
                The volume type description.
            extra_specs:
              description: |-
                A key and value pair that contains additional
                specifications that are associated with the volume type. Examples
                include capabilities, capacity, compression, and so on, depending
                on the storage driver in use.
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:.]{1,255}$:
                  type:
                    - string
                    - 'null'
                  minLength: 0
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume type.
            is_public:
              type: boolean
              description: |-
                Whether the volume type is publicly visible.
            name:
              type: string
              description: |-
                The name of the volume type.
            os-volume-type-access:is_public:
              type: boolean
              description: |-
                Whether the volume type is publicly visible.
            qos_specs_id:
              type: string
              format: uuid
              description: |-
                The QoS specifications ID.
          required:
            - id
            - name
          description: |-
            A `volume_type` object.
    Group_TypesCreate:
      type: object
      properties:
        group_type:
          type: object
          description: |-
            A `group_type` object.
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 255
              format: name
              description: |-
                The group type name.
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The group type description.
            is_public:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Whether the group type is publicly visible.
                See [valid boolean values](#valid-boolean-values)
            group_specs:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                A set of key and value pairs that contains the
                specifications for a group type.
          additionalProperties: false
          required:
            - name
      additionalProperties: false
      x-openstack:
        min-ver: '3.11'
      required:
        - group_type
    Group_TypesCreateResponse:
      type: object
      properties:
        group_type:
          type: object
          description: |-
            A `group_type` object.
          properties:
            name:
              type:
                - string
                - 'null'
              description: |-
                The group type name.
            id:
              type: string
              format: uuid
              description: |-
                The group type ID.
            description:
              type: string
              description: |-
                The group type description.
            is_public:
              type: boolean
              description: |-
                Whether the group type is publicly visible.
            group_specs:
              type: object
              description: |-
                A set of key and value pairs that contains the
                specifications for a group type.
              patternProperties:
                ^.+$:
                  type: string
          required:
            - id
            - name
    Group_TypesListResponse:
      type: object
      description: A container with list of group type objects.
      properties:
        group_types:
          type: array
          items:
            type: object
            description: A volume group type object.
            properties:
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The group type name.
              id:
                type: string
                format: uuid
                description: |-
                  The group type ID.
              description:
                type: string
                description: |-
                  The group type description.
              is_public:
                type: boolean
                description: |-
                  Whether the group type is publicly visible.
              group_specs:
                type: object
                description: |-
                  A set of key and value pairs that contains the
                  specifications for a group type.
                patternProperties:
                  ^.+$:
                    type: string
            required:
              - id
              - name
          description: |-
            The list of group types.
    Group_TypeUpdate:
      type: object
      properties:
        group_type:
          type: object
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            is_public:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        min-ver: '3.11'
      required:
        - group_type
    Group_TypeUpdateResponse:
      type: object
      properties:
        group_type:
          type: object
          description: |-
            A `group_type` object.
          properties:
            name:
              type:
                - string
                - 'null'
              description: |-
                The group type name.
            id:
              type: string
              format: uuid
              description: |-
                The group type ID.
            description:
              type: string
              description: |-
                The group type description.
            is_public:
              type: boolean
              description: |-
                Whether the group type is publicly visible.
            group_specs:
              type: object
              description: |-
                A set of key and value pairs that contains the
                specifications for a group type.
              patternProperties:
                ^.+$:
                  type: string
          required:
            - id
            - name
    Group_TypeShowResponse:
      type: object
      properties:
        group_type:
          type: object
          description: |-
            A `group_type` object.
          properties:
            name:
              type:
                - string
                - 'null'
              description: |-
                The group type name.
            id:
              type: string
              format: uuid
              description: |-
                The group type ID.
            description:
              type: string
              description: |-
                The group type description.
            is_public:
              type: boolean
              description: |-
                Whether the group type is publicly visible.
            group_specs:
              type: object
              description: |-
                A set of key and value pairs that contains the
                specifications for a group type.
              patternProperties:
                ^.+$:
                  type: string
          required:
            - id
            - name
    Group_TypesGroup_SpecsCreate:
      type: object
      properties:
        group_specs:
          type: object
          description: |-
            A set of key and value pairs that contains the
            specifications for a group type.
          additionalProperties: false
          patternProperties:
            ^[a-zA-Z0-9-_:.]{1,255}$:
              type:
                - string
                - 'null'
              maxLength: 255
      additionalProperties: false
      x-openstack:
        min-ver: '3.11'
      required:
        - group_specs
    Group_TypesGroup_SpecsCreateResponse:
      type: object
      properties:
        group_specs:
          type: object
          description: |-
            A set of key and value pairs that contains the
            specifications for a group type.
          patternProperties:
            ^.+$:
              type: string
    Group_TypesGroup_SpecsListResponse:
      type: object
      properties:
        group_specs:
          type: object
          description: |-
            A set of key and value pairs that contains the
            specifications for a group type.
          patternProperties:
            ^.+$:
              type: string
    Group_TypesGroup_SpecUpdate:
      type: object
      additionalProperties: false
      x-openstack:
        min-ver: '3.11'
      patternProperties:
        ^[a-zA-Z0-9-_:.]{1,255}$:
          type:
            - string
            - 'null'
          maxLength: 255
      minProperties: 1
      maxProperties: 1
    Group_TypesGroup_SpecUpdateResponse:
      type: object
      description: A set of key and value pairs that contains the specifications for
        a group type.
      patternProperties:
        ^.+$:
          type: string
    Group_TypesGroup_SpecShowResponse:
      type: object
      description: A set of key and value pairs that contains the specifications for
        a group type.
      patternProperties:
        ^.+$:
          type: string
    GroupsDetailResponse:
      type: object
      description: A container with list of group objects.
      properties:
        groups:
          type: array
          items:
            type: object
            description: A group object.
            properties:
              status:
                type: string
                description: |-
                  The status of the generic group.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The group description.
              availability_zone:
                type: string
                description: |-
                  The name of the availability zone.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              group_type:
                type: string
                format: uuid
                description: |-
                  The group type ID.
              group_snapshot_id:
                type:
                  - string
                  - 'null'
                description: |-
                  The ID of the group snapshot.
              source_group_id:
                type:
                  - string
                  - 'null'
                description: |-
                  The UUID of the source group.
              volume_types:
                type: array
                items:
                  type: string
                  format: uuid
                  description: The ID of the volume type.
                description: |-
                  The list of volume types. In an environment with
                  multiple-storage back ends, the scheduler determines where to send
                  the volume based on the volume type. For information about how to
                  use volume types to create multiple- storage back ends, see
                  [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).
              volumes:
                type: array
                items:
                  type: string
                  format: uuid
                  description: ''
                description: |-
                  A list of `volume` ids, available only when `list_volume` set true.

                  **New in version 3.25**
                x-openstack:
                  min-ver: '3.25'
              replication_status:
                type:
                  - string
                  - 'null'
                description: |-
                  The group replication status.

                  **New in version 3.38**
                x-openstack:
                  min-ver: '3.38'
              project_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The UUID of the volume group project.

                  **New in version 3.58**
                x-openstack:
                  min-ver: '3.58'
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The name of the object.
              id:
                type: string
                format: uuid
                description: The UUID of the group.
            required:
              - id
              - name
          description: |-
            A collections of groups.
    GroupsCreate:
      type: object
      properties:
        group:
          type: object
          description: |-
            A group object.
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The group description.
            group_type:
              type: string
              format: group_type
              description: |-
                The group type ID.
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The group name.
            volume_types:
              type: array
              minItems: 1
              items:
                type: string
                maxLength: 255
              uniqueItems: true
              description: |-
                The list of volume types. In an environment with
                multiple-storage back ends, the scheduler determines where to send
                the volume based on the volume type. For information about how to
                use volume types to create multiple- storage back ends, see
                [Configure multiple-storage back ends](https://docs.openstack.org/cinder/latest/admin/blockstorage-multi-backend.html).
            availability_zone:
              type:
                - string
                - 'null'
              format: availability_zone
              description: |-
                The name of the availability zone.
          additionalProperties: false
          required:
            - group_type
            - volume_types
      additionalProperties: false
      x-openstack:
        min-ver: '3.13'
      required:
        - group
    GroupsCreateResponse:
      type: object
      properties:
        group:
          type: object
          description: A group object.
          properties:
            status:
              type: string
              description: The status of the generic group.
            description:
              type:
                - string
                - 'null'
              description: The group description.
            availability_zone:
              type: string
              description: The name of the availability zone.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            group_type:
              type: string
              format: uuid
              description: The group type ID.
            group_snapshot_id:
              type:
                - string
                - 'null'
              description: The ID of the group snapshot.
            source_group_id:
              type:
                - string
                - 'null'
              description: The UUID of the source group.
            volume_types:
              type: array
              items:
                type: string
                format: uuid
                description: The ID of the volume type.
              description: 'The list of volume types. In an environment with multiple-storage
                back ends, the scheduler determines where to send the volume based
                on the volume type. '
            volumes:
              type: array
              items:
                type: string
                format: uuid
                description: ''
              description: A list of volume ids, available only when list_volume set
                true.
              x-openstack:
                min-ver: '3.25'
            replication_status:
              type:
                - string
                - 'null'
              description: The group replication status.
              x-openstack:
                min-ver: '3.38'
            project_id:
              type:
                - string
                - 'null'
              format: uuid
              description: The UUID of the volume group project.
              x-openstack:
                min-ver: '3.58'
            name:
              type:
                - string
                - 'null'
              description: |-
                The group name.
            id:
              type: string
              format: uuid
              description: The UUID of the group.
          required:
            - id
            - name
    GroupsListResponse:
      type: object
      description: A container with list of group objects.
      properties:
        groups:
          type: array
          items:
            type: object
            description: A volume group object.
            properties:
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The group name.
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the object.
          description: |-
            A collections of groups.
    GroupsActionReset_Status:
      type: object
      properties:
        reset_status:
          type: object
          properties:
            status:
              type: string
              format: group_status
          additionalProperties: false
          required:
            - status
      additionalProperties: false
      x-openstack:
        min-ver: '3.20'
        action-name: reset_status
      required:
        - reset_status
    GroupsActionDelete_Group:
      type: object
      properties:
        delete:
          type: object
          properties:
            delete-volumes:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        min-ver: '3.13'
        action-name: delete
      required:
        - delete
    GroupsActionCreate_From_Src:
      type: object
      properties:
        create-from-src:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            source_group_id:
              type: string
              format: uuid
            group_snapshot_id:
              type: string
              format: uuid
          additionalProperties: false
          oneOf:
            - required:
                - group_snapshot_id
            - required:
                - source_group_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.14'
        action-name: create-from-src
      required:
        - create-from-src
    GroupsActionCreate-From-SrcResponse:
      type: object
      description: Response of the project_id/groups/id/action:post:create-from-src
        action
      x-openstack:
        action-name: create-from-src
    GroupsActionEnable_Replication:
      type: object
      properties:
        enable_replication:
          type: object
      additionalProperties: false
      x-openstack:
        min-ver: '3.38'
        action-name: enable_replication
      required:
        - enable_replication
    GroupsActionDisable_Replication:
      type: object
      properties:
        disable_replication:
          type: object
      additionalProperties: false
      x-openstack:
        min-ver: '3.38'
        action-name: disable_replication
      required:
        - disable_replication
    GroupsActionFailover_Replication:
      type: object
      properties:
        failover_replication:
          type: object
          properties:
            allow_attached_volume:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            secondary_backend_id:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        min-ver: '3.38'
        action-name: failover_replication
      required:
        - failover_replication
    GroupsActionList_Replication_Targets:
      type: object
      properties:
        list_replication_targets:
          type: object
      additionalProperties: false
      x-openstack:
        min-ver: '3.38'
        action-name: list_replication_targets
      required:
        - list_replication_targets
    GroupsActionList_Replication_TargetsResponse:
      type: object
      properties:
        backend_id:
          type: string
          format: uuid
          description: ID of failover target backend.
        unique_key:
          type:
            - string
            - 'null'
          description: Vendor specific key-values. Only returned if administrator.
      additionalProperties: false
      required:
        - backend_id
    GroupUpdate:
      type: object
      properties:
        group:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            add_volumes:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            remove_volumes:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
          additionalProperties: false
          anyOf:
            - required:
                - name
            - required:
                - description
            - required:
                - add_volumes
            - required:
                - remove_volumes
      additionalProperties: false
      x-openstack:
        min-ver: '3.13'
      required:
        - group
    GroupUpdateResponse:
      type: object
      description: Response of the project_id/groups/id:put operation
    GroupShowResponse:
      type: object
      properties:
        group:
          type: object
          description: A group object.
          properties:
            status:
              type: string
              description: The status of the generic group.
            description:
              type:
                - string
                - 'null'
              description: The group description.
            availability_zone:
              type: string
              description: The name of the availability zone.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            group_type:
              type: string
              format: uuid
              description: The group type ID.
            group_snapshot_id:
              type:
                - string
                - 'null'
              description: The ID of the group snapshot.
            source_group_id:
              type:
                - string
                - 'null'
              description: The UUID of the source group.
            volume_types:
              type: array
              items:
                type: string
                format: uuid
                description: The ID of the volume type.
              description: 'The list of volume types. In an environment with multiple-storage
                back ends, the scheduler determines where to send the volume based
                on the volume type. '
            volumes:
              type: array
              items:
                type: string
                format: uuid
                description: ''
              description: A list of volume ids, available only when list_volume set
                true.
              x-openstack:
                min-ver: '3.25'
            replication_status:
              type:
                - string
                - 'null'
              description: The group replication status.
              x-openstack:
                min-ver: '3.38'
            project_id:
              type:
                - string
                - 'null'
              format: uuid
              description: The UUID of the volume group project.
              x-openstack:
                min-ver: '3.58'
            name:
              type:
                - string
                - 'null'
              description: |-
                The group name.
            id:
              type: string
              format: uuid
              description: The UUID of the group.
          required:
            - id
            - name
    Group_SnapshotsDetailResponse:
      type: object
      description: A container with list of group snapshot objects.
      properties:
        group_snapshots:
          type: array
          items:
            type: object
            description: A group snapshot object.
            properties:
              status:
                type: string
                description: |-
                  The `status` of the generic group snapshot.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The group snapshot description.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              group_type:
                type: string
                format: uuid
                description: The group type ID.
              group_id:
                type: string
                format: uuid
                description: |-
                  The ID of the group.
              group_type_id:
                type: string
                format: uuid
                description: |-
                  The group type ID.
              project_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The UUID of the volume group snapshot project.

                  **New in version 3.58**
                x-openstack:
                  min-ver: '3.58'
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The group snapshot name.
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the group snapshot.
            required:
              - id
              - name
              - status
          description: |-
            A collection of group snapshots.
    Group_SnapshotsCreate:
      type: object
      properties:
        group_snapshot:
          type: object
          description: |-
            The group snapshot.
          properties:
            group_id:
              type: string
              format: uuid
              description: |-
                The ID of the group.
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The group snapshot name.
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The group snapshot description.
          additionalProperties: false
          required:
            - group_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.14'
      required:
        - group_snapshot
    Group_SnapshotsCreateResponse:
      type: object
      properties:
        group_snapshot:
          type: object
          description: |-
            The group snapshot.
          properties:
            status:
              type: string
              description: The status of the generic group snapshot.
            description:
              type:
                - string
                - 'null'
              description: The group snapshot description.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            group_type:
              type: string
              format: uuid
              description: The group type ID.
            group_id:
              type: string
              format: uuid
              description: The ID of the group.
            group_type_id:
              type: string
              format: uuid
              description: |-
                The group type ID.
            project_id:
              type:
                - string
                - 'null'
              format: uuid
              description: The UUID of the volume group project.
              x-openstack:
                min-ver: '3.58'
            name:
              type:
                - string
                - 'null'
              description: |-
                The group snapshot name.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the group snapshot.
          required:
            - id
            - name
            - status
    Group_SnapshotsListResponse:
      type: object
      description: A container with list of group snapshot objects.
      properties:
        group_snapshots:
          type: array
          items:
            type: object
            description: A volume group snapshot object.
            properties:
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The group snapshot name.
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the group snapshot.
          description: |-
            A collection of group snapshots.
    Group_SnapshotsActionReset_Status:
      type: object
      properties:
        reset_status:
          type: object
          properties:
            status:
              type: string
              format: group_snapshot_status
          additionalProperties: false
          required:
            - status
      additionalProperties: false
      x-openstack:
        min-ver: '3.19'
        action-name: reset_status
      required:
        - reset_status
    Group_SnapshotsActionReset_StatusResponse:
      type: object
      description: Response of the project_id/group_snapshots/id/action:post:reset_status
        action
      x-openstack:
        action-name: reset_status
    Group_SnapshotShowResponse:
      type: object
      properties:
        group_snapshot:
          type: object
          description: |-
            The group snapshot.
          properties:
            status:
              type: string
              description: The status of the generic group snapshot.
            description:
              type:
                - string
                - 'null'
              description: The group snapshot description.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            group_type:
              type: string
              format: uuid
              description: The group type ID.
            group_id:
              type: string
              format: uuid
              description: The ID of the group.
            group_type_id:
              type: string
              format: uuid
              description: |-
                The group type ID.
            project_id:
              type:
                - string
                - 'null'
              format: uuid
              description: The UUID of the volume group project.
              x-openstack:
                min-ver: '3.58'
            name:
              type:
                - string
                - 'null'
              description: |-
                The group snapshot name.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the group snapshot.
          required:
            - id
            - name
            - status
    SnapshotsDetailResponse:
      type: object
      description: A container with list of snapshot objects.
      properties:
        snapshots:
          type: array
          items:
            type: object
            properties:
              os-extended-snapshot-attributes:progress:
                type: string
                description: |-
                  A percentage value for the build progress.
              os-extended-snapshot-attributes:project_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the owning project.
              group_snapshot_id:
                type: string
                format: uuid
                description: |-
                  The ID of the group snapshot.

                  **New in version 3.14**
                x-openstack:
                  min-ver: '3.14'
              consumes_quota:
                type:
                  - boolean
                  - 'null'
                description: |-
                  Whether this resource consumes quota or not. Resources that not counted
                  for quota usage are usually temporary internal resources created to perform
                  an operation.

                  **New in version 3.65**
                x-openstack:
                  min-ver: '3.65'
              status:
                type: string
                enum:
                  - creating
                  - available
                  - backing-up
                  - deleting
                  - error
                  - deleted
                  - unmanaging
                  - restoring
                  - error_deleting
                description: |-
                  The status for the snapshot.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  A description for the snapshot.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              updated_at:
                type:
                  - string
                  - 'null'
                format: date-time
                description: |-
                  The date and time when the resource was updated.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC. In the previous example, the offset value is `-05:00`.

                  If the `updated_at` date and time stamp is not set, its value is
                  `null`.
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The name of the object.
              volume_id:
                type: string
                format: uuid
                description: |-
                  If the snapshot was created from a volume, the
                  volume ID.
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: |-
                  One or more metadata key and value pairs for the
                  snapshot, if any.
              id:
                type: string
                format: uuid
                description: |-
                  The snapshot UUID.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
              count:
                type:
                  - integer
                  - 'null'
                description: |-
                  The total count of requested resource before pagination is applied.

                  **New in version 3.45**
                x-openstack:
                  min-ver: '3.45'
            required:
              - created_at
              - id
              - name
              - size
              - status
              - updated_at
          description: A list of snapshot objects.
      additionalProperties: false
      required:
        - snapshots
    SnapshotsCreate:
      type: object
      properties:
        snapshot:
          type: object
          description: |-
            A `snapshot` object.
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The name of the snapshot.
            display_name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The name of the snapshot.
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                A description for the snapshot. Default is
                `None`.
            volume_id:
              oneOf:
                - type: string
                  format: uuid
                - type: 'null'
              description: |-
                The UUID of the volume.
            force:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Indicates whether to snapshot, even if the volume
                is attached. Default is `false`.
                See [valid boolean values](#valid-boolean-values)
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs for the
                snapshot.
          additionalProperties: false
          required:
            - volume_id
      additionalProperties: false
      required:
        - snapshot
    SnapshotsCreateResponse:
      type: object
      description: A snapshot object.
      properties:
        snapshot:
          type: object
          properties:
            os-extended-snapshot-attributes:progress:
              type: string
              description: A percentage value for the build progress.
            os-extended-snapshot-attributes:project_id:
              type: string
              format: uuid
              description: The UUID of the owning project.
            group_snapshot_id:
              type: string
              format: uuid
              description: |-
                The ID of the group snapshot.

                **New in version 3.14**
              x-openstack:
                min-ver: '3.14'
            consumes_quota:
              type:
                - boolean
                - 'null'
              description: |-
                Whether this resource consumes quota or not. Resources that not counted
                for quota usage are usually temporary internal resources created to perform
                an operation.

                **New in version 3.65**
              x-openstack:
                min-ver: '3.65'
            status:
              type: string
              enum:
                - creating
                - available
                - backing-up
                - deleting
                - error
                - deleted
                - unmanaging
                - restoring
                - error_deleting
              description: |-
                The status for the snapshot.
            description:
              type:
                - string
                - 'null'
              description: |-
                A description for the snapshot.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            updated_at:
              type:
                - string
                - 'null'
              format: date-time
              description: |-
                The date and time when the resource was updated.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC. In the previous example, the offset value is `-05:00`.

                If the `updated_at` date and time stamp is not set, its value is
                `null`.
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the snapshot. Default is `None`.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs for the
                snapshot.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            size:
              type: integer
              format: int64
              description: |-
                The size of the volume, in gibibytes (GiB).
            count:
              type:
                - integer
                - 'null'
              description: The total count of requested resource before pagination
                is applied.
              x-openstack:
                min-ver: '3.45'
          required:
            - created_at
            - id
            - name
            - size
            - status
            - updated_at
          description: |-
            A `snapshot` object.
      additionalProperties: false
      required:
        - snapshot
    SnapshotsListResponse:
      type: object
      description: A container with list of snapshot objects.
      properties:
        snapshots:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                enum:
                  - creating
                  - available
                  - backing-up
                  - deleting
                  - error
                  - deleted
                  - unmanaging
                  - restoring
                  - error_deleting
                description: |-
                  The status for the snapshot.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  A description for the snapshot.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              updated_at:
                type:
                  - string
                  - 'null'
                format: date-time
                description: |-
                  The date and time when the resource was updated.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC. In the previous example, the offset value is `-05:00`.

                  If the `updated_at` date and time stamp is not set, its value is
                  `null`.
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The name of the object.
              volume_id:
                type: string
                format: uuid
                description: |-
                  If the snapshot was created from a volume, the
                  volume ID.
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: |-
                  One or more metadata key and value pairs for the
                  snapshot, if any.
              id:
                type: string
                format: uuid
                description: |-
                  The snapshot UUID.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
              count:
                type:
                  - integer
                  - 'null'
                description: |-
                  The total count of requested resource before pagination is applied.

                  **New in version 3.45**
                x-openstack:
                  min-ver: '3.45'
            additionalProperties: false
            required:
              - status
              - description
              - created_at
              - metadata
              - name
              - volume_id
              - id
              - size
              - updated_at
          description: A list of volume objects.
      additionalProperties: false
      required:
        - snapshots
    SnapshotsActionOs-Reset_StatusRequest:
      type: object
      description: Empty body for os-reset_status action
      properties:
        os-reset_status:
          type: 'null'
      x-openstack:
        action-name: os-reset_status
    SnapshotsActionOs-Force_DeleteRequest:
      type: object
      description: Empty body for os-force_delete action
      properties:
        os-force_delete:
          type: 'null'
      x-openstack:
        action-name: os-force_delete
    SnapshotsAction_Update_Snapshot_Status:
      type: object
      properties:
        os-update_snapshot_status:
          type: object
          properties:
            status:
              type: string
            progress:
              format: progress
          additionalProperties: false
          required:
            - status
      additionalProperties: false
      x-openstack:
        action-name: os-update_snapshot_status
      required:
        - os-update_snapshot_status
    SnapshotsActionOs-Update_Snapshot_StatusResponse:
      type: object
      description: Response of the project_id/snapshots/id/action:post:os-update_snapshot_status
        action
      x-openstack:
        action-name: os-update_snapshot_status
    SnapshotsActionOs-UnmanageRequest:
      type: object
      description: Empty body for os-unmanage action
      properties:
        os-unmanage:
          type: 'null'
      x-openstack:
        action-name: os-unmanage
    SnapshotUpdate:
      type: object
      properties:
        snapshot:
          type: object
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            display_name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            display_description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
          additionalProperties: false
          anyOf:
            - required:
                - name
            - required:
                - description
            - required:
                - display_name
            - required:
                - display_description
      additionalProperties: false
      required:
        - snapshot
    SnapshotUpdateResponse:
      type: object
      description: A snapshot object.
      properties:
        snapshot:
          type: object
          properties:
            os-extended-snapshot-attributes:progress:
              type: string
              description: A percentage value for the build progress.
            os-extended-snapshot-attributes:project_id:
              type: string
              format: uuid
              description: The UUID of the owning project.
            group_snapshot_id:
              type: string
              format: uuid
              description: |-
                The ID of the group snapshot.

                **New in version 3.14**
              x-openstack:
                min-ver: '3.14'
            consumes_quota:
              type:
                - boolean
                - 'null'
              description: |-
                Whether this resource consumes quota or not. Resources that not counted
                for quota usage are usually temporary internal resources created to perform
                an operation.

                **New in version 3.65**
              x-openstack:
                min-ver: '3.65'
            status:
              type: string
              enum:
                - creating
                - available
                - backing-up
                - deleting
                - error
                - deleted
                - unmanaging
                - restoring
                - error_deleting
              description: |-
                The status for the snapshot.
            description:
              type:
                - string
                - 'null'
              description: |-
                A description for the snapshot.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            updated_at:
              type:
                - string
                - 'null'
              format: date-time
              description: |-
                The date and time when the resource was updated.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC. In the previous example, the offset value is `-05:00`.

                If the `updated_at` date and time stamp is not set, its value is
                `null`.
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the snapshot. Default is `None`.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs for the
                snapshot.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            size:
              type: integer
              format: int64
              description: |-
                The size of the volume, in gibibytes (GiB).
            count:
              type:
                - integer
                - 'null'
              description: The total count of requested resource before pagination
                is applied.
              x-openstack:
                min-ver: '3.45'
          required:
            - created_at
            - id
            - name
            - size
            - status
            - updated_at
          description: |-
            A `snapshot` object.
      additionalProperties: false
      required:
        - snapshot
    SnapshotShowResponse:
      type: object
      description: A snapshot object.
      properties:
        snapshot:
          type: object
          properties:
            os-extended-snapshot-attributes:progress:
              type: string
              description: A percentage value for the build progress.
            os-extended-snapshot-attributes:project_id:
              type: string
              format: uuid
              description: The UUID of the owning project.
            group_snapshot_id:
              type: string
              format: uuid
              description: |-
                The ID of the group snapshot.

                **New in version 3.14**
              x-openstack:
                min-ver: '3.14'
            consumes_quota:
              type:
                - boolean
                - 'null'
              description: |-
                Whether this resource consumes quota or not. Resources that not counted
                for quota usage are usually temporary internal resources created to perform
                an operation.

                **New in version 3.65**
              x-openstack:
                min-ver: '3.65'
            status:
              type: string
              enum:
                - creating
                - available
                - backing-up
                - deleting
                - error
                - deleted
                - unmanaging
                - restoring
                - error_deleting
              description: |-
                The status for the snapshot.
            description:
              type:
                - string
                - 'null'
              description: |-
                A description for the snapshot.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            updated_at:
              type:
                - string
                - 'null'
              format: date-time
              description: |-
                The date and time when the resource was updated.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC. In the previous example, the offset value is `-05:00`.

                If the `updated_at` date and time stamp is not set, its value is
                `null`.
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the snapshot. Default is `None`.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs for the
                snapshot.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            size:
              type: integer
              format: int64
              description: |-
                The size of the volume, in gibibytes (GiB).
            count:
              type:
                - integer
                - 'null'
              description: The total count of requested resource before pagination
                is applied.
              x-openstack:
                min-ver: '3.45'
          required:
            - created_at
            - id
            - name
            - size
            - status
            - updated_at
          description: |-
            A `snapshot` object.
      additionalProperties: false
      required:
        - snapshot
    LimitsListResponse:
      type: object
      properties:
        limits:
          type: object
          properties:
            rate:
              type: array
              description: |-
                Rate-limit volume copy bandwidth, used to
                mitigate slow down of data access from the instances.
            absolute:
              type: object
              properties:
                totalSnapshotsUsed:
                  type: integer
                  description: |-
                    The total number of snapshots used.
                maxTotalBackups:
                  type: integer
                  description: |-
                    The maximum number of backups.
                maxTotalVolumeGigabytes:
                  type: integer
                  format: int64
                  description: |-
                    The maximum total amount of volumes, in gibibytes
                    (GiB).
                maxTotalSnapshots:
                  type: integer
                  description: |-
                    The maximum number of snapshots.
                maxTotalBackupGigabytes:
                  type: integer
                  format: int64
                  description: |-
                    The maximum total amount of backups, in gibibytes
                    (GiB).
                totalBackupGigabytesUsed:
                  type: integer
                  format: int64
                  description: |-
                    The total number of backups gibibytes (GiB) used.
                maxTotalVolumes:
                  type: integer
                  description: |-
                    The maximum number of volumes.
                totalVolumesUsed:
                  type: integer
                  description: |-
                    The total number of volumes used.
                totalBackupsUsed:
                  type: integer
                  description: |-
                    The total number of backups used.
                totalGigabytesUsed:
                  type: integer
                  format: int64
                  description: |-
                    The total number of gibibytes (GiB) used.
              additionalProperties: false
              required:
                - totalSnapshotsUsed
                - maxTotalBackups
                - maxTotalVolumeGigabytes
                - maxTotalSnapshots
                - maxTotalBackupGigabytes
                - totalBackupGigabytesUsed
                - maxTotalVolumes
                - totalVolumesUsed
                - totalBackupsUsed
                - totalGigabytesUsed
              description: |-
                An `absolute` limits object.
          additionalProperties: false
          required:
            - rate
            - absolute
          description: |-
            A list of `limit` objects.
    SnapshotsMetadataCreateRequest:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    SnapshotsMetadataCreateResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    SnapshotsMetadataListResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    SnapshotsMetadataUpdateRequest:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        meta:
          maxProperties: 1
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: A metadata object. Contains one or more metadata key and value
            pairs that are associated with the resource.
      additionalProperties: false
      required:
        - meta
    SnapshotsMetadataUpdateResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        meta:
          maxProperties: 1
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: A metadata object. Contains one or more metadata key and value
            pairs that are associated with the resource.
      additionalProperties: false
      required:
        - meta
    SnapshotsMetadataShowResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        meta:
          maxProperties: 1
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: A metadata object. Contains one or more metadata key and value
            pairs that are associated with the resource.
      additionalProperties: false
      required:
        - meta
    SnapshotsMetadataUpdate_AllRequest:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    SnapshotsMetadataUpdate_AllResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    VolumesMetadataCreate:
      type: object
      properties:
        metadata:
          type: object
          description: |-
            One or more metadata key and value pairs that are
            associated with the volume.
          additionalProperties: false
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
      additionalProperties: false
      required:
        - metadata
    VolumesMetadataCreateResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    VolumesMetadataListResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    VolumesMetadataUpdate:
      type: object
      properties:
        meta:
          type: object
          additionalProperties: false
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          minProperties: 1
          maxProperties: 1
      additionalProperties: false
      required:
        - meta
    VolumesMetadataUpdateResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        meta:
          maxProperties: 1
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: A metadata object. Contains one or more metadata key and value
            pairs that are associated with the resource.
      additionalProperties: false
      required:
        - meta
    VolumesMetadataShowResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        meta:
          maxProperties: 1
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: A metadata object. Contains one or more metadata key and value
            pairs that are associated with the resource.
      additionalProperties: false
      required:
        - meta
    VolumesMetadataUpdate_All:
      type: object
      properties:
        metadata:
          type: object
          description: |-
            One or more metadata key and value pairs that are
            associated with the volume.
          additionalProperties: false
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
      additionalProperties: false
      required:
        - metadata
    VolumesMetadataUpdate_AllResponse:
      type: object
      description: Metadata key and value pairs. The maximum size for each metadata
        key and value pair is 255 bytes.
      properties:
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            One or more metadata key and value pairs for the
            snapshot, if any.
      additionalProperties: false
      required:
        - metadata
    ConsistencygroupsDetailResponse:
      type: object
      description: Response of the project_id/consistencygroups/detail:get operation
    ConsistencygroupsCreateRequest:
      type: object
      description: Request of the project_id/consistencygroups:post operation
      x-openstack:
        action-name: create
    ConsistencygroupsCreateResponse:
      type: object
      description: Response of the project_id/consistencygroups:post operation
    ConsistencygroupsListResponse:
      type: object
      description: Response of the project_id/consistencygroups:get operation
    ConsistencygroupUpdateRequest:
      type: object
      description: Request of the project_id/consistencygroups/id:put operation
      x-openstack:
        action-name: update
    ConsistencygroupUpdateResponse:
      type: object
      description: Response of the project_id/consistencygroups/id:put operation
    ConsistencygroupShowResponse:
      type: object
      description: Response of the project_id/consistencygroups/id:get operation
    Manageable_VolumesDetailResponse:
      type: object
      properties:
        manageable-volumes:
          type: array
          items:
            type: object
            description: Manageable volume object.
            properties:
              cinder_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the resource in Cinder.
              reason_not_safe:
                type:
                  - string
                  - 'null'
                description: |-
                  The reason why the resource can’t be managed.
              extra_info:
                type:
                  - string
                  - 'null'
                description: |-
                  More information about the resource.
              safe_to_manage:
                type:
                  - boolean
                  - 'null'
                description: |-
                  If the resource can be managed or not.
              reference:
                type: object
                description: |-
                  Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: |-
                      The resource’s name.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
          description: |-
            A list of manageable volumes.
    Manageable_VolumesCreateRequest:
      type: object
      properties:
        volume:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The volume description.
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The volume name.
            bootable:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Enables or disables the bootable attribute. You
                can boot an instance from a bootable volume.
                See [valid boolean values](#valid-boolean-values)
            volume_type:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The volume name.
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The volume name.
            host:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              pattern: ^[a-zA-Z0-9-._#@:/+\[\]]*$
              description: |-
                The OpenStack Block Storage host where the existing resource resides.
                Optional only if cluster field is provided.
            ref:
              type:
                - object
                - string
              description: |-
                A reference to the existing volume. The internal
                structure of this reference depends on the volume driver
                implementation. For details about the required elements in the
                structure, see the documentation for the volume driver.
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs to be associated
                with the new volume.
          required:
            - ref
          additionalProperties: false
          description: |-
            A `volume` object.
      additionalProperties: false
      required:
        - volume
    Manageable_VolumesCreateResponse:
      type: object
      description: A volume object.
      properties:
        name:
          type:
            - string
            - 'null'
          description: |-
            The volume name.
        description:
          type:
            - string
            - 'null'
          description: |-
            The volume description.
        volume_type:
          type: string
          description: |-
            A `volume_type` object.
        metadata:
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type: string
              maxLength: 255
          additionalProperties: false
          description: |-
            A `metadata` object. Contains one or more
            metadata key and value pairs that are associated with the volume.
        snapshot_id:
          type: string
          format: uuid
          description: |-
            To create a volume from an existing snapshot,
            specify the UUID of the volume snapshot. The volume is created in
            same availability zone and with same size as the snapshot.
        source_volid:
          type: string
          format: uuid
          description: |-
            The UUID of the source volume. The API creates a new volume with the same
            size as the source volume unless a larger size is requested.
        consistencygroup_id:
          type: string
          format: uuid
          description: |-
            The UUID of the consistency group.
        size:
          type: integer
          format: int64
          description: |-
            The size of the volume, in gibibytes (GiB).
        availability_zone:
          type: string
          description: |-
            The name of the availability zone.
        bootable:
          type: string
          description: |-
            Enables or disables the bootable attribute. You
            can boot an instance from a bootable volume.
        multiattach:
          type: boolean
          description: |-
            If true, this volume can attach to more than one
            instance.
        status:
          type: string
          description: |-
            The volume status.
        migration_status:
          type: string
          description: |-
            The volume migration status. Admin only.
        attachments:
          description: |-
            Instance attachment information. If this volume
            is attached to a server instance, the attachments list includes
            the UUID of the attached server, an attachment UUID, the name of
            the attached host, if any, the volume UUID, the device, and the
            device UUID. Otherwise, this list is empty. For example:

            ```
            [
              {
                'server_id': '6c8cf6e0-4c8f-442f-9196-9679737feec6',
                'attachment_id': '3dafcac4-1cb9-4b60-a227-d729baa10cf6',
                'attached_at': '2019-09-30T19:30:34.000000',
                'host_name': null,
                'volume_id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53',
                'device': '/dev/vda',
                'id': '5d95d5ee-4bdd-4452-b9d7-d44ca10d3d53'
              }
            ]

            ```
          type: array
          items:
            type: object
            properties:
              server_id:
                type:
                  - string
                  - 'null'
                format: uuid
              attachment_id:
                type: string
                format: uuid
              attached_at:
                type: string
                format: date-time
              host_name:
                type:
                  - string
                  - 'null'
              volume_id:
                type: string
                format: uuid
              device:
                type:
                  - string
                  - 'null'
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume.
            additionalProperties: false
            required:
              - server_id
              - attachment_id
              - host_name
              - volume_id
              - device
              - id
        links:
          description: |-
            The volume links.
          type: array
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
        encrypted:
          type: boolean
          description: |-
            If true, this volume is encrypted.
        created_at:
          type: string
          format: date-time
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
        updated_at:
          type: string
          format: date-time
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
        replication_status:
          type:
            - string
            - 'null'
          description: |-
            The volume replication status.
        id:
          type: string
          format: uuid
          description: The UUID of the volume.
        user_id:
          type: string
          format: uuid
          description: |-
            The UUID of the user.
        volume_type_id:
          type: string
          format: uuid
          description: The associated volume type ID for the volume.
          x-openstack:
            min-ver: '3.63'
        group_id:
          type: string
          format: uuid
          description: The ID of the group.
          x-openstack:
            min-ver: '3.63'
        provider_id:
          type:
            - string
            - 'null'
          format: uuid
          description: The provider ID for the volume. The value is either a string
            set by the driver or null if the driver doesn’t use the field or if it
            hasn’t created it yet. Only returned for administrators.
          x-openstack:
            min-ver: '3.21'
        service_uuid:
          type: string
          format: uuid
          description: A unique identifier that’s used to indicate what node the volume-service
            for a particular volume is being serviced by.
          x-openstack:
            min-ver: '3.48'
        shared_targets:
          type: boolean
          description: An indicator whether the host connecting the volume should
            lock for the whole attach/detach process or not. true means only is iSCSI
            initiator running on host doesn’t support manual scans, false means never
            use locks, and null means to always use locks. Look at os-brick’s guard_connection
            context manager. Default=True.
          x-openstack:
            min-ver: '3.48'
        cluster_name:
          type: string
          description: The cluster name of volume backend.
          x-openstack:
            min-ver: '3.61'
        consumes_quota:
          type: boolean
          description: Whether this resource consumes quota or not. Resources that
            not counted for quota usage are usually temporary internal resources created
            to perform an operation.
          x-openstack:
            min-ver: '3.65'
      additionalProperties: true
      required:
        - attachments
        - bootable
        - encrypted
        - id
        - name
        - replication_status
        - size
        - status
        - user_id
    Manageable_VolumesListResponse:
      type: object
      properties:
        manageable-volumes:
          type: array
          items:
            type: object
            description: Manageable volume object.
            properties:
              safe_to_manage:
                type:
                  - boolean
                  - 'null'
                description: |-
                  If the resource can be managed or not.
              reference:
                type: object
                description: |-
                  Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: |-
                      The resource’s name.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
          description: |-
            A list of manageable volumes.
    Manageable_SnapshotsDetailResponse:
      type: object
      properties:
        manageable-snapshots:
          type: array
          items:
            type: object
            properties:
              cinder_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The UUID of the resource in Cinder.
              reason_not_safe:
                type:
                  - string
                  - 'null'
                description: |-
                  The reason why the resource can’t be managed.
              extra_info:
                type:
                  - string
                  - 'null'
                description: |-
                  More information about the resource.
              source_reference:
                type: object
                properties:
                  source-name:
                    type: string
                    description: |-
                      The resource’s name.
                description: |-
                  The snapshot’s origin volume information.
              safe_to_manage:
                type:
                  - boolean
                  - 'null'
                description: |-
                  If the resource can be managed or not.
              reference:
                type: object
                description: |-
                  Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: The resource’s name.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
          description: |-
            A list of manageable snapshots.
    Manageable_SnapshotsCreateRequest:
      type: object
      properties:
        snapshot:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                A description for the snapshot. Default is
                `None`.
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs for the
                snapshot.
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The name of the snapshot. Default is `None`.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            ref:
              type:
                - object
                - 'null'
                - string
              description: |-
                A reference to the existing volume. The internal
                structure of this reference depends on the volume driver
                implementation. For details about the required elements in the
                structure, see the documentation for the volume driver.
          required:
            - ref
            - volume_id
          additionalProperties: false
          description: |-
            A `snapshot` object.
      additionalProperties: false
      required:
        - snapshot
    Manageable_SnapshotsCreateResponse:
      type: object
      description: A snapshot object.
      properties:
        snapshot:
          type: object
          properties:
            os-extended-snapshot-attributes:progress:
              type: string
              description: A percentage value for the build progress.
            os-extended-snapshot-attributes:project_id:
              type: string
              format: uuid
              description: The UUID of the owning project.
            group_snapshot_id:
              type: string
              format: uuid
              description: |-
                The ID of the group snapshot.

                **New in version 3.14**
              x-openstack:
                min-ver: '3.14'
            consumes_quota:
              type:
                - boolean
                - 'null'
              description: |-
                Whether this resource consumes quota or not. Resources that not counted
                for quota usage are usually temporary internal resources created to perform
                an operation.

                **New in version 3.65**
              x-openstack:
                min-ver: '3.65'
            status:
              type: string
              enum:
                - creating
                - available
                - backing-up
                - deleting
                - error
                - deleted
                - unmanaging
                - restoring
                - error_deleting
              description: |-
                The status for the snapshot.
            description:
              type:
                - string
                - 'null'
              description: |-
                A description for the snapshot.
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            updated_at:
              type:
                - string
                - 'null'
              format: date-time
              description: |-
                The date and time when the resource was updated.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC. In the previous example, the offset value is `-05:00`.

                If the `updated_at` date and time stamp is not set, its value is
                `null`.
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the snapshot. Default is `None`.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                One or more metadata key and value pairs for the
                snapshot.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            size:
              type: integer
              format: int64
              description: |-
                The size of the volume, in gibibytes (GiB).
            count:
              type:
                - integer
                - 'null'
              description: The total count of requested resource before pagination
                is applied.
              x-openstack:
                min-ver: '3.45'
          required:
            - created_at
            - id
            - name
            - size
            - status
            - updated_at
          description: |-
            A `snapshot` object.
      additionalProperties: false
      required:
        - snapshot
    Manageable_SnapshotsListResponse:
      type: object
      properties:
        manageable-snapshots:
          type: array
          items:
            type: object
            properties:
              source_reference:
                type: object
                properties:
                  source-name:
                    type: string
                    description: |-
                      The resource’s name.
                description: |-
                  The snapshot’s origin volume information.
              safe_to_manage:
                type:
                  - boolean
                  - 'null'
                description: |-
                  If the resource can be managed or not.
              reference:
                type: object
                description: |-
                  Some information for the resource.
                properties:
                  source-name:
                    type: string
                    description: The resource’s name.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
            additionalProperties: false
            required:
              - source_reference
              - safe_to_manage
              - reference
              - size
          description: |-
            A list of manageable snapshots.
    BackupsDetailResponse:
      type: object
      description: A container with list of backup objects.
      properties:
        backups:
          type: array
          items:
            type: object
            description: A backup object.
            properties:
              availability_zone:
                type: string
                description: |-
                  The name of the availability zone.
              container:
                type:
                  - string
                  - 'null'
                description: |-
                  The container name or null.
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              data_timestamp:
                type: string
                format: date-time
                description: |-
                  The time when the data on the volume was first saved. If it is
                  a backup from volume, it will be the same as `created_at`
                  for a backup. If it is a backup from a snapshot, it will be the
                  same as `created_at` for the snapshot.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The backup description or null.
              fail_reason:
                type:
                  - string
                  - 'null'
                description: |-
                  If the backup failed, the reason for the failure.
                  Otherwise, null.
              has_dependent_backups:
                type: boolean
                description: |-
                  If this value is `true`, there are other backups depending on
                  this backup.
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the backup.
              is_incremental:
                type: boolean
                description: |-
                  Indicates whether the backup mode is incremental.
                  If this value is `true`, the backup mode is incremental. If this
                  value is `false`, the backup mode is full.
              links:
                description: |-
                  Links for the backup.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              metadata:
                type: object
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type: string
                    maxLength: 255
                additionalProperties: false
                description: |-
                  The backup metadata key value pairs.

                  **New in version 3.43**
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The backup name.
              object_count:
                type: integer
                description: |-
                  The number of objects in the backup.
              size:
                type: integer
                format: int64
                description: |-
                  The size of the volume, in gibibytes (GiB).
              snapshot_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The UUID of the source volume snapshot.
              status:
                type: string
                description: |-
                  The backup status. Refer to Backup statuses table
                  for the possible status value.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was updated.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC. In the previous example, the offset value is `-05:00`.

                  If the `updated_at` date and time stamp is not set, its value is
                  `null`.
              volume_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume.
            required:
              - id
              - name
              - size
              - status
              - volume_id
          description: |-
            A list of `backup` objects.
    BackupsCreate_30:
      type: object
      properties:
        backup:
          type: object
          description: |-
            A `backup` object.
          properties:
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume that you want to back up.
            container:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The container name or null.
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The backup description or null.
            incremental:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Indicates whether to backup, even if the volume
                is attached. Default is `false`.
                See [valid boolean values](#valid-boolean-values)
            force:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Indicates whether to backup, even if the volume
                is attached. Default is `false`.
                See [valid boolean values](#valid-boolean-values)
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The name of the Volume Backup.
            snapshot_id:
              oneOf:
                - type: string
                  format: uuid
                  description: |-
                    The UUID of the volume that you want to back up.
                - type: 'null'
              description: |-
                The UUID of the source snapshot that you want to back up.
          additionalProperties: false
          required:
            - volume_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.0'
        max-ver: '3.42'
      required:
        - backup
    BackupsCreate_343:
      type: object
      properties:
        backup:
          type: object
          description: |-
            A `backup` object.
          properties:
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume that you want to back up.
            container:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The container name or null.
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The backup description or null.
            incremental:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Indicates whether to backup, even if the volume
                is attached. Default is `false`.
                See [valid boolean values](#valid-boolean-values)
            force:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Indicates whether to backup, even if the volume
                is attached. Default is `false`.
                See [valid boolean values](#valid-boolean-values)
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The name of the Volume Backup.
            snapshot_id:
              oneOf:
                - type: string
                  format: uuid
                  description: |-
                    The UUID of the volume that you want to back up.
                - type: 'null'
              description: |-
                The UUID of the source snapshot that you want to back up.
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                The backup metadata key value pairs.

                **New in version 3.43**
          additionalProperties: false
          required:
            - volume_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.43'
        max-ver: '3.50'
      required:
        - backup
    BackupsCreate_351:
      type: object
      properties:
        backup:
          type: object
          description: |-
            A `backup` object.
          properties:
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume that you want to back up.
            container:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The container name or null.
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
              description: |-
                The backup description or null.
            incremental:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Indicates whether to backup, even if the volume
                is attached. Default is `false`.
                See [valid boolean values](#valid-boolean-values)
            force:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Indicates whether to backup, even if the volume
                is attached. Default is `false`.
                See [valid boolean values](#valid-boolean-values)
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The name of the Volume Backup.
            snapshot_id:
              oneOf:
                - type: string
                  format: uuid
                  description: |-
                    The UUID of the volume that you want to back up.
                - type: 'null'
              description: |-
                The UUID of the source snapshot that you want to back up.
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                The backup metadata key value pairs.

                **New in version 3.43**
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              description: |-
                The backup availability zone key value pair.

                **New in version 3.51**
          additionalProperties: false
          required:
            - volume_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.51'
      required:
        - backup
    BackupsCreateRequest:
      oneOf:
        - $ref: '#/components/schemas/BackupsCreate_30'
        - $ref: '#/components/schemas/BackupsCreate_343'
        - $ref: '#/components/schemas/BackupsCreate_351'
      x-openstack:
        discriminator: microversion
    BackupsCreateResponse:
      type: object
      properties:
        backup:
          type: object
          description: |-
            A `backup` object.
          properties:
            availability_zone:
              type: string
              description: The name of the availability zone.
            container:
              type:
                - string
                - 'null'
              description: The container name or null.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created. The date
                and time stamp format is ISO 8601
            data_timestamp:
              type: string
              format: date-time
              description: The time when the data on the volume was first saved. If
                it is a backup from volume, it will be the same as created_at for
                a backup. If it is a backup from a snapshot, it will be the same as
                created_at for the snapshot.
            description:
              type:
                - string
                - 'null'
              description: The backup description or null.
            fail_reason:
              type:
                - string
                - 'null'
              description: If the backup failed, the reason for the failure. Otherwise,
                null.
            has_dependent_backups:
              type: boolean
              description: If this value is true, there are other backups depending
                on this backup.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the backup.
            is_incremental:
              type: boolean
              description: Indicates whether the backup mode is incremental. If this
                value is true, the backup mode is incremental. If this value is false,
                the backup mode is full.
            links:
              description: |-
                Links for the backup.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                The backup metadata key value pairs.

                **New in version 3.43**
            name:
              type:
                - string
                - 'null'
              description: |-
                The backup name.
            object_count:
              type: integer
              description: The number of objects in the backup.
            size:
              type: integer
              format: int64
              description: The size of the volume, in gibibytes (GiB).
            snapshot_id:
              type:
                - string
                - 'null'
              format: uuid
              description: The UUID of the source volume snapshot.
            status:
              type: string
              description: The backup status. Refer to Backup statuses table for the
                possible status value.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated. The date
                and time stamp format is ISO 8601
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume.
          required:
            - id
            - name
            - size
            - status
            - volume_id
    BackupsListResponse:
      type: object
      description: A container with list of backup objects.
      properties:
        backups:
          type: array
          items:
            type: object
            description: A backup object.
            properties:
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The backup name.
              links:
                description: |-
                  Links for the backup.
                type: array
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the backup.
            required:
              - id
              - name
          description: |-
            A list of `backup` objects.
    BackupUpdate_39:
      type: object
      properties:
        backup:
          type:
            - object
            - 'null'
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        min-ver: '3.9'
        max-ver: '3.42'
      required:
        - backup
    BackupUpdate_343:
      type: object
      properties:
        backup:
          type:
            - object
            - 'null'
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
          additionalProperties: false
      additionalProperties: false
      x-openstack:
        min-ver: '3.43'
      required:
        - backup
    BackupUpdateRequest:
      oneOf:
        - $ref: '#/components/schemas/BackupUpdate_39'
        - $ref: '#/components/schemas/BackupUpdate_343'
      x-openstack:
        discriminator: microversion
    BackupUpdateResponse:
      type: object
      properties:
        backup:
          type: object
          description: |-
            A `backup` object.
          properties:
            availability_zone:
              type: string
              description: The name of the availability zone.
            container:
              type:
                - string
                - 'null'
              description: The container name or null.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created. The date
                and time stamp format is ISO 8601
            data_timestamp:
              type: string
              format: date-time
              description: The time when the data on the volume was first saved. If
                it is a backup from volume, it will be the same as created_at for
                a backup. If it is a backup from a snapshot, it will be the same as
                created_at for the snapshot.
            description:
              type:
                - string
                - 'null'
              description: The backup description or null.
            fail_reason:
              type:
                - string
                - 'null'
              description: If the backup failed, the reason for the failure. Otherwise,
                null.
            has_dependent_backups:
              type: boolean
              description: If this value is true, there are other backups depending
                on this backup.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the backup.
            is_incremental:
              type: boolean
              description: Indicates whether the backup mode is incremental. If this
                value is true, the backup mode is incremental. If this value is false,
                the backup mode is full.
            links:
              description: |-
                Links for the backup.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                The backup metadata key value pairs.

                **New in version 3.43**
            name:
              type:
                - string
                - 'null'
              description: |-
                The backup name.
            object_count:
              type: integer
              description: The number of objects in the backup.
            size:
              type: integer
              format: int64
              description: The size of the volume, in gibibytes (GiB).
            snapshot_id:
              type:
                - string
                - 'null'
              format: uuid
              description: The UUID of the source volume snapshot.
            status:
              type: string
              description: The backup status. Refer to Backup statuses table for the
                possible status value.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated. The date
                and time stamp format is ISO 8601
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume.
          required:
            - id
            - name
            - size
            - status
            - volume_id
    BackupShowResponse:
      type: object
      properties:
        backup:
          type: object
          description: |-
            A `backup` object.
          properties:
            availability_zone:
              type: string
              description: The name of the availability zone.
            container:
              type:
                - string
                - 'null'
              description: The container name or null.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created. The date
                and time stamp format is ISO 8601
            data_timestamp:
              type: string
              format: date-time
              description: The time when the data on the volume was first saved. If
                it is a backup from volume, it will be the same as created_at for
                a backup. If it is a backup from a snapshot, it will be the same as
                created_at for the snapshot.
            description:
              type:
                - string
                - 'null'
              description: The backup description or null.
            fail_reason:
              type:
                - string
                - 'null'
              description: If the backup failed, the reason for the failure. Otherwise,
                null.
            has_dependent_backups:
              type: boolean
              description: If this value is true, there are other backups depending
                on this backup.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the backup.
            is_incremental:
              type: boolean
              description: Indicates whether the backup mode is incremental. If this
                value is true, the backup mode is incremental. If this value is false,
                the backup mode is full.
            links:
              description: |-
                Links for the backup.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            metadata:
              type: object
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
              description: |-
                The backup metadata key value pairs.

                **New in version 3.43**
            name:
              type:
                - string
                - 'null'
              description: |-
                The backup name.
            object_count:
              type: integer
              description: The number of objects in the backup.
            size:
              type: integer
              format: int64
              description: The size of the volume, in gibibytes (GiB).
            snapshot_id:
              type:
                - string
                - 'null'
              format: uuid
              description: The UUID of the source volume snapshot.
            status:
              type: string
              description: The backup status. Refer to Backup statuses table for the
                possible status value.
            updated_at:
              type: string
              format: date-time
              description: The date and time when the resource was updated. The date
                and time stamp format is ISO 8601
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume.
          required:
            - id
            - name
            - size
            - status
            - volume_id
    AttachmentsDetailResponse:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: object
            properties:
              attach_mode:
                type: string
                description: |-
                  The attach mode of attachment, read-only (‘ro’) or
                  read-and-write (‘rw’), default is ‘rw’.
                enum:
                  - 'null'
                  - ro
                  - rw
                x-openstack:
                  min-ver: '3.54'
              attached_at:
                type: string
                format: date-time
                description: |-
                  The time when attachment is attached.
              connection_info:
                type: object
                description: The connection info used for server to connect the volume.
              detached_at:
                type: string
                format: date-time
                description: |-
                  The time when attachment is detached.
              id:
                type: string
                format: uuid
                description: |-
                  The ID of attachment.
              instance:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The UUID of the attaching instance.
              volume_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume which the attachment belongs
                  to.
              status:
                type: string
                description: |-
                  The status of the attachment.
                enum:
                  - attached
                  - attaching
                  - detached
                  - reserved
                  - error_attaching
                  - error_detaching
                  - deleted
            required:
              - id
              - instance
              - name
              - status
              - volume_id
    AttachmentsCreate_327:
      type: object
      properties:
        attachment:
          type: object
          description: |-
            An attachment object.
          properties:
            instance_uuid:
              type: string
              format: uuid
              description: |-
                The UUID of the volume which the attachment belongs
                to.
            connector:
              type:
                - object
                - 'null'
              description: |-
                The `connector` object.
            volume_uuid:
              type: string
              format: uuid
              description: |-
                The UUID of the volume which the attachment belongs
                to.
          additionalProperties: false
          required:
            - volume_uuid
      additionalProperties: false
      x-openstack:
        min-ver: '3.27'
        max-ver: '3.53'
      required:
        - attachment
    AttachmentsCreate_354:
      type: object
      properties:
        attachment:
          type: object
          description: |-
            An attachment object.
          properties:
            instance_uuid:
              type: string
              format: uuid
              description: |-
                The UUID of the volume which the attachment belongs
                to.
            connector:
              type:
                - object
                - 'null'
              description: |-
                The `connector` object.
            volume_uuid:
              type: string
              format: uuid
              description: |-
                The UUID of the volume which the attachment belongs
                to.
            mode:
              type: string
              enum:
                - rw
                - ro
              description: |-
                The attach mode of attachment, acceptable values are
                read-only (‘ro’) and read-and-write (‘rw’).

                **New in version 3.54**
          additionalProperties: false
          required:
            - volume_uuid
      additionalProperties: false
      x-openstack:
        min-ver: '3.54'
      required:
        - attachment
    AttachmentsCreateRequest:
      oneOf:
        - $ref: '#/components/schemas/AttachmentsCreate_327'
        - $ref: '#/components/schemas/AttachmentsCreate_354'
      x-openstack:
        discriminator: microversion
    AttachmentsCreateResponse:
      type: object
      properties:
        attachment:
          type: object
          properties:
            attach_mode:
              type: string
              description: |-
                The attach mode of attachment, read-only (‘ro’) or
                read-and-write (‘rw’), default is ‘rw’.
              enum:
                - 'null'
                - ro
                - rw
              x-openstack:
                min-ver: '3.54'
            attached_at:
              type: string
              format: date-time
              description: |-
                The time when attachment is attached.
            connection_info:
              type: object
              description: The connection info used for server to connect the volume.
            detached_at:
              type: string
              format: date-time
              description: |-
                The time when attachment is detached.
            id:
              type: string
              format: uuid
              description: |-
                The ID of attachment.
            instance:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The UUID of the attaching instance.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume which the attachment belongs
                to.
            status:
              type: string
              description: |-
                The status of the attachment.
              enum:
                - attached
                - attaching
                - detached
                - reserved
                - error_attaching
                - error_detaching
                - deleted
          required:
            - id
            - instance
            - name
            - status
            - volume_id
          description: |-
            An attachment object.
    AttachmentsListResponse:
      type: object
      properties:
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of attachment.
              instance:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The UUID of the attaching instance.
              volume_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume which the attachment belongs
                  to.
              status:
                type: string
                description: |-
                  The status of the attachment.
                enum:
                  - attached
                  - attaching
                  - detached
                  - reserved
                  - error_attaching
                  - error_detaching
                  - deleted
    AttachmentsActionOs-CompleteRequest:
      type: object
      description: Empty body for os-complete action
      properties:
        os-complete:
          type: 'null'
      x-openstack:
        action-name: os-complete
    AttachmentUpdate:
      type: object
      properties:
        attachment:
          type: object
          properties:
            connector:
              type: object
              minProperties: 1
          additionalProperties: false
          required:
            - connector
      additionalProperties: false
      x-openstack:
        min-ver: '3.27'
      required:
        - attachment
    AttachmentUpdateResponse:
      type: object
      properties:
        attachment:
          type: object
          properties:
            attach_mode:
              type: string
              description: |-
                The attach mode of attachment, read-only (‘ro’) or
                read-and-write (‘rw’), default is ‘rw’.
              enum:
                - 'null'
                - ro
                - rw
              x-openstack:
                min-ver: '3.54'
            attached_at:
              type: string
              format: date-time
              description: |-
                The time when attachment is attached.
            connection_info:
              type: object
              description: The connection info used for server to connect the volume.
            detached_at:
              type: string
              format: date-time
              description: |-
                The time when attachment is detached.
            id:
              type: string
              format: uuid
              description: |-
                The ID of attachment.
            instance:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The UUID of the attaching instance.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume which the attachment belongs
                to.
            status:
              type: string
              description: |-
                The status of the attachment.
              enum:
                - attached
                - attaching
                - detached
                - reserved
                - error_attaching
                - error_detaching
                - deleted
          required:
            - id
            - instance
            - name
            - status
            - volume_id
          description: |-
            An attachment object.
    AttachmentShowResponse:
      type: object
      properties:
        attachment:
          type: object
          properties:
            attach_mode:
              type: string
              description: |-
                The attach mode of attachment, read-only (‘ro’) or
                read-and-write (‘rw’), default is ‘rw’.
              enum:
                - 'null'
                - ro
                - rw
              x-openstack:
                min-ver: '3.54'
            attached_at:
              type: string
              format: date-time
              description: |-
                The time when attachment is attached.
            connection_info:
              type: object
              description: The connection info used for server to connect the volume.
            detached_at:
              type: string
              format: date-time
              description: |-
                The time when attachment is detached.
            id:
              type: string
              format: uuid
              description: |-
                The ID of attachment.
            instance:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The UUID of the attaching instance.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume which the attachment belongs
                to.
            status:
              type: string
              description: |-
                The status of the attachment.
              enum:
                - attached
                - attaching
                - detached
                - reserved
                - error_attaching
                - error_detaching
                - deleted
          required:
            - id
            - instance
            - name
            - status
            - volume_id
          description: |-
            An attachment object.
    WorkersCleanupCleanup:
      type: object
      properties:
        cluster_name:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9-._#@:/+]*$
        disabled:
          type:
            - boolean
            - string
          enum:
            - true
            - 'True'
            - 'TRUE'
            - 'true'
            - '1'
            - ON
            - On
            - on
            - YES
            - Yes
            - yes
            - y
            - t
            - false
            - 'False'
            - 'FALSE'
            - 'false'
            - '0'
            - OFF
            - Off
            - off
            - NO
            - No
            - no
            - n
            - f
        host:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9-._#@:/+]*$
        is_up:
          type:
            - boolean
            - string
          enum:
            - true
            - 'True'
            - 'TRUE'
            - 'true'
            - '1'
            - ON
            - On
            - on
            - YES
            - Yes
            - yes
            - y
            - t
            - false
            - 'False'
            - 'FALSE'
            - 'false'
            - '0'
            - OFF
            - Off
            - off
            - NO
            - No
            - no
            - n
            - f
        binary:
          enum:
            - cinder-volume
            - cinder-scheduler
        resource_id:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
        resource_type:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 40
        service_id:
          type:
            - integer
            - string
            - 'null'
          pattern: ^[0-9]*$
          maxLength: 11
      additionalProperties: false
      x-openstack:
        min-ver: '3.24'
    WorkersCleanupResponse:
      type: object
      description: Response of the project_id/workers/cleanup:post operation
    Resource_FiltersListResponse:
      type: object
      properties:
        resource_filters:
          type: array
          items:
            type: object
            properties:
              filters:
                type: array
                description: |-
                  The resource filter array.
                items:
                  type: string
              resource:
                type: string
                description: |-
                  Resource which the filters will be applied to.
          description: |-
            A collection of resource filters.
    Volume_TransfersDetailResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              destination_project_id:
                type: string
                format: uuid
                description: |-
                  Records the destination project_id after volume transfer.

                  **New in version 3.57**
                x-openstack:
                  min-ver: '3.57'
              source_project_id:
                type: string
                format: uuid
                description: |-
                  Records the source project_id before volume transfer.

                  **New in version 3.57**
                x-openstack:
                  min-ver: '3.57'
              accepted:
                type: boolean
                description: |-
                  Records if this transfer was accepted or not.

                  **New in version 3.57**
                x-openstack:
                  min-ver: '3.57'
              no_snapshots:
                type: boolean
                description: |-
                  Transfer volume without snapshots. Defaults to False if not specified.

                  **New in version 3.55**
                x-openstack:
                  min-ver: '3.55'
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the object.
              links:
                type: array
                description: |-
                  Links for the message.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The name of the object.
              volume_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume.
          description: |-
            List of transfer details.
    Volume_TransfersCreate_30:
      type: object
      properties:
        transfer:
          type: object
          description: |-
            The volume transfer object.
          properties:
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            name:
              oneOf:
                - type: string
                  format: name_skip_leading_trailing_spaces
                - type: 'null'
              description: |-
                The name of the object.
          additionalProperties: false
          required:
            - volume_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.0'
        max-ver: '3.54'
      required:
        - transfer
    Volume_TransfersCreate_355:
      type: object
      properties:
        transfer:
          type: object
          description: |-
            The volume transfer object.
          properties:
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            name:
              oneOf:
                - type: string
                  format: name_skip_leading_trailing_spaces
                - type: 'null'
              description: |-
                The name of the object.
            no_snapshots:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
              description: |-
                Transfer volume without snapshots. Defaults to False if not specified.

                **New in version 3.55**
          additionalProperties: false
          required:
            - volume_id
      additionalProperties: false
      x-openstack:
        min-ver: '3.55'
      required:
        - transfer
    Volume_TransfersCreateRequest:
      oneOf:
        - $ref: '#/components/schemas/Volume_TransfersCreate_30'
        - $ref: '#/components/schemas/Volume_TransfersCreate_355'
      x-openstack:
        discriminator: microversion
    Volume_TransfersCreateResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            destination_project_id:
              type: string
              format: uuid
              description: |-
                Records the destination project_id after volume transfer.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            source_project_id:
              type: string
              format: uuid
              description: |-
                Records the source project_id before volume transfer.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            accepted:
              type: boolean
              description: |-
                Records if this transfer was accepted or not.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            no_snapshots:
              type: boolean
              description: |-
                Transfer volume without snapshots. Defaults to False if not specified.

                **New in version 3.55**
              x-openstack:
                min-ver: '3.55'
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            links:
              type: array
              description: |-
                Links for the message.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the object.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
    Volume_TransfersListResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the object.
              links:
                type: array
                description: |-
                  Links for the message.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The name of the object.
              volume_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume.
    Volume_TransfersAcceptAccept:
      type: object
      properties:
        accept:
          type: object
          properties:
            auth_key:
              type:
                - string
                - integer
          additionalProperties: false
          required:
            - auth_key
      additionalProperties: false
      required:
        - accept
    Volume_TransfersAcceptResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            destination_project_id:
              type: string
              format: uuid
              description: |-
                Records the destination project_id after volume transfer.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            source_project_id:
              type: string
              format: uuid
              description: |-
                Records the source project_id before volume transfer.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            accepted:
              type: boolean
              description: |-
                Records if this transfer was accepted or not.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            no_snapshots:
              type: boolean
              description: |-
                Transfer volume without snapshots. Defaults to False if not specified.

                **New in version 3.55**
              x-openstack:
                min-ver: '3.55'
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            links:
              type: array
              description: |-
                Links for the message.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the object.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
    Volume_TransferShowResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            destination_project_id:
              type: string
              format: uuid
              description: |-
                Records the destination project_id after volume transfer.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            source_project_id:
              type: string
              format: uuid
              description: |-
                Records the source project_id before volume transfer.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            accepted:
              type: boolean
              description: |-
                Records if this transfer was accepted or not.

                **New in version 3.57**
              x-openstack:
                min-ver: '3.57'
            no_snapshots:
              type: boolean
              description: |-
                Transfer volume without snapshots. Defaults to False if not specified.

                **New in version 3.55**
              x-openstack:
                min-ver: '3.55'
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            links:
              type: array
              description: |-
                Links for the message.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the object.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
    Default_TypeCreate_Update:
      type: object
      properties:
        default_type:
          type: object
          properties:
            volume_type:
              type: string
              minLength: 1
              maxLength: 255
              format: name
          additionalProperties: false
          required:
            - volume_type
      x-openstack:
        min-ver: '3.62'
    Default_TypeCreate_UpdateResponse:
      type: object
      properties:
        default_type:
          type: object
          properties:
            project_id:
              type: string
              format: uuid
              description: The UUID of the project.
            volume_type_id:
              type: string
              format: uuid
              description: The UUID for an existing volume type.
    Default_TypesListResponse:
      type: object
      properties:
        default_types:
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
                format: uuid
                description: The UUID of the project.
              volume_type_id:
                type: string
                format: uuid
                description: The UUID for an existing volume type.
    Default_TypeDetailResponse:
      type: object
      properties:
        default_type:
          type: object
          properties:
            project_id:
              type: string
              format: uuid
              description: The UUID of the project.
            volume_type_id:
              type: string
              format: uuid
              description: The UUID for an existing volume type.
    ExtensionsListResponse:
      type: object
      description: A container with list of extension objects.
      properties:
        extensions:
          type: array
          items:
            type: object
            properties:
              updated:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was updated.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC. In the previous example, the offset value is `-05:00`.

                  If the `updated_at` date and time stamp is not set, its value is
                  `null`.
              description:
                type: string
                description: |-
                  The extension description.
              links:
                type: array
                description: |-
                  Links for the volume transfer.
              alias:
                type: string
                description: |-
                  The alias for the extension. For example,
                  “FOXNSOX”, “os- availability-zone”, “os-extended-quotas”, “os-
                  share-unmanage” or “os-used-limits.”
              name:
                type: string
                description: |-
                  The name of the object.
            additionalProperties: false
            required:
              - updated
              - links
              - alias
              - name
              - description
    Qos_SpecsCreate:
      type: object
      properties:
        qos_specs:
          type: object
          description: |-
            A `qos_specs` object.
          properties:
            name:
              type: string
              format: name_skip_leading_trailing_spaces
              description: |-
                The name of the QoS specification.
          additionalProperties: true
          required:
            - name
      additionalProperties: false
      required:
        - qos_specs
    Qos_SpecsCreateResponse:
      type: object
      properties:
        qos_specs:
          type: object
          properties:
            consumer:
              type: string
              description: |-
                The consumer type.
            specs:
              type: object
              description: |-
                A `specs` object.
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type:
                    - string
                    - 'null'
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: |-
                The generated ID for the QoS specification.
            name:
              type: string
              description: |-
                The name of the QoS specification.
          description: |-
            A `qos_specs` object.
    Qos_SpecsListResponse:
      type: object
      properties:
        qos_specs:
          type: array
          items:
            type: object
            properties:
              consumer:
                type: string
                description: |-
                  The consumer type.
              specs:
                type: object
                description: |-
                  A `specs` object.
                patternProperties:
                  ^[a-zA-Z0-9-_:. /]{1,255}$:
                    type:
                      - string
                      - 'null'
                    maxLength: 255
                additionalProperties: false
              id:
                type: string
                format: uuid
                description: |-
                  The generated ID for the QoS specification.
              name:
                type: string
                description: |-
                  The name of the QoS specification.
            description: |-
              A `qos_specs` object.
          description: |-
            A `qos_specs` object.
    Qos_SpecsAssociationsResponse:
      type: object
      properties:
        qos_associations:
          type: array
          items:
            type: object
            properties:
              association_type:
                type: string
                description: The QoS association type.
              id:
                type: string
                format: uuid
                description: The Qos association ID.
              name:
                type: string
                description: The QoS association name.
            additionalProperties: false
            required:
              - association_type
              - id
              - name
    Qos_SpecsAssociateResponse:
      type: object
      description: Response of the project_id/qos-specs/id/associate:get operation
    Qos_SpecsDisassociateResponse:
      type: object
      description: Response of the project_id/qos-specs/id/disassociate:get operation
    Qos_SpecsDisassociate_AllResponse:
      type: object
      description: Response of the project_id/qos-specs/id/disassociate_all:get operation
    Qos_SpecsDelete_KeysDelete_Keys:
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
          uniqueItems: true
      additionalProperties: false
      required:
        - keys
    Qos_SpecsDelete_KeysResponse:
      type: object
      description: Response of the project_id/qos-specs/id/delete_keys:put operation
    Qos_SpecUpdate:
      type: object
      properties:
        qos_specs:
          type: object
          additionalProperties: false
          patternProperties:
            ^[a-zA-Z0-9-_:. /]{1,255}$:
              type:
                - string
                - 'null'
              maxLength: 255
      additionalProperties: false
      required:
        - qos_specs
    Qos_SpecUpdateResponse:
      type: object
      properties:
        qos_specs:
          type: object
          properties:
            consumer:
              type: string
              description: |-
                The consumer type.
            specs:
              type: object
              description: |-
                A `specs` object.
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type:
                    - string
                    - 'null'
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: |-
                The generated ID for the QoS specification.
            name:
              type: string
              description: |-
                The name of the QoS specification.
          description: |-
            A `qos_specs` object.
    Qos_SpecShowResponse:
      type: object
      properties:
        qos_specs:
          type: object
          properties:
            consumer:
              type: string
              description: |-
                The consumer type.
            specs:
              type: object
              description: |-
                A `specs` object.
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type:
                    - string
                    - 'null'
                  maxLength: 255
              additionalProperties: false
            id:
              type: string
              format: uuid
              description: |-
                The generated ID for the QoS specification.
            name:
              type: string
              description: |-
                The name of the QoS specification.
          description: |-
            A `qos_specs` object.
    Os_Volume_ManageDetailResponse:
      type: object
      description: Response of the project_id/os-volume-manage/detail:get operation
    Os_Volume_ManageCreate_30:
      type: object
      properties:
        volume:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            bootable:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            volume_type:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            host:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              pattern: ^[a-zA-Z0-9-._#@:/+\[\]]*$
            ref:
              type:
                - object
                - string
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
          additionalProperties: false
          required:
            - ref
      additionalProperties: false
      x-openstack:
        min-ver: '3.0'
        max-ver: '3.15'
      required:
        - volume
    Os_Volume_ManageCreate_316:
      type: object
      properties:
        volume:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            availability_zone:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            bootable:
              type:
                - boolean
                - string
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - '1'
                - ON
                - On
                - on
                - YES
                - Yes
                - yes
                - y
                - t
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - '0'
                - OFF
                - Off
                - off
                - NO
                - No
                - no
                - n
                - f
            volume_type:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            host:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              pattern: ^[a-zA-Z0-9-._#@:/+\[\]]*$
            ref:
              type:
                - object
                - string
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
            cluster:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: false
          required:
            - ref
      additionalProperties: false
      x-openstack:
        min-ver: '3.16'
      required:
        - volume
    Os_Volume_ManageCreateRequest:
      oneOf:
        - $ref: '#/components/schemas/Os_Volume_ManageCreate_30'
        - $ref: '#/components/schemas/Os_Volume_ManageCreate_316'
      x-openstack:
        discriminator: microversion
    Os_Volume_ManageCreateResponse:
      type: object
      description: Response of the project_id/os-volume-manage:post operation
    Os_Volume_ManageListResponse:
      type: object
      description: Response of the project_id/os-volume-manage:get operation
    Scheduler_StatsGet_PoolsResponse:
      type: object
      description: Response of the project_id/scheduler-stats/get_pools:get operation
    ConsistencygroupsCreate_From_SrcCreate_From_SrcRequest:
      type: object
      description: Request of the project_id/consistencygroups/create_from_src:post
        operation
      x-openstack:
        action-name: create_from_src
    ConsistencygroupsCreate_From_SrcResponse:
      type: object
      description: Response of the project_id/consistencygroups/create_from_src:post
        operation
    ConsistencygroupsDeleteDeleteRequest:
      type: object
      description: Request of the project_id/consistencygroups/id/delete:post operation
      x-openstack:
        action-name: delete
    ConsistencygroupsDeleteResponse:
      type: object
      description: Response of the project_id/consistencygroups/id/delete:post operation
    ConsistencygroupsUpdateUpdateRequest:
      type: object
      description: Request of the project_id/consistencygroups/id/update:put operation
      x-openstack:
        action-name: update
    ConsistencygroupsUpdateResponse:
      type: object
      description: Response of the project_id/consistencygroups/id/update:put operation
    Os_Quota_Class_SetUpdate:
      type: object
      properties:
        quota_class_set:
          type: object
          format: quota_class_set
          additionalProperties: false
          patternProperties:
            ^[a-zA-Z0-9-_:. ]{1,300}$:
              type:
                - integer
                - string
              pattern: ^[0-9]*$
              minimum: -1
              minLength: 1
              maximum: 2147483647
      additionalProperties: false
      required:
        - quota_class_set
    Os_Quota_Class_SetUpdateResponse:
      type: object
      description: Response of the project_id/os-quota-class-sets/id:put operation
    Os_Quota_Class_SetShowResponse:
      type: object
      description: Response of the project_id/os-quota-class-sets/id:get operation
    CgsnapshotsDetailResponse:
      type: object
      description: Response of the project_id/cgsnapshots/detail:get operation
    CgsnapshotsCreateRequest:
      type: object
      description: Request of the project_id/cgsnapshots:post operation
      x-openstack:
        action-name: create
    CgsnapshotsCreateResponse:
      type: object
      description: Response of the project_id/cgsnapshots:post operation
    CgsnapshotsListResponse:
      type: object
      description: Response of the project_id/cgsnapshots:get operation
    CgsnapshotShowResponse:
      type: object
      description: Response of the project_id/cgsnapshots/id:get operation
    TypesOs_Volume_Type_AccessListResponse:
      type: object
      properties:
        volume_type_access:
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
                format: uuid
                description: The UUID of the project.
              volume_type_id:
                type: string
                format: uuid
                description: The UUID of the volume type.
    Os_Availability_ZoneListResponse:
      type: object
      properties:
        availabilityZoneInfo:
          type: array
          items:
            type: object
            properties:
              zoneName:
                type: string
                description: The availability zone name.
              zoneState:
                type: object
                properties:
                  available:
                    type: boolean
    TypesEncryptionCreate:
      type: object
      properties:
        encryption:
          type: object
          properties:
            key_size:
              type:
                - string
                - integer
                - 'null'
              minimum: 0
              maximum: 2147483647
              format: key_size
            provider:
              type: string
              minLength: 0
              maxLength: 255
            control_location:
              enum:
                - front-end
                - back-end
            cipher:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: true
          required:
            - provider
            - control_location
      additionalProperties: false
      required:
        - encryption
    TypesEncryptionCreateResponse:
      type: object
      properties:
        encryption:
          type: object
          properties:
            cipher:
              type: string
              description: The encryption algorithm or mode. For example, aes-xts-plain64.
                The default value is None.
            control_location:
              type: string
              enum:
                - front-end
                - back-end
              description: Notional service where encryption is performed. Valid values
                are “front-end” or “back-end”. The default value is “front-end”.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            deleted:
              type: boolean
              description: The resource is deleted or not.
            deleted_at:
              type:
                - string
                - 'null'
              format: date-time
              description: The date and time when the resource was deleted.
            encryption_id:
              type: string
              format: uuid
              description: The UUID of the encryption.
            key_size:
              type: integer
              description: Size of encryption key, in bits. This is usually 256. The
                default value is None.
            provider:
              type: string
              description: The class that provides encryption support.
            updated_at:
              type:
                - string
                - 'null'
              format: date-time
              description: The date and time when the resource was updated.
    TypesEncryptionListResponse:
      type: object
      properties:
        cipher:
          type: string
          description: The encryption algorithm or mode. For example, aes-xts-plain64.
            The default value is None.
        control_location:
          type: string
          enum:
            - front-end
            - back-end
          description: Notional service where encryption is performed. Valid values
            are “front-end” or “back-end”. The default value is “front-end”.
        created_at:
          type: string
          format: date-time
          description: The date and time when the resource was created.
        deleted:
          type: boolean
          description: The resource is deleted or not.
        deleted_at:
          type:
            - string
            - 'null'
          format: date-time
          description: The date and time when the resource was deleted.
        encryption_id:
          type: string
          format: uuid
          description: The UUID of the encryption.
        key_size:
          type: integer
          description: Size of encryption key, in bits. This is usually 256. The default
            value is None.
        provider:
          type: string
          description: The class that provides encryption support.
        updated_at:
          type:
            - string
            - 'null'
          format: date-time
          description: The date and time when the resource was updated.
    TypesEncryptionUpdate:
      type: object
      properties:
        encryption:
          type: object
          properties:
            key_size:
              type:
                - string
                - integer
                - 'null'
              minimum: 0
              maximum: 2147483647
              format: key_size
            provider:
              type: string
              minLength: 0
              maxLength: 255
            control_location:
              enum:
                - front-end
                - back-end
            cipher:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: true
          required: []
      additionalProperties: false
      required:
        - encryption
    TypesEncryptionUpdateResponse:
      type: object
      properties:
        encryption:
          type: object
          properties:
            cipher:
              type: string
              description: The encryption algorithm or mode. For example, aes-xts-plain64.
                The default value is None.
            control_location:
              type: string
              enum:
                - front-end
                - back-end
              description: Notional service where encryption is performed. Valid values
                are “front-end” or “back-end”. The default value is “front-end”.
            created_at:
              type: string
              format: date-time
              description: The date and time when the resource was created.
            deleted:
              type: boolean
              description: The resource is deleted or not.
            deleted_at:
              type:
                - string
                - 'null'
              format: date-time
              description: The date and time when the resource was deleted.
            encryption_id:
              type: string
              format: uuid
              description: The UUID of the encryption.
            key_size:
              type: integer
              description: Size of encryption key, in bits. This is usually 256. The
                default value is None.
            provider:
              type: string
              description: The class that provides encryption support.
            updated_at:
              type:
                - string
                - 'null'
              format: date-time
              description: The date and time when the resource was updated.
    TypesEncryptionShowResponse:
      type: object
      properties:
        cipher:
          type: string
          description: The encryption algorithm or mode. For example, aes-xts-plain64.
            The default value is None.
    TypesExtra_SpecsCreate:
      type: object
      properties:
        extra_specs:
          type: object
          additionalProperties: false
          patternProperties:
            ^[a-zA-Z0-9-_:.]{1,255}$:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
      additionalProperties: false
      required:
        - extra_specs
    TypesExtra_SpecsCreateResponse:
      type: object
      properties:
        extra_specs:
          description: A key and value pair that contains additional specifications
            that are associated with the volume type. Examples include capabilities,
            capacity, compression, and so on, depending on the storage driver in use.
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:.]{1,255}$:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: false
    TypesExtra_SpecsListResponse:
      type: object
      properties:
        extra_specs:
          description: A key and value pair that contains additional specifications
            that are associated with the volume type. Examples include capabilities,
            capacity, compression, and so on, depending on the storage driver in use.
          type: object
          patternProperties:
            ^[a-zA-Z0-9-_:.]{1,255}$:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
          additionalProperties: false
    TypesExtra_SpecUpdate:
      type: object
      additionalProperties: false
      patternProperties:
        ^[a-zA-Z0-9-_:.]{1,255}$:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 255
      minProperties: 1
      maxProperties: 1
    TypesExtra_SpecUpdateResponse:
      type: object
      additionalProperties: false
      patternProperties:
        ^[a-zA-Z0-9-_:.]{1,255}$:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 255
    TypesExtra_SpecShowResponse:
      type: object
      additionalProperties: false
      patternProperties:
        ^[a-zA-Z0-9-_:.]{1,255}$:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 255
    BackupsImport_RecordImport_Record:
      type: object
      properties:
        backup-record:
          type: object
          description: |-
            An object recording volume backup metadata, including `backup_service`
            and `backup_url`.
          properties:
            backup_service:
              type: string
              minLength: 0
              maxLength: 255
              description: |-
                The service used to perform the backup.
            backup_url:
              type: string
              minLength: 1
              format: base64
              description: |-
                An identifier string to locate the backup.
          additionalProperties: false
          required:
            - backup_service
            - backup_url
      additionalProperties: false
      required:
        - backup-record
    BackupsImport_RecordResponse:
      type: object
      properties:
        backup:
          type: object
          description: A backup object.
          properties:
            name:
              type:
                - string
                - 'null'
              description: |-
                The backup name.
            links:
              description: |-
                Links for the backup.
              type: array
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the backup.
          required:
            - id
            - name
    BackupsRestoreRestore:
      type: object
      properties:
        restore:
          type:
            - object
            - 'null'
          properties:
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            volume_id:
              oneOf:
                - type: string
                  format: uuid
                - type: 'null'
          additionalProperties: false
      additionalProperties: false
      required:
        - restore
    BackupsRestoreResponse:
      type: object
      properties:
        restore:
          type: object
          properties:
            backup_id:
              type: string
              format: uuid
              description: The UUID for a backup.
            volume_id:
              type: string
              format: uuid
              description: The UUID of the volume.
            backup_name:
              type: string
              description: The volume name.
    BackupsAction_Reset_Status:
      type: object
      properties:
        os-reset_status:
          type: object
          properties:
            status:
              type: string
              format: backup_status
          additionalProperties: false
          required:
            - status
      additionalProperties: false
      x-openstack:
        action-name: os-reset_status
      required:
        - os-reset_status
    BackupsActionOs-Force_DeleteRequest:
      type: object
      description: Empty body for os-force_delete action
      properties:
        os-force_delete:
          type: 'null'
      x-openstack:
        action-name: os-force_delete
    BackupsExport_RecordResponse:
      type: object
      properties:
        backup-record:
          type: object
          description: An object recording volume backup metadata, including backup_service
            and backup_url.
          properties:
            backup_service:
              type: string
              description: The service used to perform the backup.
            backup_url:
              type: string
              format: uri
              description: An identifier string to locate the backup.
    Os_Volume_TransferDetailResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              created_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the resource was created.

                  The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                  ```
                  CCYY-MM-DDThh:mm:ss±hh:mm

                  ```

                  For example, `2015-08-27T09:49:58-05:00`.

                  The `±hh:mm` value, if included, is the time zone as an offset
                  from UTC.
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the object.
              links:
                type: array
                description: |-
                  Links for the message.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The name of the object.
              volume_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume.
          description: |-
            List of transfer details.
    Os_Volume_TransferCreate:
      type: object
      properties:
        transfer:
          type: object
          description: |-
            The volume transfer object.
          properties:
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
            name:
              oneOf:
                - type: string
                  format: name_skip_leading_trailing_spaces
                - type: 'null'
              description: |-
                The name of the object.
          additionalProperties: false
          required:
            - volume_id
      additionalProperties: false
      required:
        - transfer
    Os_Volume_TransferCreateResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            links:
              type: array
              description: |-
                Links for the message.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the object.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
    Os_Volume_TransferListResponse:
      type: object
      properties:
        transfers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the object.
              links:
                type: array
                description: |-
                  Links for the message.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
              name:
                type:
                  - string
                  - 'null'
                description: |-
                  The name of the object.
              volume_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the volume.
    Os_Volume_TransferAcceptAccept:
      type: object
      properties:
        accept:
          type: object
          properties:
            auth_key:
              type:
                - string
                - integer
          additionalProperties: false
          required:
            - auth_key
      additionalProperties: false
      required:
        - accept
    Os_Volume_TransferAcceptResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            links:
              type: array
              description: |-
                Links for the message.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the object.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
    Os_Volume_TransferShowResponse:
      type: object
      properties:
        transfer:
          type: object
          properties:
            created_at:
              type: string
              format: date-time
              description: |-
                The date and time when the resource was created.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss±hh:mm

                ```

                For example, `2015-08-27T09:49:58-05:00`.

                The `±hh:mm` value, if included, is the time zone as an offset
                from UTC.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the object.
            links:
              type: array
              description: |-
                Links for the message.
              items:
                type: object
                description: Links to the resources in question. See [API Guide /
                  Links and 
                  References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                  for more info.
                properties:
                  href:
                    type: string
                    format: uri
                  rel:
                    type: string
            name:
              type:
                - string
                - 'null'
              description: |-
                The name of the object.
            volume_id:
              type: string
              format: uuid
              description: |-
                The UUID of the volume.
    CapabilityShowResponse:
      type: object
      description: Response of the project_id/capabilities/id:get operation
    Os_Snapshot_ManageDetailResponse:
      type: object
      description: Response of the project_id/os-snapshot-manage/detail:get operation
    Os_Snapshot_ManageCreate:
      type: object
      properties:
        snapshot:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
              pattern: ^[\ 
                -\~ -¬®-ͷͺ-Ϳ΄-ΊΌΎ-ΡΣ-ԯԱ-Ֆՙ-֊֍-֏֑-ׇא-תׯ-״؆-؛؝-ۜ۞-܍ܐ-݊ݍ-ޱ߀-ߺ߽-࠭࠰-࠾ࡀ-࡛࡞ࡠ-ࡪࡰ-ࢎ࢘-ࣣ࣡-ঃঅ-ঌএ-ঐও-নপ-রলশ-হ়-ৄে-ৈো-ৎৗড়-ঢ়য়-ৣ০-৾ਁ-ਃਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹ਼ਾ-ੂੇ-ੈੋ-੍ੑਖ਼-ੜਫ਼੦-੶ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ-૿ଁ-ଃଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହ଼-ୄେ-ୈୋ-୍୕-ୗଡ଼-ଢ଼ୟ-ୣ୦-୷ஂ-ஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺ఀ-ఌఎ-ఐఒ-నప-హ఼-ౄె-ైొ-్ౕ-ౖౘ-ౚౝౠ-ౣ౦-౯౷-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕ-ೖೝ-ೞೠ-ೣ೦-೯ೱ-ೳഀ-ഌഎ-ഐഒ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿඁ-ඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴ก-ฺ฿-๛ກ-ຂຄຆ-ຊຌ-ຣລວ-ຽເ-ໄໆ່-໎໐-໙ໜ-ໟༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿚က-ჅჇჍა-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙Ꭰ-Ᏽᏸ-ᏽ᐀-᚜ᚠ-ᛸᜀ-᜕ᜟ-᜶ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲ-ᝳក-៝០-៩៰-៹᠀-᠍᠏-᠙ᠠ-ᡸᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧚᧞-ᨛ᨞-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭᪰-ᫎᬀ-ᭌ᭐-᭾ᮀ-᯳᯼-᰷᰻-᱉ᱍ-ᲈᲐ-ᲺᲽ-᳇᳐-ᳺᴀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾ - ‐-‧ - ⁰-ⁱ⁴-₎ₐ-ₜ₠-⃀⃐-⃰℀-↋←-␦⑀-⑊①-⭳⭶-⮕⮗-ⳳ⳹-ⴥⴧⴭⴰ-ⵧⵯ-⵰⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-⹝⺀-⺙⺛-⻳⼀-⿕⿰-⿻　-〿ぁ-ゖ゙-ヿㄅ-ㄯㄱ-ㆎ㆐-㇣ㇰ-㈞㈠-ꒌ꒐-꓆ꓐ-ꘫꙀ-꛷꜀-ꟊꟐ-ꟑꟓꟕ-ꟙꟲ-꠬꠰-꠹ꡀ-꡷ꢀ-ꣅ꣎-꣙꣠-꥓꥟-ꥼꦀ-꧍ꧏ-꧙꧞-ꧾꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-ꫂꫛ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-꭫ꭰ-꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-זּטּ-לּמּנּ-סּףּ-פּצּ-﯂ﯓ-ﶏﶒ-ﷇ﷏ﷰ-︙︠-﹒﹔-﹦﹨-﹫ﹰ-ﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦￨-￮￼-�]*$
            metadata:
              type:
                - object
                - 'null'
              patternProperties:
                ^[a-zA-Z0-9-_:. /]{1,255}$:
                  type: string
                  maxLength: 255
              additionalProperties: false
            name:
              type:
                - string
                - 'null'
              minLength: 0
              maxLength: 255
            volume_id:
              type: string
              format: uuid
            ref:
              type:
                - object
                - 'null'
                - string
          additionalProperties: false
          required:
            - ref
            - volume_id
      additionalProperties: false
      required:
        - snapshot
    Os_Snapshot_ManageCreateResponse:
      type: object
      description: Response of the project_id/os-snapshot-manage:post operation
    Os_Snapshot_ManageListResponse:
      type: object
      description: Response of the project_id/os-snapshot-manage:get operation
    Os_ServicesListResponse:
      type: object
      description: Response of the project_id/os-services:get operation
    Os_ServiceUpdateRequest:
      type: object
      description: Request of the project_id/os-services/id:put operation
      x-openstack:
        action-name: update
    Os_ServiceUpdateResponse:
      type: object
      description: Response of the project_id/os-services/id:put operation
    VolumesEncryptionListResponse:
      type: object
      description: Response of the project_id/volumes/volume_id/encryption:get operation
    VolumesEncryptionShowResponse:
      type: object
      description: Response of the project_id/volumes/volume_id/encryption/id:get
        operation
    Os_HostsUpdateRequest:
      type: object
      description: Request of the project_id/os-hosts:put operation
      x-openstack:
        action-name: update
    Os_HostsUpdateResponse:
      type: object
      description: Response of the project_id/os-hosts:put operation
    Os_HostsListResponse:
      type: object
      description: A container with list of host objects.
      properties:
        hosts:
          type: array
          items:
            type: object
            description: A host object.
            properties:
              resource:
                type: object
                properties:
                  volume_count:
                    type: string
                    description: Total number of volumes.
                  total_volume_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used.
                  total_snapshot_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used by snapshots.
                  project:
                    type: string
                    description: The Project ID which the host resource belongs to.
                      In the summary resource, the value is (total).
                  host:
                    type: string
                    description: The name of the host that hosts the storage backend,
                      may take the format of host@backend.
                  snapshot_count:
                    type: string
                    description: The total number of snapshots used.
                additionalProperties: false
                required:
                  - volume_count
                  - total_volume_gb
                  - total_snapshot_gb
                  - project
                  - host
                  - snapshot_count
            additionalProperties: false
            required:
              - resource
    Os_HostUpdateRequest:
      type: object
      description: Request of the project_id/os-hosts/id:put operation
      x-openstack:
        action-name: update
    Os_HostUpdateResponse:
      type: object
      description: Response of the project_id/os-hosts/id:put operation
    Os_HostShowResponse:
      type: object
      properties:
        host:
          type: array
          items:
            type: object
            description: A host object.
            properties:
              resource:
                type: object
                properties:
                  volume_count:
                    type: string
                    description: Total number of volumes.
                  total_volume_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used.
                  total_snapshot_gb:
                    type: string
                    description: The total number of gibibytes (GiB) used by snapshots.
                  project:
                    type: string
                    description: The Project ID which the host resource belongs to.
                      In the summary resource, the value is (total).
                  host:
                    type: string
                    description: The name of the host that hosts the storage backend,
                      may take the format of host@backend.
                  snapshot_count:
                    type: string
                    description: The total number of snapshots used.
                additionalProperties: false
                required:
                  - volume_count
                  - total_volume_gb
                  - total_snapshot_gb
                  - project
                  - host
                  - snapshot_count
            additionalProperties: false
            required:
              - resource
    Os_Quota_SetsDefaultsResponse:
      type: object
      description: Response of the project_id/os-quota-sets/id/defaults:get operation
    Os_Quota_SetUpdate:
      type: object
      properties:
        quota_set:
          type: object
          format: quota_set
          minProperties: 1
      additionalProperties: false
      required:
        - quota_set
    Os_Quota_SetUpdateResponse:
      type: object
      description: Response of the project_id/os-quota-sets/id:put operation
    Os_Quota_SetShowResponse:
      type: object
      description: Response of the project_id/os-quota-sets/id:get operation
  parameters:
    all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
        enum:
          - asc
          - desc
    limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
        minimum: 1
    offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
        format: uuid
    with_count:
      in: query
      name: with_count
      description: Whether to show count in API response or not, default is False.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.45'
    created_at:
      in: query
      name: created_at
      description: 'Filters reuslts by a time that resources are created at with time
        comparison operators: gt/gte/eq/neq/lt/lte.'
      schema:
        type: string
        format: date-time
      x-openstack:
        min-ver: '3.60'
    updated_at:
      in: query
      name: updated_at
      description: 'Filters reuslts by a time that resources are updated at with time
        comparison operators: gt/gte/eq/neq/lt/lte.'
      schema:
        type: string
        format: date-time
      x-openstack:
        min-ver: '3.60'
    consumes_quota:
      in: query
      name: consumes_quota
      description: Filters results by consumes_quota field. Resources that don’t use
        quotas are usually temporary internal resources created to perform an operation.
        Default is to not filter by it. Filtering by this option may not be always
        possible in a cloud, see List Resource Filters to determine whether this filter
        is available in your cloud.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.65'
    volumes_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_summary_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/summary API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{id}/action API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_action_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{id}/action API
      schema:
        type: string
      required: true
    volumes_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_edit_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{id}/edit API
      schema:
        type: string
      required: true
    volumes_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{id} API
      schema:
        type: string
      required: true
    messages_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/messages/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    messages_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/messages/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    messages_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/messages/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    messages_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/messages/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    messages_edit_id:
      in: path
      name: id
      description: id parameter for /v3/messages/{id}/edit API
      schema:
        type: string
      required: true
    messages_id:
      in: path
      name: id
      description: id parameter for /v3/messages/{id} API
      schema:
        type: string
      required: true
    clusters_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/clusters/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cluster_frozen:
      in: query
      name: frozen
      description: Whether the cluster is frozen or not.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.26'
    cluster_active_backend_id:
      in: query
      name: active_backend_id
      description: The ID of active storage backend. Only in cinder-volume service.
      schema:
        type: string
      x-openstack:
        min-ver: '3.26'
    cluster_name:
      in: query
      name: name
      description: Filter the cluster list result by cluster name.
      schema:
        type: string
    cluster_binary:
      in: query
      name: binary
      description: Filter the cluster list result by binary name of the clustered
        services. One of cinder-api, cinder-scheduler, cinder-volume or cinder-backup.
      schema:
        type: string
        enum:
          - cinder-api
          - cinder-scheduler
          - cinder-volume
          - cinder-backup
    cluster_is_up:
      in: query
      name: is_up
      description: Filter the cluster list result by state.
      schema:
        type: boolean
    cluster_disabled:
      in: query
      name: disabled
      description: Filter the cluster list result by status.
      schema:
        type: boolean
    cluster_num_hosts:
      in: query
      name: num_hosts
      description: Filter the cluster list result by number of hosts.
      schema:
        type: number
    cluster_num_down_hosts:
      in: query
      name: num_down_hosts
      description: Filter the cluster list result by number of down hosts.
      schema:
        type: number
    cluster_replication_status:
      in: query
      name: replication_stats
      description: Filter the cluster list result by replication status.
      schema:
        type: string
        enum:
          - enabled
          - disabled
    clusters_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/clusters/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    clusters_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/clusters/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    clusters_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/clusters/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    clusters_edit_id:
      in: path
      name: id
      description: id parameter for /v3/clusters/{id}/edit API
      schema:
        type: string
      required: true
    clusters_id:
      in: path
      name: id
      description: id parameter for /v3/clusters/{id} API
      schema:
        type: string
      required: true
    types_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    type_is_public:
      in: query
      name: is_public
      description: Filter the volume type by public visibility.
      schema:
        type: boolean
    type_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    type_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    type_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    type_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    type_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    type_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    types_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{id}/action API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_action_id:
      in: path
      name: id
      description: id parameter for /v3/types/{id}/action API
      schema:
        type: string
      required: true
    types_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_edit_id:
      in: path
      name: id
      description: id parameter for /v3/types/{id}/edit API
      schema:
        type: string
      required: true
    types_id:
      in: path
      name: id
      description: id parameter for /v3/types/{id} API
      schema:
        type: string
      required: true
    group_types_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    group_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    group_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    group_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    group_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    group_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    group_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    group_types_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_types_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{id}/action
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_types_action_id:
      in: path
      name: id
      description: id parameter for /v3/group_types/{id}/action API
      schema:
        type: string
      required: true
    group_types_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_types_edit_id:
      in: path
      name: id
      description: id parameter for /v3/group_types/{id}/edit API
      schema:
        type: string
      required: true
    group_types_id:
      in: path
      name: id
      description: id parameter for /v3/group_types/{id} API
      schema:
        type: string
      required: true
    group_types_group_specs_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{group_type_id}/group_specs/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_types_group_specs_group_type_id:
      in: path
      name: group_type_id
      description: group_type_id parameter for /v3/group_types/{group_type_id}/group_specs/{id}
        API
      schema:
        type: string
      required: true
    group_types_group_specs_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{group_type_id}/group_specs/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_types_group_specs_new_group_type_id:
      in: path
      name: group_type_id
      description: group_type_id parameter for /v3/group_types/{group_type_id}/group_specs/new
        API
      schema:
        type: string
      required: true
    group_types_group_specs_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_types/{group_type_id}/group_specs/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_types_group_specs_edit_group_type_id:
      in: path
      name: group_type_id
      description: group_type_id parameter for /v3/group_types/{group_type_id}/group_specs/{id}/edit
        API
      schema:
        type: string
      required: true
    group_types_group_specs_edit_id:
      in: path
      name: id
      description: id parameter for /v3/group_types/{group_type_id}/group_specs/{id}/edit
        API
      schema:
        type: string
      required: true
    group_types_group_specs_id:
      in: path
      name: id
      description: id parameter for /v3/group_types/{group_type_id}/group_specs/{id}
        API
      schema:
        type: string
      required: true
    groups_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/groups/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    groups_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/groups/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    groups_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/groups/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    groups_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/groups/action API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    groups_action_id:
      in: path
      name: id
      description: id parameter for /v3/groups/{id}/action API
      schema:
        type: string
      required: true
    groups_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/groups/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    groups_edit_id:
      in: path
      name: id
      description: id parameter for /v3/groups/{id}/edit API
      schema:
        type: string
      required: true
    groups_id:
      in: path
      name: id
      description: id parameter for /v3/groups/{id} API
      schema:
        type: string
      required: true
    group_snapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_snapshots/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_snapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_snapshots/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_snapshots_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_snapshots/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_snapshots_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_snapshots/{id}/action
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_snapshots_action_id:
      in: path
      name: id
      description: id parameter for /v3/group_snapshots/{id}/action API
      schema:
        type: string
      required: true
    group_snapshots_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/group_snapshots/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    group_snapshots_edit_id:
      in: path
      name: id
      description: id parameter for /v3/group_snapshots/{id}/edit API
      schema:
        type: string
      required: true
    group_snapshots_id:
      in: path
      name: id
      description: id parameter for /v3/group_snapshots/{id} API
      schema:
        type: string
      required: true
    snapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{id}/action
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_action_id:
      in: path
      name: id
      description: id parameter for /v3/snapshots/{id}/action API
      schema:
        type: string
      required: true
    snapshots_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_edit_id:
      in: path
      name: id
      description: id parameter for /v3/snapshots/{id}/edit API
      schema:
        type: string
      required: true
    snapshots_id:
      in: path
      name: id
      description: id parameter for /v3/snapshots/{id} API
      schema:
        type: string
      required: true
    limits_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/limits/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    limits_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/limits/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    limits_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/limits/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    limits_edit_id:
      in: path
      name: id
      description: id parameter for /v3/limits/{id}/edit API
      schema:
        type: string
      required: true
    limits_id:
      in: path
      name: id
      description: id parameter for /v3/limits/{id} API
      schema:
        type: string
      required: true
    snapshots_metadata_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{snapshot_id}/metadata
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_metadata_snapshot_id:
      in: path
      name: snapshot_id
      description: snapshot_id parameter for /v3/snapshots/{snapshot_id}/metadata
        API
      schema:
        type: string
      required: true
    snapshots_metadata_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{snapshot_id}/metadata/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_metadata_new_snapshot_id:
      in: path
      name: snapshot_id
      description: snapshot_id parameter for /v3/snapshots/{snapshot_id}/metadata/new
        API
      schema:
        type: string
      required: true
    snapshots_metadata_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/snapshots/{snapshot_id}/metadata/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    snapshots_metadata_edit_snapshot_id:
      in: path
      name: snapshot_id
      description: snapshot_id parameter for /v3/snapshots/{snapshot_id}/metadata/{id}/edit
        API
      schema:
        type: string
      required: true
    snapshots_metadata_edit_id:
      in: path
      name: id
      description: id parameter for /v3/snapshots/{snapshot_id}/metadata/{id}/edit
        API
      schema:
        type: string
      required: true
    snapshots_metadata_id:
      in: path
      name: id
      description: id parameter for /v3/snapshots/{snapshot_id}/metadata/{id} API
      schema:
        type: string
      required: true
    volumes_metadata_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/metadata
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_metadata_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/metadata API
      schema:
        type: string
      required: true
    volumes_metadata_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/metadata/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_metadata_new_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/metadata/new API
      schema:
        type: string
      required: true
    volumes_metadata_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/metadata/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_metadata_edit_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/metadata/{id}/edit
        API
      schema:
        type: string
      required: true
    volumes_metadata_edit_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{volume_id}/metadata/{id}/edit API
      schema:
        type: string
      required: true
    volumes_metadata_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{volume_id}/metadata/{id} API
      schema:
        type: string
      required: true
    consistencygroups_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/{id}/action
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_action_id:
      in: path
      name: id
      description: id parameter for /v3/consistencygroups/{id}/action API
      schema:
        type: string
      required: true
    consistencygroups_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_edit_id:
      in: path
      name: id
      description: id parameter for /v3/consistencygroups/{id}/edit API
      schema:
        type: string
      required: true
    consistencygroups_id:
      in: path
      name: id
      description: id parameter for /v3/consistencygroups/{id} API
      schema:
        type: string
      required: true
    manageable_volumes_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_volumes/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_volumes_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_volumes/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_volumes_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_volumes/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_volumes_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_volumes/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_volumes_edit_id:
      in: path
      name: id
      description: id parameter for /v3/manageable_volumes/{id}/edit API
      schema:
        type: string
      required: true
    manageable_volumes_id:
      in: path
      name: id
      description: id parameter for /v3/manageable_volumes/{id} API
      schema:
        type: string
      required: true
    manageable_snapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_snapshots/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_snapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_snapshots/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_snapshots_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_snapshots/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_snapshots_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/manageable_snapshots/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    manageable_snapshots_edit_id:
      in: path
      name: id
      description: id parameter for /v3/manageable_snapshots/{id}/edit API
      schema:
        type: string
      required: true
    manageable_snapshots_id:
      in: path
      name: id
      description: id parameter for /v3/manageable_snapshots/{id} API
      schema:
        type: string
      required: true
    backups_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backup_all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    backup_with_count:
      in: query
      name: with_count
      description: Whether to show count in API response or not, default is False.
      schema:
        type: boolean
      x-openstack:
        min-ver: '3.45'
    backup_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    backup_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    backup_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    backup_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    backup_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    backup_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    backups_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_edit_id:
      in: path
      name: id
      description: id parameter for /v3/backups/{id}/edit API
      schema:
        type: string
      required: true
    backups_id:
      in: path
      name: id
      description: id parameter for /v3/backups/{id} API
      schema:
        type: string
      required: true
    attachments_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_summary_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/summary API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/{id}/action
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_action_id:
      in: path
      name: id
      description: id parameter for /v3/attachments/{id}/action API
      schema:
        type: string
      required: true
    attachments_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/attachments/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    attachments_edit_id:
      in: path
      name: id
      description: id parameter for /v3/attachments/{id}/edit API
      schema:
        type: string
      required: true
    attachments_id:
      in: path
      name: id
      description: id parameter for /v3/attachments/{id} API
      schema:
        type: string
      required: true
    workers_cleanup_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/workers/cleanup API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    workers_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/workers/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    workers_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/workers/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    workers_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/workers/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    workers_edit_id:
      in: path
      name: id
      description: id parameter for /v3/workers/{id}/edit API
      schema:
        type: string
      required: true
    workers_id:
      in: path
      name: id
      description: id parameter for /v3/workers/{id} API
      schema:
        type: string
      required: true
    resource_filters_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/resource_filters/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    resource_filters_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/resource_filters/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    resource_filters_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/resource_filters/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    resource_filters_edit_id:
      in: path
      name: id
      description: id parameter for /v3/resource_filters/{id}/edit API
      schema:
        type: string
      required: true
    resource_filters_id:
      in: path
      name: id
      description: id parameter for /v3/resource_filters/{id} API
      schema:
        type: string
      required: true
    volume_transfers_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volume-transfers/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    transfer_is_public:
      in: query
      name: is_public
      description: Filter the volume transfer by public visibility.
      schema:
        type: boolean
    transfer_all_tenants:
      in: query
      name: all_tenants
      description: Shows details for all project. Admin only.
      schema:
        type: boolean
    transfer_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    transfer_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    transfer_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    transfer_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    transfer_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    transfer_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    volume_transfers_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volume-transfers/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volume_transfers_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volume-transfers/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volume_transfers_accept_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volume-transfers/{id}/accept
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volume_transfers_accept_id:
      in: path
      name: id
      description: id parameter for /v3/volume-transfers/{id}/accept API
      schema:
        type: string
      required: true
    volume_transfers_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volume-transfers/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volume_transfers_edit_id:
      in: path
      name: id
      description: id parameter for /v3/volume-transfers/{id}/edit API
      schema:
        type: string
      required: true
    volume_transfers_id:
      in: path
      name: id
      description: id parameter for /v3/volume-transfers/{id} API
      schema:
        type: string
      required: true
    default_types_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/default-types/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    default_types_id:
      in: path
      name: id
      description: id parameter for /v3/default-types/{id} API
      schema:
        type: string
      required: true
    extensions_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/extensions API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_spec_sort:
      in: query
      name: sort
      description: 'Comma-separated list of sort keys and optional sort directions
        in the form of < key > [: < direction > ]. A valid direction is asc (ascending)
        or desc (descending).'
      schema:
        type: string
    qos_spec_sort_key:
      in: query
      name: sort_key
      description: Sorts by an attribute. A valid value is name, status, container_format,
        disk_format, size, id, created_at, or updated_at. Default is created_at. The
        API uses the natural sorting direction of the sort_key attribute value. Deprecated
        in favour of the combined sort parameter.
      schema:
        type: string
    qos_spec_sort_dir:
      in: query
      name: sort_dir
      description: Sorts by one or more sets of attribute and sort direction combinations.
        If you omit the sort direction in a set, default is desc. Deprecated in favour
        of the combined sort parameter.
      schema:
        type: string
    qos_spec_limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    qos_spec_marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    qos_spec_offset:
      in: query
      name: offset
      description: Used in conjunction with limit to return a slice of items. offset
        is where to start in the list.
      schema:
        type: integer
    qos_specs_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_associations_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/associations
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_associations_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/associations API
      schema:
        type: string
      required: true
    qos_specs_associate_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/associate
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_associate_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/associate API
      schema:
        type: string
      required: true
    qos_specs_disassociate_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/disassociate
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_disassociate_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/disassociate API
      schema:
        type: string
      required: true
    qos_specs_disassociate_all_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/disassociate_all
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_disassociate_all_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/disassociate_all API
      schema:
        type: string
      required: true
    qos_specs_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_edit_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/edit API
      schema:
        type: string
      required: true
    qos_specs_delete_keys_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/qos-specs/{id}/delete_keys
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    qos_specs_delete_keys_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id}/delete_keys API
      schema:
        type: string
      required: true
    qos_specs_id:
      in: path
      name: id
      description: id parameter for /v3/qos-specs/{id} API
      schema:
        type: string
      required: true
    os_volume_manage_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-manage/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_manage_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-manage/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_manage_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-manage/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_manage_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-manage/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_manage_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-volume-manage/{id}/edit API
      schema:
        type: string
      required: true
    os_volume_manage_id:
      in: path
      name: id
      description: id parameter for /v3/os-volume-manage/{id} API
      schema:
        type: string
      required: true
    scheduler_stats_get_pools_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/scheduler-stats/get_pools
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    scheduler_stats_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/scheduler-stats/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    scheduler_stats_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/scheduler-stats/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    scheduler_stats_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/scheduler-stats/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    scheduler_stats_edit_id:
      in: path
      name: id
      description: id parameter for /v3/scheduler-stats/{id}/edit API
      schema:
        type: string
      required: true
    scheduler_stats_id:
      in: path
      name: id
      description: id parameter for /v3/scheduler-stats/{id} API
      schema:
        type: string
      required: true
    consistencygroups_create_from_src_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/create_from_src
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_delete_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/{id}/delete
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_delete_id:
      in: path
      name: id
      description: id parameter for /v3/consistencygroups/{id}/delete API
      schema:
        type: string
      required: true
    consistencygroups_update_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/consistencygroups/{id}/update
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    consistencygroups_update_id:
      in: path
      name: id
      description: id parameter for /v3/consistencygroups/{id}/update API
      schema:
        type: string
      required: true
    os_quota_class_sets_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-class-sets/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_class_sets_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-class-sets/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_class_sets_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-class-sets/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_class_sets_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-class-sets/{id}/edit API
      schema:
        type: string
      required: true
    os_quota_class_sets_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-class-sets/{id} API
      schema:
        type: string
      required: true
    cgsnapshots_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/cgsnapshots/detail API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cgsnapshots_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/cgsnapshots/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cgsnapshots_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/cgsnapshots/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cgsnapshots_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/cgsnapshots/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    cgsnapshots_edit_id:
      in: path
      name: id
      description: id parameter for /v3/cgsnapshots/{id}/edit API
      schema:
        type: string
      required: true
    cgsnapshots_id:
      in: path
      name: id
      description: id parameter for /v3/cgsnapshots/{id} API
      schema:
        type: string
      required: true
    types_os_volume_type_access_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/os-volume-type-access/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_os_volume_type_access_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/os-volume-type-access/{id}
        API
      schema:
        type: string
      required: true
    types_os_volume_type_access_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/os-volume-type-access/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_os_volume_type_access_new_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/os-volume-type-access/new
        API
      schema:
        type: string
      required: true
    types_os_volume_type_access_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/os-volume-type-access/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_os_volume_type_access_edit_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/os-volume-type-access/{id}/edit
        API
      schema:
        type: string
      required: true
    types_os_volume_type_access_edit_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/os-volume-type-access/{id}/edit
        API
      schema:
        type: string
      required: true
    types_os_volume_type_access_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/os-volume-type-access/{id}
        API
      schema:
        type: string
      required: true
    os_availability_zone_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-availability-zone/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_availability_zone_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-availability-zone/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_availability_zone_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-availability-zone/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_availability_zone_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-availability-zone/{id}/edit API
      schema:
        type: string
      required: true
    os_availability_zone_id:
      in: path
      name: id
      description: id parameter for /v3/os-availability-zone/{id} API
      schema:
        type: string
      required: true
    types_encryption_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/encryption/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_encryption_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/encryption/{id} API
      schema:
        type: string
      required: true
    types_encryption_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/encryption/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_encryption_new_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/encryption/new API
      schema:
        type: string
      required: true
    types_encryption_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/encryption/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_encryption_edit_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/encryption/{id}/edit
        API
      schema:
        type: string
      required: true
    types_encryption_edit_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/encryption/{id}/edit API
      schema:
        type: string
      required: true
    types_encryption_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/encryption/{id} API
      schema:
        type: string
      required: true
    types_extra_specs_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/extra_specs/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_extra_specs_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/extra_specs/{id} API
      schema:
        type: string
      required: true
    types_extra_specs_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/extra_specs/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_extra_specs_new_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/extra_specs/new API
      schema:
        type: string
      required: true
    types_extra_specs_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/types/{type_id}/extra_specs/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    types_extra_specs_edit_type_id:
      in: path
      name: type_id
      description: type_id parameter for /v3/types/{type_id}/extra_specs/{id}/edit
        API
      schema:
        type: string
      required: true
    types_extra_specs_edit_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/extra_specs/{id}/edit API
      schema:
        type: string
      required: true
    types_extra_specs_id:
      in: path
      name: id
      description: id parameter for /v3/types/{type_id}/extra_specs/{id} API
      schema:
        type: string
      required: true
    backups_import_record_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/import_record
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_restore_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/{id}/restore
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_restore_id:
      in: path
      name: id
      description: id parameter for /v3/backups/{id}/restore API
      schema:
        type: string
      required: true
    backups_action_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/{id}/action API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_action_id:
      in: path
      name: id
      description: id parameter for /v3/backups/{id}/action API
      schema:
        type: string
      required: true
    backups_export_record_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/backups/{id}/export_record
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    backups_export_record_id:
      in: path
      name: id
      description: id parameter for /v3/backups/{id}/export_record API
      schema:
        type: string
      required: true
    os_volume_transfer_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-transfer/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-transfer/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-transfer/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_accept_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-transfer/{id}/accept
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_accept_id:
      in: path
      name: id
      description: id parameter for /v3/os-volume-transfer/{id}/accept API
      schema:
        type: string
      required: true
    os_volume_transfer_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-volume-transfer/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_volume_transfer_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-volume-transfer/{id}/edit API
      schema:
        type: string
      required: true
    os_volume_transfer_id:
      in: path
      name: id
      description: id parameter for /v3/os-volume-transfer/{id} API
      schema:
        type: string
      required: true
    capabilities_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/capabilities/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    capabilities_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/capabilities/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    capabilities_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/capabilities/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    capabilities_edit_id:
      in: path
      name: id
      description: id parameter for /v3/capabilities/{id}/edit API
      schema:
        type: string
      required: true
    capabilities_id:
      in: path
      name: id
      description: id parameter for /v3/capabilities/{id} API
      schema:
        type: string
      required: true
    os_snapshot_manage_detail_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-snapshot-manage/detail
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_snapshot_manage_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-snapshot-manage/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_snapshot_manage_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-snapshot-manage/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_snapshot_manage_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-snapshot-manage/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_snapshot_manage_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-snapshot-manage/{id}/edit API
      schema:
        type: string
      required: true
    os_snapshot_manage_id:
      in: path
      name: id
      description: id parameter for /v3/os-snapshot-manage/{id} API
      schema:
        type: string
      required: true
    os_services_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-services/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_services_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-services/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_services_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-services/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_services_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-services/{id}/edit API
      schema:
        type: string
      required: true
    os_services_id:
      in: path
      name: id
      description: id parameter for /v3/os-services/{id} API
      schema:
        type: string
      required: true
    volumes_encryption_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/encryption/{id}
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_encryption_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/encryption/{id}
        API
      schema:
        type: string
      required: true
    volumes_encryption_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/encryption/new
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_encryption_new_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/encryption/new
        API
      schema:
        type: string
      required: true
    volumes_encryption_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/volumes/{volume_id}/encryption/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    volumes_encryption_edit_volume_id:
      in: path
      name: volume_id
      description: volume_id parameter for /v3/volumes/{volume_id}/encryption/{id}/edit
        API
      schema:
        type: string
      required: true
    volumes_encryption_edit_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{volume_id}/encryption/{id}/edit API
      schema:
        type: string
      required: true
    volumes_encryption_id:
      in: path
      name: id
      description: id parameter for /v3/volumes/{volume_id}/encryption/{id} API
      schema:
        type: string
      required: true
    os_hosts_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-hosts/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_hosts_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-hosts/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_hosts_startup_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-hosts/{id}/startup
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_hosts_startup_id:
      in: path
      name: id
      description: id parameter for /v3/os-hosts/{id}/startup API
      schema:
        type: string
      required: true
    os_hosts_shutdown_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-hosts/{id}/shutdown
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_hosts_shutdown_id:
      in: path
      name: id
      description: id parameter for /v3/os-hosts/{id}/shutdown API
      schema:
        type: string
      required: true
    os_hosts_reboot_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-hosts/{id}/reboot
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_hosts_reboot_id:
      in: path
      name: id
      description: id parameter for /v3/os-hosts/{id}/reboot API
      schema:
        type: string
      required: true
    os_hosts_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-hosts/{id}/edit API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_hosts_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-hosts/{id}/edit API
      schema:
        type: string
      required: true
    os_hosts_id:
      in: path
      name: id
      description: id parameter for /v3/os-hosts/{id} API
      schema:
        type: string
      required: true
    os_quota_sets_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-sets/{id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_sets_new_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-sets/new API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_sets_defaults_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-sets/{id}/defaults
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_sets_defaults_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-sets/{id}/defaults API
      schema:
        type: string
      required: true
    os_quota_sets_edit_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v3/{project_id}/os-quota-sets/{id}/edit
        API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    os_quota_sets_edit_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-sets/{id}/edit API
      schema:
        type: string
      required: true
    os_quota_sets_id:
      in: path
      name: id
      description: id parameter for /v3/os-quota-sets/{id} API
      schema:
        type: string
      required: true
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
tags:
  - name: attachments
    description: |-
      Lists all, lists all with details, shows details for, creates, and deletes attachment.

      **Note**: Everything except for Complete attachment is new as of the 3.27 microversion. Complete attachment is new as of the 3.44 microversion.

      When you create, list, update, or delete attachment, the possible status values are:

      - attached: A volume is attached for the attachment.
      - attaching: A volume is attaching for the attachment.
      - detached: A volume is detached for the attachment.
      - reserved: A volume is reserved for the attachment.
      - error_attaching: A volume is error attaching for the attachment.
      - error_detaching: A volume is error detaching for the attachment.
      - deleted: The attachment is deleted.
          
  - name: backups
    description: |-
      A backup is a full copy of a volume stored in an external service.
      The service can be configured. The only supported service is Object Storage. A backup can subsequently be restored from the external service to either the same volume that the backup was originally taken from or to a new volume.

      When you create, list, or delete backups, these status values are possible:
      - creating: The backup is being created.
      - available: The backup is ready to restore to a volume.
      - deleting: The backup is being deleted.
      - error: A backup error occurred.
      - restoring: The backup is being restored to a volume.
      - error_deleting: An error occurred while deleting the backup.

      If an error occurs, you can find more information about the error in the fail_reason field for the backup.
          
  - name: capabilities
    description: |-
      Shows capabilities for a storage back end.
  - name: cgsnapshots
    description: |-
      Lists all, lists all with details, shows details for, creates, and deletes consistency group snapshots.
  - name: clusters
    description: |-
      Administrator only. Lists all Cinder clusters, show cluster detail, enable or disable a cluster.

      Each cinder service runs on a host computer (possibly multiple services on the same host; it depends how you decide to deploy cinder). In order to support High Availability scenarios, services can be grouped into clusters where the same type of service (for example, cinder-volume) can run on different hosts so that if one host goes down the service is still available on a different host. Since there's no point having these services sitting around doing nothing while waiting for some other host to go down (which is also known as Active/Passive mode), grouping services into clusters also allows cinder to support Active/Active mode in which all services in a cluster are doing work all the time.

      **Note**: Currently the only service that can be grouped into clusters is cinder-volume.

      Clusters are determined by the deployment configuration; that's why there is no `create-cluster` API call listed below. Once your services are up and running, however, you can use the following API requests to get information about your clusters and to update their status.
          
  - name: consistencygroups
    description: |-
      Consistency groups enable you to create snapshots at the exact same point in time from multiple volumes. For example, a database might place its tables, logs, and configuration on separate volumes. To restore this database from a previous point in time, it makes sense to restore the logs, tables, and configuration together from the exact same point in time.

      Use the policy configuration file to grant permissions for these actions to limit roles.
          
  - name: default-types
    description: |-
      Manage a default volume type for individual projects.

      By default, a volume-create request that does not specify a volume-type will assign the configured system default volume type to the volume. You can override this behavior on a per-project basis by setting a different default volume type for any project.

      Available in microversion 3.62 or higher.

      **Note:** The default policy for list API is system admin so you would require a system scoped token to access it. To get a system scoped token, you need to run the following command:

      openstack –os-system-scope all –os-project-name=’’ token issue
          
  - name: group_snapshots
    description: |-
      Lists all, lists all with details, shows details for, creates, and deletes group snapshots.
          
  - name: group_types
    description: |-
      To create a generic volume group, you must specify a group type.
  - name: groups
    description: |-
      Generic volume groups enable you to create a group of volumes and manage them together.

      How is generic volume groups different from consistency groups? Currently consistency groups in cinder only support consistent group snapshot. It cannot be extended easily to serve other purposes. A project may want to put volumes used in the same application together in a group so that it is easier to manage them together, and this group of volumes may or may not support consistent group snapshot. Generic volume group is introduced to solve this problem. By decoupling the tight relationship between the group construct and the consistency concept, generic volume groups can be extended to support other features in the future.
          
  - name: limits
    description: |-
      Shows absolute limits for a project.

      An absolute limit value of -1 indicates that the absolute limit for the item is infinite.
  - name: manageable_snapshots
    description: |-
      Creates or lists snapshots by using existing storage instead of allocating new storage.
  - name: manageable_volumes
    description: |-
      Creates or lists volumes by using existing storage instead of allocating new storage.
  - name: messages
    description: |-
      Lists all, shows, and deletes messages. These are error messages generated by failed operations as a way to find out what happened when an asynchronous operation failed.
          
  - name: os-hosts
    description: |-
      Administrators only, depending on policy settings.

      Lists, shows hosts.
  - name: os-quota-class-sets
    description: |-
      Administrators only, depending on policy settings.

      Shows and updates quota classes for a project.
  - name: os-quota-sets
    description: |-
      Administrators only, depending on policy settings.

      Shows and updates, and deletes quotas for a project.
  - name: os-services
    description: |-
      Administrator only. Lists all Cinder services, enables or disables a Cinder service, freeze or thaw the specified cinder-volume host, failover a replicating cinder-volume host.
  - name: os-volume-transfer
    description: |-
      Transfers a volume from one user to another user.
  - name: qos-specs
    description: |-
      Administrators only, depending on policy settings.

      Creates, lists, shows details for, associates, disassociates, sets keys, unsets keys, and deletes quality of service (QoS) specifications.
          
  - name: resource_filters
    description: |-
      Lists all resource filters, available since microversion 3.33.
  - name: scheduler-stats
    description: |-
      Administrator only. Lists all back-end storage pools that are known to the scheduler service.
  - name: snapshots
    description: |-
      A snapshot is a point-in-time copy of the data that a volume contains.

      When you create, list, or delete snapshots, these status values are possible:

      - creating: The snapshot is being created.
      - available: The snapshot is ready to use.
      - backing-up: The snapshot is being backed up.
      - deleting: The snapshot is being deleted.
      - error: A snapshot creation error occurred.
      - deleted: The snapshot has been deleted.
      - unmanaging: The snapshot is being unmanaged.
      - restoring: The snapshot is being restored to a volume.
      - error_deleting: A snapshot deletion error occurred.
          
  - name: types
    description: |-
      To create an environment with multiple-storage back ends, you must specify a volume type. The API spawns Block Storage volume back ends as children to cinder-volume, and keys them from a unique queue. The API names the back ends cinder-volume.HOST.BACKEND. For example, cinder-volume.ubuntu.lvmdriver. When you create a volume, the scheduler chooses an appropriate back end for the volume type to handle the request.
          
  - name: volume-transfers
    description: |-
      Transfers a volume from one user to another user. This is the new transfer APIs with microversion 3.55.
  - name: volumes
    description: |-
      A volume is a detachable block storage device similar to a USB hard drive. You can attach a volume to an instance, and if the volume is of an appropriate volume type, a volume can be attached to multiple instances.

      The snapshot_id and source_volid parameters specify the ID of the snapshot or volume from which this volume originates. If the volume was not created from a snapshot or source volume, these values are null.

      When you create, list, update, or delete volumes, the possible status values are:

      - creating: The volume is being created.
      - available: The volume is ready to attach to an instance.
      - reserved: The volume is reserved for attaching or shelved.
      - attaching: The volume is attaching to an instance.
      - detaching: The volume is detaching from an instance.
      - in-use: The volume is attached to an instance.
      - maintenance: The volume is locked and being migrated.
      - deleting: The volume is being deleted.
      - awaiting-transfer: The volume is awaiting for transfer.
      - error: A volume creation error occurred.
      - error_deleting: A volume deletion error occurred.
      - backing-up: The volume is being backed up.
      - restoring-backup: A backup is being restored to the volume.
      - error_backing-up: A backup error occurred.
      - error_restoring: A backup restoration error occurred.
      - error_extending: An error occurred while attempting to extend a volume.
      - downloading: The volume is downloading an image.
      - uploading: The volume is being uploaded to an image.
      - retyping: The volume is changing type to another volume type.
      - extending: The volume is being extended.
          
  - name: version
  - name: workers
  - name: extensions
  - name: os-volume-manage
  - name: os-availability-zone
  - name: os-snapshot-manage
security:
  - ApiKeyAuth: []
