openapi: 3.1.0
info:
  title: OpenStack Image API
  description: |-
    Image API provided by Glance service
  version: '2.16'
paths:
  /v2/schemas/image:
    get:
      description: |-
        *(Since Images v2.0)*

        Shows a JSON schema document that represents an *image* entity.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/image:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasImageResponse'
      tags:
        - schemas
      summary: Show image schema
  /v2/schemas/images:
    get:
      description: |-
        *(Since Images v2.0)*

        Shows a JSON schema document that represents an *images* entity.

        An images entity is a container of image entities.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/images:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasImagesResponse'
      tags:
        - schemas
      summary: Show images schema
  /v2/schemas/member:
    get:
      description: |-
        *(Since Images v2.1)*

        Shows a JSON schema document that represents an *image member* entity.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/member:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMemberResponse'
      tags:
        - schemas
      summary: Show image member schema
  /v2/schemas/members:
    get:
      description: |-
        *(Since Images v2.1)*

        Shows a JSON schema document that represents an *image members* entity.

        An image members entity is a container of image member entities.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/members:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMembersResponse'
      tags:
        - schemas
      summary: Show image members schema
  /v2/schemas/task:
    get:
      description: |-
        *(Since Images v2.2)*

        Shows a JSON schema document that represents an *task* entity.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 401
      operationId: schemas/task:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasTaskResponse'
      tags:
        - schemas
      summary: Show task schema
  /v2/schemas/tasks:
    get:
      description: |-
        *(Since Images v2.2)*

        Shows a JSON schema document that represents a list of *tasks*.

        An tasks list entity is a container of entities containing abbreviated
        information about individual tasks.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 401
      operationId: schemas/tasks:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasTasksResponse'
      tags:
        - schemas
      summary: Show tasks schema
  /v2/schemas/metadefs/namespace:
    get:
      operationId: schemas/metadefs/namespace:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsNamespaceMetadef_NamespaceResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/namespaces:
    get:
      operationId: schemas/metadefs/namespaces:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsNamespacesMetadef_NamespacesResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/resource_type:
    get:
      operationId: schemas/metadefs/resource_type:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsResource_TypeMetadef_Resource_TypeResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/resource_types:
    get:
      operationId: schemas/metadefs/resource_types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsResource_TypesMetadef_Resource_TypesResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/property:
    get:
      operationId: schemas/metadefs/property:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsPropertyMetadef_PropertyResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/properties:
    get:
      operationId: schemas/metadefs/properties:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsPropertiesMetadef_PropertiesResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/object:
    get:
      operationId: schemas/metadefs/object:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsObjectMetadef_ObjectResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/objects:
    get:
      operationId: schemas/metadefs/objects:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsObjectsMetadef_ObjectsResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/tag:
    get:
      operationId: schemas/metadefs/tag:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsTagMetadef_TagResponse'
      tags:
        - schemas
  /v2/schemas/metadefs/tags:
    get:
      operationId: schemas/metadefs/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsTagsMetadef_TagsResponse'
      tags:
        - schemas
  /v2/metadefs/resource_types:
    get:
      operationId: metadefs/resource_types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsResource_TypesListResponse'
      tags:
        - metadata-definition-resource-types
  /v2/metadefs/namespaces/{namespace_name}/resource_types:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_resource_types_namespace_name'
    get:
      operationId: metadefs/namespaces/namespace_name/resource_types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesResource_TypesShowResponse'
      tags:
        - metadata-definition-resource-types
    post:
      operationId: metadefs/namespaces/namespace_name/resource_types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesResource_TypesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesResource_TypesCreateResponse'
      tags:
        - metadata-definition-resource-types
  /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type}:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_resource_types_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_resource_types_resource_type'
    delete:
      operationId: metadefs/namespaces/namespace_name/resource_types/resource_type:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-resource-types
  /v2/metadefs/namespaces:
    get:
      operationId: metadefs/namespaces:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesListResponse'
      tags:
        - metadata-definition-namespaces
    post:
      operationId: metadefs/namespaces:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesCreateResponse'
      tags:
        - metadata-definition-namespaces
  /v2/metadefs/namespaces/{namespace_name}:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_namespace_name'
    get:
      operationId: metadefs/namespaces/namespace_name:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespaceShowResponse'
      tags:
        - metadata-definition-namespaces
    delete:
      operationId: metadefs/namespaces/namespace_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-namespaces
    put:
      operationId: metadefs/namespaces/namespace_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespaceUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespaceUpdateResponse'
      tags:
        - metadata-definition-namespaces
  /v2/metadefs/namespaces/{namespace_name}/properties:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_properties_namespace_name'
    get:
      operationId: metadefs/namespaces/namespace_name/properties:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertiesListResponse'
      tags:
        - metadata-definition-properties
    post:
      operationId: metadefs/namespaces/namespace_name/properties:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesPropertiesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertiesCreateResponse'
      tags:
        - metadata-definition-properties
    delete:
      operationId: metadefs/namespaces/namespace_name/properties:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-properties
  /v2/metadefs/namespaces/{namespace_name}/properties/{property_name}:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_properties_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_properties_property_name'
    get:
      operationId: metadefs/namespaces/namespace_name/properties/property_name:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertyShowResponse'
      tags:
        - metadata-definition-properties
    delete:
      operationId: metadefs/namespaces/namespace_name/properties/property_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-properties
    put:
      operationId: metadefs/namespaces/namespace_name/properties/property_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesPropertyUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertyUpdateResponse'
      tags:
        - metadata-definition-properties
  /v2/metadefs/namespaces/{namespace_name}/objects:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_objects_namespace_name'
    get:
      operationId: metadefs/namespaces/namespace_name/objects:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectsListResponse'
      tags:
        - metadata-definition-objects
    post:
      operationId: metadefs/namespaces/namespace_name/objects:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesObjectsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectsCreateResponse'
      tags:
        - metadata-definition-objects
    delete:
      operationId: metadefs/namespaces/namespace_name/objects:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-objects
  /v2/metadefs/namespaces/{namespace_name}/objects/{object_name}:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_objects_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_objects_object_name'
    get:
      operationId: metadefs/namespaces/namespace_name/objects/object_name:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectShowResponse'
      tags:
        - metadata-definition-objects
    delete:
      operationId: metadefs/namespaces/namespace_name/objects/object_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-objects
    put:
      operationId: metadefs/namespaces/namespace_name/objects/object_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesObjectUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectUpdateResponse'
      tags:
        - metadata-definition-objects
  /v2/metadefs/namespaces/{namespace_name}/tags:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_tags_namespace_name'
    get:
      operationId: metadefs/namespaces/namespace_name/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagsListResponse'
      tags:
        - metadata-definition-tags
    post:
      operationId: metadefs/namespaces/namespace_name/tags:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesTagsCreate_TagsRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagsCreate_TagsResponse'
      tags:
        - metadata-definition-tags
    delete:
      operationId: metadefs/namespaces/namespace_name/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-tags
  /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name}:
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_tags_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_tags_tag_name'
    get:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagShowResponse'
      tags:
        - metadata-definition-tags
    post:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesTagCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagCreateResponse'
      tags:
        - metadata-definition-tags
    delete:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-tags
    put:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesTagUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagUpdateResponse'
      tags:
        - metadata-definition-tags
  /v2/images:
    get:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/protected'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/visibility'
        - $ref: '#/components/parameters/os_hidden'
        - $ref: '#/components/parameters/member_status'
        - $ref: '#/components/parameters/size_max'
        - $ref: '#/components/parameters/size_min'
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort'
      description: |-
        Lists public virtual machine (VM) images.
        *(Since Image API v2.0)*

        **Pagination**

        Returns a subset of the larger collection of images and a link that you can use
        to get the next set of images. You should always check for the presence of a
        `next` link and use it as the URI in a subsequent HTTP GET request. You
        should follow this pattern until a `next` link is no longer provided.

        The `next` link preserves any query parameters that you send in your initial
        request. You can use the `first` link to jump back to the first page of the
        collection. If you prefer to paginate through images manually, use the
        `limit` and `marker` parameters.

        **Query Filters**

        The list operation accepts query parameters to filter the response.

        A client can provide direct comparison filters by using most image attributes,
        such as `name=Ubuntu`, `visibility=public`, and so on.

        To filter using image tags, use the filter `tag` (note the singular). To
        filter on multiple tags, include each tag separately in the query. For
        example, to find images with the tag **ready**, include `tag=ready` in your
        query string. To find images tagged with **ready** and **approved**, include
        `tag=ready&tag=approved` in your query string. (Note that only images
        containing *both* tags will be included in the response.)

        A client cannot use any `link` in the json-schema, such as self, file, or
        schema, to filter the response.

        You can list VM images that have a status of `active`, `queued`, or
        `saving`.

        **The** `in` **Operator**

        As a convenience, you may specify several values for any of the following
        fields by using the `in` operator:

        For most of these, usage is straight forward. For example, to list images
        in queued or saving status, use:

        `GET /v2/images?status=in:saving,queued`

        To find images in a particular list of image IDs, use:

        `GET /v2/images?id=in:3afb79c1-131a-4c38-a87c-bc4b801d14e6,2e011209-660f-44b5-baf2-2eb4babae53d`

        Using the `in` operator with the `name` property of images can be a bit
        trickier, depending upon how creatively you have named your images. The
        general rule is that if an image name contains a comma (`,`), you must
        enclose the entire name in quotation marks (`"`). As usual, you must URL
        encode any characters that require it.

        For example, to find images named `glass, darkly` or `share me`, you would
        use the following filter specification:

        `GET v2/images?name=in:"glass,%20darkly",share%20me`

        As with regular filtering by name, you must specify the complete name you are
        looking for. Thus, for example, the query string `name=in:glass,share` will
        only match images with the exact name `glass` or the exact name `share`.
        It will not find an image named `glass, darkly` or an image named `share
        me`.

        **Size Comparison Filters**

        You can use the `size_min` and `size_max` query parameters to filter images
        that are greater than or less than the image size. The size, in bytes, is the
        size of an image on disk.

        For example, to filter the container to include only images that are from 1 to
        4 MB, set the `size_min` query parameter to `1048576` and the `size_max`
        query parameter to `4194304`.

        **Time Comparison Filters**

        You can use a *comparison operator* along with the `created_at` or
        `updated_at` fields to filter your results. Specify the operator first, a
        colon (`:`) as a separator, and then the time in [ISO 8601 Format](https://en.wikipedia.org/wiki/ISO_8601). Available comparison operators
        are:

        For example:

        **Sorting**

        You can use query parameters to sort the results of this operation.

        To sort the response, use the `sort_key` and `sort_dir` query
        parameters:

        Alternatively, specify the `sort` query parameter:

        Normal response codes: 200

        Error response codes: 400, 401, 403
      operationId: images:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesListResponse'
      tags:
        - images
      summary: List images
    post:
      description: |-
        Creates a catalog record for an operating system disk image.
        *(Since Image API v2.0)*

        The `Location` response header contains the URI for the image.

        A multiple store backend support is introduced in the Rocky release
        as a part of the EXPERIMENTAL Image API v2.8. Since Image API v2.8 a
        new header `OpenStack-image-store-ids` which contains the list of
        available stores will be included in response. This header is only
        included if multiple backend stores are supported.

        The response body contains the new image entity.

        Synchronous Postconditions

        Normal response codes: 201

        Error response codes: 400, 401, 403, 409, 413, 415
      operationId: images:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesCreateResponse'
          headers:
            OpenStack-image-store-ids:
              $ref: '#/components/headers/OpenStack-image-store-ids'
      tags:
        - images
      summary: Create image
  /v2/images/{image_id}:
    parameters:
      - $ref: '#/components/parameters/images_image_id'
    get:
      description: |-
        Shows details for an image.
        *(Since Image API v2.0)*

        The response body contains a single image entity.

        Preconditions

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: images/image_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageShowResponse'
      tags:
        - images
      summary: Show image
    delete:
      description: |-
        (Since Image API v2.0) Deletes an image.

        You cannot delete images with the `protected` attribute set to
        `true` (boolean).

        Preconditions

        Synchronous Postconditions

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 409
      operationId: images/image_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - images
      summary: Delete image
    patch:
      description: |-
        Updates an image.
        *(Since Image API v2.0)*

        Conceptually, you update an image record by patching the JSON representation of
        the image, passing a request body conforming to one of the following media
        types:

        Attempting to make a PATCH call using some other media type will provoke a
        response code of 415 (Unsupported media type).

        The `application/openstack-images-v2.1-json-patch` media type provides a
        useful and compatible subset of the functionality defined in JavaScript Object
        Notation (JSON) Patch [RFC6902](http://tools.ietf.org/html/rfc6902), which
        defines the `application/json-patch+json` media type.

        For information about the PATCH method and the available media types, see
        [Image API v2 HTTP PATCH media types](http://specs.openstack.org/openstack/glance-specs/specs/api/v2/http-patch-image-api-v2.html).

        Attempting to modify some image properties will cause the entire request to
        fail with a 403 (Forbidden) response code:

        Attempting to add a location path to an image that is not in `queued` or
        `active` state will result in a 409 (Conflict) response code
        *(since Image API v2.4)*.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 413, 415
      operationId: images/image_id:patch
      requestBody:
        content:
          application/openstack-images-v2.1-json-patch:
            schema:
              $ref: '#/components/schemas/ImageUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUpdateResponse'
      tags:
        - images
      summary: Update image
  /v2/images/{image_id}/tasks:
    parameters:
      - $ref: '#/components/parameters/images_tasks_image_id'
    get:
      description: |-
        Shows tasks associated with an image.
        *(Since Image API v2.12)*

        The response body contains list of tasks, possibly empty, associated
        with the specified image.

        Preconditions

        Normal response codes: 200

        Error response codes: 404
      operationId: images/image_id/tasks:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesTasksGet_Task_InfoResponse'
      tags:
        - images
      summary: Show tasks associated with image
  /v2/images/{image_id}/import:
    parameters:
      - $ref: '#/components/parameters/images_import_image_id'
    post:
      description: |-
        Signals the Image Service to complete the image import workflow
        by processing data that has been made available to the OpenStack
        image service.
        *(Since Image API v2.6)*

        In the `glance-direct` workflow, the data has been made available to the
        Image service via the [Stage binary image data](#image-stage-call) API
        call.

        In the `web-download` workflow, the data is made available to the Image
        service by being posted to an accessible location with a URL that you know.

        In the `copy-image` workflow, the data is made available to the Image
        service by copying existing image data to the staging area.

        In the `glance-download` workflow, the data is made available to the Image
        service by fetching an image accessible from another glance service specified
        by a region name and an image id that you know.

        Beginning with API version 2.8, an optional `stores` parameter may be added
        to the body request. When present, it contains the list of backing store
        identifiers to import the image binary data to. If at least one store
        identifier specified is not recognized, a 409 (Conflict) response is returned.
        When the parameter is not present, the image data is placed into the default
        backing store.

        For backwards compatibility, if the `stores` parameter is not specified, the
        header ‘X-Image-Meta-Store’ is evaluated.

        To import the data into the entire set of stores you may consume from this
        particular deployment of Glance without specifying each one of them, you can
        use the optional boolean body parameter `all_stores`.
        Note that this can’t be used simultaneously with the `stores` parameter.

        To set the behavior of the import workflow in case of error, you can use the
        optional boolean body parameter `all_stores_must_succeed`.
        When set to True (default), if an error occurs during the upload in at least one store,
        the workflow fails, the data is deleted from stores where copying is done and
        the state of the image remains unchanged.
        When set to False, the workflow will fail only if the upload fails
        on all stores specified. In case of a partial success, the locations added to
        the image will be the stores where the data has been correctly uploaded.

        The JSON request body specifies what import method you wish to use
        for this image request.

        **Preconditions**

        Before you can complete the interoperable image import workflow, you must meet
        the following preconditions:

        **Additional Preconditions**

        If you are using the `glance-direct` import method:

        If you are using the `web-download` import method:

        If you are using the `copy-image` import method:

        If you are using the `glance-download` import method:

        **Synchronous Postconditions**

        Normal response codes: 202

        Error response codes: 400, 401, 403, 404, 405, 409, 410, 413, 415, 503

        If the image import process is not enabled in your cloud, this request
        will result in a 404 response code with an appropriate message.
      operationId: images/image_id/import:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesImportImport_ImageRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesImportImport_ImageResponse'
      tags:
        - images
      summary: Import an image
  /v2/stores/{store_id}/{image_id}:
    parameters:
      - $ref: '#/components/parameters/stores_store_id'
      - $ref: '#/components/parameters/stores_image_id'
    delete:
      description: |-
        This API allows you to delete a copy of the image from a specific store.
        *(Since Image API v2.10)*

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 409
      operationId: stores/store_id/image_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - stores
      summary: Delete image from store
  /v2/images/{image_id}/actions/deactivate:
    parameters:
      - $ref: '#/components/parameters/images_actions_deactivate_image_id'
    post:
      description: |-
        Deactivates an image.
        *(Since Image API v2.3)*

        By default, this operation is restricted to administrators only.

        If you try to download a deactivated image, you will receive a 403 (Forbidden)
        response code. Additionally, only administrative users can view image
        locations for deactivated images.

        The deactivate operation returns an error if the image status is
        not `active` or `deactivated`.

        Preconditions

        Normal response codes: 204

        Error response codes: 400, 403, 404
      operationId: images/image_id/actions/deactivate:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesActionsDeactivateDeactivateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesActionsDeactivateResponse'
      tags:
        - images
      summary: Deactivate image
  /v2/images/{image_id}/actions/reactivate:
    parameters:
      - $ref: '#/components/parameters/images_actions_reactivate_image_id'
    post:
      description: |-
        Reactivates an image.
        *(Since Image API v2.3)*

        By default, this operation is restricted to administrators only.

        The reactivate operation returns an error if the image status is
        not `active` or `deactivated`.

        Preconditions

        Normal response codes: 204

        Error response codes: 400, 403, 404
      operationId: images/image_id/actions/reactivate:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesActionsReactivateReactivateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesActionsReactivateResponse'
      tags:
        - images
      summary: Reactivate image
  /v2/images/{image_id}/file:
    parameters:
      - $ref: '#/components/parameters/images_file_image_id'
    get:
      parameters:
        - $ref: '#/components/parameters/range'
      description: |-
        Downloads binary image data.
        *(Since Image API v2.0)*

        Example call: `curl -i -X GET -H "X-Auth-Token: $token"
        $image_url/v2/images/{image_id}/file`

        The response body contains the raw binary data that represents the
        actual virtual disk. The `Content-Type` header contains the
        `application/octet-stream` value. The `Content-MD5` header
        contains an MD5 checksum of the image data. Use this checksum to
        verify the integrity of the image data.

        **Preconditions**

        **Synchronous Postconditions**

        Normal response codes: 200, 204, 206

        Error response codes: 400, 403, 404, 416
      operationId: images/image_id/file:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesFileDownloadResponse'
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Md5:
              $ref: '#/components/headers/Content-Md5'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
        '204':
          description: Ok
        '206':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesFileDownloadResponse'
          headers:
            Content-Type:
              $ref: '#/components/headers/Content-Type'
            Content-Md5:
              $ref: '#/components/headers/Content-Md5'
            Content-Length:
              $ref: '#/components/headers/Content-Length'
            Content-Range:
              $ref: '#/components/headers/Content-Range'
      tags:
        - images
      summary: Download binary image data
    put:
      parameters:
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-image-meta-store'
      description: |-
        Uploads binary image data.
        *(Since Image API v2.0)*

        Set the `Content-Type` request header to `application/octet-stream`.

        A multiple store backend support is introduced in the Rocky release
        as a part of the EXPERIMENTAL Image API v2.8.

        Beginning with API version 2.8, an optional `X-Image-Meta-Store`
        header may be added to the request. When present, the image data will be
        placed into the backing store whose identifier is the value of this
        header. If the store identifier specified is not recognized, a 400 (Bad
        Request) response is returned. When the header is not present, the image
        data is placed into the default backing store.

        Example call:

        **Preconditions**

        Before you can store binary image data, you must meet the following
        preconditions:

        **Synchronous Postconditions**

        **Troubleshooting**

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 409, 410, 413, 415, 503
      operationId: images/image_id/file:put
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/ImagesFileUploadRequest'
      responses:
        '204':
          description: Ok
      tags:
        - images
      summary: Upload binary image data
  /v2/images/{image_id}/stage:
    parameters:
      - $ref: '#/components/parameters/images_stage_image_id'
    put:
      description: |-
        Places the binary image data in a staging area. It is not stored in
        the storage backend and is not accessible for download until after
        the [Image Import](#image-import-call) call is made.
        *(Since Image API v2.6)*

        Set the `Content-Type` request header to `application/octet-stream`.

        Example call:

        **Preconditions**

        Before you can stage binary image data, you must meet the following
        preconditions:

        **Synchronous Postconditions**

        **Troubleshooting**

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 405, 409, 410, 413, 415, 503

        If the image import process is not enabled in your cloud, this request
        will result in a 404 response code with an appropriate message.
      operationId: images/image_id/stage:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesStageStageRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesStageResponse'
      tags:
        - images
      summary: Stage binary image data
  /v2/images/{image_id}/locations:
    parameters:
      - $ref: '#/components/parameters/images_locations_image_id'
    get:
      description: |-
        Lists all locations associated to an image with location url and
        store-id, accessible to only service user, for non service users
        API will return forbidden.

        Normal response codes: 200

        Error response codes: 403, 404
      operationId: images/image_id/locations:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesLocationsGet_LocationsResponse'
      tags:
        - images
      summary: Get Location
    post:
      description: |-
        Add location to an image which is in `queued` state. Accepts
        location url, validation_data in JSON body.

        Adding a location to an image is only allowed for the owner or
        a user with the service role. If these conditions are not met,
        a 403 (Forbidden) will be returned.

        Attempting to add a location path to an image that is not in `queued`
        state will result in a 409 (Conflict) response code

        Attempting to provide incorrect hash value in validation data(in the case
        of http store) to the image will result in a 400 (Bad Request) response code.

        Normal response codes: 200

        Error response codes: 400, 403, 404, 409
      operationId: images/image_id/locations:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesLocationsAdd_LocationRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesLocationsAdd_LocationResponse'
      tags:
        - images
      summary: Add Location
  /v2/images/{image_id}/tags/{tag_value}:
    parameters:
      - $ref: '#/components/parameters/images_tags_image_id'
      - $ref: '#/components/parameters/images_tags_tag_value'
    delete:
      operationId: images/image_id/tags/tag_value:delete
      responses:
        '204':
          description: Ok
      tags:
        - images
    put:
      operationId: images/image_id/tags/tag_value:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesTagUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesTagUpdateResponse'
      tags:
        - images
  /v2/images/{image_id}/members:
    parameters:
      - $ref: '#/components/parameters/images_members_image_id'
    get:
      description: |-
        Lists the tenants that share this image.
        *(Since Image API v2.1)*

        If the image owner makes this call, the complete member list is
        returned.

        If a user who is an image member makes this call, the member list
        contains only information for that user.

        If a user who is not an image member makes this call, the call
        returns the HTTP `404` response code.

        Preconditions

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: images/image_id/members:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMembersListResponse'
      tags:
        - images
      summary: List image members
    post:
      description: |-
        Adds a tenant ID as an image member.
        *(Since Image API v2.1)*

        Preconditions

        Synchronous Postconditions

        Troubleshooting

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 413
      operationId: images/image_id/members:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesMembersCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMembersCreateResponse'
      tags:
        - images
      summary: Create image member
  /v2/images/{image_id}/members/{member_id}:
    parameters:
      - $ref: '#/components/parameters/images_members_image_id'
      - $ref: '#/components/parameters/images_members_member_id'
    get:
      description: |-
        Shows image member details.
        *(Since Image API v2.1)*

        Response body is a single image member entity.

        Preconditions

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: images/image_id/members/member_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMemberShowResponse'
      tags:
        - images
      summary: Show image member details
    delete:
      description: |-
        Deletes a tenant ID from the member list of an image.
        *(Since Image API v2.1)*

        Preconditions

        Synchronous Postconditions

        Troubleshooting

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404
      operationId: images/image_id/members/member_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - images
      summary: Delete image member
    put:
      description: |-
        Sets the status for an image member.
        *(Since Image API v2.1)*

        This call allows an image member to change his or her *member status*.

        When an image is shared with you, you have immediate access to the image. What
        updating your member status on the image does for you is that it affects
        whether the image will appear in your image list response.

        For a more detailed discussion of image sharing, please consult [Image API v2
        Sharing](http://specs.openstack.org/openstack/glance-specs/specs/api/v2/sharing-image-api-v2.html).

        Preconditions

        Synchronous Postconditions

        Normal response codes: 200

        Error response codes: 400, 401, 404, 403
      operationId: images/image_id/members/member_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesMemberUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMemberUpdateResponse'
      tags:
        - images
      summary: Update image member
  /v2/tasks:
    get:
      description: |-
        Lists tasks.

        Normal response codes: 200

        Error response codes: 403, 404, 413
      operationId: tasks:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksListResponse'
      tags:
        - tasks
      summary: List tasks
    post:
      description: |-
        Creates a task.

        Normal response codes: 201

        Error response codes: 401, 413, 415
      operationId: tasks:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TasksCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksCreateResponse'
      tags:
        - tasks
      summary: Create task
  /v2/tasks/{task_id}:
    parameters:
      - $ref: '#/components/parameters/tasks_task_id'
    get:
      description: |-
        Shows details for a task.

        Normal response codes: 200

        Error response codes: 404
      operationId: tasks/task_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGetResponse'
      tags:
        - tasks
      summary: Show task details
    delete:
      operationId: tasks/task_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - tasks
  /v2/info/import:
    get:
      description: |-
        Returns information concerning the constraints around image import in
        the cloud in which the call is made, for example, supported container
        formats, supported disk formats, maximum image size, etc. This call
        contains a `import-methods` field consisting of an array of string
        identifiers indicating what import methods are supported in the cloud
        in which the call is made.
        *(Since Image API v2.6)*

        Normal response codes: 200

        Error response codes: 400, 401, 403
      operationId: info/import:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoImportGet_Image_ImportResponse'
      tags:
        - info
      summary: Import methods and values discovery
  /v2/info/stores:
    get:
      description: |-
        A multiple store backend support is introduced in the Rocky release
        as a part of the EXPERIMENTAL Image API v2.8.

        In version 2.7 of the API, this call will return a 404 (Not Found).
        Use the [API versions call](../versions/index.html#versions-call) to determine
        what API versions are available in your cloud.

        Normal response codes: 200

        Error response codes: 404
      operationId: info/stores:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoStoresGet_StoresResponse'
      tags:
        - info
      summary: List stores
  /v2/info/usage:
    get:
      description: |-
        The user’s quota and current usage are displayed, if enabled by
        server-side configuration.

        Normal response codes: 200
      operationId: info/usage:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoUsageGet_UsageResponse'
      tags:
        - info
      summary: Quota usage
  /v2/info/stores/detail:
    get:
      description: |-
        Lists all the backend stores, with detail, accessible to admins,
        for non-admin user API will return bad request.

        Normal response codes: 200

        Error response codes: 403, 404
      operationId: info/stores/detail:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoStoresDetailGet_Stores_DetailResponse'
      tags:
        - info
      summary: List stores detail
  /v2/cache:
    get:
      description: |-
        Lists all images in cache or queue.
        *(Since Image API v2.14)*

        Normal response codes: 200

        Error response codes: 400, 401, 403
      operationId: cache:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheGet_Cache_StateResponse'
      tags:
        - cache
      summary: Query cache status
    delete:
      description: |-
        Clears the cache and its queue.
        *(Since Image API v2.14)*

        Normal response codes: 204

        Error response codes: 400, 401, 403
      operationId: cache:delete
      responses:
        '204':
          description: Ok
      tags:
        - cache
      summary: Clear images from cache
  /v2/cache/{image_id}:
    parameters:
      - $ref: '#/components/parameters/cache_image_id'
    delete:
      description: |-
        Deletes a image from cache.
        *(Since Image API v2.14)*

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404
      operationId: cache/image_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - cache
      summary: Delete image from cache
    put:
      description: |-
        Queues image for caching.
        *(Since Image API v2.14)*

        Normal response codes: 202

        Error response codes: 400, 401, 403, 404
      operationId: cache/image_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheQueue_Image_From_ApiRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheQueue_Image_From_ApiResponse'
      tags:
        - cache
      summary: Queue image
components:
  schemas:
    SchemasImageResponse:
      type: string
      description: Schema data as string
    SchemasImagesResponse:
      type: string
      description: Schema data as string
    SchemasMemberResponse:
      type: string
      description: Schema data as string
    SchemasMembersResponse:
      type: string
      description: Schema data as string
    SchemasTaskResponse:
      type: string
      description: Schema data as string
    SchemasTasksResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsNamespaceMetadef_NamespaceResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsNamespacesMetadef_NamespacesResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsResource_TypeMetadef_Resource_TypeResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsResource_TypesMetadef_Resource_TypesResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsPropertyMetadef_PropertyResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsPropertiesMetadef_PropertiesResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsObjectMetadef_ObjectResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsObjectsMetadef_ObjectsResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsTagMetadef_TagResponse:
      type: string
      description: Schema data as string
    SchemasMetadefsTagsMetadef_TagsResponse:
      type: string
      description: Schema data as string
    MetadefsResource_TypesIndexRequest:
      type: object
      properties:
        name:
          type: string
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
        prefix:
          type: string
          description: Specifies the prefix to use for the given resource type. Any
            properties in the namespace should be prefixed with this prefix when being
            applied to the specified resource type. Must include prefix separator
            (e.g. a colon :).
          maxLength: 80
        properties_target:
          type: string
          description: Some resource types allow more than one key / value pair per
            instance.  For example, Cinder allows user and image metadata on volumes.
            Only the image properties metadata is evaluated by Nova (scheduling or
            drivers). This property allows a namespace target to remove the ambiguity.
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of resource type association
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last resource type association modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsResource_TypesListResponse:
      type: object
      description: A list of abbreviated resource type JSON objects, where each object
        contains the name of the resource type and its created_at and updated_at timestamps
        in ISO 8601 Format.
      properties:
        resource_types:
          type: array
          items:
            type: object
            description: Resource type
            properties:
              name:
                type: string
                description: Resource type name
              created_at:
                type: string
                format: date-time
                description: Resource type creation date
                readOnly: true
              updated_at:
                type: string
                format: date-time
                description: Resource type update date
                readOnly: true
    MetadefsNamespacesResource_TypesShowRequest:
      type: object
      properties:
        name:
          type: string
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
        prefix:
          type: string
          description: Specifies the prefix to use for the given resource type. Any
            properties in the namespace should be prefixed with this prefix when being
            applied to the specified resource type. Must include prefix separator
            (e.g. a colon :).
          maxLength: 80
        properties_target:
          type: string
          description: Some resource types allow more than one key / value pair per
            instance.  For example, Cinder allows user and image metadata on volumes.
            Only the image properties metadata is evaluated by Nova (scheduling or
            drivers). This property allows a namespace target to remove the ambiguity.
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of resource type association
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last resource type association modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesResource_TypesShowResponse:
      type: object
      properties:
        resource_type_associations:
          type: array
          items:
            name: resource_type_association
            properties:
              name:
                type: string
                description: 'Resource type names should be aligned with Heat resource
                  types whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
                maxLength: 80
              prefix:
                type: string
                description: Specifies the prefix to use for the given resource type.
                  Any properties in the namespace should be prefixed with this prefix
                  when being applied to the specified resource type. Must include
                  prefix separator (e.g. a colon :).
                maxLength: 80
              properties_target:
                type: string
                description: Some resource types allow more than one key / value pair
                  per instance.  For example, Cinder allows user and image metadata
                  on volumes. Only the image properties metadata is evaluated by Nova
                  (scheduling or drivers). This property allows a namespace target
                  to remove the ambiguity.
                maxLength: 80
              created_at:
                type: string
                readOnly: true
                description: Date and time of resource type association
                format: date-time
              updated_at:
                type: string
                readOnly: true
                description: Date and time of the last resource type association modification
                format: date-time
            additionalProperties: false
            required:
              - name
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    MetadefsNamespacesResource_TypesCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
        prefix:
          type: string
          description: Specifies the prefix to use for the given resource type. Any
            properties in the namespace should be prefixed with this prefix when being
            applied to the specified resource type. Must include prefix separator
            (e.g. a colon :).
          maxLength: 80
        properties_target:
          type: string
          description: Some resource types allow more than one key / value pair per
            instance.  For example, Cinder allows user and image metadata on volumes.
            Only the image properties metadata is evaluated by Nova (scheduling or
            drivers). This property allows a namespace target to remove the ambiguity.
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of resource type association
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last resource type association modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesResource_TypesCreateResponse:
      type: object
      properties:
        name:
          type: string
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
        prefix:
          type: string
          description: Specifies the prefix to use for the given resource type. Any
            properties in the namespace should be prefixed with this prefix when being
            applied to the specified resource type. Must include prefix separator
            (e.g. a colon :).
          maxLength: 80
        properties_target:
          type: string
          description: Some resource types allow more than one key / value pair per
            instance.  For example, Cinder allows user and image metadata on volumes.
            Only the image properties metadata is evaluated by Nova (scheduling or
            drivers). This property allows a namespace target to remove the ambiguity.
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of resource type association
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last resource type association modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesResource_TypeDeleteRequest:
      type: object
      properties:
        name:
          type: string
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
        prefix:
          type: string
          description: Specifies the prefix to use for the given resource type. Any
            properties in the namespace should be prefixed with this prefix when being
            applied to the specified resource type. Must include prefix separator
            (e.g. a colon :).
          maxLength: 80
        properties_target:
          type: string
          description: Some resource types allow more than one key / value pair per
            instance.  For example, Cinder allows user and image metadata on volumes.
            Only the image properties metadata is evaluated by Nova (scheduling or
            drivers). This property allows a namespace target to remove the ambiguity.
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of resource type association
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last resource type association modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesIndexRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespacesListResponse:
      type: object
      properties:
        namespaces:
          type: array
          items:
            name: namespace
            properties:
              namespace:
                type: string
                description: The unique namespace text.
                maxLength: 80
              display_name:
                type: string
                description: The user friendly name for the namespace. Used by UI
                  if available.
                maxLength: 80
              description:
                type: string
                description: Provides a user friendly description of the namespace.
                maxLength: 500
              visibility:
                type: string
                description: Scope of namespace accessibility.
                enum:
                  - public
                  - private
              protected:
                type: boolean
                description: If true, namespace will not be deletable.
              owner:
                type: string
                description: Owner of the namespace.
                maxLength: 255
              created_at:
                type: string
                readOnly: true
                description: Date and time of namespace creation
                format: date-time
              updated_at:
                type: string
                readOnly: true
                description: Date and time of the last namespace modification
                format: date-time
              schema:
                readOnly: true
                type: string
              self:
                readOnly: true
                type: string
              resource_type_associations:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    prefix:
                      type: string
                    properties_target:
                      type: string
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
              objects:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    properties:
                      type: object
                      additionalProperties:
                        type: object
                        required:
                          - title
                          - type
                        properties:
                          name:
                            type: string
                            maxLength: 80
                          title:
                            type: string
                          description:
                            type: string
                          operators:
                            type: array
                            items:
                              type: string
                          type:
                            type: string
                            enum:
                              - array
                              - boolean
                              - integer
                              - number
                              - object
                              - string
                              - 
                          required:
                            type: array
                            items:
                              type: string
                            uniqueItems: true
                          minimum:
                            type: number
                          maximum:
                            type: number
                          maxLength:
                            type: integer
                            minimum: 0
                          minLength:
                            allOf:
                              - type: integer
                                minimum: 0
                              - default: 0
                          pattern:
                            type: string
                            format: regex
                          enum:
                            type: array
                          readonly:
                            type: boolean
                          default: {}
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - array
                                  - boolean
                                  - integer
                                  - number
                                  - object
                                  - string
                                  - 
                              enum:
                                type: array
                          maxItems:
                            type: integer
                            minimum: 0
                          minItems:
                            allOf:
                              - type: integer
                                minimum: 0
                              - default: 0
                          uniqueItems:
                            type: boolean
                            default: false
                          additionalItems:
                            type: boolean
              tags:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
            additionalProperties: false
            required:
              - namespace
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    MetadefsNamespacesCreateRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespacesCreateResponse:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespaceShowRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespaceShowResponse:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespaceUpdateRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespaceUpdateResponse:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespaceDeleteRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespacesPropertiesIndexRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesPropertiesListResponse:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            name: property
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                minItems: 1
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
            additionalProperties: false
            required:
              - type
              - title
            type: object
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    MetadefsNamespacesPropertiesCreateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesPropertiesCreateResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesPropertiesDelete_PropertiesRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespacesPropertyShowRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesPropertyShowResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesPropertyUpdateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesPropertyUpdateResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesPropertyDeleteRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        title:
          type: string
        description:
          type: string
        operators:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - array
            - boolean
            - integer
            - number
            - object
            - string
            - 
        required:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        minimum:
          type: number
        maximum:
          type: number
        maxLength:
          type: integer
          minimum: 0
        minLength:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        pattern:
          type: string
          format: regex
        enum:
          type: array
        readonly:
          type: boolean
        default: {}
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - array
                - boolean
                - integer
                - number
                - object
                - string
                - 
            enum:
              type: array
        maxItems:
          type: integer
          minimum: 0
        minItems:
          allOf:
            - type: integer
              minimum: 0
            - default: 0
        uniqueItems:
          type: boolean
          default: false
        additionalItems:
          type: boolean
      additionalProperties: false
      required:
        - type
        - title
        - name
    MetadefsNamespacesObjectsIndexRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesObjectsListResponse:
      type: object
      properties:
        objects:
          type: array
          items:
            name: object
            properties:
              name:
                type: string
                maxLength: 80
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
              schema:
                readOnly: true
                type: string
              self:
                readOnly: true
                type: string
              created_at:
                type: string
                readOnly: true
                description: Date and time of object creation
                format: date-time
              updated_at:
                type: string
                readOnly: true
                description: Date and time of the last object modification
                format: date-time
            additionalProperties: false
            required:
              - name
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    MetadefsNamespacesObjectsCreateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesObjectsCreateResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesObjectsDelete_ObjectsRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespacesObjectShowRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesObjectShowResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesObjectUpdateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesObjectUpdateResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesObjectDeleteRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        description:
          type: string
        required:
          type: array
          items:
            type: string
          uniqueItems: true
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        created_at:
          type: string
          readOnly: true
          description: Date and time of object creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last object modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagsIndexRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagsListResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            name: tag
            properties:
              name:
                type: string
                maxLength: 80
              created_at:
                type: string
                readOnly: true
                description: Date and time of tag creation
                format: date-time
              updated_at:
                type: string
                readOnly: true
                description: Date and time of the last tag modification
                format: date-time
            additionalProperties: false
            required:
              - name
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    MetadefsNamespacesTagsCreate_TagsRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagsCreate_TagsResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagsDelete_TagsRequest:
      type: object
      properties:
        namespace:
          type: string
          description: The unique namespace text.
          maxLength: 80
        display_name:
          type: string
          description: The user friendly name for the namespace. Used by UI if available.
          maxLength: 80
        description:
          type: string
          description: Provides a user friendly description of the namespace.
          maxLength: 500
        visibility:
          type: string
          description: Scope of namespace accessibility.
          enum:
            - public
            - private
        protected:
          type: boolean
          description: If true, namespace will not be deletable.
        owner:
          type: string
          description: Owner of the namespace.
          maxLength: 255
        created_at:
          type: string
          readOnly: true
          description: Date and time of namespace creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last namespace modification
          format: date-time
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        resource_type_associations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
        properties:
          type: object
          additionalProperties:
            type: object
            required:
              - title
              - type
            properties:
              name:
                type: string
                maxLength: 80
              title:
                type: string
              description:
                type: string
              operators:
                type: array
                items:
                  type: string
              type:
                type: string
                enum:
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                  - 
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              minimum:
                type: number
              maximum:
                type: number
              maxLength:
                type: integer
                minimum: 0
              minLength:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              pattern:
                type: string
                format: regex
              enum:
                type: array
              readonly:
                type: boolean
              default: {}
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                      - 
                  enum:
                    type: array
              maxItems:
                type: integer
                minimum: 0
              minItems:
                allOf:
                  - type: integer
                    minimum: 0
                  - default: 0
              uniqueItems:
                type: boolean
                default: false
              additionalItems:
                type: boolean
        objects:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              required:
                type: array
                items:
                  type: string
                uniqueItems: true
              properties:
                type: object
                additionalProperties:
                  type: object
                  required:
                    - title
                    - type
                  properties:
                    name:
                      type: string
                      maxLength: 80
                    title:
                      type: string
                    description:
                      type: string
                    operators:
                      type: array
                      items:
                        type: string
                    type:
                      type: string
                      enum:
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                        - 
                    required:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                    minimum:
                      type: number
                    maximum:
                      type: number
                    maxLength:
                      type: integer
                      minimum: 0
                    minLength:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    pattern:
                      type: string
                      format: regex
                    enum:
                      type: array
                    readonly:
                      type: boolean
                    default: {}
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                            - 
                        enum:
                          type: array
                    maxItems:
                      type: integer
                      minimum: 0
                    minItems:
                      allOf:
                        - type: integer
                          minimum: 0
                        - default: 0
                    uniqueItems:
                      type: boolean
                      default: false
                    additionalItems:
                      type: boolean
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
      additionalProperties: false
      required:
        - namespace
    MetadefsNamespacesTagShowRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagShowResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagCreateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagCreateResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagUpdateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagUpdateResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    MetadefsNamespacesTagDeleteRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
        created_at:
          type: string
          readOnly: true
          description: Date and time of tag creation
          format: date-time
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last tag modification
          format: date-time
      additionalProperties: false
      required:
        - name
    ImagesListResponse:
      type: object
      properties:
        images:
          type: array
          items:
            name: image
            properties:
              id:
                type: string
                description: An identifier for the image
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
              name:
                type:
                  - 'null'
                  - string
                description: Descriptive name for the image
                maxLength: 255
              status:
                type: string
                readOnly: true
                description: Status of the image
                enum:
                  - queued
                  - saving
                  - active
                  - killed
                  - deleted
                  - uploading
                  - importing
                  - pending_delete
                  - deactivated
              visibility:
                type: string
                description: Scope of image accessibility
                enum:
                  - community
                  - public
                  - private
                  - shared
              protected:
                type: boolean
                description: If true, image will not be deletable.
              os_hidden:
                type: boolean
                description: If true, image will not appear in default image list
                  response.
              checksum:
                type:
                  - 'null'
                  - string
                readOnly: true
                description: md5 hash of image contents.
                maxLength: 32
              os_hash_algo:
                type:
                  - 'null'
                  - string
                readOnly: true
                description: Algorithm to calculate the os_hash_value
                maxLength: 64
              os_hash_value:
                type:
                  - 'null'
                  - string
                readOnly: true
                description: Hexdigest of the image contents using the algorithm specified
                  by the os_hash_algo
                maxLength: 128
              owner:
                type:
                  - 'null'
                  - string
                description: Owner of the image
                maxLength: 255
              size:
                type:
                  - 'null'
                  - integer
                readOnly: true
                description: Size of image file in bytes
                format: int64
              virtual_size:
                type:
                  - 'null'
                  - integer
                readOnly: true
                description: Virtual size of image in bytes
                format: int64
              container_format:
                description: Format of the container
                anyOf:
                  - enum:
                      - 
                      - ami
                      - ari
                      - aki
                      - bare
                      - ovf
                      - ova
                      - docker
                      - compressed
                  - type:
                      - 'null'
                      - string
              disk_format:
                description: Format of the disk
                anyOf:
                  - enum:
                      - 
                      - ami
                      - ari
                      - aki
                      - vhd
                      - vhdx
                      - vmdk
                      - raw
                      - qcow2
                      - vdi
                      - iso
                      - ploop
                  - type:
                      - 'null'
                      - string
              created_at:
                type: string
                readOnly: true
                description: Date and time of image registration
              updated_at:
                type: string
                readOnly: true
                description: Date and time of the last image modification
              tags:
                type: array
                description: List of strings related to the image
                items:
                  type: string
                  maxLength: 255
              direct_url:
                type: string
                readOnly: true
                description: URL to access the image file kept in external store
              min_ram:
                type: integer
                description: Amount of ram (in MB) required to boot image.
              min_disk:
                type: integer
                description: Amount of disk space (in GB) required to boot image.
              self:
                type: string
                readOnly: true
                description: An image self url
              file:
                type: string
                readOnly: true
                description: An image file url
              stores:
                type: string
                readOnly: true
                description: Store in which image data resides.  Only present when
                  the operator has enabled multiple stores.  May be a comma-separated
                  list of store identifiers.
              schema:
                type: string
                readOnly: true
                description: An image schema url
              locations:
                type: array
                items:
                  type: object
                  properties:
                    url:
                      type: string
                      maxLength: 255
                    metadata:
                      type: object
                    validation_data:
                      description: Values to be used to populate the corresponding
                        image properties. If the image status is not 'queued', values
                        must exactly match those already contained in the image properties.
                      type: object
                      writeOnly: true
                      additionalProperties: false
                      properties:
                        checksum:
                          type: string
                          minLength: 32
                          maxLength: 32
                        os_hash_algo:
                          type: string
                          maxLength: 64
                        os_hash_value:
                          type: string
                          maxLength: 128
                      required:
                        - os_hash_algo
                        - os_hash_value
                  required:
                    - url
                    - metadata
                description: A set of URLs to access the image file kept in external
                  store
            additionalProperties:
              type: string
            links:
              - rel: self
                href: '{self}'
              - rel: enclosure
                href: '{file}'
              - rel: describedby
                href: '{schema}'
          description: |-
            A list of *image* objects, as described by the [Images Schema](#images-schema).
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    ImagesCreateRequest:
      type: object
      properties:
        id:
          type: string
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image. If you
            specify a value that has already been assigned, the request fails with
            a `409` response code.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
        name:
          type:
            - 'null'
            - string
          description: |-
            The name of the image.
          maxLength: 255
        status:
          type: string
          readOnly: true
          description: Status of the image
          enum:
            - queued
            - saving
            - active
            - killed
            - deleted
            - uploading
            - importing
            - pending_delete
            - deactivated
        visibility:
          type: string
          description: |-
            Visibility for this image. Valid value is one of: `public`, `private`,
            `shared`, or `community`.
            At most sites, only an administrator can make an image `public`.
            Some sites may restrict what users can make an image `community`.
            Some sites may restrict what users can perform member operations on
            a `shared` image.
            *Since the Image API v2.5, the default value is ``shared``.*
          enum:
            - community
            - public
            - private
            - shared
        protected:
          type: boolean
          description: |-
            Image protection for deletion. Valid value is `true` or `false`.
            Default is `false`.
        os_hidden:
          type: boolean
          description: If true, image will not appear in default image list response.
        checksum:
          type:
            - 'null'
            - string
          readOnly: true
          description: md5 hash of image contents.
          maxLength: 32
        os_hash_algo:
          type:
            - 'null'
            - string
          readOnly: true
          description: Algorithm to calculate the os_hash_value
          maxLength: 64
        os_hash_value:
          type:
            - 'null'
            - string
          readOnly: true
          description: Hexdigest of the image contents using the algorithm specified
            by the os_hash_algo
          maxLength: 128
        owner:
          type:
            - 'null'
            - string
          description: Owner of the image
          maxLength: 255
        size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: Size of image file in bytes
        virtual_size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: Virtual size of image in bytes
        container_format:
          type:
            - 'null'
            - string
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
          enum:
            - 
            - ami
            - ari
            - aki
            - bare
            - ovf
            - ova
            - docker
            - compressed
        disk_format:
          type:
            - 'null'
            - string
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
          enum:
            - 
            - ami
            - ari
            - aki
            - vhd
            - vhdx
            - vmdk
            - raw
            - qcow2
            - vdi
            - iso
            - ploop
        created_at:
          type: string
          readOnly: true
          description: Date and time of image registration
        updated_at:
          type: string
          readOnly: true
          description: Date and time of the last image modification
        tags:
          type: array
          description: |-
            List of tags for this image. Each tag is a string of at most 255 chars.
            The maximum number of tags allowed on an image is set by the operator.
          items:
            type: string
            maxLength: 255
        direct_url:
          type: string
          readOnly: true
          description: URL to access the image file kept in external store
        min_ram:
          type: integer
          description: |-
            Amount of RAM in MB that is required to boot the image.
        min_disk:
          type: integer
          description: |-
            Amount of disk space in GB that is required to boot the image.
        self:
          type: string
          readOnly: true
          description: An image self url
        file:
          type: string
          readOnly: true
          description: An image file url
        stores:
          type: string
          readOnly: true
          description: Store in which image data resides.  Only present when the operator
            has enabled multiple stores.  May be a comma-separated list of store identifiers.
        schema:
          type: string
          readOnly: true
          description: An image schema url
        locations:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                maxLength: 255
              metadata:
                type: object
              validation_data:
                description: Values to be used to populate the corresponding image
                  properties. If the image status is not 'queued', values must exactly
                  match those already contained in the image properties.
                type: object
                writeOnly: true
                additionalProperties: false
                properties:
                  checksum:
                    type: string
                    minLength: 32
                    maxLength: 32
                  os_hash_algo:
                    type: string
                    maxLength: 64
                  os_hash_value:
                    type: string
                    maxLength: 128
                required:
                  - os_hash_algo
                  - os_hash_value
            required:
              - url
              - metadata
          description: A set of URLs to access the image file kept in external store
      additionalProperties:
        type: string
    ImagesCreateResponse:
      type: object
      properties:
        id:
          type: string
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
        name:
          type:
            - 'null'
            - string
          description: |-
            The name of the image. Value might be `null` (JSON null data type).
          maxLength: 255
        status:
          type: string
          readOnly: true
          description: |-
            The image status.
          enum:
            - queued
            - saving
            - active
            - killed
            - deleted
            - uploading
            - importing
            - pending_delete
            - deactivated
        visibility:
          type: string
          description: |-
            Image visibility, that is, the access permission for the image.
          enum:
            - community
            - public
            - private
            - shared
        protected:
          type: boolean
          description: |-
            A boolean value that must be `false` or the image cannot be deleted.
        os_hidden:
          type: boolean
          description: |-
            This field controls whether an image is displayed in the default
            image-list response. A “hidden” image is out of date somehow (for
            example, it may not have the latest updates applied) and hence should
            not be a user’s first choice, but it’s not deleted because it may be
            needed for server rebuilds. By hiding it from the default image list,
            it’s easier for end users to find and use a more up-to-date version of
            this image. *(Since Image API v2.7)*
        checksum:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            An MD5 hash over the image data. The value might be `null` (JSON null data type),
            as this field is no longer populated by the Image Service beginning with the
            Victoria release. It remains present for backward compatibility with legacy
            images. To validate image data, instead use the secure multihash fields
            `os_hash_algo` and `os_hash_value`.
          maxLength: 32
        os_hash_algo:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            The algorithm used to compute a secure hash of the image data for this
            image. The result of the computation is displayed as the value of the
            `os_hash_value` property. The value might be `null` (JSON null
            data type). The algorithm used is chosen by the cloud operator; it
            may not be configured by end users. *(Since Image API v2.7)*
          maxLength: 64
        os_hash_value:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            The hexdigest of the secure hash of the image data computed using the
            algorithm whose name is the value of the `os_hash_algo` property.
            The value might be `null` (JSON null data type) if data has not
            yet been associated with this image, or if the image was created using
            a version of the Image Service API prior to version 2.7.
            *(Since Image API v2.7)*
          maxLength: 128
        owner:
          type:
            - 'null'
            - string
          description: |-
            An identifier for the owner of the image, usually the project (also
            called the “tenant”) ID.
            The value might be `null` (JSON null data type).
          maxLength: 255
        size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: |-
            The size of the image data, in bytes. The value
            might be `null` (JSON null data type).
          format: int64
        virtual_size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: |-
            The virtual size of the image. The value might
            be `null` (JSON null data type).
          format: int64
        container_format:
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
          anyOf:
            - enum:
                - 
                - ami
                - ari
                - aki
                - bare
                - ovf
                - ova
                - docker
                - compressed
            - type:
                - 'null'
                - string
        disk_format:
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
          anyOf:
            - enum:
                - 
                - ami
                - ari
                - aki
                - vhd
                - vhdx
                - vmdk
                - raw
                - qcow2
                - vdi
                - iso
                - ploop
            - type:
                - 'null'
                - string
        created_at:
          type: string
          readOnly: true
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
        updated_at:
          type: string
          readOnly: true
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
        tags:
          type: array
          description: |-
            List of tags for this image, possibly an empty list.
          items:
            type: string
            maxLength: 255
        direct_url:
          type: string
          readOnly: true
          description: |-
            The URL to access the image file kept in external store. *It is present
            only if the* `show_image_direct_url` *option is* `true` *in the Image
            service’s configuration file.* **Because it presents a security risk, this
            option is disabled by default.**
        min_ram:
          type: integer
          description: |-
            Amount of RAM in MB that is required to boot the image.
            The value might be `null` (JSON null data type).
        min_disk:
          type: integer
          description: |-
            Amount of disk space in GB that is required to boot the image.
            The value might be `null` (JSON null data type).
        self:
          type: string
          readOnly: true
          description: |-
            The URL for the virtual machine image.
        file:
          type: string
          readOnly: true
          description: |-
            The URL for the virtual machine image file.
        stores:
          type: string
          readOnly: true
          description: Store in which image data resides.  Only present when the operator
            has enabled multiple stores.  May be a comma-separated list of store identifiers.
        schema:
          type: string
          readOnly: true
          description: |-
            The URL for the schema describing a virtual machine image.
        locations:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                maxLength: 255
              metadata:
                type: object
              validation_data:
                description: Values to be used to populate the corresponding image
                  properties. If the image status is not 'queued', values must exactly
                  match those already contained in the image properties.
                type: object
                writeOnly: true
                additionalProperties: false
                properties:
                  checksum:
                    type: string
                    minLength: 32
                    maxLength: 32
                  os_hash_algo:
                    type: string
                    maxLength: 64
                  os_hash_value:
                    type: string
                    maxLength: 128
                required:
                  - os_hash_algo
                  - os_hash_value
            required:
              - url
              - metadata
          description: |-
            A list of objects, each of which describes an image location. Each object
            contains a `url` key, whose value is a URL specifying a location, and a
            `metadata` key, whose value is a dict of key:value pairs containing
            information appropriate to the use of whatever external store is indicated
            by the URL. *This list appears only if the* `show_multiple_locations`
            *option is set to* `true` *in the Image service’s configuration file.*
            **Because it presents a security risk, this option is disabled by
            default.**
      additionalProperties:
        type: string
    ImageUpdateRequest:
      type: string
      format: RFC 6902
    ImageUpdateResponse:
      type: object
      properties:
        id:
          type: string
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
        name:
          type:
            - 'null'
            - string
          description: |-
            The name of the image. Value might be `null` (JSON null data type).
          maxLength: 255
        status:
          type: string
          readOnly: true
          description: |-
            The image status.
          enum:
            - queued
            - saving
            - active
            - killed
            - deleted
            - uploading
            - importing
            - pending_delete
            - deactivated
        visibility:
          type: string
          description: |-
            Image visibility, that is, the access permission for the image.
          enum:
            - community
            - public
            - private
            - shared
        protected:
          type: boolean
          description: |-
            A boolean value that must be `false` or the image cannot be deleted.
        os_hidden:
          type: boolean
          description: |-
            This field controls whether an image is displayed in the default
            image-list response. A “hidden” image is out of date somehow (for
            example, it may not have the latest updates applied) and hence should
            not be a user’s first choice, but it’s not deleted because it may be
            needed for server rebuilds. By hiding it from the default image list,
            it’s easier for end users to find and use a more up-to-date version of
            this image. *(Since Image API v2.7)*
        checksum:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            An MD5 hash over the image data. The value might be `null` (JSON null data type),
            as this field is no longer populated by the Image Service beginning with the
            Victoria release. It remains present for backward compatibility with legacy
            images. To validate image data, instead use the secure multihash fields
            `os_hash_algo` and `os_hash_value`.
          maxLength: 32
        os_hash_algo:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            The algorithm used to compute a secure hash of the image data for this
            image. The result of the computation is displayed as the value of the
            `os_hash_value` property. The value might be `null` (JSON null
            data type). The algorithm used is chosen by the cloud operator; it
            may not be configured by end users. *(Since Image API v2.7)*
          maxLength: 64
        os_hash_value:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            The hexdigest of the secure hash of the image data computed using the
            algorithm whose name is the value of the `os_hash_algo` property.
            The value might be `null` (JSON null data type) if data has not
            yet been associated with this image, or if the image was created using
            a version of the Image Service API prior to version 2.7.
            *(Since Image API v2.7)*
          maxLength: 128
        owner:
          type:
            - 'null'
            - string
          description: |-
            An identifier for the owner of the image, usually the project (also
            called the “tenant”) ID.
            The value might be `null` (JSON null data type).
          maxLength: 255
        size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: |-
            The size of the image data, in bytes. The value
            might be `null` (JSON null data type).
          format: int64
        virtual_size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: Virtual size of image in bytes
          format: int64
        container_format:
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
          anyOf:
            - enum:
                - 
                - ami
                - ari
                - aki
                - bare
                - ovf
                - ova
                - docker
                - compressed
            - type:
                - 'null'
                - string
        disk_format:
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
          anyOf:
            - enum:
                - 
                - ami
                - ari
                - aki
                - vhd
                - vhdx
                - vmdk
                - raw
                - qcow2
                - vdi
                - iso
                - ploop
            - type:
                - 'null'
                - string
        created_at:
          type: string
          readOnly: true
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
        updated_at:
          type: string
          readOnly: true
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
        tags:
          type: array
          description: |-
            List of tags for this image, possibly an empty list.
          items:
            type: string
            maxLength: 255
        direct_url:
          type: string
          readOnly: true
          description: |-
            The URL to access the image file kept in external store. *It is present
            only if the* `show_image_direct_url` *option is* `true` *in the Image
            service’s configuration file.* **Because it presents a security risk, this
            option is disabled by default.**
        min_ram:
          type: integer
          description: |-
            Amount of RAM in MB that is required to boot the image.
            The value might be `null` (JSON null data type).
        min_disk:
          type: integer
          description: |-
            Amount of disk space in GB that is required to boot the image.
            The value might be `null` (JSON null data type).
        self:
          type: string
          readOnly: true
          description: |-
            The URL for the virtual machine image.
        file:
          type: string
          readOnly: true
          description: |-
            The URL for the virtual machine image file.
        stores:
          type: string
          readOnly: true
          description: Store in which image data resides.  Only present when the operator
            has enabled multiple stores.  May be a comma-separated list of store identifiers.
        schema:
          type: string
          readOnly: true
          description: |-
            The URL for the schema describing a virtual machine image.
        locations:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                maxLength: 255
              metadata:
                type: object
              validation_data:
                description: Values to be used to populate the corresponding image
                  properties. If the image status is not 'queued', values must exactly
                  match those already contained in the image properties.
                type: object
                writeOnly: true
                additionalProperties: false
                properties:
                  checksum:
                    type: string
                    minLength: 32
                    maxLength: 32
                  os_hash_algo:
                    type: string
                    maxLength: 64
                  os_hash_value:
                    type: string
                    maxLength: 128
                required:
                  - os_hash_algo
                  - os_hash_value
            required:
              - url
              - metadata
          description: |-
            A list of objects, each of which describes an image location. Each object
            contains a `url` key, whose value is a URL specifying a location, and a
            `metadata` key, whose value is a dict of key:value pairs containing
            information appropriate to the use of whatever external store is indicated
            by the URL. *This list appears only if the* `show_multiple_locations`
            *option is set to* `true` *in the Image service’s configuration file.*
            **Because it presents a security risk, this option is disabled by
            default.**
      additionalProperties:
        type: string
    ImageShowResponse:
      type: object
      properties:
        id:
          type: string
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
        name:
          type:
            - 'null'
            - string
          description: |-
            The name of the image. Value might be `null` (JSON null data type).
          maxLength: 255
        status:
          type: string
          readOnly: true
          description: |-
            The image status.
          enum:
            - queued
            - saving
            - active
            - killed
            - deleted
            - uploading
            - importing
            - pending_delete
            - deactivated
        visibility:
          type: string
          description: |-
            Image visibility, that is, the access permission for the image.
          enum:
            - community
            - public
            - private
            - shared
        protected:
          type: boolean
          description: |-
            A boolean value that must be `false` or the image cannot be deleted.
        os_hidden:
          type: boolean
          description: |-
            This field controls whether an image is displayed in the default
            image-list response. A “hidden” image is out of date somehow (for
            example, it may not have the latest updates applied) and hence should
            not be a user’s first choice, but it’s not deleted because it may be
            needed for server rebuilds. By hiding it from the default image list,
            it’s easier for end users to find and use a more up-to-date version of
            this image. *(Since Image API v2.7)*
        checksum:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            An MD5 hash over the image data. The value might be `null` (JSON null data type),
            as this field is no longer populated by the Image Service beginning with the
            Victoria release. It remains present for backward compatibility with legacy
            images. To validate image data, instead use the secure multihash fields
            `os_hash_algo` and `os_hash_value`.
          maxLength: 32
        os_hash_algo:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            The algorithm used to compute a secure hash of the image data for this
            image. The result of the computation is displayed as the value of the
            `os_hash_value` property. The value might be `null` (JSON null
            data type). The algorithm used is chosen by the cloud operator; it
            may not be configured by end users. *(Since Image API v2.7)*
          maxLength: 64
        os_hash_value:
          type:
            - 'null'
            - string
          readOnly: true
          description: |-
            The hexdigest of the secure hash of the image data computed using the
            algorithm whose name is the value of the `os_hash_algo` property.
            The value might be `null` (JSON null data type) if data has not
            yet been associated with this image, or if the image was created using
            a version of the Image Service API prior to version 2.7.
            *(Since Image API v2.7)*
          maxLength: 128
        owner:
          type:
            - 'null'
            - string
          description: |-
            An identifier for the owner of the image, usually the project (also
            called the “tenant”) ID.
            The value might be `null` (JSON null data type).
          maxLength: 255
        size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: |-
            The size of the image data, in bytes. The value
            might be `null` (JSON null data type).
          format: int64
        virtual_size:
          type:
            - 'null'
            - integer
          readOnly: true
          description: |-
            The virtual size of the image. The value might
            be `null` (JSON null data type).
          format: int64
        container_format:
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
          anyOf:
            - enum:
                - 
                - ami
                - ari
                - aki
                - bare
                - ovf
                - ova
                - docker
                - compressed
            - type:
                - 'null'
                - string
        disk_format:
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
          anyOf:
            - enum:
                - 
                - ami
                - ari
                - aki
                - vhd
                - vhdx
                - vmdk
                - raw
                - qcow2
                - vdi
                - iso
                - ploop
            - type:
                - 'null'
                - string
        created_at:
          type: string
          readOnly: true
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
        updated_at:
          type: string
          readOnly: true
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
        tags:
          type: array
          description: |-
            List of tags for this image, possibly an empty list.
          items:
            type: string
            maxLength: 255
        direct_url:
          type: string
          readOnly: true
          description: |-
            The URL to access the image file kept in external store. *It is present
            only if the* `show_image_direct_url` *option is* `true` *in the Image
            service’s configuration file.* **Because it presents a security risk, this
            option is disabled by default.**
        min_ram:
          type: integer
          description: |-
            Amount of RAM in MB that is required to boot the image.
            The value might be `null` (JSON null data type).
        min_disk:
          type: integer
          description: |-
            Amount of disk space in GB that is required to boot the image.
            The value might be `null` (JSON null data type).
        self:
          type: string
          readOnly: true
          description: |-
            The URL for the virtual machine image.
        file:
          type: string
          readOnly: true
          description: |-
            The URL for the virtual machine image file.
        stores:
          type: string
          readOnly: true
          description: Store in which image data resides.  Only present when the operator
            has enabled multiple stores.  May be a comma-separated list of store identifiers.
        schema:
          type: string
          readOnly: true
          description: |-
            The URL for the schema describing a virtual machine image.
        locations:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                maxLength: 255
              metadata:
                type: object
              validation_data:
                description: Values to be used to populate the corresponding image
                  properties. If the image status is not 'queued', values must exactly
                  match those already contained in the image properties.
                type: object
                writeOnly: true
                additionalProperties: false
                properties:
                  checksum:
                    type: string
                    minLength: 32
                    maxLength: 32
                  os_hash_algo:
                    type: string
                    maxLength: 64
                  os_hash_value:
                    type: string
                    maxLength: 128
                required:
                  - os_hash_algo
                  - os_hash_value
            required:
              - url
              - metadata
          description: |-
            A list of objects, each of which describes an image location. Each object
            contains a `url` key, whose value is a URL specifying a location, and a
            `metadata` key, whose value is a dict of key:value pairs containing
            information appropriate to the use of whatever external store is indicated
            by the URL. *This list appears only if the* `show_multiple_locations`
            *option is set to* `true` *in the Image service’s configuration file.*
            **Because it presents a security risk, this option is disabled by
            default.**
      additionalProperties:
        type: string
    ImagesTasksGet_Task_InfoResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            name: task
            properties:
              id:
                description: An identifier for the task
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
                type: string
              type:
                description: The type of task represented by this content
                enum:
                  - import
                  - api_image_import
                  - location_import
                type: string
              status:
                description: The current status of this task
                enum:
                  - pending
                  - processing
                  - success
                  - failure
                type: string
              input:
                description: The parameters required by task, JSON blob
                type:
                  - 'null'
                  - object
              result:
                description: The result of current task, JSON blob
                type:
                  - 'null'
                  - object
              owner:
                description: An identifier for the owner of this task
                type: string
              message:
                description: Human-readable informative message only included when
                  appropriate (usually on failure)
                type: string
              image_id:
                description: Image associated with the task
                type: string
              request_id:
                description: Human-readable informative request-id
                type: string
              user_id:
                description: User associated with the task
                type: string
              expires_at:
                description: Datetime when this resource would be subject to removal
                type:
                  - 'null'
                  - string
              created_at:
                description: Datetime when this resource was created
                type: string
              updated_at:
                description: Datetime when this resource was updated
                type: string
              self:
                readOnly: true
                type: string
              schema:
                readOnly: true
                type: string
            additionalProperties: false
          description: |-
            A list of *task* objects, associated with the given image.
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    ImagesImportImport_ImageRequest:
      type: object
      properties:
        method:
          type: object
          properties:
            name:
              type: string
            uri:
              type: string
            glance_image_id:
              type: string
            glance_region:
              type: string
            glance_service_interface:
              type: string
          description: |-
            A JSON object indicating what import method you wish to use to import
            your image. The content of this JSON object is another JSON object
            with a `name` field whose value is the identifier for the import
            method.
        stores:
          type: array
          items:
            type: string
          description: |-
            If present contains the list of store id to import the image binary data
            to.
        all_stores:
          type: boolean
          description: |-
            When set to True the data will be imported to the set of stores you may
            consume from this particular deployment of Glance (ie: the same set of
            stores returned to a call to /v2/info/stores on the glance-api the request
            hits).
            This can’t be used simultaneously with the `stores` parameter.
        all_stores_must_success:
          type: boolean
    ImagesImportImport_ImageResponse: {}
    ImagesActionsDeactivateDeactivateRequest:
      type: object
      description: Request of the images/image_id/actions/deactivate:post operation
    ImagesActionsDeactivateResponse:
      type: object
      description: Response of the images/image_id/actions/deactivate:post operation
    ImagesActionsReactivateReactivateRequest:
      type: object
      description: Request of the images/image_id/actions/reactivate:post operation
    ImagesActionsReactivateResponse:
      type: object
      description: Response of the images/image_id/actions/reactivate:post operation
    ImagesFileDownloadResponse:
      type: string
      format: binary
    ImagesFileUploadRequest:
      type: string
      format: binary
    ImagesStageStageRequest:
      type: object
      description: Request of the images/image_id/stage:put operation
    ImagesStageResponse:
      type: object
      description: Response of the images/image_id/stage:put operation
    ImagesLocationsAdd_LocationRequest:
      type: object
      properties:
        url:
          type: string
          maxLength: 255
          description: |-
            The URL of the new location to be added in the image.
        metadata:
          type: object
        validation_data:
          description: |-
            An image metadata in key:value pairs containing values of
            `os_hash_value` and `os_hash_algo` to be added to the image.
            If `do_secure_hash` is not passed then it is the responsibility of
            the consumer of location add API to provide the correct values in
            `validation_data`’
          type: object
          writeOnly: true
          additionalProperties: false
          properties:
            checksum:
              type: string
              minLength: 32
              maxLength: 32
            os_hash_algo:
              type: string
              maxLength: 64
            os_hash_value:
              type: string
              maxLength: 128
          required:
            - os_hash_algo
            - os_hash_value
      required:
        - url
        - metadata
    ImagesLocationsAdd_LocationResponse:
      type: array
      description: A set of URLs to access the image file kept in external store
      items:
        type: object
        properties:
          url:
            type: string
            maxLength: 255
          metadata:
            type: object
          validation_data:
            description: Values to be used to populate the corresponding image properties.
              If the image status is not 'queued', values must exactly match those
              already contained in the image properties.
            type: object
            writeOnly: true
            additionalProperties: false
            properties:
              checksum:
                type: string
                minLength: 32
                maxLength: 32
              os_hash_algo:
                type: string
                maxLength: 64
              os_hash_value:
                type: string
                maxLength: 128
            required:
              - os_hash_algo
              - os_hash_value
        required:
          - url
          - metadata
    ImagesLocationsGet_LocationsResponse:
      type: array
      description: A set of URLs to access the image file kept in external store
      items:
        type: object
        properties:
          url:
            type: string
            maxLength: 255
          metadata:
            type: object
          validation_data:
            description: Values to be used to populate the corresponding image properties.
              If the image status is not 'queued', values must exactly match those
              already contained in the image properties.
            type: object
            writeOnly: true
            additionalProperties: false
            properties:
              checksum:
                type: string
                minLength: 32
                maxLength: 32
              os_hash_algo:
                type: string
                maxLength: 64
              os_hash_value:
                type: string
                maxLength: 128
            required:
              - os_hash_algo
              - os_hash_value
        required:
          - url
          - metadata
    ImagesTagUpdateRequest:
      type: object
      description: Request of the images/image_id/tags/tag_value:put operation
    ImagesTagUpdateResponse:
      type: object
      description: Response of the images/image_id/tags/tag_value:put operation
    ImagesMembersListResponse:
      type: object
      properties:
        members:
          type: array
          items:
            name: member
            properties:
              member_id:
                type: string
                description: An identifier for the image member (tenantId)
              image_id:
                type: string
                description: An identifier for the image
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
              created_at:
                type: string
                description: Date and time of image member creation
              updated_at:
                type: string
                description: Date and time of last modification of image member
              status:
                type: string
                description: The status of this image member
                enum:
                  - pending
                  - accepted
                  - rejected
              schema:
                readOnly: true
                type: string
            additionalProperties: false
          description: |-
            A list of *member* objects, as described by the [Image Members Schema](#image-members-schema). Each *member* object describes a member with whom
            this image is being shared.
        first:
          type: string
        next:
          type: string
        schema:
          type: string
    ImagesMembersCreateRequest:
      type: object
      description: Request of the images/image_id/members:post operation
    ImagesMembersCreateResponse:
      type: object
      properties:
        member_id:
          type: string
          description: |-
            The ID of the image member. An image member is usually a project (also
            called the “tenant”) with whom the image is shared.
        image_id:
          type: string
          description: |-
            The UUID of the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
        created_at:
          type: string
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
        updated_at:
          type: string
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
        status:
          type: string
          description: |-
            The status of this image member. Value is one of `pending`,
            `accepted`, `rejected`.
          enum:
            - pending
            - accepted
            - rejected
        schema:
          readOnly: true
          type: string
          description: |-
            The URL for the schema describing an image member.
      additionalProperties: false
    ImagesMemberShowResponse:
      type: object
      properties:
        member_id:
          type: string
          description: |-
            The ID of the image member. An image member is usually a project (also
            called the “tenant”) with whom the image is shared.
        image_id:
          type: string
          description: |-
            The UUID of the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
        created_at:
          type: string
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
        updated_at:
          type: string
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
        status:
          type: string
          description: |-
            The status of this image member. Value is one of `pending`,
            `accepted`, `rejected`.
          enum:
            - pending
            - accepted
            - rejected
        schema:
          readOnly: true
          type: string
          description: |-
            The URL for the schema describing an image member.
      additionalProperties: false
    ImagesMemberUpdateRequest:
      type: object
      description: Request of the images/image_id/members/member_id:put operation
    ImagesMemberUpdateResponse:
      type: object
      properties:
        member_id:
          type: string
          description: |-
            The ID of the image member. An image member is usually a project (also
            called the “tenant”) with whom the image is shared.
        image_id:
          type: string
          description: |-
            The UUID of the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
        created_at:
          type: string
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
        updated_at:
          type: string
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
        status:
          type: string
          description: |-
            The status of this image member. Value is one of `pending`,
            `accepted`, `rejected`.
          enum:
            - pending
            - accepted
            - rejected
        schema:
          readOnly: true
          type: string
          description: |-
            The URL for the schema describing an image member.
      additionalProperties: false
    TasksCreateRequest:
      type: object
      properties:
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        type:
          description: |-
            The type of task represented by this content.
          enum:
            - import
            - api_image_import
            - location_import
          type: string
        status:
          description: The current status of this task
          enum:
            - pending
            - processing
            - success
            - failure
          type: string
        input:
          description: |-
            A JSON object specifying the input parameters to the task. Consult your
            cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        owner:
          description: An identifier for the owner of this task
          type: string
        message:
          description: Human-readable informative message only included when appropriate
            (usually on failure)
          type: string
        image_id:
          description: Image associated with the task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        user_id:
          description: User associated with the task
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        created_at:
          description: Datetime when this resource was created
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        self:
          readOnly: true
          type: string
        schema:
          readOnly: true
          type: string
      additionalProperties: false
    TasksCreateResponse:
      type: object
      properties:
        id:
          description: |-
            The UUID of the task.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        type:
          description: |-
            The type of task represented by this content.
          enum:
            - import
            - api_image_import
            - location_import
          type: string
        status:
          description: |-
            The current status of this task. The value can be `pending`,
            `processing`, `success` or `failure`.
          enum:
            - pending
            - processing
            - success
            - failure
          type: string
        input:
          description: |-
            A JSON object specifying the input parameters to the task. Consult your
            cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        result:
          description: |-
            A JSON object specifying information about the ultimate outcome of the
            task. Consult your cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        owner:
          description: |-
            An identifier for the owner of the task, usually the tenant ID.
          type: string
        message:
          description: |-
            Human-readable text, possibly an empty string, usually displayed in an
            error situation to provide more information about what has occurred.
          type: string
        image_id:
          description: Image associated with the task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        user_id:
          description: User associated with the task
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        created_at:
          description: |-
            The date and time when the task was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
          type: string
        updated_at:
          description: |-
            The date and time when the task was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          type: string
        self:
          readOnly: true
          type: string
          description: |-
            A URI for this task.
        schema:
          readOnly: true
          type: string
          description: |-
            The URI for the schema describing an image task.
      additionalProperties: false
    TasksIndexRequest:
      type: object
      properties:
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        type:
          description: The type of task represented by this content
          enum:
            - import
            - api_image_import
            - location_import
          type: string
        status:
          description: The current status of this task
          enum:
            - pending
            - processing
            - success
            - failure
          type: string
        input:
          description: The parameters required by task, JSON blob
          type:
            - 'null'
            - object
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        owner:
          description: An identifier for the owner of this task
          type: string
        message:
          description: Human-readable informative message only included when appropriate
            (usually on failure)
          type: string
        image_id:
          description: Image associated with the task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        user_id:
          description: User associated with the task
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        created_at:
          description: Datetime when this resource was created
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        self:
          readOnly: true
          type: string
        schema:
          readOnly: true
          type: string
      additionalProperties: false
    TasksListResponse:
      type: object
      properties:
        schema:
          type: string
          description: |-
            The URI for the schema describing an image task list.
        tasks:
          type: array
          items:
            type: object
            properties:
              id:
                description: An identifier for the task
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
                type: string
              type:
                description: The type of task represented by this content
                enum:
                  - import
                  - api_image_import
                  - location_import
                type: string
              status:
                description: The current status of this task
                enum:
                  - pending
                  - processing
                  - success
                  - failure
                type: string
              input:
                description: The parameters required by task, JSON blob
                type:
                  - 'null'
                  - object
              result:
                description: The result of current task, JSON blob
                type:
                  - 'null'
                  - object
              owner:
                description: An identifier for the owner of this task
                type: string
              message:
                description: Human-readable informative message only included when
                  appropriate (usually on failure)
                type: string
              image_id:
                description: Image associated with the task
                type: string
              request_id:
                description: Human-readable informative request-id
                type: string
              user_id:
                description: User associated with the task
                type: string
              expires_at:
                description: Datetime when this resource would be subject to removal
                type:
                  - 'null'
                  - string
              created_at:
                description: Datetime when this resource was created
                type: string
              updated_at:
                description: Datetime when this resource was updated
                type: string
              self:
                readOnly: true
                type: string
              schema:
                readOnly: true
                type: string
          description: |-
            A list of sparse *task* objects. Each object contains the following
            fields:

            * `created_at`
            * `id`
            * `owner`
            * `schema`
            * `self`
            * `status`
            * `type`
            * `updated_at`
      name: tasks
    TaskGetRequest:
      type: object
      properties:
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        type:
          description: The type of task represented by this content
          enum:
            - import
            - api_image_import
            - location_import
          type: string
        status:
          description: The current status of this task
          enum:
            - pending
            - processing
            - success
            - failure
          type: string
        input:
          description: The parameters required by task, JSON blob
          type:
            - 'null'
            - object
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        owner:
          description: An identifier for the owner of this task
          type: string
        message:
          description: Human-readable informative message only included when appropriate
            (usually on failure)
          type: string
        image_id:
          description: Image associated with the task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        user_id:
          description: User associated with the task
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        created_at:
          description: Datetime when this resource was created
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        self:
          readOnly: true
          type: string
        schema:
          readOnly: true
          type: string
      additionalProperties: false
    TaskGetResponse:
      type: object
      properties:
        id:
          description: |-
            The UUID of the task.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        type:
          description: |-
            The type of task represented by this content.
          enum:
            - import
            - api_image_import
            - location_import
          type: string
        status:
          description: |-
            The current status of this task. The value can be `pending`,
            `processing`, `success` or `failure`.
          enum:
            - pending
            - processing
            - success
            - failure
          type: string
        input:
          description: |-
            A JSON object specifying the input parameters to the task. Consult your
            cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        result:
          description: |-
            A JSON object specifying information about the ultimate outcome of the
            task. Consult your cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        owner:
          description: |-
            An identifier for the owner of the task, usually the tenant ID.
          type: string
        message:
          description: |-
            Human-readable text, possibly an empty string, usually displayed in an
            error situation to provide more information about what has occurred.
          type: string
        image_id:
          description: Image associated with the task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        user_id:
          description: User associated with the task
          type: string
        expires_at:
          description: |-
            The date and time when the task is subject to removal. While the *task
            object*, that is, the record describing the task is subject to deletion,
            the result of the task (for example, an imported image) still exists.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

            This value is only set when the task reaches status `success` or
            `failure`. Otherwise its value is `null`. It may not appear in
            the response when its value is `null`.
          type:
            - 'null'
            - string
        created_at:
          description: |-
            The date and time when the task was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
          type: string
        updated_at:
          description: |-
            The date and time when the task was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          type: string
        self:
          readOnly: true
          type: string
          description: |-
            A URI for this task.
        schema:
          readOnly: true
          type: string
          description: |-
            The URI for the schema describing an image task.
      additionalProperties: false
    TaskDeleteRequest:
      type: object
      properties:
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        type:
          description: The type of task represented by this content
          enum:
            - import
            - api_image_import
            - location_import
          type: string
        status:
          description: The current status of this task
          enum:
            - pending
            - processing
            - success
            - failure
          type: string
        input:
          description: The parameters required by task, JSON blob
          type:
            - 'null'
            - object
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        owner:
          description: An identifier for the owner of this task
          type: string
        message:
          description: Human-readable informative message only included when appropriate
            (usually on failure)
          type: string
        image_id:
          description: Image associated with the task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        user_id:
          description: User associated with the task
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        created_at:
          description: Datetime when this resource was created
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        self:
          readOnly: true
          type: string
        schema:
          readOnly: true
          type: string
      additionalProperties: false
    InfoImportGet_Image_ImportResponse:
      type: object
      properties:
        import-methods:
          type: object
          properties:
            description:
              type: string
            type:
              type: string
            value:
              type: array
              items:
                type: string
          description: |-
            A JSON object containing a `value` element, which is an array of
            string identifiers indicating what import methods are available in
            the cloud in which the call is made. This list may be empty.
    InfoStoresGet_StoresResponse:
      type: object
      properties:
        stores:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              default:
                type: boolean
          description: |-
            A list of store objects, where each store object may contain the
            following fields:

            `id`
            :   Operator-defined identifier for the store.

            `description`
            :   Operator-supplied description of this store.

            `default` (optional)
            :   Only present on the default store. This is the store where image
                data is placed if you do not indicate a specific store when supplying
                data to the Image Service. (See the [Image data](#image-data)
                and [Interoperable image import](#image-import-process) sections
                for more information.)

            `read-only` (optional)
            :   Included only when the store is read only.
    InfoUsageGet_UsageResponse:
      type: object
      properties:
        usage:
          type: array
          items:
            type: object
            additionalProperties: true
            validation_data:
              type: object
              additionalProperties: false
              properties:
                usage:
                  type: integer
                limit:
                  type: integer
      additionalProperties: false
    InfoStoresDetailGet_Stores_DetailResponse:
      type: object
      properties:
        stores:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              default:
                type: boolean
              type:
                type: string
              weight:
                type: number
              properties:
                type: object
                additionalProperties: true
          description: |-
            A list of store objects, where each store object may contain the
            following fields:

            `id`
            :   Operator-defined identifier for the store.

            `type`
            :   Specify the type of store.

            `description`
            :   Operator-supplied description of this store.

            `default` (optional)
            :   Only present on the default store. This is the store where image
                data is placed if you do not indicate a specific store when supplying
                data to the Image Service. (See the [Image data](#image-data)
                and [Interoperable image import](#image-import-process) sections
                for more information.)

            `read-only` (optional)
            :   Included only when the store is read only.

            `weight` (default 0)
            :   Contains weight (positive integer) to sort image locations for
                preference.

            `properties`
            :   Contains store specific properties
    CacheGet_Cache_StateResponse:
      type: object
      description: Response of the cache:get operation
    CacheQueue_Image_From_ApiRequest:
      type: object
      description: Request of the cache/image_id:put operation
    CacheQueue_Image_From_ApiResponse:
      type: object
      description: Response of the cache/image_id:put operation
  parameters:
    limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
    marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    id:
      in: query
      name: id
      description: id filter parameter
      schema:
        type: string
    name:
      in: query
      name: name
      description: Filters the response by a name, as a string. A valid value is the
        name of an image.
      schema:
        type: string
    visibility:
      in: query
      name: visibility
      description: Filters the response by an image visibility value. A valid value
        is public, private, community, shared, or all. (Note that if you filter on
        shared, the images included in the response will only be those where your
        member status is accepted unless you explicitly include a member_status filter
        in the request.) If you omit this parameter, the response shows public, private,
        and those shared images with a member status of accepted.
      schema:
        type: string
        enum:
          - public
          - private
          - community
          - shared
          - all
    member_status:
      in: query
      name: member_status
      description: Filters the response by a member status. A valid value is accepted,
        pending, rejected, or all. Default is accepted.
      schema:
        type: string
        enum:
          - accepted
          - pending
          - rejected
          - all
    owner:
      in: query
      name: owner
      description: Filters the response by a project (also called a “tenant”) ID.
        Shows only images that are shared with you by the specified owner.
      schema:
        type: string
    status:
      in: query
      name: status
      description: Filters the response by an image status.
      schema:
        type: string
    size_min:
      in: query
      name: size_min
      description: Filters the response by a minimum image size, in bytes.
      schema:
        type: string
    size_max:
      in: query
      name: size_max
      description: Filters the response by a maximum image size, in bytes.
      schema:
        type: string
    protected:
      in: query
      name: protected
      description: Filters the response by the ‘protected’ image property. A valid
        value is one of ‘true’, ‘false’ (must be all lowercase). Any other value will
        result in a 400 response.
      schema:
        type: boolean
    os_hidden:
      in: query
      name: os_hidden
      description: When true, filters the response to display only "hidden" images.
        By default, "hidden" images are not included in the image-list response. (Since
        Image API v2.7)
      schema:
        type: boolean
      x-openstack:
        min-ver: '2.7'
    sort_key:
      in: query
      name: sort_key
      description: Sorts the response by an attribute, such as name, id, or updated_at.
        Default is created_at. The API uses the natural sorting direction of the sort_key
        image attribute.
      schema:
        type: string
    sort_dir:
      in: query
      name: sort_dir
      description: Sorts the response by a set of one or more sort direction and attribute
        (sort_key) combinations. A valid value for the sort direction is asc (ascending)
        or desc (descending). If you omit the sort direction in a set, the default
        is desc.
      schema:
        type: string
        enum:
          - asc
          - desc
    sort:
      in: query
      name: sort
      description: 'Sorts the response by one or more attribute and sort direction
        combinations. You can also set multiple sort keys and directions. Default
        direction is desc. Use the comma (,) character to separate multiple values.
        For example: `sort=name:asc,status:desc`'
      schema:
        type: string
    tag:
      in: query
      name: tag
      description: Filters the response by the specified tag value. May be repeated,
        but keep in mind that you're making a conjunctive query, so only images containing
        all the tags specified will appear in the response.
      schema:
        type: array
        items:
          type: string
      style: form
      explode: true
    created_at:
      in: query
      name: created_at
      description: Specify a comparison filter based on the date and time when the
        resource was created.
      schema:
        type: string
        format: date-time
    updated_at:
      in: query
      name: updated_at
      description: Specify a comparison filter based on the date and time when the
        resource was most recently modified.
      schema:
        type: string
        format: date-time
    range:
      in: header
      name: Range
      description: The range of image data requested. Note that multi range requests
        are not supported.
      schema:
        type: string
    content-type:
      in: header
      name: Content-Type
      description: The media type descriptor of the body, namely application/octet-stream
      schema:
        type: string
    x-image-meta-store:
      in: header
      name: X-Image-Meta-Store
      description: A store identifier to upload or import image data. Should only
        be included when making a request to a cloud that supports multiple backing
        stores. Use the Store Discovery call to determine an appropriate store identifier.
        Simply omit this header to use the default store.
      schema:
        type: string
    metadefs_namespaces_resource_types_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_resource_types_resource_type:
      in: path
      name: resource_type
      description: resource_type parameter for /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_properties_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/properties/{property_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_properties_property_name:
      in: path
      name: property_name
      description: property_name parameter for /v2/metadefs/namespaces/{namespace_name}/properties/{property_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_objects_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/objects/{object_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_objects_object_name:
      in: path
      name: object_name
      description: object_name parameter for /v2/metadefs/namespaces/{namespace_name}/objects/{object_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_tags_namespace_name:
      in: path
      name: namespace_name
      description: namespace_name parameter for /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name}
        API
      schema:
        type: string
      required: true
    metadefs_namespaces_tags_tag_name:
      in: path
      name: tag_name
      description: tag_name parameter for /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name}
        API
      schema:
        type: string
      required: true
    images_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id} API
      schema:
        type: string
      required: true
    images_tasks_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/tasks API
      schema:
        type: string
      required: true
    images_import_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/import API
      schema:
        type: string
      required: true
    stores_store_id:
      in: path
      name: store_id
      description: store_id parameter for /v2/stores/{store_id}/{image_id} API
      schema:
        type: string
      required: true
    stores_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/stores/{store_id}/{image_id} API
      schema:
        type: string
      required: true
    images_actions_deactivate_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/actions/deactivate
        API
      schema:
        type: string
      required: true
    images_actions_reactivate_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/actions/reactivate
        API
      schema:
        type: string
      required: true
    images_file_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/file API
      schema:
        type: string
      required: true
    images_stage_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/stage API
      schema:
        type: string
      required: true
    images_locations_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/locations API
      schema:
        type: string
      required: true
    images_tags_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/tags/{tag_value} API
      schema:
        type: string
      required: true
    images_tags_tag_value:
      in: path
      name: tag_value
      description: tag_value parameter for /v2/images/{image_id}/tags/{tag_value}
        API
      schema:
        type: string
      required: true
    images_members_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/images/{image_id}/members/{member_id}
        API
      schema:
        type: string
      required: true
    images_members_member_id:
      in: path
      name: member_id
      description: member_id parameter for /v2/images/{image_id}/members/{member_id}
        API
      schema:
        type: string
      required: true
    tasks_task_id:
      in: path
      name: task_id
      description: task_id parameter for /v2/tasks/{task_id} API
      schema:
        type: string
      required: true
    cache_image_id:
      in: path
      name: image_id
      description: image_id parameter for /v2/cache/{image_id} API
      schema:
        type: string
      required: true
  headers:
    Content-Type:
      description: The media type descriptor of the body, namely application/octet-stream
      schema:
        type: string
    Content-Length:
      description: The length of the body in octets (8-bit bytes)
      schema:
        type: string
    Content-Md5:
      description: The MD5 checksum of the body
      schema:
        type: string
    Content-Range:
      description: The content range of image data
      schema:
        type: string
    OpenStack-image-store-ids:
      description: list of available stores
      schema:
        type: array
        items:
          type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
tags:
  - name: schemas
  - name: metadata-definition-resource-types
  - name: metadata-definition-namespaces
  - name: metadata-definition-properties
  - name: metadata-definition-objects
  - name: metadata-definition-tags
  - name: images
  - name: stores
  - name: tasks
  - name: info
  - name: cache
security:
  - ApiKeyAuth: []
