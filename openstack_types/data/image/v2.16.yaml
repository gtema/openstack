openapi: 3.1.0
info:
  description: |-
    Image API provided by Glance service
  title: OpenStack Image API
  version: '2.16'
paths:
  /v2/cache:
    delete:
      description: |-
        Clears the cache and its queue.
        *(Since Image API v2.14)*

        Normal response codes: 204

        Error response codes: 400, 401, 403
      operationId: cache:delete
      responses:
        '204':
          description: Ok
      summary: Clear images from cache
      tags:
        - cache
    get:
      description: |-
        Lists all images in cache or queue.
        *(Since Image API v2.14)*

        Normal response codes: 200

        Error response codes: 400, 401, 403
      operationId: cache:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheGet_Cache_StateResponse'
          description: Ok
      summary: Query cache status
      tags:
        - cache
  /v2/cache/{image_id}:
    delete:
      description: |-
        Deletes a image from cache.
        *(Since Image API v2.14)*

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404
      operationId: cache/image_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete image from cache
      tags:
        - cache
    parameters:
      - $ref: '#/components/parameters/cache_image_id'
    put:
      description: |-
        Queues image for caching.
        *(Since Image API v2.14)*

        Normal response codes: 202

        Error response codes: 400, 401, 403, 404
      operationId: cache/image_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CacheQueue_Image_From_ApiRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheQueue_Image_From_ApiResponse'
          description: Ok
      summary: Queue image
      tags:
        - cache
  /v2/images:
    get:
      description: |-
        Lists public virtual machine (VM) images.
        *(Since Image API v2.0)*

        **Pagination**

        Returns a subset of the larger collection of images and a link that you can use
        to get the next set of images. You should always check for the presence of a
        `next` link and use it as the URI in a subsequent HTTP GET request. You
        should follow this pattern until a `next` link is no longer provided.

        The `next` link preserves any query parameters that you send in your initial
        request. You can use the `first` link to jump back to the first page of the
        collection. If you prefer to paginate through images manually, use the
        `limit` and `marker` parameters.

        **Query Filters**

        The list operation accepts query parameters to filter the response.

        A client can provide direct comparison filters by using most image attributes,
        such as `name=Ubuntu`, `visibility=public`, and so on.

        To filter using image tags, use the filter `tag` (note the singular). To
        filter on multiple tags, include each tag separately in the query. For
        example, to find images with the tag **ready**, include `tag=ready` in your
        query string. To find images tagged with **ready** and **approved**, include
        `tag=ready&tag=approved` in your query string. (Note that only images
        containing *both* tags will be included in the response.)

        A client cannot use any `link` in the json-schema, such as self, file, or
        schema, to filter the response.

        You can list VM images that have a status of `active`, `queued`, or
        `saving`.

        **The** `in` **Operator**

        As a convenience, you may specify several values for any of the following
        fields by using the `in` operator:

        For most of these, usage is straight forward. For example, to list images
        in queued or saving status, use:

        `GET /v2/images?status=in:saving,queued`

        To find images in a particular list of image IDs, use:

        `GET /v2/images?id=in:3afb79c1-131a-4c38-a87c-bc4b801d14e6,2e011209-660f-44b5-baf2-2eb4babae53d`

        Using the `in` operator with the `name` property of images can be a bit
        trickier, depending upon how creatively you have named your images. The
        general rule is that if an image name contains a comma (`,`), you must
        enclose the entire name in quotation marks (`"`). As usual, you must URL
        encode any characters that require it.

        For example, to find images named `glass, darkly` or `share me`, you would
        use the following filter specification:

        `GET v2/images?name=in:"glass,%20darkly",share%20me`

        As with regular filtering by name, you must specify the complete name you are
        looking for. Thus, for example, the query string `name=in:glass,share` will
        only match images with the exact name `glass` or the exact name `share`.
        It will not find an image named `glass, darkly` or an image named `share
        me`.

        **Size Comparison Filters**

        You can use the `size_min` and `size_max` query parameters to filter images
        that are greater than or less than the image size. The size, in bytes, is the
        size of an image on disk.

        For example, to filter the container to include only images that are from 1 to
        4 MB, set the `size_min` query parameter to `1048576` and the `size_max`
        query parameter to `4194304`.

        **Time Comparison Filters**

        You can use a *comparison operator* along with the `created_at` or
        `updated_at` fields to filter your results. Specify the operator first, a
        colon (`:`) as a separator, and then the time in [ISO 8601 Format](https://en.wikipedia.org/wiki/ISO_8601). Available comparison operators
        are:

        For example:

        **Sorting**

        You can use query parameters to sort the results of this operation.

        To sort the response, use the `sort_key` and `sort_dir` query
        parameters:

        Alternatively, specify the `sort` query parameter:

        Normal response codes: 200

        Error response codes: 400, 401, 403
      operationId: images:get
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/member_status'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/os_hidden'
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/protected'
        - $ref: '#/components/parameters/size_max'
        - $ref: '#/components/parameters/size_min'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/tag'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/visibility'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesListResponse'
          description: Ok
      summary: List images
      tags:
        - images
    post:
      description: |-
        Creates a catalog record for an operating system disk image.
        *(Since Image API v2.0)*

        The `Location` response header contains the URI for the image.

        A multiple store backend support is introduced in the Rocky release
        as a part of the EXPERIMENTAL Image API v2.8. Since Image API v2.8 a
        new header `OpenStack-image-store-ids` which contains the list of
        available stores will be included in response. This header is only
        included if multiple backend stores are supported.

        The response body contains the new image entity.

        Synchronous Postconditions

        Normal response codes: 201

        Error response codes: 400, 401, 403, 409, 413, 415
      operationId: images:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesCreateResponse'
          description: Ok
          headers:
            openstack-image-store-ids:
              $ref: '#/components/headers/openstack-image-store-ids'
      summary: Create image
      tags:
        - images
  /v2/images/{image_id}:
    delete:
      description: |-
        (Since Image API v2.0) Deletes an image.

        You cannot delete images with the `protected` attribute set to
        `true` (boolean).

        Preconditions

        Synchronous Postconditions

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 409
      operationId: images/image_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete image
      tags:
        - images
    get:
      description: |-
        Shows details for an image.
        *(Since Image API v2.0)*

        The response body contains a single image entity.

        Preconditions

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: images/image_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageShowResponse'
          description: Ok
      summary: Show image
      tags:
        - images
    parameters:
      - $ref: '#/components/parameters/images_image_id'
    patch:
      description: |-
        Updates an image.
        *(Since Image API v2.0)*

        Conceptually, you update an image record by patching the JSON representation of
        the image, passing a request body conforming to one of the following media
        types:

        Attempting to make a PATCH call using some other media type will provoke a
        response code of 415 (Unsupported media type).

        The `application/openstack-images-v2.1-json-patch` media type provides a
        useful and compatible subset of the functionality defined in JavaScript Object
        Notation (JSON) Patch [RFC6902](http://tools.ietf.org/html/rfc6902), which
        defines the `application/json-patch+json` media type.

        For information about the PATCH method and the available media types, see
        [Image API v2 HTTP PATCH media types](http://specs.openstack.org/openstack/glance-specs/specs/api/v2/http-patch-image-api-v2.html).

        Attempting to modify some image properties will cause the entire request to
        fail with a 403 (Forbidden) response code:

        Attempting to add a location path to an image that is not in `queued` or
        `active` state will result in a 409 (Conflict) response code
        *(since Image API v2.4)*.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 413, 415
      operationId: images/image_id:patch
      requestBody:
        content:
          application/openstack-images-v2.1-json-patch:
            schema:
              $ref: '#/components/schemas/ImageUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUpdateResponse'
          description: Ok
      summary: Update image
      tags:
        - images
  /v2/images/{image_id}/actions/deactivate:
    parameters:
      - $ref: '#/components/parameters/images_actions_deactivate_image_id'
    post:
      description: |-
        Deactivates an image.
        *(Since Image API v2.3)*

        By default, this operation is restricted to administrators only.

        If you try to download a deactivated image, you will receive a 403 (Forbidden)
        response code. Additionally, only administrative users can view image
        locations for deactivated images.

        The deactivate operation returns an error if the image status is
        not `active` or `deactivated`.

        Preconditions

        Normal response codes: 204

        Error response codes: 400, 403, 404
      operationId: images/image_id/actions/deactivate:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesActionsDeactivateDeactivateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesActionsDeactivateResponse'
          description: Ok
      summary: Deactivate image
      tags:
        - images
  /v2/images/{image_id}/actions/reactivate:
    parameters:
      - $ref: '#/components/parameters/images_actions_reactivate_image_id'
    post:
      description: |-
        Reactivates an image.
        *(Since Image API v2.3)*

        By default, this operation is restricted to administrators only.

        The reactivate operation returns an error if the image status is
        not `active` or `deactivated`.

        Preconditions

        Normal response codes: 204

        Error response codes: 400, 403, 404
      operationId: images/image_id/actions/reactivate:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesActionsReactivateReactivateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesActionsReactivateResponse'
          description: Ok
      summary: Reactivate image
      tags:
        - images
  /v2/images/{image_id}/file:
    get:
      description: |-
        Downloads binary image data.
        *(Since Image API v2.0)*

        Example call: `curl -i -X GET -H "X-Auth-Token: $token"
        $image_url/v2/images/{image_id}/file`

        The response body contains the raw binary data that represents the
        actual virtual disk. The `Content-Type` header contains the
        `application/octet-stream` value. The `Content-MD5` header
        contains an MD5 checksum of the image data. Use this checksum to
        verify the integrity of the image data.

        **Preconditions**

        **Synchronous Postconditions**

        Normal response codes: 200, 204, 206

        Error response codes: 400, 403, 404, 416
      operationId: images/image_id/file:get
      parameters:
        - $ref: '#/components/parameters/range'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesFileDownloadResponse'
          description: Ok
          headers:
            content-length:
              $ref: '#/components/headers/content-length'
            content-md5:
              $ref: '#/components/headers/content-md5'
            content-type:
              $ref: '#/components/headers/content-type'
        '204':
          description: Ok
        '206':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesFileDownloadResponse'
          description: Ok
          headers:
            content-length:
              $ref: '#/components/headers/content-length'
            content-md5:
              $ref: '#/components/headers/content-md5'
            content-range:
              $ref: '#/components/headers/content-range'
            content-type:
              $ref: '#/components/headers/content-type'
      summary: Download binary image data
      tags:
        - images
    parameters:
      - $ref: '#/components/parameters/images_file_image_id'
    put:
      description: |-
        Uploads binary image data.
        *(Since Image API v2.0)*

        Set the `Content-Type` request header to `application/octet-stream`.

        A multiple store backend support is introduced in the Rocky release
        as a part of the EXPERIMENTAL Image API v2.8.

        Beginning with API version 2.8, an optional `X-Image-Meta-Store`
        header may be added to the request. When present, the image data will be
        placed into the backing store whose identifier is the value of this
        header. If the store identifier specified is not recognized, a 400 (Bad
        Request) response is returned. When the header is not present, the image
        data is placed into the default backing store.

        Example call:

        **Preconditions**

        Before you can store binary image data, you must meet the following
        preconditions:

        **Synchronous Postconditions**

        **Troubleshooting**

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 409, 410, 413, 415, 503
      operationId: images/image_id/file:put
      parameters:
        - $ref: '#/components/parameters/content-type'
        - $ref: '#/components/parameters/x-image-meta-store'
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/ImagesFileUploadRequest'
      responses:
        '204':
          description: Ok
      summary: Upload binary image data
      tags:
        - images
  /v2/images/{image_id}/import:
    parameters:
      - $ref: '#/components/parameters/images_import_image_id'
    post:
      description: |-
        Signals the Image Service to complete the image import workflow
        by processing data that has been made available to the OpenStack
        image service.
        *(Since Image API v2.6)*

        In the `glance-direct` workflow, the data has been made available to the
        Image service via the [Stage binary image data](#image-stage-call) API
        call.

        In the `web-download` workflow, the data is made available to the Image
        service by being posted to an accessible location with a URL that you know.

        In the `copy-image` workflow, the data is made available to the Image
        service by copying existing image data to the staging area.

        In the `glance-download` workflow, the data is made available to the Image
        service by fetching an image accessible from another glance service specified
        by a region name and an image id that you know.

        Beginning with API version 2.8, an optional `stores` parameter may be added
        to the body request. When present, it contains the list of backing store
        identifiers to import the image binary data to. If at least one store
        identifier specified is not recognized, a 409 (Conflict) response is returned.
        When the parameter is not present, the image data is placed into the default
        backing store.

        For backwards compatibility, if the `stores` parameter is not specified, the
        header ‘X-Image-Meta-Store’ is evaluated.

        To import the data into the entire set of stores you may consume from this
        particular deployment of Glance without specifying each one of them, you can
        use the optional boolean body parameter `all_stores`.
        Note that this can’t be used simultaneously with the `stores` parameter.

        To set the behavior of the import workflow in case of error, you can use the
        optional boolean body parameter `all_stores_must_succeed`.
        When set to True (default), if an error occurs during the upload in at least one store,
        the workflow fails, the data is deleted from stores where copying is done and
        the state of the image remains unchanged.
        When set to False, the workflow will fail only if the upload fails
        on all stores specified. In case of a partial success, the locations added to
        the image will be the stores where the data has been correctly uploaded.

        The JSON request body specifies what import method you wish to use
        for this image request.

        **Preconditions**

        Before you can complete the interoperable image import workflow, you must meet
        the following preconditions:

        **Additional Preconditions**

        If you are using the `glance-direct` import method:

        If you are using the `web-download` import method:

        If you are using the `copy-image` import method:

        If you are using the `glance-download` import method:

        **Synchronous Postconditions**

        Normal response codes: 202

        Error response codes: 400, 401, 403, 404, 405, 409, 410, 413, 415, 503

        If the image import process is not enabled in your cloud, this request
        will result in a 404 response code with an appropriate message.
      operationId: images/image_id/import:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesImportImport_ImageRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesImportImport_ImageResponse'
          description: Ok
      summary: Import an image
      tags:
        - images
  /v2/images/{image_id}/locations:
    get:
      description: |-
        Lists all locations associated to an image with location url and
        store-id, accessible to only service user, for non service users
        API will return forbidden.

        Normal response codes: 200

        Error response codes: 403, 404
      operationId: images/image_id/locations:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesLocationsGet_LocationsResponse'
          description: Ok
      summary: Get Location
      tags:
        - images
    parameters:
      - $ref: '#/components/parameters/images_locations_image_id'
    post:
      description: |-
        Add location to an image which is in `queued` state. Accepts
        location url, validation_data in JSON body.

        Adding a location to an image is only allowed for the owner or
        a user with the service role. If these conditions are not met,
        a 403 (Forbidden) will be returned.

        Attempting to add a location path to an image that is not in `queued`
        state will result in a 409 (Conflict) response code

        Attempting to provide incorrect hash value in validation data(in the case
        of http store) to the image will result in a 400 (Bad Request) response code.

        Normal response codes: 200

        Error response codes: 400, 403, 404, 409
      operationId: images/image_id/locations:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesLocationsAdd_LocationRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesLocationsAdd_LocationResponse'
          description: Ok
      summary: Add Location
      tags:
        - images
  /v2/images/{image_id}/members:
    get:
      description: |-
        Lists the tenants that share this image.
        *(Since Image API v2.1)*

        If the image owner makes this call, the complete member list is
        returned.

        If a user who is an image member makes this call, the member list
        contains only information for that user.

        If a user who is not an image member makes this call, the call
        returns the HTTP `404` response code.

        Preconditions

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: images/image_id/members:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMembersListResponse'
          description: Ok
      summary: List image members
      tags:
        - images
    parameters:
      - $ref: '#/components/parameters/images_members_image_id'
    post:
      description: |-
        Adds a tenant ID as an image member.
        *(Since Image API v2.1)*

        Preconditions

        Synchronous Postconditions

        Troubleshooting

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 413
      operationId: images/image_id/members:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesMembersCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMembersCreateResponse'
          description: Ok
      summary: Create image member
      tags:
        - images
  /v2/images/{image_id}/members/{member_id}:
    delete:
      description: |-
        Deletes a tenant ID from the member list of an image.
        *(Since Image API v2.1)*

        Preconditions

        Synchronous Postconditions

        Troubleshooting

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404
      operationId: images/image_id/members/member_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete image member
      tags:
        - images
    get:
      description: |-
        Shows image member details.
        *(Since Image API v2.1)*

        Response body is a single image member entity.

        Preconditions

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: images/image_id/members/member_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMemberShowResponse'
          description: Ok
      summary: Show image member details
      tags:
        - images
    parameters:
      - $ref: '#/components/parameters/images_members_image_id'
      - $ref: '#/components/parameters/images_members_member_id'
    put:
      description: |-
        Sets the status for an image member.
        *(Since Image API v2.1)*

        This call allows an image member to change his or her *member status*.

        When an image is shared with you, you have immediate access to the image. What
        updating your member status on the image does for you is that it affects
        whether the image will appear in your image list response.

        For a more detailed discussion of image sharing, please consult [Image API v2
        Sharing](http://specs.openstack.org/openstack/glance-specs/specs/api/v2/sharing-image-api-v2.html).

        Preconditions

        Synchronous Postconditions

        Normal response codes: 200

        Error response codes: 400, 401, 404, 403
      operationId: images/image_id/members/member_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesMemberUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMemberUpdateResponse'
          description: Ok
      summary: Update image member
      tags:
        - images
  /v2/images/{image_id}/stage:
    parameters:
      - $ref: '#/components/parameters/images_stage_image_id'
    put:
      description: |-
        Places the binary image data in a staging area. It is not stored in
        the storage backend and is not accessible for download until after
        the [Image Import](#image-import-call) call is made.
        *(Since Image API v2.6)*

        Set the `Content-Type` request header to `application/octet-stream`.

        Example call:

        **Preconditions**

        Before you can stage binary image data, you must meet the following
        preconditions:

        **Synchronous Postconditions**

        **Troubleshooting**

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 405, 409, 410, 413, 415, 503

        If the image import process is not enabled in your cloud, this request
        will result in a 404 response code with an appropriate message.
      operationId: images/image_id/stage:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesStageStageRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesStageResponse'
          description: Ok
      summary: Stage binary image data
      tags:
        - images
  /v2/images/{image_id}/tags/{tag_value}:
    delete:
      operationId: images/image_id/tags/tag_value:delete
      responses:
        '204':
          description: Ok
      tags:
        - images
    parameters:
      - $ref: '#/components/parameters/images_tags_image_id'
      - $ref: '#/components/parameters/images_tags_tag_value'
    put:
      operationId: images/image_id/tags/tag_value:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesTagUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesTagUpdateResponse'
          description: Ok
      tags:
        - images
  /v2/images/{image_id}/tasks:
    get:
      description: |-
        Shows tasks associated with an image.
        *(Since Image API v2.12)*

        The response body contains list of tasks, possibly empty, associated
        with the specified image.

        Preconditions

        Normal response codes: 200

        Error response codes: 404
      operationId: images/image_id/tasks:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesTasksGet_Task_InfoResponse'
          description: Ok
      summary: Show tasks associated with image
      tags:
        - images
    parameters:
      - $ref: '#/components/parameters/images_tasks_image_id'
  /v2/info/import:
    get:
      description: |-
        Returns information concerning the constraints around image import in
        the cloud in which the call is made, for example, supported container
        formats, supported disk formats, maximum image size, etc. This call
        contains a `import-methods` field consisting of an array of string
        identifiers indicating what import methods are supported in the cloud
        in which the call is made.
        *(Since Image API v2.6)*

        Normal response codes: 200

        Error response codes: 400, 401, 403
      operationId: info/import:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoImportGet_Image_ImportResponse'
          description: Ok
      summary: Import methods and values discovery
      tags:
        - info
  /v2/info/stores:
    get:
      description: |-
        A multiple store backend support is introduced in the Rocky release
        as a part of the EXPERIMENTAL Image API v2.8.

        In version 2.7 of the API, this call will return a 404 (Not Found).
        Use the [API versions call](../versions/index.html#versions-call) to determine
        what API versions are available in your cloud.

        Normal response codes: 200

        Error response codes: 404
      operationId: info/stores:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoStoresGet_StoresResponse'
          description: Ok
      summary: List stores
      tags:
        - info
  /v2/info/stores/detail:
    get:
      description: |-
        Lists all the backend stores, with detail, accessible to admins,
        for non-admin user API will return bad request.

        Normal response codes: 200

        Error response codes: 403, 404
      operationId: info/stores/detail:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoStoresDetailGet_Stores_DetailResponse'
          description: Ok
      summary: List stores detail
      tags:
        - info
  /v2/info/usage:
    get:
      description: |-
        The user’s quota and current usage are displayed, if enabled by
        server-side configuration.

        Normal response codes: 200
      operationId: info/usage:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoUsageGet_UsageResponse'
          description: Ok
      summary: Quota usage
      tags:
        - info
  /v2/metadefs/namespaces:
    get:
      operationId: metadefs/namespaces:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesListResponse'
          description: Ok
      tags:
        - metadata-definition-namespaces
    post:
      operationId: metadefs/namespaces:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesCreateResponse'
          description: Ok
      tags:
        - metadata-definition-namespaces
  /v2/metadefs/namespaces/{namespace_name}:
    delete:
      operationId: metadefs/namespaces/namespace_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-namespaces
    get:
      operationId: metadefs/namespaces/namespace_name:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespaceShowResponse'
          description: Ok
      tags:
        - metadata-definition-namespaces
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_namespace_name'
    put:
      operationId: metadefs/namespaces/namespace_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespaceUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespaceUpdateResponse'
          description: Ok
      tags:
        - metadata-definition-namespaces
  /v2/metadefs/namespaces/{namespace_name}/objects:
    delete:
      operationId: metadefs/namespaces/namespace_name/objects:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-objects
    get:
      operationId: metadefs/namespaces/namespace_name/objects:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectsListResponse'
          description: Ok
      tags:
        - metadata-definition-objects
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_objects_namespace_name'
    post:
      operationId: metadefs/namespaces/namespace_name/objects:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesObjectsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectsCreateResponse'
          description: Ok
      tags:
        - metadata-definition-objects
  /v2/metadefs/namespaces/{namespace_name}/objects/{object_name}:
    delete:
      operationId: metadefs/namespaces/namespace_name/objects/object_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-objects
    get:
      operationId: metadefs/namespaces/namespace_name/objects/object_name:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectShowResponse'
          description: Ok
      tags:
        - metadata-definition-objects
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_objects_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_objects_object_name'
    put:
      operationId: metadefs/namespaces/namespace_name/objects/object_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesObjectUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesObjectUpdateResponse'
          description: Ok
      tags:
        - metadata-definition-objects
  /v2/metadefs/namespaces/{namespace_name}/properties:
    delete:
      operationId: metadefs/namespaces/namespace_name/properties:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-properties
    get:
      operationId: metadefs/namespaces/namespace_name/properties:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertiesListResponse'
          description: Ok
      tags:
        - metadata-definition-properties
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_properties_namespace_name'
    post:
      operationId: metadefs/namespaces/namespace_name/properties:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesPropertiesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertiesCreateResponse'
          description: Ok
      tags:
        - metadata-definition-properties
  /v2/metadefs/namespaces/{namespace_name}/properties/{property_name}:
    delete:
      operationId: 
        metadefs/namespaces/namespace_name/properties/property_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-properties
    get:
      operationId: 
        metadefs/namespaces/namespace_name/properties/property_name:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertyShowResponse'
          description: Ok
      tags:
        - metadata-definition-properties
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_properties_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_properties_property_name'
    put:
      operationId: 
        metadefs/namespaces/namespace_name/properties/property_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesPropertyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesPropertyUpdateResponse'
          description: Ok
      tags:
        - metadata-definition-properties
  /v2/metadefs/namespaces/{namespace_name}/resource_types:
    get:
      operationId: metadefs/namespaces/namespace_name/resource_types:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesResource_TypesShowResponse'
          description: Ok
      tags:
        - metadata-definition-resource-types
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_resource_types_namespace_name'
    post:
      operationId: metadefs/namespaces/namespace_name/resource_types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesResource_TypesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesResource_TypesCreateResponse'
          description: Ok
      tags:
        - metadata-definition-resource-types
  /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type}:
    delete:
      operationId: 
        metadefs/namespaces/namespace_name/resource_types/resource_type:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-resource-types
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_resource_types_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_resource_types_resource_type'
  /v2/metadefs/namespaces/{namespace_name}/tags:
    delete:
      operationId: metadefs/namespaces/namespace_name/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-tags
    get:
      operationId: metadefs/namespaces/namespace_name/tags:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagsListResponse'
          description: Ok
      tags:
        - metadata-definition-tags
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_tags_namespace_name'
    post:
      operationId: metadefs/namespaces/namespace_name/tags:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesTagsCreate_TagsRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagsCreate_TagsResponse'
          description: Ok
      tags:
        - metadata-definition-tags
  /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name}:
    delete:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:delete
      responses:
        '204':
          description: Ok
      tags:
        - metadata-definition-tags
    get:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagShowResponse'
          description: Ok
      tags:
        - metadata-definition-tags
    parameters:
      - $ref: '#/components/parameters/metadefs_namespaces_tags_namespace_name'
      - $ref: '#/components/parameters/metadefs_namespaces_tags_tag_name'
    post:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesTagCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagCreateResponse'
          description: Ok
      tags:
        - metadata-definition-tags
    put:
      operationId: metadefs/namespaces/namespace_name/tags/tag_name:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadefsNamespacesTagUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsNamespacesTagUpdateResponse'
          description: Ok
      tags:
        - metadata-definition-tags
  /v2/metadefs/resource_types:
    get:
      operationId: metadefs/resource_types:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadefsResource_TypesListResponse'
          description: Ok
      tags:
        - metadata-definition-resource-types
  /v2/schemas/image:
    get:
      description: |-
        *(Since Images v2.0)*

        Shows a JSON schema document that represents an *image* entity.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/image:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasImageResponse'
          description: Ok
      summary: Show image schema
      tags:
        - schemas
  /v2/schemas/images:
    get:
      description: |-
        *(Since Images v2.0)*

        Shows a JSON schema document that represents an *images* entity.

        An images entity is a container of image entities.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/images:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasImagesResponse'
          description: Ok
      summary: Show images schema
      tags:
        - schemas
  /v2/schemas/member:
    get:
      description: |-
        *(Since Images v2.1)*

        Shows a JSON schema document that represents an *image member* entity.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/member:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMemberResponse'
          description: Ok
      summary: Show image member schema
      tags:
        - schemas
  /v2/schemas/members:
    get:
      description: |-
        *(Since Images v2.1)*

        Shows a JSON schema document that represents an *image members* entity.

        An image members entity is a container of image member entities.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 400, 401
      operationId: schemas/members:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMembersResponse'
          description: Ok
      summary: Show image members schema
      tags:
        - schemas
  /v2/schemas/metadefs/namespace:
    get:
      operationId: schemas/metadefs/namespace:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsNamespaceMetadef_NamespaceResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/namespaces:
    get:
      operationId: schemas/metadefs/namespaces:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsNamespacesMetadef_NamespacesResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/object:
    get:
      operationId: schemas/metadefs/object:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsObjectMetadef_ObjectResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/objects:
    get:
      operationId: schemas/metadefs/objects:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsObjectsMetadef_ObjectsResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/properties:
    get:
      operationId: schemas/metadefs/properties:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsPropertiesMetadef_PropertiesResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/property:
    get:
      operationId: schemas/metadefs/property:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsPropertyMetadef_PropertyResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/resource_type:
    get:
      operationId: schemas/metadefs/resource_type:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsResource_TypeMetadef_Resource_TypeResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/resource_types:
    get:
      operationId: schemas/metadefs/resource_types:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsResource_TypesMetadef_Resource_TypesResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/tag:
    get:
      operationId: schemas/metadefs/tag:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsTagMetadef_TagResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/metadefs/tags:
    get:
      operationId: schemas/metadefs/tags:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasMetadefsTagsMetadef_TagsResponse'
          description: Ok
      tags:
        - schemas
  /v2/schemas/task:
    get:
      description: |-
        *(Since Images v2.2)*

        Shows a JSON schema document that represents an *task* entity.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 401
      operationId: schemas/task:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasTaskResponse'
          description: Ok
      summary: Show task schema
      tags:
        - schemas
  /v2/schemas/tasks:
    get:
      description: |-
        *(Since Images v2.2)*

        Shows a JSON schema document that represents a list of *tasks*.

        An tasks list entity is a container of entities containing abbreviated
        information about individual tasks.

        The following schema is solely an example. Consider only the
        response to the API call as authoritative.

        Normal response codes: 200

        Error response codes: 401
      operationId: schemas/tasks:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasTasksResponse'
          description: Ok
      summary: Show tasks schema
      tags:
        - schemas
  /v2/stores/{store_id}/{image_id}:
    delete:
      description: |-
        This API allows you to delete a copy of the image from a specific store.
        *(Since Image API v2.10)*

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404, 409
      operationId: stores/store_id/image_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete image from store
      tags:
        - stores
    parameters:
      - $ref: '#/components/parameters/stores_image_id'
      - $ref: '#/components/parameters/stores_store_id'
  /v2/tasks:
    get:
      description: |-
        Lists tasks.

        Normal response codes: 200

        Error response codes: 403, 404, 413
      operationId: tasks:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksListResponse'
          description: Ok
      summary: List tasks
      tags:
        - tasks
    post:
      description: |-
        Creates a task.

        Normal response codes: 201

        Error response codes: 401, 413, 415
      operationId: tasks:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TasksCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksCreateResponse'
          description: Ok
      summary: Create task
      tags:
        - tasks
  /v2/tasks/{task_id}:
    delete:
      operationId: tasks/task_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - tasks
    get:
      description: |-
        Shows details for a task.

        Normal response codes: 200

        Error response codes: 404
      operationId: tasks/task_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGetResponse'
          description: Ok
      summary: Show task details
      tags:
        - tasks
    parameters:
      - $ref: '#/components/parameters/tasks_task_id'
components:
  headers:
    content-length:
      description: The length of the body in octets (8-bit bytes)
      schema:
        type: string
    content-md5:
      description: The MD5 checksum of the body
      schema:
        type: string
    content-range:
      description: The content range of image data
      schema:
        type: string
    content-type:
      description: The media type descriptor of the body, namely 
        application/octet-stream
      schema:
        type: string
    openstack-image-store-ids:
      description: list of available stores
      schema:
        items:
          type: string
        type: array
  parameters:
    cache_image_id:
      description: image_id parameter for /v2/cache/{image_id} API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    content-type:
      description: The media type descriptor of the body, namely 
        application/octet-stream
      in: header
      name: Content-Type
      schema:
        type: string
    created_at:
      description: Specify a comparison filter based on the date and time when 
        the resource was created.
      in: query
      name: created_at
      schema:
        format: date-time
        type: string
    id:
      description: id filter parameter
      in: query
      name: id
      schema:
        type: string
    images_actions_deactivate_image_id:
      description: image_id parameter for 
        /v2/images/{image_id}/actions/deactivate API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_actions_reactivate_image_id:
      description: image_id parameter for 
        /v2/images/{image_id}/actions/reactivate API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_file_image_id:
      description: image_id parameter for /v2/images/{image_id}/file API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_image_id:
      description: image_id parameter for /v2/images/{image_id} API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_import_image_id:
      description: image_id parameter for /v2/images/{image_id}/import API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_locations_image_id:
      description: image_id parameter for /v2/images/{image_id}/locations API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_members_image_id:
      description: image_id parameter for 
        /v2/images/{image_id}/members/{member_id} API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_members_member_id:
      description: member_id parameter for 
        /v2/images/{image_id}/members/{member_id} API
      in: path
      name: member_id
      required: true
      schema:
        type: string
    images_stage_image_id:
      description: image_id parameter for /v2/images/{image_id}/stage API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_tags_image_id:
      description: image_id parameter for /v2/images/{image_id}/tags/{tag_value}
        API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    images_tags_tag_value:
      description: tag_value parameter for 
        /v2/images/{image_id}/tags/{tag_value} API
      in: path
      name: tag_value
      required: true
      schema:
        type: string
    images_tasks_image_id:
      description: image_id parameter for /v2/images/{image_id}/tasks API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    limit:
      description: Requests a page size of items. Returns a number of items up 
        to a limit value. Use the limit parameter to make an initial limited 
        request and use the ID of the last-seen item from the response as the 
        marker parameter value in a subsequent limited request.
      in: query
      name: limit
      schema:
        type: integer
    marker:
      description: The ID of the last-seen item. Use the limit parameter to make
        an initial limited request and use the ID of the last-seen item from the
        response as the marker parameter value in a subsequent limited request.
      in: query
      name: marker
      schema:
        type: string
    member_status:
      description: Filters the response by a member status. A valid value is 
        accepted, pending, rejected, or all. Default is accepted.
      in: query
      name: member_status
      schema:
        enum:
          - accepted
          - all
          - pending
          - rejected
        type: string
    metadefs_namespaces_namespace_name:
      description: namespace_name parameter for 
        /v2/metadefs/namespaces/{namespace_name} API
      in: path
      name: namespace_name
      required: true
      schema:
        type: string
    metadefs_namespaces_objects_namespace_name:
      description: namespace_name parameter for 
        /v2/metadefs/namespaces/{namespace_name}/objects/{object_name} API
      in: path
      name: namespace_name
      required: true
      schema:
        type: string
    metadefs_namespaces_objects_object_name:
      description: object_name parameter for 
        /v2/metadefs/namespaces/{namespace_name}/objects/{object_name} API
      in: path
      name: object_name
      required: true
      schema:
        type: string
    metadefs_namespaces_properties_namespace_name:
      description: namespace_name parameter for 
        /v2/metadefs/namespaces/{namespace_name}/properties/{property_name} API
      in: path
      name: namespace_name
      required: true
      schema:
        type: string
    metadefs_namespaces_properties_property_name:
      description: property_name parameter for 
        /v2/metadefs/namespaces/{namespace_name}/properties/{property_name} API
      in: path
      name: property_name
      required: true
      schema:
        type: string
    metadefs_namespaces_resource_types_namespace_name:
      description: namespace_name parameter for 
        /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type} 
        API
      in: path
      name: namespace_name
      required: true
      schema:
        type: string
    metadefs_namespaces_resource_types_resource_type:
      description: resource_type parameter for 
        /v2/metadefs/namespaces/{namespace_name}/resource_types/{resource_type} 
        API
      in: path
      name: resource_type
      required: true
      schema:
        type: string
    metadefs_namespaces_tags_namespace_name:
      description: namespace_name parameter for 
        /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name} API
      in: path
      name: namespace_name
      required: true
      schema:
        type: string
    metadefs_namespaces_tags_tag_name:
      description: tag_name parameter for 
        /v2/metadefs/namespaces/{namespace_name}/tags/{tag_name} API
      in: path
      name: tag_name
      required: true
      schema:
        type: string
    name:
      description: Filters the response by a name, as a string. A valid value is
        the name of an image.
      in: query
      name: name
      schema:
        type: string
    os_hidden:
      description: When true, filters the response to display only "hidden" 
        images. By default, "hidden" images are not included in the image-list 
        response. (Since Image API v2.7)
      in: query
      name: os_hidden
      schema:
        type: boolean
      x-openstack:
        min-ver: '2.7'
    owner:
      description: Filters the response by a project (also called a “tenant”) 
        ID. Shows only images that are shared with you by the specified owner.
      in: query
      name: owner
      schema:
        type: string
    protected:
      description: Filters the response by the ‘protected’ image property. A 
        valid value is one of ‘true’, ‘false’ (must be all lowercase). Any other
        value will result in a 400 response.
      in: query
      name: protected
      schema:
        type: boolean
    range:
      description: The range of image data requested. Note that multi range 
        requests are not supported.
      in: header
      name: Range
      schema:
        type: string
    size_max:
      description: Filters the response by a maximum image size, in bytes.
      in: query
      name: size_max
      schema:
        type: string
    size_min:
      description: Filters the response by a minimum image size, in bytes.
      in: query
      name: size_min
      schema:
        type: string
    sort:
      description: 'Sorts the response by one or more attribute and sort direction
        combinations. You can also set multiple sort keys and directions. Default
        direction is desc. Use the comma (,) character to separate multiple values.
        For example: `sort=name:asc,status:desc`'
      in: query
      name: sort
      schema:
        type: string
    sort_dir:
      description: Sorts the response by a set of one or more sort direction and
        attribute (sort_key) combinations. A valid value for the sort direction 
        is asc (ascending) or desc (descending). If you omit the sort direction 
        in a set, the default is desc.
      in: query
      name: sort_dir
      schema:
        enum:
          - asc
          - desc
        type: string
    sort_key:
      description: Sorts the response by an attribute, such as name, id, or 
        updated_at. Default is created_at. The API uses the natural sorting 
        direction of the sort_key image attribute.
      in: query
      name: sort_key
      schema:
        type: string
    status:
      description: Filters the response by an image status.
      in: query
      name: status
      schema:
        type: string
    stores_image_id:
      description: image_id parameter for /v2/stores/{store_id}/{image_id} API
      in: path
      name: image_id
      required: true
      schema:
        type: string
    stores_store_id:
      description: store_id parameter for /v2/stores/{store_id}/{image_id} API
      in: path
      name: store_id
      required: true
      schema:
        type: string
    tag:
      description: Filters the response by the specified tag value. May be 
        repeated, but keep in mind that you're making a conjunctive query, so 
        only images containing all the tags specified will appear in the 
        response.
      explode: true
      in: query
      name: tag
      schema:
        items:
          type: string
        type: array
      style: form
    tasks_task_id:
      description: task_id parameter for /v2/tasks/{task_id} API
      in: path
      name: task_id
      required: true
      schema:
        type: string
    updated_at:
      description: Specify a comparison filter based on the date and time when 
        the resource was most recently modified.
      in: query
      name: updated_at
      schema:
        format: date-time
        type: string
    visibility:
      description: Filters the response by an image visibility value. A valid 
        value is public, private, community, shared, or all. (Note that if you 
        filter on shared, the images included in the response will only be those
        where your member status is accepted unless you explicitly include a 
        member_status filter in the request.) If you omit this parameter, the 
        response shows public, private, and those shared images with a member 
        status of accepted.
      in: query
      name: visibility
      schema:
        enum:
          - all
          - community
          - private
          - public
          - shared
        type: string
    x-image-meta-store:
      description: A store identifier to upload or import image data. Should 
        only be included when making a request to a cloud that supports multiple
        backing stores. Use the Store Discovery call to determine an appropriate
        store identifier. Simply omit this header to use the default store.
      in: header
      name: X-Image-Meta-Store
      schema:
        type: string
  schemas:
    CacheGet_Cache_StateResponse:
      description: Response of the cache:get operation
      type: object
    CacheQueue_Image_From_ApiRequest:
      description: Request of the cache/image_id:put operation
      type: object
    CacheQueue_Image_From_ApiResponse:
      description: Response of the cache/image_id:put operation
      type: object
    ImageShowResponse:
      additionalProperties:
        type: string
      properties:
        checksum:
          description: |-
            An MD5 hash over the image data. The value might be `null` (JSON null data type),
            as this field is no longer populated by the Image Service beginning with the
            Victoria release. It remains present for backward compatibility with legacy
            images. To validate image data, instead use the secure multihash fields
            `os_hash_algo` and `os_hash_value`.
          maxLength: 32
          readOnly: true
          type:
            - 'null'
            - string
        container_format:
          anyOf:
            - enum:
                - 
                - aki
                - ami
                - ari
                - bare
                - compressed
                - docker
                - ova
                - ovf
            - type:
                - 'null'
                - string
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
        created_at:
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
          readOnly: true
          type: string
        direct_url:
          description: |-
            The URL to access the image file kept in external store. *It is present
            only if the* `show_image_direct_url` *option is* `true` *in the Image
            service’s configuration file.* **Because it presents a security risk, this
            option is disabled by default.**
          readOnly: true
          type: string
        disk_format:
          anyOf:
            - enum:
                - 
                - aki
                - ami
                - ari
                - iso
                - ploop
                - qcow2
                - raw
                - vdi
                - vhd
                - vhdx
                - vmdk
            - type:
                - 'null'
                - string
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
        file:
          description: |-
            The URL for the virtual machine image file.
          readOnly: true
          type: string
        id:
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        locations:
          description: |-
            A list of objects, each of which describes an image location. Each object
            contains a `url` key, whose value is a URL specifying a location, and a
            `metadata` key, whose value is a dict of key:value pairs containing
            information appropriate to the use of whatever external store is indicated
            by the URL. *This list appears only if the* `show_multiple_locations`
            *option is set to* `true` *in the Image service’s configuration file.*
            **Because it presents a security risk, this option is disabled by
            default.**
          items:
            properties:
              metadata:
                type: object
              url:
                maxLength: 255
                type: string
              validation_data:
                additionalProperties: false
                description: Values to be used to populate the corresponding 
                  image properties. If the image status is not 'queued', values 
                  must exactly match those already contained in the image 
                  properties.
                properties:
                  checksum:
                    maxLength: 32
                    minLength: 32
                    type: string
                  os_hash_algo:
                    maxLength: 64
                    type: string
                  os_hash_value:
                    maxLength: 128
                    type: string
                required:
                  - os_hash_algo
                  - os_hash_value
                type: object
                writeOnly: true
            required:
              - url
            type: object
          type: array
        min_disk:
          description: |-
            Amount of disk space in GB that is required to boot the image.
            The value might be `null` (JSON null data type).
          type: integer
        min_ram:
          description: |-
            Amount of RAM in MB that is required to boot the image.
            The value might be `null` (JSON null data type).
          type: integer
        name:
          description: |-
            The name of the image. Value might be `null` (JSON null data type).
          maxLength: 255
          type:
            - 'null'
            - string
        os_hash_algo:
          description: |-
            The algorithm used to compute a secure hash of the image data for this
            image. The result of the computation is displayed as the value of the
            `os_hash_value` property. The value might be `null` (JSON null
            data type). The algorithm used is chosen by the cloud operator; it
            may not be configured by end users. *(Since Image API v2.7)*
          maxLength: 64
          readOnly: true
          type:
            - 'null'
            - string
        os_hash_value:
          description: |-
            The hexdigest of the secure hash of the image data computed using the
            algorithm whose name is the value of the `os_hash_algo` property.
            The value might be `null` (JSON null data type) if data has not
            yet been associated with this image, or if the image was created using
            a version of the Image Service API prior to version 2.7.
            *(Since Image API v2.7)*
          maxLength: 128
          readOnly: true
          type:
            - 'null'
            - string
        os_hidden:
          description: |-
            This field controls whether an image is displayed in the default
            image-list response. A “hidden” image is out of date somehow (for
            example, it may not have the latest updates applied) and hence should
            not be a user’s first choice, but it’s not deleted because it may be
            needed for server rebuilds. By hiding it from the default image list,
            it’s easier for end users to find and use a more up-to-date version of
            this image. *(Since Image API v2.7)*
          type: boolean
        owner:
          description: |-
            An identifier for the owner of the image, usually the project (also
            called the “tenant”) ID.
            The value might be `null` (JSON null data type).
          maxLength: 255
          type:
            - 'null'
            - string
        protected:
          description: |-
            A boolean value that must be `false` or the image cannot be deleted.
          type: boolean
        schema:
          description: |-
            The URL for the schema describing a virtual machine image.
          readOnly: true
          type: string
        self:
          description: |-
            The URL for the virtual machine image.
          readOnly: true
          type: string
        size:
          description: |-
            The size of the image data, in bytes. The value
            might be `null` (JSON null data type).
          format: int64
          readOnly: true
          type:
            - integer
            - 'null'
        status:
          description: |-
            The image status.
          enum:
            - active
            - deactivated
            - deleted
            - importing
            - killed
            - pending_delete
            - queued
            - saving
            - uploading
          readOnly: true
          type: string
        stores:
          description: Store in which image data resides.  Only present when the
            operator has enabled multiple stores.  May be a comma-separated list
            of store identifiers.
          readOnly: true
          type: string
        tags:
          description: |-
            List of tags for this image, possibly an empty list.
          items:
            maxLength: 255
            type: string
          type: array
        updated_at:
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          readOnly: true
          type: string
        virtual_size:
          description: |-
            The virtual size of the image. The value might
            be `null` (JSON null data type).
          format: int64
          readOnly: true
          type:
            - integer
            - 'null'
        visibility:
          description: |-
            Image visibility, that is, the access permission for the image.
          enum:
            - community
            - private
            - public
            - shared
          type: string
      type: object
    ImageUpdateRequest:
      format: RFC 6902
      type: string
    ImageUpdateResponse:
      additionalProperties:
        type: string
      properties:
        checksum:
          description: |-
            An MD5 hash over the image data. The value might be `null` (JSON null data type),
            as this field is no longer populated by the Image Service beginning with the
            Victoria release. It remains present for backward compatibility with legacy
            images. To validate image data, instead use the secure multihash fields
            `os_hash_algo` and `os_hash_value`.
          maxLength: 32
          readOnly: true
          type:
            - 'null'
            - string
        container_format:
          anyOf:
            - enum:
                - 
                - aki
                - ami
                - ari
                - bare
                - compressed
                - docker
                - ova
                - ovf
            - type:
                - 'null'
                - string
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
        created_at:
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
          readOnly: true
          type: string
        direct_url:
          description: |-
            The URL to access the image file kept in external store. *It is present
            only if the* `show_image_direct_url` *option is* `true` *in the Image
            service’s configuration file.* **Because it presents a security risk, this
            option is disabled by default.**
          readOnly: true
          type: string
        disk_format:
          anyOf:
            - enum:
                - 
                - aki
                - ami
                - ari
                - iso
                - ploop
                - qcow2
                - raw
                - vdi
                - vhd
                - vhdx
                - vmdk
            - type:
                - 'null'
                - string
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
        file:
          description: |-
            The URL for the virtual machine image file.
          readOnly: true
          type: string
        id:
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        locations:
          description: |-
            A list of objects, each of which describes an image location. Each object
            contains a `url` key, whose value is a URL specifying a location, and a
            `metadata` key, whose value is a dict of key:value pairs containing
            information appropriate to the use of whatever external store is indicated
            by the URL. *This list appears only if the* `show_multiple_locations`
            *option is set to* `true` *in the Image service’s configuration file.*
            **Because it presents a security risk, this option is disabled by
            default.**
          items:
            properties:
              metadata:
                type: object
              url:
                maxLength: 255
                type: string
              validation_data:
                additionalProperties: false
                description: Values to be used to populate the corresponding 
                  image properties. If the image status is not 'queued', values 
                  must exactly match those already contained in the image 
                  properties.
                properties:
                  checksum:
                    maxLength: 32
                    minLength: 32
                    type: string
                  os_hash_algo:
                    maxLength: 64
                    type: string
                  os_hash_value:
                    maxLength: 128
                    type: string
                required:
                  - os_hash_algo
                  - os_hash_value
                type: object
                writeOnly: true
            required:
              - url
            type: object
          type: array
        min_disk:
          description: |-
            Amount of disk space in GB that is required to boot the image.
            The value might be `null` (JSON null data type).
          type: integer
        min_ram:
          description: |-
            Amount of RAM in MB that is required to boot the image.
            The value might be `null` (JSON null data type).
          type: integer
        name:
          description: |-
            The name of the image. Value might be `null` (JSON null data type).
          maxLength: 255
          type:
            - 'null'
            - string
        os_hash_algo:
          description: |-
            The algorithm used to compute a secure hash of the image data for this
            image. The result of the computation is displayed as the value of the
            `os_hash_value` property. The value might be `null` (JSON null
            data type). The algorithm used is chosen by the cloud operator; it
            may not be configured by end users. *(Since Image API v2.7)*
          maxLength: 64
          readOnly: true
          type:
            - 'null'
            - string
        os_hash_value:
          description: |-
            The hexdigest of the secure hash of the image data computed using the
            algorithm whose name is the value of the `os_hash_algo` property.
            The value might be `null` (JSON null data type) if data has not
            yet been associated with this image, or if the image was created using
            a version of the Image Service API prior to version 2.7.
            *(Since Image API v2.7)*
          maxLength: 128
          readOnly: true
          type:
            - 'null'
            - string
        os_hidden:
          description: |-
            This field controls whether an image is displayed in the default
            image-list response. A “hidden” image is out of date somehow (for
            example, it may not have the latest updates applied) and hence should
            not be a user’s first choice, but it’s not deleted because it may be
            needed for server rebuilds. By hiding it from the default image list,
            it’s easier for end users to find and use a more up-to-date version of
            this image. *(Since Image API v2.7)*
          type: boolean
        owner:
          description: |-
            An identifier for the owner of the image, usually the project (also
            called the “tenant”) ID.
            The value might be `null` (JSON null data type).
          maxLength: 255
          type:
            - 'null'
            - string
        protected:
          description: |-
            A boolean value that must be `false` or the image cannot be deleted.
          type: boolean
        schema:
          description: |-
            The URL for the schema describing a virtual machine image.
          readOnly: true
          type: string
        self:
          description: |-
            The URL for the virtual machine image.
          readOnly: true
          type: string
        size:
          description: |-
            The size of the image data, in bytes. The value
            might be `null` (JSON null data type).
          format: int64
          readOnly: true
          type:
            - integer
            - 'null'
        status:
          description: |-
            The image status.
          enum:
            - active
            - deactivated
            - deleted
            - importing
            - killed
            - pending_delete
            - queued
            - saving
            - uploading
          readOnly: true
          type: string
        stores:
          description: Store in which image data resides.  Only present when the
            operator has enabled multiple stores.  May be a comma-separated list
            of store identifiers.
          readOnly: true
          type: string
        tags:
          description: |-
            List of tags for this image, possibly an empty list.
          items:
            maxLength: 255
            type: string
          type: array
        updated_at:
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          readOnly: true
          type: string
        virtual_size:
          description: Virtual size of image in bytes
          format: int64
          readOnly: true
          type:
            - integer
            - 'null'
        visibility:
          description: |-
            Image visibility, that is, the access permission for the image.
          enum:
            - community
            - private
            - public
            - shared
          type: string
      type: object
    ImagesActionsDeactivateDeactivateRequest:
      description: Request of the images/image_id/actions/deactivate:post 
        operation
      type: object
    ImagesActionsDeactivateResponse:
      description: Response of the images/image_id/actions/deactivate:post 
        operation
      type: object
    ImagesActionsReactivateReactivateRequest:
      description: Request of the images/image_id/actions/reactivate:post 
        operation
      type: object
    ImagesActionsReactivateResponse:
      description: Response of the images/image_id/actions/reactivate:post 
        operation
      type: object
    ImagesCreateRequest:
      additionalProperties:
        type: string
      properties:
        checksum:
          description: md5 hash of image contents.
          maxLength: 32
          readOnly: true
          type:
            - 'null'
            - string
        container_format:
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
          enum:
            - 
            - aki
            - ami
            - ari
            - bare
            - compressed
            - docker
            - ova
            - ovf
          type:
            - 'null'
            - string
        created_at:
          description: Date and time of image registration
          readOnly: true
          type: string
        direct_url:
          description: URL to access the image file kept in external store
          readOnly: true
          type: string
        disk_format:
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
          enum:
            - 
            - aki
            - ami
            - ari
            - iso
            - ploop
            - qcow2
            - raw
            - vdi
            - vhd
            - vhdx
            - vmdk
          type:
            - 'null'
            - string
        file:
          description: An image file url
          readOnly: true
          type: string
        id:
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image. If you
            specify a value that has already been assigned, the request fails with
            a `409` response code.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        locations:
          description: A set of URLs to access the image file kept in external 
            store
          items:
            properties:
              metadata:
                type: object
              url:
                maxLength: 255
                type: string
              validation_data:
                additionalProperties: false
                description: Values to be used to populate the corresponding 
                  image properties. If the image status is not 'queued', values 
                  must exactly match those already contained in the image 
                  properties.
                properties:
                  checksum:
                    maxLength: 32
                    minLength: 32
                    type: string
                  os_hash_algo:
                    maxLength: 64
                    type: string
                  os_hash_value:
                    maxLength: 128
                    type: string
                required:
                  - os_hash_algo
                  - os_hash_value
                type: object
                writeOnly: true
            required:
              - url
            type: object
          type: array
        min_disk:
          description: |-
            Amount of disk space in GB that is required to boot the image.
          type: integer
        min_ram:
          description: |-
            Amount of RAM in MB that is required to boot the image.
          type: integer
        name:
          description: |-
            The name of the image.
          maxLength: 255
          type:
            - 'null'
            - string
        os_hash_algo:
          description: Algorithm to calculate the os_hash_value
          maxLength: 64
          readOnly: true
          type:
            - 'null'
            - string
        os_hash_value:
          description: Hexdigest of the image contents using the algorithm 
            specified by the os_hash_algo
          maxLength: 128
          readOnly: true
          type:
            - 'null'
            - string
        os_hidden:
          description: If true, image will not appear in default image list 
            response.
          type: boolean
        owner:
          description: Owner of the image
          maxLength: 255
          type:
            - 'null'
            - string
        protected:
          description: |-
            Image protection for deletion. Valid value is `true` or `false`.
            Default is `false`.
          type: boolean
        schema:
          description: An image schema url
          readOnly: true
          type: string
        self:
          description: An image self url
          readOnly: true
          type: string
        size:
          description: Size of image file in bytes
          readOnly: true
          type:
            - integer
            - 'null'
        status:
          description: Status of the image
          enum:
            - active
            - deactivated
            - deleted
            - importing
            - killed
            - pending_delete
            - queued
            - saving
            - uploading
          readOnly: true
          type: string
        stores:
          description: Store in which image data resides.  Only present when the
            operator has enabled multiple stores.  May be a comma-separated list
            of store identifiers.
          readOnly: true
          type: string
        tags:
          description: |-
            List of tags for this image. Each tag is a string of at most 255 chars.
            The maximum number of tags allowed on an image is set by the operator.
          items:
            maxLength: 255
            type: string
          type: array
        updated_at:
          description: Date and time of the last image modification
          readOnly: true
          type: string
        virtual_size:
          description: Virtual size of image in bytes
          readOnly: true
          type:
            - integer
            - 'null'
        visibility:
          description: |-
            Visibility for this image. Valid value is one of: `public`, `private`,
            `shared`, or `community`.
            At most sites, only an administrator can make an image `public`.
            Some sites may restrict what users can make an image `community`.
            Some sites may restrict what users can perform member operations on
            a `shared` image.
            *Since the Image API v2.5, the default value is ``shared``.*
          enum:
            - community
            - private
            - public
            - shared
          type: string
      type: object
    ImagesCreateResponse:
      additionalProperties:
        type: string
      properties:
        checksum:
          description: |-
            An MD5 hash over the image data. The value might be `null` (JSON null data type),
            as this field is no longer populated by the Image Service beginning with the
            Victoria release. It remains present for backward compatibility with legacy
            images. To validate image data, instead use the secure multihash fields
            `os_hash_algo` and `os_hash_value`.
          maxLength: 32
          readOnly: true
          type:
            - 'null'
            - string
        container_format:
          anyOf:
            - enum:
                - 
                - aki
                - ami
                - ari
                - bare
                - compressed
                - docker
                - ova
                - ovf
            - type:
                - 'null'
                - string
          description: |-
            Format of the image container.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Container Format](https://docs.openstack.org/glance/latest/user/formats.html#container-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `bare`,
            `ovf`, `ova`, `docker`, or `compressed`.

            The value might be `null` (JSON null data type).

            **Train changes**: The `compressed` container format is a supported
            value.
        created_at:
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
          readOnly: true
          type: string
        direct_url:
          description: |-
            The URL to access the image file kept in external store. *It is present
            only if the* `show_image_direct_url` *option is* `true` *in the Image
            service’s configuration file.* **Because it presents a security risk, this
            option is disabled by default.**
          readOnly: true
          type: string
        disk_format:
          anyOf:
            - enum:
                - 
                - aki
                - ami
                - ari
                - iso
                - ploop
                - qcow2
                - raw
                - vdi
                - vhd
                - vhdx
                - vmdk
            - type:
                - 'null'
                - string
          description: |-
            The format of the disk.

            Values may vary based on the configuration available in a
            particular OpenStack cloud. See the [Image Schema](#image-schema)
            response from the cloud itself for the valid values available. See
            [Disk Format](https://docs.openstack.org/glance/latest/user/formats.html#disk-format)
            in the Glance documentation for more information.

            Example formats are: `ami`, `ari`, `aki`, `vhd`,
            `vhdx`, `vmdk`, `raw`, `qcow2`, `vdi`, `ploop` or
            `iso`.

            The value might be `null` (JSON null data type).

            **Newton changes**: The `vhdx` disk format is a supported
            value.  
            **Ocata changes**: The `ploop` disk format is a supported
            value.
        file:
          description: |-
            The URL for the virtual machine image file.
          readOnly: true
          type: string
        id:
          description: |-
            A unique, user-defined image UUID, in the format:

            ```
            nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

            ```

            Where **n** is a hexadecimal digit from 0 to f, or F.

            For example:

            ```
            b2173dd3-7ad6-4362-baa6-a68bce3565cb

            ```

            If you omit this value, the API generates a UUID for the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        locations:
          description: |-
            A list of objects, each of which describes an image location. Each object
            contains a `url` key, whose value is a URL specifying a location, and a
            `metadata` key, whose value is a dict of key:value pairs containing
            information appropriate to the use of whatever external store is indicated
            by the URL. *This list appears only if the* `show_multiple_locations`
            *option is set to* `true` *in the Image service’s configuration file.*
            **Because it presents a security risk, this option is disabled by
            default.**
          items:
            properties:
              metadata:
                type: object
              url:
                maxLength: 255
                type: string
              validation_data:
                additionalProperties: false
                description: Values to be used to populate the corresponding 
                  image properties. If the image status is not 'queued', values 
                  must exactly match those already contained in the image 
                  properties.
                properties:
                  checksum:
                    maxLength: 32
                    minLength: 32
                    type: string
                  os_hash_algo:
                    maxLength: 64
                    type: string
                  os_hash_value:
                    maxLength: 128
                    type: string
                required:
                  - os_hash_algo
                  - os_hash_value
                type: object
                writeOnly: true
            required:
              - url
            type: object
          type: array
        min_disk:
          description: |-
            Amount of disk space in GB that is required to boot the image.
            The value might be `null` (JSON null data type).
          type: integer
        min_ram:
          description: |-
            Amount of RAM in MB that is required to boot the image.
            The value might be `null` (JSON null data type).
          type: integer
        name:
          description: |-
            The name of the image. Value might be `null` (JSON null data type).
          maxLength: 255
          type:
            - 'null'
            - string
        os_hash_algo:
          description: |-
            The algorithm used to compute a secure hash of the image data for this
            image. The result of the computation is displayed as the value of the
            `os_hash_value` property. The value might be `null` (JSON null
            data type). The algorithm used is chosen by the cloud operator; it
            may not be configured by end users. *(Since Image API v2.7)*
          maxLength: 64
          readOnly: true
          type:
            - 'null'
            - string
        os_hash_value:
          description: |-
            The hexdigest of the secure hash of the image data computed using the
            algorithm whose name is the value of the `os_hash_algo` property.
            The value might be `null` (JSON null data type) if data has not
            yet been associated with this image, or if the image was created using
            a version of the Image Service API prior to version 2.7.
            *(Since Image API v2.7)*
          maxLength: 128
          readOnly: true
          type:
            - 'null'
            - string
        os_hidden:
          description: |-
            This field controls whether an image is displayed in the default
            image-list response. A “hidden” image is out of date somehow (for
            example, it may not have the latest updates applied) and hence should
            not be a user’s first choice, but it’s not deleted because it may be
            needed for server rebuilds. By hiding it from the default image list,
            it’s easier for end users to find and use a more up-to-date version of
            this image. *(Since Image API v2.7)*
          type: boolean
        owner:
          description: |-
            An identifier for the owner of the image, usually the project (also
            called the “tenant”) ID.
            The value might be `null` (JSON null data type).
          maxLength: 255
          type:
            - 'null'
            - string
        protected:
          description: |-
            A boolean value that must be `false` or the image cannot be deleted.
          type: boolean
        schema:
          description: |-
            The URL for the schema describing a virtual machine image.
          readOnly: true
          type: string
        self:
          description: |-
            The URL for the virtual machine image.
          readOnly: true
          type: string
        size:
          description: |-
            The size of the image data, in bytes. The value
            might be `null` (JSON null data type).
          format: int64
          readOnly: true
          type:
            - integer
            - 'null'
        status:
          description: |-
            The image status.
          enum:
            - active
            - deactivated
            - deleted
            - importing
            - killed
            - pending_delete
            - queued
            - saving
            - uploading
          readOnly: true
          type: string
        stores:
          description: Store in which image data resides.  Only present when the
            operator has enabled multiple stores.  May be a comma-separated list
            of store identifiers.
          readOnly: true
          type: string
        tags:
          description: |-
            List of tags for this image, possibly an empty list.
          items:
            maxLength: 255
            type: string
          type: array
        updated_at:
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          readOnly: true
          type: string
        virtual_size:
          description: |-
            The virtual size of the image. The value might
            be `null` (JSON null data type).
          format: int64
          readOnly: true
          type:
            - integer
            - 'null'
        visibility:
          description: |-
            Image visibility, that is, the access permission for the image.
          enum:
            - community
            - private
            - public
            - shared
          type: string
      type: object
    ImagesFileDownloadResponse:
      format: binary
      type: string
    ImagesFileUploadRequest:
      format: binary
      type: string
    ImagesImportImport_ImageRequest:
      properties:
        all_stores:
          description: |-
            When set to True the data will be imported to the set of stores you may
            consume from this particular deployment of Glance (ie: the same set of
            stores returned to a call to /v2/info/stores on the glance-api the request
            hits).
            This can’t be used simultaneously with the `stores` parameter.
          type: boolean
        all_stores_must_success:
          type: boolean
        method:
          description: |-
            A JSON object indicating what import method you wish to use to import
            your image. The content of this JSON object is another JSON object
            with a `name` field whose value is the identifier for the import
            method.
          properties:
            glance_image_id:
              type: string
            glance_region:
              type: string
            glance_service_interface:
              type: string
            name:
              type: string
            uri:
              type: string
          type: object
        stores:
          description: |-
            If present contains the list of store id to import the image binary data
            to.
          items:
            type: string
          type: array
      type: object
    ImagesImportImport_ImageResponse: {}
    ImagesListResponse:
      properties:
        first:
          type: string
        images:
          description: |-
            A list of *image* objects, as described by the [Images Schema](#images-schema).
          items:
            additionalProperties:
              type: string
            links:
              - href: '{schema}'
                rel: describedby
              - href: '{file}'
                rel: enclosure
              - href: '{self}'
                rel: self
            name: image
            properties:
              checksum:
                description: md5 hash of image contents.
                maxLength: 32
                readOnly: true
                type:
                  - 'null'
                  - string
              container_format:
                anyOf:
                  - enum:
                      - 
                      - aki
                      - ami
                      - ari
                      - bare
                      - compressed
                      - docker
                      - ova
                      - ovf
                  - type:
                      - 'null'
                      - string
                description: Format of the container
              created_at:
                description: Date and time of image registration
                readOnly: true
                type: string
              direct_url:
                description: URL to access the image file kept in external store
                readOnly: true
                type: string
              disk_format:
                anyOf:
                  - enum:
                      - 
                      - aki
                      - ami
                      - ari
                      - iso
                      - ploop
                      - qcow2
                      - raw
                      - vdi
                      - vhd
                      - vhdx
                      - vmdk
                  - type:
                      - 'null'
                      - string
                description: Format of the disk
              file:
                description: An image file url
                readOnly: true
                type: string
              id:
                description: An identifier for the image
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
                type: string
              locations:
                description: A set of URLs to access the image file kept in 
                  external store
                items:
                  properties:
                    metadata:
                      type: object
                    url:
                      maxLength: 255
                      type: string
                    validation_data:
                      additionalProperties: false
                      description: Values to be used to populate the 
                        corresponding image properties. If the image status is 
                        not 'queued', values must exactly match those already 
                        contained in the image properties.
                      properties:
                        checksum:
                          maxLength: 32
                          minLength: 32
                          type: string
                        os_hash_algo:
                          maxLength: 64
                          type: string
                        os_hash_value:
                          maxLength: 128
                          type: string
                      required:
                        - os_hash_algo
                        - os_hash_value
                      type: object
                      writeOnly: true
                  required:
                    - url
                  type: object
                type: array
              min_disk:
                description: Amount of disk space (in GB) required to boot 
                  image.
                type: integer
              min_ram:
                description: Amount of ram (in MB) required to boot image.
                type: integer
              name:
                description: Descriptive name for the image
                maxLength: 255
                type:
                  - 'null'
                  - string
              os_hash_algo:
                description: Algorithm to calculate the os_hash_value
                maxLength: 64
                readOnly: true
                type:
                  - 'null'
                  - string
              os_hash_value:
                description: Hexdigest of the image contents using the algorithm
                  specified by the os_hash_algo
                maxLength: 128
                readOnly: true
                type:
                  - 'null'
                  - string
              os_hidden:
                description: If true, image will not appear in default image 
                  list response.
                type: boolean
              owner:
                description: Owner of the image
                maxLength: 255
                type:
                  - 'null'
                  - string
              protected:
                description: If true, image will not be deletable.
                type: boolean
              schema:
                description: An image schema url
                readOnly: true
                type: string
              self:
                description: An image self url
                readOnly: true
                type: string
              size:
                description: Size of image file in bytes
                format: int64
                readOnly: true
                type:
                  - integer
                  - 'null'
              status:
                description: Status of the image
                enum:
                  - active
                  - deactivated
                  - deleted
                  - importing
                  - killed
                  - pending_delete
                  - queued
                  - saving
                  - uploading
                readOnly: true
                type: string
              stores:
                description: Store in which image data resides.  Only present 
                  when the operator has enabled multiple stores.  May be a 
                  comma-separated list of store identifiers.
                readOnly: true
                type: string
              tags:
                description: List of strings related to the image
                items:
                  maxLength: 255
                  type: string
                type: array
              updated_at:
                description: Date and time of the last image modification
                readOnly: true
                type: string
              virtual_size:
                description: Virtual size of image in bytes
                format: int64
                readOnly: true
                type:
                  - integer
                  - 'null'
              visibility:
                description: Scope of image accessibility
                enum:
                  - community
                  - private
                  - public
                  - shared
                type: string
          type: array
        next:
          type: string
        schema:
          type: string
      type: object
    ImagesLocationsAdd_LocationRequest:
      properties:
        metadata:
          type: object
        url:
          description: |-
            The URL of the new location to be added in the image.
          maxLength: 255
          type: string
        validation_data:
          additionalProperties: false
          description: |-
            An image metadata in key:value pairs containing values of
            `os_hash_value` and `os_hash_algo` to be added to the image.
            If `do_secure_hash` is not passed then it is the responsibility of
            the consumer of location add API to provide the correct values in
            `validation_data`’
          properties:
            checksum:
              maxLength: 32
              minLength: 32
              type: string
            os_hash_algo:
              maxLength: 64
              type: string
            os_hash_value:
              maxLength: 128
              type: string
          required:
            - os_hash_algo
            - os_hash_value
          type: object
          writeOnly: true
      required:
        - url
      type: object
    ImagesLocationsAdd_LocationResponse:
      description: A set of URLs to access the image file kept in external store
      items:
        properties:
          metadata:
            type: object
          url:
            maxLength: 255
            type: string
          validation_data:
            additionalProperties: false
            description: Values to be used to populate the corresponding image 
              properties. If the image status is not 'queued', values must 
              exactly match those already contained in the image properties.
            properties:
              checksum:
                maxLength: 32
                minLength: 32
                type: string
              os_hash_algo:
                maxLength: 64
                type: string
              os_hash_value:
                maxLength: 128
                type: string
            required:
              - os_hash_algo
              - os_hash_value
            type: object
            writeOnly: true
        required:
          - url
        type: object
      type: array
    ImagesLocationsGet_LocationsResponse:
      description: A set of URLs to access the image file kept in external store
      items:
        properties:
          metadata:
            type: object
          url:
            maxLength: 255
            type: string
          validation_data:
            additionalProperties: false
            description: Values to be used to populate the corresponding image 
              properties. If the image status is not 'queued', values must 
              exactly match those already contained in the image properties.
            properties:
              checksum:
                maxLength: 32
                minLength: 32
                type: string
              os_hash_algo:
                maxLength: 64
                type: string
              os_hash_value:
                maxLength: 128
                type: string
            required:
              - os_hash_algo
              - os_hash_value
            type: object
            writeOnly: true
        required:
          - url
        type: object
      type: array
    ImagesMemberShowResponse:
      additionalProperties: false
      properties:
        created_at:
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
          type: string
        image_id:
          description: |-
            The UUID of the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        member_id:
          description: |-
            The ID of the image member. An image member is usually a project (also
            called the “tenant”) with whom the image is shared.
          type: string
        schema:
          description: |-
            The URL for the schema describing an image member.
          readOnly: true
          type: string
        status:
          description: |-
            The status of this image member. Value is one of `pending`,
            `accepted`, `rejected`.
          enum:
            - accepted
            - pending
            - rejected
          type: string
        updated_at:
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          type: string
      type: object
    ImagesMemberUpdateRequest:
      description: Request of the images/image_id/members/member_id:put 
        operation
      type: object
    ImagesMemberUpdateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
          type: string
        image_id:
          description: |-
            The UUID of the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        member_id:
          description: |-
            The ID of the image member. An image member is usually a project (also
            called the “tenant”) with whom the image is shared.
          type: string
        schema:
          description: |-
            The URL for the schema describing an image member.
          readOnly: true
          type: string
        status:
          description: |-
            The status of this image member. Value is one of `pending`,
            `accepted`, `rejected`.
          enum:
            - accepted
            - pending
            - rejected
          type: string
        updated_at:
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          type: string
      type: object
    ImagesMembersCreateRequest:
      description: Request of the images/image_id/members:post operation
      type: object
    ImagesMembersCreateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: |-
            The date and time when the resource was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC.
          type: string
        image_id:
          description: |-
            The UUID of the image.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        member_id:
          description: |-
            The ID of the image member. An image member is usually a project (also
            called the “tenant”) with whom the image is shared.
          type: string
        schema:
          description: |-
            The URL for the schema describing an image member.
          readOnly: true
          type: string
        status:
          description: |-
            The status of this image member. Value is one of `pending`,
            `accepted`, `rejected`.
          enum:
            - accepted
            - pending
            - rejected
          type: string
        updated_at:
          description: |-
            The date and time when the resource was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

            ```
            CCYY-MM-DDThh:mm:ss±hh:mm

            ```

            For example, `2015-08-27T09:49:58-05:00`.

            The `±hh:mm` value, if included, is the time zone as an offset
            from UTC. In the previous example, the offset value is `-05:00`.

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          type: string
      type: object
    ImagesMembersListResponse:
      properties:
        first:
          type: string
        members:
          description: |-
            A list of *member* objects, as described by the [Image Members Schema](#image-members-schema). Each *member* object describes a member with whom
            this image is being shared.
          items:
            additionalProperties: false
            name: member
            properties:
              created_at:
                description: Date and time of image member creation
                type: string
              image_id:
                description: An identifier for the image
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
                type: string
              member_id:
                description: An identifier for the image member (tenantId)
                type: string
              schema:
                readOnly: true
                type: string
              status:
                description: The status of this image member
                enum:
                  - accepted
                  - pending
                  - rejected
                type: string
              updated_at:
                description: Date and time of last modification of image member
                type: string
          type: array
        next:
          type: string
        schema:
          type: string
      type: object
    ImagesStageResponse:
      description: Response of the images/image_id/stage:put operation
      type: object
    ImagesStageStageRequest:
      description: Request of the images/image_id/stage:put operation
      type: object
    ImagesTagUpdateRequest:
      description: Request of the images/image_id/tags/tag_value:put operation
      type: object
    ImagesTagUpdateResponse:
      description: Response of the images/image_id/tags/tag_value:put operation
      type: object
    ImagesTasksGet_Task_InfoResponse:
      properties:
        first:
          type: string
        next:
          type: string
        schema:
          type: string
        tasks:
          description: |-
            A list of *task* objects, associated with the given image.
          items:
            additionalProperties: false
            name: task
            properties:
              created_at:
                description: Datetime when this resource was created
                type: string
              expires_at:
                description: Datetime when this resource would be subject to 
                  removal
                type:
                  - 'null'
                  - string
              id:
                description: An identifier for the task
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
                type: string
              image_id:
                description: Image associated with the task
                type: string
              input:
                description: The parameters required by task, JSON blob
                type:
                  - 'null'
                  - object
              message:
                description: Human-readable informative message only included 
                  when appropriate (usually on failure)
                type: string
              owner:
                description: An identifier for the owner of this task
                type: string
              request_id:
                description: Human-readable informative request-id
                type: string
              result:
                description: The result of current task, JSON blob
                type:
                  - 'null'
                  - object
              schema:
                readOnly: true
                type: string
              self:
                readOnly: true
                type: string
              status:
                description: The current status of this task
                enum:
                  - failure
                  - pending
                  - processing
                  - success
                type: string
              type:
                description: The type of task represented by this content
                enum:
                  - api_image_import
                  - import
                  - location_import
                type: string
              updated_at:
                description: Datetime when this resource was updated
                type: string
              user_id:
                description: User associated with the task
                type: string
          type: array
      type: object
    InfoImportGet_Image_ImportResponse:
      properties:
        import-methods:
          description: |-
            A JSON object containing a `value` element, which is an array of
            string identifiers indicating what import methods are available in
            the cloud in which the call is made. This list may be empty.
          properties:
            description:
              type: string
            type:
              type: string
            value:
              items:
                type: string
              type: array
          type: object
      type: object
    InfoStoresDetailGet_Stores_DetailResponse:
      properties:
        stores:
          description: |-
            A list of store objects, where each store object may contain the
            following fields:

            `id`
            :   Operator-defined identifier for the store.

            `type`
            :   Specify the type of store.

            `description`
            :   Operator-supplied description of this store.

            `default` (optional)
            :   Only present on the default store. This is the store where image
                data is placed if you do not indicate a specific store when supplying
                data to the Image Service. (See the [Image data](#image-data)
                and [Interoperable image import](#image-import-process) sections
                for more information.)

            `read-only` (optional)
            :   Included only when the store is read only.

            `weight` (default 0)
            :   Contains weight (positive integer) to sort image locations for
                preference.

            `properties`
            :   Contains store specific properties
          items:
            properties:
              default:
                type: boolean
              description:
                type: string
              id:
                type: string
              properties:
                additionalProperties: true
                type: object
              type:
                type: string
              weight:
                type: number
            type: object
          type: array
      type: object
    InfoStoresGet_StoresResponse:
      properties:
        stores:
          description: |-
            A list of store objects, where each store object may contain the
            following fields:

            `id`
            :   Operator-defined identifier for the store.

            `description`
            :   Operator-supplied description of this store.

            `default` (optional)
            :   Only present on the default store. This is the store where image
                data is placed if you do not indicate a specific store when supplying
                data to the Image Service. (See the [Image data](#image-data)
                and [Interoperable image import](#image-import-process) sections
                for more information.)

            `read-only` (optional)
            :   Included only when the store is read only.
          items:
            properties:
              default:
                type: boolean
              description:
                type: string
              id:
                type: string
            type: object
          type: array
      type: object
    InfoUsageGet_UsageResponse:
      additionalProperties: false
      properties:
        usage:
          items:
            additionalProperties: true
            type: object
            validation_data:
              additionalProperties: false
              properties:
                limit:
                  type: integer
                usage:
                  type: integer
              type: object
          type: array
      type: object
    MetadefsNamespaceDeleteRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespaceShowRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespaceShowResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespaceUpdateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespaceUpdateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespacesCreateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespacesCreateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespacesIndexRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespacesListResponse:
      properties:
        first:
          type: string
        namespaces:
          items:
            additionalProperties: false
            name: namespace
            properties:
              created_at:
                description: Date and time of namespace creation
                format: date-time
                readOnly: true
                type: string
              description:
                description: Provides a user friendly description of the 
                  namespace.
                maxLength: 500
                type: string
              display_name:
                description: The user friendly name for the namespace. Used by 
                  UI if available.
                maxLength: 80
                type: string
              namespace:
                description: The unique namespace text.
                maxLength: 80
                type: string
              objects:
                items:
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                    properties:
                      additionalProperties:
                        properties:
                          additionalItems:
                            type: boolean
                          default: {}
                          description:
                            type: string
                          enum:
                            type: array
                          items:
                            properties:
                              enum:
                                type: array
                              type:
                                enum:
                                  - 
                                  - array
                                  - boolean
                                  - integer
                                  - number
                                  - object
                                  - string
                                type: string
                            type: object
                          maxItems:
                            minimum: 0
                            type: integer
                          maxLength:
                            minimum: 0
                            type: integer
                          maximum:
                            type: number
                          minItems:
                            allOf:
                              - default: 0
                              - minimum: 0
                                type: integer
                          minLength:
                            allOf:
                              - default: 0
                              - minimum: 0
                                type: integer
                          minimum:
                            type: number
                          name:
                            maxLength: 80
                            type: string
                          operators:
                            items:
                              type: string
                            type: array
                          pattern:
                            format: regex
                            type: string
                          readonly:
                            type: boolean
                          required:
                            items:
                              type: string
                            type: array
                            uniqueItems: true
                          title:
                            type: string
                          type:
                            enum:
                              - 
                              - array
                              - boolean
                              - integer
                              - number
                              - object
                              - string
                            type: string
                          uniqueItems:
                            default: false
                            type: boolean
                        required:
                          - title
                          - type
                        type: object
                      type: object
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                  type: object
                type: array
              owner:
                description: Owner of the namespace.
                maxLength: 255
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              protected:
                description: If true, namespace will not be deletable.
                type: boolean
              resource_type_associations:
                items:
                  properties:
                    name:
                      type: string
                    prefix:
                      type: string
                    properties_target:
                      type: string
                  type: object
                type: array
              schema:
                readOnly: true
                type: string
              self:
                readOnly: true
                type: string
              tags:
                items:
                  properties:
                    name:
                      type: string
                  type: object
                type: array
              updated_at:
                description: Date and time of the last namespace modification
                format: date-time
                readOnly: true
                type: string
              visibility:
                description: Scope of namespace accessibility.
                enum:
                  - private
                  - public
                type: string
            required:
              - namespace
          type: array
        next:
          type: string
        schema:
          type: string
      type: object
    MetadefsNamespacesObjectDeleteRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectShowRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectShowResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectUpdateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectUpdateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectsCreateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectsCreateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectsDelete_ObjectsRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespacesObjectsIndexRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of object creation
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        name:
          maxLength: 80
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        required:
          items:
            type: string
          type: array
          uniqueItems: true
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        updated_at:
          description: Date and time of the last object modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesObjectsListResponse:
      properties:
        first:
          type: string
        next:
          type: string
        objects:
          items:
            additionalProperties: false
            name: object
            properties:
              created_at:
                description: Date and time of object creation
                format: date-time
                readOnly: true
                type: string
              description:
                type: string
              name:
                maxLength: 80
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              schema:
                readOnly: true
                type: string
              self:
                readOnly: true
                type: string
              updated_at:
                description: Date and time of the last object modification
                format: date-time
                readOnly: true
                type: string
            required:
              - name
          type: array
        schema:
          type: string
      type: object
    MetadefsNamespacesPropertiesCreateRequest:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesPropertiesCreateResponse:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesPropertiesDelete_PropertiesRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespacesPropertiesIndexRequest:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesPropertiesListResponse:
      properties:
        first:
          type: string
        next:
          type: string
        properties:
          additionalProperties:
            additionalProperties: false
            name: property
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                minItems: 1
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        schema:
          type: string
      type: object
    MetadefsNamespacesPropertyDeleteRequest:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesPropertyShowRequest:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesPropertyShowResponse:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesPropertyUpdateRequest:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesPropertyUpdateResponse:
      additionalProperties: false
      properties:
        additionalItems:
          type: boolean
        default: {}
        description:
          type: string
        enum:
          type: array
        items:
          properties:
            enum:
              type: array
            type:
              enum:
                - 
                - array
                - boolean
                - integer
                - number
                - object
                - string
              type: string
          type: object
        maxItems:
          minimum: 0
          type: integer
        maxLength:
          minimum: 0
          type: integer
        maximum:
          type: number
        minItems:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minLength:
          allOf:
            - default: 0
            - minimum: 0
              type: integer
        minimum:
          type: number
        name:
          maxLength: 80
          type: string
        operators:
          items:
            type: string
          type: array
        pattern:
          format: regex
          type: string
        readonly:
          type: boolean
        required:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        title:
          type: string
        type:
          enum:
            - 
            - array
            - boolean
            - integer
            - number
            - object
            - string
          type: string
        uniqueItems:
          default: false
          type: boolean
      required:
        - name
        - title
        - type
      type: object
    MetadefsNamespacesResource_TypeDeleteRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of resource type association
          format: date-time
          readOnly: true
          type: string
        name:
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
          type: string
        prefix:
          description: Specifies the prefix to use for the given resource type. 
            Any properties in the namespace should be prefixed with this prefix 
            when being applied to the specified resource type. Must include 
            prefix separator (e.g. a colon :).
          maxLength: 80
          type: string
        properties_target:
          description: Some resource types allow more than one key / value pair 
            per instance.  For example, Cinder allows user and image metadata on
            volumes. Only the image properties metadata is evaluated by Nova 
            (scheduling or drivers). This property allows a namespace target to 
            remove the ambiguity.
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last resource type association 
            modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesResource_TypesCreateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of resource type association
          format: date-time
          readOnly: true
          type: string
        name:
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
          type: string
        prefix:
          description: Specifies the prefix to use for the given resource type. 
            Any properties in the namespace should be prefixed with this prefix 
            when being applied to the specified resource type. Must include 
            prefix separator (e.g. a colon :).
          maxLength: 80
          type: string
        properties_target:
          description: Some resource types allow more than one key / value pair 
            per instance.  For example, Cinder allows user and image metadata on
            volumes. Only the image properties metadata is evaluated by Nova 
            (scheduling or drivers). This property allows a namespace target to 
            remove the ambiguity.
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last resource type association 
            modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesResource_TypesCreateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of resource type association
          format: date-time
          readOnly: true
          type: string
        name:
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
          type: string
        prefix:
          description: Specifies the prefix to use for the given resource type. 
            Any properties in the namespace should be prefixed with this prefix 
            when being applied to the specified resource type. Must include 
            prefix separator (e.g. a colon :).
          maxLength: 80
          type: string
        properties_target:
          description: Some resource types allow more than one key / value pair 
            per instance.  For example, Cinder allows user and image metadata on
            volumes. Only the image properties metadata is evaluated by Nova 
            (scheduling or drivers). This property allows a namespace target to 
            remove the ambiguity.
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last resource type association 
            modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesResource_TypesShowRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of resource type association
          format: date-time
          readOnly: true
          type: string
        name:
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
          type: string
        prefix:
          description: Specifies the prefix to use for the given resource type. 
            Any properties in the namespace should be prefixed with this prefix 
            when being applied to the specified resource type. Must include 
            prefix separator (e.g. a colon :).
          maxLength: 80
          type: string
        properties_target:
          description: Some resource types allow more than one key / value pair 
            per instance.  For example, Cinder allows user and image metadata on
            volumes. Only the image properties metadata is evaluated by Nova 
            (scheduling or drivers). This property allows a namespace target to 
            remove the ambiguity.
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last resource type association 
            modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesResource_TypesShowResponse:
      properties:
        first:
          type: string
        next:
          type: string
        resource_type_associations:
          items:
            additionalProperties: false
            name: resource_type_association
            properties:
              created_at:
                description: Date and time of resource type association
                format: date-time
                readOnly: true
                type: string
              name:
                description: 'Resource type names should be aligned with Heat resource
                  types whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
                maxLength: 80
                type: string
              prefix:
                description: Specifies the prefix to use for the given resource 
                  type. Any properties in the namespace should be prefixed with 
                  this prefix when being applied to the specified resource type.
                  Must include prefix separator (e.g. a colon :).
                maxLength: 80
                type: string
              properties_target:
                description: Some resource types allow more than one key / value
                  pair per instance.  For example, Cinder allows user and image 
                  metadata on volumes. Only the image properties metadata is 
                  evaluated by Nova (scheduling or drivers). This property 
                  allows a namespace target to remove the ambiguity.
                maxLength: 80
                type: string
              updated_at:
                description: Date and time of the last resource type association
                  modification
                format: date-time
                readOnly: true
                type: string
            required:
              - name
          type: array
        schema:
          type: string
      type: object
    MetadefsNamespacesTagCreateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagCreateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagDeleteRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagShowRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagShowResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagUpdateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagUpdateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagsCreate_TagsRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagsCreate_TagsResponse:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagsDelete_TagsRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of namespace creation
          format: date-time
          readOnly: true
          type: string
        description:
          description: Provides a user friendly description of the namespace.
          maxLength: 500
          type: string
        display_name:
          description: The user friendly name for the namespace. Used by UI if 
            available.
          maxLength: 80
          type: string
        namespace:
          description: The unique namespace text.
          maxLength: 80
          type: string
        objects:
          items:
            properties:
              description:
                type: string
              name:
                type: string
              properties:
                additionalProperties:
                  properties:
                    additionalItems:
                      type: boolean
                    default: {}
                    description:
                      type: string
                    enum:
                      type: array
                    items:
                      properties:
                        enum:
                          type: array
                        type:
                          enum:
                            - 
                            - array
                            - boolean
                            - integer
                            - number
                            - object
                            - string
                          type: string
                      type: object
                    maxItems:
                      minimum: 0
                      type: integer
                    maxLength:
                      minimum: 0
                      type: integer
                    maximum:
                      type: number
                    minItems:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minLength:
                      allOf:
                        - default: 0
                        - minimum: 0
                          type: integer
                    minimum:
                      type: number
                    name:
                      maxLength: 80
                      type: string
                    operators:
                      items:
                        type: string
                      type: array
                    pattern:
                      format: regex
                      type: string
                    readonly:
                      type: boolean
                    required:
                      items:
                        type: string
                      type: array
                      uniqueItems: true
                    title:
                      type: string
                    type:
                      enum:
                        - 
                        - array
                        - boolean
                        - integer
                        - number
                        - object
                        - string
                      type: string
                    uniqueItems:
                      default: false
                      type: boolean
                  required:
                    - title
                    - type
                  type: object
                type: object
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
            type: object
          type: array
        owner:
          description: Owner of the namespace.
          maxLength: 255
          type: string
        properties:
          additionalProperties:
            properties:
              additionalItems:
                type: boolean
              default: {}
              description:
                type: string
              enum:
                type: array
              items:
                properties:
                  enum:
                    type: array
                  type:
                    enum:
                      - 
                      - array
                      - boolean
                      - integer
                      - number
                      - object
                      - string
                    type: string
                type: object
              maxItems:
                minimum: 0
                type: integer
              maxLength:
                minimum: 0
                type: integer
              maximum:
                type: number
              minItems:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minLength:
                allOf:
                  - default: 0
                  - minimum: 0
                    type: integer
              minimum:
                type: number
              name:
                maxLength: 80
                type: string
              operators:
                items:
                  type: string
                type: array
              pattern:
                format: regex
                type: string
              readonly:
                type: boolean
              required:
                items:
                  type: string
                type: array
                uniqueItems: true
              title:
                type: string
              type:
                enum:
                  - 
                  - array
                  - boolean
                  - integer
                  - number
                  - object
                  - string
                type: string
              uniqueItems:
                default: false
                type: boolean
            required:
              - title
              - type
            type: object
          type: object
        protected:
          description: If true, namespace will not be deletable.
          type: boolean
        resource_type_associations:
          items:
            properties:
              name:
                type: string
              prefix:
                type: string
              properties_target:
                type: string
            type: object
          type: array
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        tags:
          items:
            properties:
              name:
                type: string
            type: object
          type: array
        updated_at:
          description: Date and time of the last namespace modification
          format: date-time
          readOnly: true
          type: string
        visibility:
          description: Scope of namespace accessibility.
          enum:
            - private
            - public
          type: string
      required:
        - namespace
      type: object
    MetadefsNamespacesTagsIndexRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of tag creation
          format: date-time
          readOnly: true
          type: string
        name:
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last tag modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsNamespacesTagsListResponse:
      properties:
        first:
          type: string
        next:
          type: string
        schema:
          type: string
        tags:
          items:
            additionalProperties: false
            name: tag
            properties:
              created_at:
                description: Date and time of tag creation
                format: date-time
                readOnly: true
                type: string
              name:
                maxLength: 80
                type: string
              updated_at:
                description: Date and time of the last tag modification
                format: date-time
                readOnly: true
                type: string
            required:
              - name
          type: array
      type: object
    MetadefsResource_TypesIndexRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Date and time of resource type association
          format: date-time
          readOnly: true
          type: string
        name:
          description: 'Resource type names should be aligned with Heat resource types
            whenever possible: https://docs.openstack.org/heat/latest/template_guide/openstack.html'
          maxLength: 80
          type: string
        prefix:
          description: Specifies the prefix to use for the given resource type. 
            Any properties in the namespace should be prefixed with this prefix 
            when being applied to the specified resource type. Must include 
            prefix separator (e.g. a colon :).
          maxLength: 80
          type: string
        properties_target:
          description: Some resource types allow more than one key / value pair 
            per instance.  For example, Cinder allows user and image metadata on
            volumes. Only the image properties metadata is evaluated by Nova 
            (scheduling or drivers). This property allows a namespace target to 
            remove the ambiguity.
          maxLength: 80
          type: string
        updated_at:
          description: Date and time of the last resource type association 
            modification
          format: date-time
          readOnly: true
          type: string
      required:
        - name
      type: object
    MetadefsResource_TypesListResponse:
      description: A list of abbreviated resource type JSON objects, where each 
        object contains the name of the resource type and its created_at and 
        updated_at timestamps in ISO 8601 Format.
      properties:
        resource_types:
          items:
            description: Resource type
            properties:
              created_at:
                description: Resource type creation date
                format: date-time
                readOnly: true
                type: string
              name:
                description: Resource type name
                type: string
              updated_at:
                description: Resource type update date
                format: date-time
                readOnly: true
                type: string
            type: object
          type: array
      type: object
    SchemasImageResponse:
      description: Schema data as string
      type: string
    SchemasImagesResponse:
      description: Schema data as string
      type: string
    SchemasMemberResponse:
      description: Schema data as string
      type: string
    SchemasMembersResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsNamespaceMetadef_NamespaceResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsNamespacesMetadef_NamespacesResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsObjectMetadef_ObjectResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsObjectsMetadef_ObjectsResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsPropertiesMetadef_PropertiesResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsPropertyMetadef_PropertyResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsResource_TypeMetadef_Resource_TypeResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsResource_TypesMetadef_Resource_TypesResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsTagMetadef_TagResponse:
      description: Schema data as string
      type: string
    SchemasMetadefsTagsMetadef_TagsResponse:
      description: Schema data as string
      type: string
    SchemasTaskResponse:
      description: Schema data as string
      type: string
    SchemasTasksResponse:
      description: Schema data as string
      type: string
    TaskDeleteRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Datetime when this resource was created
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        image_id:
          description: Image associated with the task
          type: string
        input:
          description: The parameters required by task, JSON blob
          type:
            - 'null'
            - object
        message:
          description: Human-readable informative message only included when 
            appropriate (usually on failure)
          type: string
        owner:
          description: An identifier for the owner of this task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        status:
          description: The current status of this task
          enum:
            - failure
            - pending
            - processing
            - success
          type: string
        type:
          description: The type of task represented by this content
          enum:
            - api_image_import
            - import
            - location_import
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        user_id:
          description: User associated with the task
          type: string
      type: object
    TaskGetRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Datetime when this resource was created
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        image_id:
          description: Image associated with the task
          type: string
        input:
          description: The parameters required by task, JSON blob
          type:
            - 'null'
            - object
        message:
          description: Human-readable informative message only included when 
            appropriate (usually on failure)
          type: string
        owner:
          description: An identifier for the owner of this task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        status:
          description: The current status of this task
          enum:
            - failure
            - pending
            - processing
            - success
          type: string
        type:
          description: The type of task represented by this content
          enum:
            - api_image_import
            - import
            - location_import
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        user_id:
          description: User associated with the task
          type: string
      type: object
    TaskGetResponse:
      additionalProperties: false
      properties:
        created_at:
          description: |-
            The date and time when the task was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
          type: string
        expires_at:
          description: |-
            The date and time when the task is subject to removal. While the *task
            object*, that is, the record describing the task is subject to deletion,
            the result of the task (for example, an imported image) still exists.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

            This value is only set when the task reaches status `success` or
            `failure`. Otherwise its value is `null`. It may not appear in
            the response when its value is `null`.
          type:
            - 'null'
            - string
        id:
          description: |-
            The UUID of the task.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        image_id:
          description: Image associated with the task
          type: string
        input:
          description: |-
            A JSON object specifying the input parameters to the task. Consult your
            cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        message:
          description: |-
            Human-readable text, possibly an empty string, usually displayed in an
            error situation to provide more information about what has occurred.
          type: string
        owner:
          description: |-
            An identifier for the owner of the task, usually the tenant ID.
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        result:
          description: |-
            A JSON object specifying information about the ultimate outcome of the
            task. Consult your cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        schema:
          description: |-
            The URI for the schema describing an image task.
          readOnly: true
          type: string
        self:
          description: |-
            A URI for this task.
          readOnly: true
          type: string
        status:
          description: |-
            The current status of this task. The value can be `pending`,
            `processing`, `success` or `failure`.
          enum:
            - failure
            - pending
            - processing
            - success
          type: string
        type:
          description: |-
            The type of task represented by this content.
          enum:
            - api_image_import
            - import
            - location_import
          type: string
        updated_at:
          description: |-
            The date and time when the task was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          type: string
        user_id:
          description: User associated with the task
          type: string
      type: object
    TasksCreateRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Datetime when this resource was created
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        image_id:
          description: Image associated with the task
          type: string
        input:
          description: |-
            A JSON object specifying the input parameters to the task. Consult your
            cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        message:
          description: Human-readable informative message only included when 
            appropriate (usually on failure)
          type: string
        owner:
          description: An identifier for the owner of this task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        status:
          description: The current status of this task
          enum:
            - failure
            - pending
            - processing
            - success
          type: string
        type:
          description: |-
            The type of task represented by this content.
          enum:
            - api_image_import
            - import
            - location_import
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        user_id:
          description: User associated with the task
          type: string
      type: object
    TasksCreateResponse:
      additionalProperties: false
      properties:
        created_at:
          description: |-
            The date and time when the task was created.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        id:
          description: |-
            The UUID of the task.
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        image_id:
          description: Image associated with the task
          type: string
        input:
          description: |-
            A JSON object specifying the input parameters to the task. Consult your
            cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        message:
          description: |-
            Human-readable text, possibly an empty string, usually displayed in an
            error situation to provide more information about what has occurred.
          type: string
        owner:
          description: |-
            An identifier for the owner of the task, usually the tenant ID.
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        result:
          description: |-
            A JSON object specifying information about the ultimate outcome of the
            task. Consult your cloud provider’s documentation for details.
          type:
            - 'null'
            - object
        schema:
          description: |-
            The URI for the schema describing an image task.
          readOnly: true
          type: string
        self:
          description: |-
            A URI for this task.
          readOnly: true
          type: string
        status:
          description: |-
            The current status of this task. The value can be `pending`,
            `processing`, `success` or `failure`.
          enum:
            - failure
            - pending
            - processing
            - success
          type: string
        type:
          description: |-
            The type of task represented by this content.
          enum:
            - api_image_import
            - import
            - location_import
          type: string
        updated_at:
          description: |-
            The date and time when the task was updated.

            The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).

            If the `updated_at` date and time stamp is not set, its value is
            `null`.
          type: string
        user_id:
          description: User associated with the task
          type: string
      type: object
    TasksIndexRequest:
      additionalProperties: false
      properties:
        created_at:
          description: Datetime when this resource was created
          type: string
        expires_at:
          description: Datetime when this resource would be subject to removal
          type:
            - 'null'
            - string
        id:
          description: An identifier for the task
          pattern: 
            ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
          type: string
        image_id:
          description: Image associated with the task
          type: string
        input:
          description: The parameters required by task, JSON blob
          type:
            - 'null'
            - object
        message:
          description: Human-readable informative message only included when 
            appropriate (usually on failure)
          type: string
        owner:
          description: An identifier for the owner of this task
          type: string
        request_id:
          description: Human-readable informative request-id
          type: string
        result:
          description: The result of current task, JSON blob
          type:
            - 'null'
            - object
        schema:
          readOnly: true
          type: string
        self:
          readOnly: true
          type: string
        status:
          description: The current status of this task
          enum:
            - failure
            - pending
            - processing
            - success
          type: string
        type:
          description: The type of task represented by this content
          enum:
            - api_image_import
            - import
            - location_import
          type: string
        updated_at:
          description: Datetime when this resource was updated
          type: string
        user_id:
          description: User associated with the task
          type: string
      type: object
    TasksListResponse:
      name: tasks
      properties:
        schema:
          description: |-
            The URI for the schema describing an image task list.
          type: string
        tasks:
          description: |-
            A list of sparse *task* objects. Each object contains the following
            fields:

            * `created_at`
            * `id`
            * `owner`
            * `schema`
            * `self`
            * `status`
            * `type`
            * `updated_at`
          items:
            properties:
              created_at:
                description: Datetime when this resource was created
                type: string
              expires_at:
                description: Datetime when this resource would be subject to 
                  removal
                type:
                  - 'null'
                  - string
              id:
                description: An identifier for the task
                pattern: 
                  ^([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}$
                type: string
              image_id:
                description: Image associated with the task
                type: string
              input:
                description: The parameters required by task, JSON blob
                type:
                  - 'null'
                  - object
              message:
                description: Human-readable informative message only included 
                  when appropriate (usually on failure)
                type: string
              owner:
                description: An identifier for the owner of this task
                type: string
              request_id:
                description: Human-readable informative request-id
                type: string
              result:
                description: The result of current task, JSON blob
                type:
                  - 'null'
                  - object
              schema:
                readOnly: true
                type: string
              self:
                readOnly: true
                type: string
              status:
                description: The current status of this task
                enum:
                  - failure
                  - pending
                  - processing
                  - success
                type: string
              type:
                description: The type of task represented by this content
                enum:
                  - api_image_import
                  - import
                  - location_import
                type: string
              updated_at:
                description: Datetime when this resource was updated
                type: string
              user_id:
                description: User associated with the task
                type: string
            type: object
          type: array
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Auth-Token
      type: apiKey
security:
  - ApiKeyAuth: []
tags:
  - name: cache
  - name: images
  - name: info
  - name: metadata-definition-namespaces
  - name: metadata-definition-objects
  - name: metadata-definition-properties
  - name: metadata-definition-resource-types
  - name: metadata-definition-tags
  - name: schemas
  - name: stores
  - name: tasks
