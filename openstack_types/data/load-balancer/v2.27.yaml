openapi: 3.1.0
info:
  title: OpenStack Load Balancing API
  description: |-
    Load Balancing API provided by Octavia service
  version: '2.27'
paths:
  /v2/lbaas:
    get:
      operationId: lbaas:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasGetResponse'
      tags:
        - lbaas
  /v2/lbaas/loadbalancers/{loadbalancer_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_loadbalancer_id'
    get:
      description: |-
        Shows the details of a load balancer.

        If you are not an administrative user and the load balancer object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/loadbalancers/loadbalancer_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancerShowResponse'
      tags:
        - load-balancers
      summary: Show Load Balancer details
    delete:
      description: |-
        Removes a load balancer and its associated configuration from the project.

        The optional parameter `cascade` when defined as `true` will delete all
        child objects of the load balancer.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/loadbalancers/loadbalancer_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - load-balancers
      summary: Remove a Load Balancer
    put:
      description: |-
        Updates a load balancer.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the load balancer
        provisioning status is `ACTIVE`. If the status is
        `PENDING_UPDATE`, use a GET operation to poll the load balancer
        object for changes.

        This operation returns the updated load balancer object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/loadbalancers/loadbalancer_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancerRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancerUpdateResponse'
      tags:
        - load-balancers
      summary: Update a Load Balancer
  /v2/lbaas/loadbalancers:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_loadbalancers_availability_zone'
        - $ref: '#/components/parameters/lbaas_loadbalancers_created_at'
        - $ref: '#/components/parameters/lbaas_loadbalancers_description'
        - $ref: '#/components/parameters/lbaas_loadbalancers_flavor_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_limit'
        - $ref: '#/components/parameters/lbaas_loadbalancers_marker'
        - $ref: '#/components/parameters/lbaas_loadbalancers_name'
        - $ref: '#/components/parameters/lbaas_loadbalancers_page_reverse'
        - $ref: '#/components/parameters/lbaas_loadbalancers_provider'
        - $ref: '#/components/parameters/lbaas_loadbalancers_project_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_updated_at'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_address'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_network_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_port_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_subnet_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_qos_policy_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_provisioning_status'
        - $ref: '#/components/parameters/lbaas_loadbalancers_operating_status'
        - $ref: '#/components/parameters/lbaas_loadbalancers_tags'
        - $ref: '#/components/parameters/lbaas_loadbalancers_tags-any'
        - $ref: '#/components/parameters/lbaas_loadbalancers_not-tags'
        - $ref: '#/components/parameters/lbaas_loadbalancers_not-tags-any'
      description: |-
        Lists all load balancers for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list load balancers for other projects.

        The list might be empty.
      operationId: lbaas/loadbalancers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersListResponse'
      tags:
        - load-balancers
      summary: List Load Balancers
    post:
      description: |-
        Creates a load balancer.

        This operation provisions a new load balancer by using the
        configuration that you define in the request object. After the API
        validates the request and starts the provisioning process, the API
        returns a response object that contains a unique ID and the status
        of provisioning the load balancer.

        In the response, the load balancer [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/loadbalancers/{loadbalancer_id}` to view the progress of
        the provisioning operation. When the load balancer status changes
        to `ACTIVE`, the load balancer is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Administrative users can specify a project ID that is different than
        their own to create load balancers for other projects.

        An optional `flavor_id` attribute can be used to create the load balancer
        using a pre-configured octavia flavor. Flavors are created by the operator
        to allow custom load balancer configurations, such as allocating more
        memory for the load balancer.

        An optional `vip_qos_policy_id` attribute from Neutron can be used to
        apply QoS policies on a loadbalancer VIP, also could pass a ‘null’ value to
        remove QoS policies.

        You can also specify the `provider` attribute when you create a
        load balancer. The `provider` attribute specifies which backend should
        be used to create the load balancer. This could be the default provider
        (`octavia`) or a vendor supplied `provider` if one has been installed.
        Setting both a flavor_id and a provider will result in a conflict error if
        the provider does not match the provider of the configured flavor profiles.

        Specifying a Virtual IP (VIP) is mandatory. There are three ways to specify
        a VIP network for the load balancer:

        Additional VIPs may also be specified in the `additional_vips` field, by
        providing a list of JSON objects containing a `subnet_id` and optionally
        an `ip_address`. All additional subnets must be part of the same network
        as the primary VIP.

        An optional `vip_sg_ids` attribute can be used to set custom Neutron Security
        Groups that are applied on the VIP port of the Load Balancer. When this option
        is used, Octavia does not manage the security of the Listeners, the user
        must set Security Group Rules to allow the network traffic on the VIP port.
        `vip_sg_ids` are incompatible with SR-IOV load balancer and cannot be set if
        the load balancer has a listener that uses `allowed_cidrs`.
      operationId: lbaas/loadbalancers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancerRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersCreateResponse'
      tags:
        - load-balancers
      summary: Create a Load Balancer
  /v2/lbaas/listeners/{listener_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_listeners_listener_id'
    get:
      description: |-
        Shows the details of a listener.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/listeners/listener_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenerShowResponse'
      tags:
        - listeners
      summary: Show Listener details
    delete:
      description: |-
        Removes a listener and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/listeners/listener_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - listeners
      summary: Remove a Listener
    put:
      description: |-
        Update an existing listener.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the listener provisioning
        status is `ACTIVE`. If the status is `PENDING_UPDATE`, use a GET
        operation to poll the listener object for changes.

        This operation returns the updated listener object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/listeners/listener_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListenerRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenerUpdateResponse'
      tags:
        - listeners
      summary: Update a Listener
  /v2/lbaas/listeners:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_listeners_admin_state_up'
        - $ref: '#/components/parameters/lbaas_listeners_alpn_protocols'
        - $ref: '#/components/parameters/lbaas_listeners_connection_limit'
        - $ref: '#/components/parameters/lbaas_listeners_created_at'
        - $ref: '#/components/parameters/lbaas_listeners_default_pool_id'
        - $ref: '#/components/parameters/lbaas_listeners_description'
        - $ref: '#/components/parameters/lbaas_listeners_hsts_include_subdomains'
        - $ref: '#/components/parameters/lbaas_listeners_hsts_max_age'
        - $ref: '#/components/parameters/lbaas_listeners_hsts_preload'
        - $ref: '#/components/parameters/lbaas_listeners_id'
        - $ref: '#/components/parameters/lbaas_listeners_limit'
        - $ref: '#/components/parameters/lbaas_listeners_load_balancer_id'
        - $ref: '#/components/parameters/lbaas_listeners_marker'
        - $ref: '#/components/parameters/lbaas_listeners_name'
        - $ref: '#/components/parameters/lbaas_listeners_page_reverse'
        - $ref: '#/components/parameters/lbaas_listeners_project_id'
        - $ref: '#/components/parameters/lbaas_listeners_protocol'
        - $ref: '#/components/parameters/lbaas_listeners_protocol_port'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_client_data'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_member_connect'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_member_data'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_tcp_inspect'
        - $ref: '#/components/parameters/lbaas_listeners_tls_ciphers'
        - $ref: '#/components/parameters/lbaas_listeners_tls_versions'
        - $ref: '#/components/parameters/lbaas_listeners_updated_at'
        - $ref: '#/components/parameters/lbaas_listeners_provisioning_status'
        - $ref: '#/components/parameters/lbaas_listeners_operating_status'
        - $ref: '#/components/parameters/lbaas_listeners_tags'
        - $ref: '#/components/parameters/lbaas_listeners_tags-any'
        - $ref: '#/components/parameters/lbaas_listeners_not-tags'
        - $ref: '#/components/parameters/lbaas_listeners_not-tags-any'
      description: |-
        Lists all listeners for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list listeners for other projects.

        The list might be empty.
      operationId: lbaas/listeners:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenersListResponse'
      tags:
        - listeners
      summary: List Listeners
    post:
      description: |-
        Creates a listener for a load balancer.

        The listener configures a port and protocol for the load balancer to listen
        on for incoming requests. A load balancer may have zero or more listeners
        configured.

        This operation provisions a new listener by using the configuration that
        you define in the request object. After the API validates the request and
        starts the provisioning process, the API returns a response object that
        contains a unique ID and the status of provisioning the listener.

        In the response, the listener [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/listeners/{listener_id}` to view the progress of
        the provisioning operation. When the listener status changes
        to `ACTIVE`, the listener is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Specifying a project_id is deprecated. The listener will inherit
        the project_id of the parent load balancer.

        You can configure all documented features of the listener at creation time by
        specifying the additional elements or attributes in the request.

        To create a listener, the parent load balancer must have an `ACTIVE`
        provisioning status.
      operationId: lbaas/listeners:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListenerRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenersCreateResponse'
      tags:
        - listeners
      summary: Create Listener
  /v2/lbaas/pools/{pool_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_pools_pool_id'
    get:
      description: |-
        Shows the details of a pool.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/pools/pool_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolGetResponse'
      tags:
        - pools
      summary: Show Pool details
    delete:
      description: |-
        Removes a pool and its associated configuration from the load balancer.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/pools/pool_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - pools
      summary: Remove a Pool
    put:
      description: |-
        Update an existing pool.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the pool provisioning
        status is `ACTIVE`. If the status is `PENDING_UPDATE`, use a GET
        operation to poll the pool object for changes.

        This operation returns the updated pool object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/pools/pool_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolRootPut'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolUpdateResponse'
      tags:
        - pools
      summary: Update a Pool
  /v2/lbaas/pools:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_pools_admin_state_up'
        - $ref: '#/components/parameters/lbaas_pools_alpn_protocols'
        - $ref: '#/components/parameters/lbaas_pools_created_at'
        - $ref: '#/components/parameters/lbaas_pools_description'
        - $ref: '#/components/parameters/lbaas_pools_id'
        - $ref: '#/components/parameters/lbaas_pools_limit'
        - $ref: '#/components/parameters/lbaas_pools_loadbalancer_id'
        - $ref: '#/components/parameters/lbaas_pools_marker'
        - $ref: '#/components/parameters/lbaas_pools_name'
        - $ref: '#/components/parameters/lbaas_pools_page_reverse'
        - $ref: '#/components/parameters/lbaas_pools_project_id'
        - $ref: '#/components/parameters/lbaas_pools_tls_enabled'
        - $ref: '#/components/parameters/lbaas_pools_tls_ciphers'
        - $ref: '#/components/parameters/lbaas_pools_tls_versions'
        - $ref: '#/components/parameters/lbaas_pools_updated_at'
        - $ref: '#/components/parameters/lbaas_pools_provisioning_status'
        - $ref: '#/components/parameters/lbaas_pools_operating_status'
        - $ref: '#/components/parameters/lbaas_pools_tags'
        - $ref: '#/components/parameters/lbaas_pools_tags-any'
        - $ref: '#/components/parameters/lbaas_pools_not-tags'
        - $ref: '#/components/parameters/lbaas_pools_not-tags-any'
      description: |-
        Lists all pools for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list pools for other projects.

        The list might be empty.
      operationId: lbaas/pools:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsListResponse'
      tags:
        - pools
      summary: List Pools
    post:
      description: |-
        Creates a pool for a load balancer.

        The pool defines how requests should be balanced across the backend
        member servers.

        This operation provisions a pool by using the configuration that
        you define in the request object. After the API validates the
        request and starts the provisioning process, the API returns a
        response object, which contains a unique ID.

        In the response, the pool [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/pools/{pool_id}` to view the progress of
        the provisioning operation. When the pool status changes
        to `ACTIVE`, the pool is successfully provisioned and
        is ready for further configuration.

        At a minimum, you must specify these pool attributes:

        Some attributes receive default values if you omit them from the
        request:

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Specifying a project_id is deprecated. The pool will inherit the
        project_id of the parent load balancer.

        You can configure all documented features of the pool at creation time by
        specifying the additional elements or attributes in the request.

        To create a pool, the parent load balancer must have an `ACTIVE`
        provisioning status.

        `SOURCE_IP_PORT` algorithm is available from version 2.13.
      operationId: lbaas/pools:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsCreateResponse'
      tags:
        - pools
      summary: Create Pool
  /v2/lbaas/l7policies/{l7policy_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_l7policies_l7policy_id'
    get:
      description: |-
        Shows the details of a L7 policy.

        If you are not an administrative user and the L7 policy object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/l7policies/l7policy_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PolicyGetResponse'
      tags:
        - l7-policies
      summary: Show L7 Policy details
    delete:
      description: |-
        Removes a L7 policy and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/l7policies/l7policy_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - l7-policies
      summary: Remove a L7 Policy
    put:
      description: |-
        Updates a L7 policy.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the L7 policy
        provisioning status is `ACTIVE`. If the status is
        `PENDING_UPDATE`, use a GET operation to poll the L7 policy
        object for changes.

        This operation returns the updated L7 policy object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.

        If a policy is updated with a position that matches that of an existing
        policy, then the updated policy is inserted at the given position.
      operationId: lbaas/l7policies/l7policy_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7PolicyRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PolicyUpdateResponse'
      tags:
        - l7-policies
      summary: Update a L7 Policy
  /v2/lbaas/l7policies:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_l7policies_action'
        - $ref: '#/components/parameters/lbaas_l7policies_admin_state_up'
        - $ref: '#/components/parameters/lbaas_l7policies_description'
        - $ref: '#/components/parameters/lbaas_l7policies_limit'
        - $ref: '#/components/parameters/lbaas_l7policies_listener_id'
        - $ref: '#/components/parameters/lbaas_l7policies_marker'
        - $ref: '#/components/parameters/lbaas_l7policies_name'
        - $ref: '#/components/parameters/lbaas_l7policies_operating_status'
        - $ref: '#/components/parameters/lbaas_l7policies_page_reverse'
        - $ref: '#/components/parameters/lbaas_l7policies_position'
        - $ref: '#/components/parameters/lbaas_l7policies_project_id'
        - $ref: '#/components/parameters/lbaas_l7policies_provisioning_status'
        - $ref: '#/components/parameters/lbaas_l7policies_redirect_pool_id'
        - $ref: '#/components/parameters/lbaas_l7policies_redirect_prefix'
        - $ref: '#/components/parameters/lbaas_l7policies_redirect_url'
      description: |-
        Lists all L7 policies for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list L7 policies for other projects.

        The list might be empty.
      operationId: lbaas/l7policies:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesListResponse'
      tags:
        - l7-policies
      summary: List L7 Policies
    post:
      description: |-
        Creates a L7 policy.

        This operation provisions a new L7 policy by using the
        configuration that you define in the request object. After the API
        validates the request and starts the provisioning process, the API
        returns a response object that contains a unique ID and the status
        of provisioning the L7 policy.

        In the response, the L7 policy [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/l7policies/{l7policy_id}` to view the progress of
        the provisioning operation. When the L7 policy status changes
        to `ACTIVE`, the L7 policy is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        All the rules associated with a given policy are logically ANDead together. A
        request must match all the policy’s rules to match the policy.

        If you need to express a logical OR operation between rules, then do this by
        creating multiple policies with the same action.

        If a new policy is created with a position that matches that of an existing
        policy, then the new policy is inserted at the given position.

        L7 policies with `action` of `REDIRECT_TO_URL` will return the default HTTP
        `Found (302)` response code with the `redirect_url`. Also, specify
        `redirect_http_code` to configure the needed HTTP response code, such as,
        301, 302, 303, 307 and 308.

        L7 policies with `action` of `REJECT` will return a `Forbidden (403)`
        response code to the requester.
      operationId: lbaas/l7policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7PolicyRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesCreateResponse'
      tags:
        - l7-policies
      summary: Create an L7 Policy
  /v2/lbaas/healthmonitors/{healthmonitor_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_healthmonitors_healthmonitor_id'
    get:
      description: |-
        Shows the details of a health monitor.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/healthmonitors/healthmonitor_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorShowResponse'
      tags:
        - healthmonitors
      summary: Show Health Monitor details
    delete:
      description: |-
        Removes a health monitor and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/healthmonitors/healthmonitor_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - healthmonitors
      summary: Remove a Health Monitor
    put:
      description: |-
        Update an existing health monitor.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the health monitor
        provisioning status is `ACTIVE`. If the status is `PENDING_UPDATE`,
        use a GET operation to poll the health monitor object for changes.

        This operation returns the updated health monitor object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/healthmonitors/healthmonitor_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthMonitorRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorUpdateResponse'
      tags:
        - healthmonitors
      summary: Update a Health Monitor
  /v2/lbaas/healthmonitors:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_healthmonitors_admin_state_up'
        - $ref: '#/components/parameters/lbaas_healthmonitors_created_at'
        - $ref: '#/components/parameters/lbaas_healthmonitors_delay'
        - $ref: '#/components/parameters/lbaas_healthmonitors_description'
        - $ref: '#/components/parameters/lbaas_healthmonitors_expected_codes'
        - $ref: '#/components/parameters/lbaas_healthmonitors_http_method'
        - $ref: '#/components/parameters/lbaas_healthmonitors_id'
        - $ref: '#/components/parameters/lbaas_healthmonitors_limit'
        - $ref: '#/components/parameters/lbaas_healthmonitors_marker'
        - $ref: '#/components/parameters/lbaas_healthmonitors_max_retries'
        - $ref: '#/components/parameters/lbaas_healthmonitors_max_retries_down'
        - $ref: '#/components/parameters/lbaas_healthmonitors_name'
        - $ref: '#/components/parameters/lbaas_healthmonitors_page_reverse'
        - $ref: '#/components/parameters/lbaas_healthmonitors_pool_id'
        - $ref: '#/components/parameters/lbaas_healthmonitors_project_id'
        - $ref: '#/components/parameters/lbaas_healthmonitors_timeout'
        - $ref: '#/components/parameters/lbaas_healthmonitors_type'
        - $ref: '#/components/parameters/lbaas_healthmonitors_updated_at'
        - $ref: '#/components/parameters/lbaas_healthmonitors_url_path'
        - $ref: '#/components/parameters/lbaas_healthmonitors_provisioning_status'
        - $ref: '#/components/parameters/lbaas_healthmonitors_operating_status'
        - $ref: '#/components/parameters/lbaas_healthmonitors_tags'
        - $ref: '#/components/parameters/lbaas_healthmonitors_tags-any'
        - $ref: '#/components/parameters/lbaas_healthmonitors_not-tags'
        - $ref: '#/components/parameters/lbaas_healthmonitors_not-tags-any'
      description: |-
        Lists all health monitors for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list health monitors for other projects.

        The list might be empty.
      operationId: lbaas/healthmonitors:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorsListResponse'
      tags:
        - healthmonitors
      summary: List Health Monitors
    post:
      description: |-
        Creates a health monitor on a pool.

        Health monitors define how the load balancer monitors backend servers
        to determine if they are available to service requests.

        This operation provisions a new health monitor by using the configuration that
        you define in the request object. After the API validates the request and
        starts the provisioning process, the API returns a response object that
        contains a unique ID and the status of provisioning the health monitor.

        In the response, the health monitor [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/healthmonitors/{healthmonitor_id}` to view the progress of
        the provisioning operation. When the health monitor status changes
        to `ACTIVE`, the health monitor is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Specifying a project_id is deprecated. The health monitor will inherit
        the project_id of the parent load balancer.

        At a minimum, you must specify these health monitor attributes:

        Some attributes receive default values if you omit them from the request:

        To create a health monitor, the parent load balancer must have an `ACTIVE`
        provisioning status.
      operationId: lbaas/healthmonitors:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthMonitorRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorsCreateResponse'
      tags:
        - healthmonitors
      summary: Create Health Monitor
  /v2/lbaas/quotas/{project_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_quotas_project_id'
    get:
      description: |-
        Show the quota for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to show quota for other projects.

        A quota of `-1` means the quota is unlimited.
      operationId: lbaas/quotas/project_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasQuotaGetResponse'
      tags:
        - quotas
      summary: Show Project Quota
    delete:
      description: |-
        Resets a project quota to use the deployment default quota.
      operationId: lbaas/quotas/project_id:delete
      responses:
        '202':
          description: Ok
      tags:
        - quotas
      summary: Reset a Quota
    put:
      description: |-
        Updates a quota for a project.

        If the request is valid, the service returns the `Accepted (202)`
        response code.

        This operation returns the updated quota object.

        If the quota is specified as `null` the quota will use the deployment default
        quota settings.

        Specifying a quota of `-1` means the quota is unlimited.

        Specifying a quota of `0` means the project cannot create any of the
        resource.
      operationId: lbaas/quotas/project_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaPUT'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasQuotaUpdateResponse'
      tags:
        - quotas
      summary: Update a Quota
  /v2/lbaas/quotas:
    get:
      description: |-
        Lists all quotas for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list quotas for other projects.

        If the quota is listed as `null` the quota is using the deployment default
        quota settings.

        A quota of `-1` means the quota is unlimited.

        The list might be empty.
      operationId: lbaas/quotas:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasQuotasListResponse'
      tags:
        - quotas
      summary: List Quota
  /v2/lbaas/providers:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_providers_description'
        - $ref: '#/components/parameters/lbaas_providers_limit'
        - $ref: '#/components/parameters/lbaas_providers_marker'
        - $ref: '#/components/parameters/lbaas_providers_name'
        - $ref: '#/components/parameters/lbaas_providers_page_reverse'
      description: |-
        Lists all enabled provider drivers.

        Use the `fields` query parameter to control which fields are
        returned in the response body.

        The list might be empty.
      operationId: lbaas/providers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasProvidersListResponse'
      tags:
        - providers
      summary: List Providers
  /v2/lbaas/flavors/{flavor_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_flavors_flavor_id'
    get:
      description: |-
        Gets a flavor's detail.
      operationId: lbaas/flavors/flavor_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorShowResponse'
      tags:
        - flavors
    delete:
      description: |-
        Deletes a Flavor
      operationId: lbaas/flavors/flavor_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavors
    put:
      operationId: lbaas/flavors/flavor_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorUpdateResponse'
      tags:
        - flavors
  /v2/lbaas/flavors:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_flavors_description'
        - $ref: '#/components/parameters/lbaas_flavors_enabled'
        - $ref: '#/components/parameters/lbaas_flavors_flavor_profile_id'
        - $ref: '#/components/parameters/lbaas_flavors_id'
        - $ref: '#/components/parameters/lbaas_flavors_limit'
        - $ref: '#/components/parameters/lbaas_flavors_marker'
        - $ref: '#/components/parameters/lbaas_flavors_name'
        - $ref: '#/components/parameters/lbaas_flavors_page_reverse'
      description: |-
        Lists all flavors.
      operationId: lbaas/flavors:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorsListResponse'
      tags:
        - flavors
    post:
      description: |-
        Creates a flavor.
      operationId: lbaas/flavors:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorsCreateResponse'
      tags:
        - flavors
  /v2/lbaas/flavorprofiles/{flavorprofile_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_flavorprofiles_flavorprofile_id'
    get:
      description: |-
        Gets a flavor profile's detail.
      operationId: lbaas/flavorprofiles/flavorprofile_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofileShowResponse'
      tags:
        - flavor-profiles
    delete:
      description: |-
        Deletes a Flavor Profile
      operationId: lbaas/flavorprofiles/flavorprofile_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavor-profiles
    put:
      description: |-
        Updates a flavor Profile.
      operationId: lbaas/flavorprofiles/flavorprofile_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorProfileRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofileUpdateResponse'
      tags:
        - flavor-profiles
  /v2/lbaas/flavorprofiles:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_flavorprofiles_flavor_data'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_id'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_limit'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_marker'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_name'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_page_reverse'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_provider_name'
      description: |-
        Lists all flavor profiles.
      operationId: lbaas/flavorprofiles:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofilesListResponse'
      tags:
        - flavor-profiles
    post:
      description: |-
        Creates a flavor Profile.
      operationId: lbaas/flavorprofiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorProfileRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofilesCreateResponse'
      tags:
        - flavor-profiles
  /v2/lbaas/availabilityzones/{availabilityzone_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_availabilityzones_availabilityzone_id'
    get:
      description: |-
        Gets an Availability Zone's detail.
      operationId: lbaas/availabilityzones/availabilityzone_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneShowResponse'
      tags:
        - availability-zones
    delete:
      description: |-
        Deletes an Availability Zone
      operationId: lbaas/availabilityzones/availabilityzone_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - availability-zones
    put:
      operationId: lbaas/availabilityzones/availabilityzone_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneUpdateResponse'
      tags:
        - availability-zones
  /v2/lbaas/availabilityzones:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_availabilityzones_availability_zone_profile_id'
        - $ref: '#/components/parameters/lbaas_availabilityzones_description'
        - $ref: '#/components/parameters/lbaas_availabilityzones_limit'
        - $ref: '#/components/parameters/lbaas_availabilityzones_marker'
        - $ref: '#/components/parameters/lbaas_availabilityzones_name'
        - $ref: '#/components/parameters/lbaas_availabilityzones_page_reverse'
        - $ref: '#/components/parameters/lbaas_availabilityzones_status'
      description: |-
        Lists all Availability Zones.
      operationId: lbaas/availabilityzones:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzonesListResponse'
      tags:
        - availability-zones
    post:
      description: |-
        Creates an Availability Zone.
      operationId: lbaas/availabilityzones:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzonesCreateResponse'
      tags:
        - availability-zones
  /v2/lbaas/availabilityzoneprofiles/{availabilityzoneprofile_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_availabilityzoneprofile_id'
    get:
      description: |-
        Gets an Availability Zone Profile's detail.
      operationId: lbaas/availabilityzoneprofiles/availabilityzoneprofile_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofileShowResponse'
      tags:
        - availability-zone-profiles
    delete:
      description: |-
        Deletes an Availability Zone Profile
      operationId: lbaas/availabilityzoneprofiles/availabilityzoneprofile_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - availability-zone-profiles
    put:
      description: |-
        Updates an Availability Zone Profile.
      operationId: lbaas/availabilityzoneprofiles/availabilityzoneprofile_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneProfileRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofileUpdateResponse'
      tags:
        - availability-zone-profiles
  /v2/lbaas/availabilityzoneprofiles:
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_availability_zone_data'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_id'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_limit'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_marker'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_name'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_page_reverse'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_provider_name'
      description: |-
        Lists all Availability Zone Profiles.
      operationId: lbaas/availabilityzoneprofiles:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofilesListResponse'
      tags:
        - availability-zone-profiles
    post:
      description: |-
        Creates an Availability Zone Profile.
      operationId: lbaas/availabilityzoneprofiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneProfileRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofilesCreateResponse'
      tags:
        - availability-zone-profiles
  /v2/octavia:
    get:
      operationId: octavia:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaGetResponse'
      tags:
        - octavia
  /v2/octavia/amphorae/{amphora_id}:
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_amphora_id'
    get:
      description: |-
        Shows the details of an amphora.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        This operation does not require a request body.
      operationId: octavia/amphorae/amphora_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeShowResponse'
      tags:
        - amphorae
      summary: Show Amphora details
    delete:
      description: |-
        Removes an amphora and its associated configuration.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.

        **New in version 2.20**
      operationId: octavia/amphorae/amphora_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - amphorae
      summary: Remove an Amphora
  /v2/octavia/amphorae:
    get:
      parameters:
        - $ref: '#/components/parameters/octavia_amphorae_cached_zone'
        - $ref: '#/components/parameters/octavia_amphorae_cert_busy'
        - $ref: '#/components/parameters/octavia_amphorae_cert_expiration'
        - $ref: '#/components/parameters/octavia_amphorae_compute_id'
        - $ref: '#/components/parameters/octavia_amphorae_compute_flavor'
        - $ref: '#/components/parameters/octavia_amphorae_created_at'
        - $ref: '#/components/parameters/octavia_amphorae_ha_ip'
        - $ref: '#/components/parameters/octavia_amphorae_ha_port_id'
        - $ref: '#/components/parameters/octavia_amphorae_id'
        - $ref: '#/components/parameters/octavia_amphorae_image_id'
        - $ref: '#/components/parameters/octavia_amphorae_lb_network_ip'
        - $ref: '#/components/parameters/octavia_amphorae_limit'
        - $ref: '#/components/parameters/octavia_amphorae_loadbalancer_id'
        - $ref: '#/components/parameters/octavia_amphorae_marker'
        - $ref: '#/components/parameters/octavia_amphorae_page_reverse'
        - $ref: '#/components/parameters/octavia_amphorae_role'
        - $ref: '#/components/parameters/octavia_amphorae_status'
        - $ref: '#/components/parameters/octavia_amphorae_updated_at'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_ip'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_port_id'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_interface'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_id'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_priority'
      description: |-
        Lists all amphora for the project.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        The list might be empty.
      operationId: octavia/amphorae:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeListResponse'
      tags:
        - amphorae
      summary: List Amphora
  /v2/octavia/amphorae/{amphora_id}/stats:
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_stats_amphora_id'
    get:
      description: |-
        Show the statistics for an amphora.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        Use the `fields` query parameter to control which fields are
        returned in the response body.

        **New in version 2.3**
      operationId: octavia/amphorae/amphora_id/stats:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeStatsResponse'
      tags:
        - amphorae
      summary: Show Amphora Statistics
  /v2/octavia/amphorae/{amphora_id}/config:
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_config_amphora_id'
    put:
      description: |-
        Update the amphora agent configuration. This will push the new configuration
        to the amphora agent and will update the configuration options that are
        mutable.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        This operation does not require a request body.

        **New in version 2.7**
      operationId: octavia/amphorae/amphora_id/config:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OctaviaAmphoraeConfigConfigRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeConfigResponse'
      tags:
        - amphorae
      summary: Configure Amphora
  /v2/octavia/amphorae/{amphora_id}/failover:
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_failover_amphora_id'
    put:
      description: |-
        Force an amphora to failover.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        This operation does not require a request body.
      operationId: octavia/amphorae/amphora_id/failover:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OctaviaAmphoraeFailoverFailoverRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeFailoverResponse'
      tags:
        - amphorae
      summary: Failover Amphora
  /v2/lbaas/providers/{provider}/flavor_capabilities:
    parameters:
      - $ref: '#/components/parameters/lbaas_providers_flavor_capabilities_provider'
    get:
      description: |-
        Shows the provider driver flavor capabilities. These are the features of the
        provider driver that can be configured in an Octavia flavor. This API returns
        a list of dictionaries with the name and description of each flavor capability
        of the provider.

        The list might be empty and a provider driver may not implement this feature.

        **New in version 2.6**
      operationId: lbaas/providers/provider/flavor_capabilities:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasProvidersFlavor_CapabilitiesResponse'
      tags:
        - providers
      summary: Show Provider Flavor Capabilities
  /v2/lbaas/providers/{provider}/availability_zone_capabilities:
    parameters:
      - $ref: '#/components/parameters/lbaas_providers_availability_zone_capabilities_provider'
    get:
      description: |-
        Shows the provider driver availability zone capabilities. These are the
        features of the provider driver that can be configured in an Octavia
        availability zone. This API returns a list of dictionaries with the name and
        description of each availability zone capability of the provider.

        The list might be empty and a provider driver may not implement this feature.

        **New in version 2.14**
      operationId: lbaas/providers/provider/availability_zone_capabilities:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasProvidersAvailability_Zone_CapabilitiesAz_CapabilitiesResponse'
      tags:
        - providers
      summary: Show Provider Availability Zone Capabilities
  /v2/lbaas/l7policies/{l7policy_id}/rules:
    parameters:
      - $ref: '#/components/parameters/lbaas_l7policies_rules_l7policy_id'
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_l7policies_rules_admin_state_up'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_compare_type'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_created_at'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_invert'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_key'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_limit'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_marker'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_operating_status'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_page_reverse'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_project_id'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_provisioning_status'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_rule_value'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_type'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_updated_at'
      description: |-
        Lists all L7 rules for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list L7 policies for other projects.

        The list might be empty.
      operationId: lbaas/l7policies/l7policy_id/rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRulesListResponse'
      tags:
        - l7-rules
      summary: List L7 Rules
    post:
      description: |-
        Creates a L7 rule.

        This operation provisions a new L7 rule by using the
        configuration that you define in the request object. After the API
        validates the request and starts the provisioning process, the API
        returns a response object that contains a unique ID and the status
        of provisioning the L7 rule.

        In the response, the L7 rule [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/l7policies/{l7policy_id}/rules/{l7rule_id}` to view the
        progress of the provisioning operation. When the L7 rule status changes
        to `ACTIVE`, the L7 rule is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        All the rules associated with a given policy are logically ANDead together. A
        request must match all the policy’s rules to match the policy.

        If you need to express a logical OR operation between rules, then do this by
        creating multiple policies with the same action.
      operationId: lbaas/l7policies/l7policy_id/rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7RuleRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRulesCreateResponse'
      tags:
        - l7-rules
      summary: Create an L7 Rule
  /v2/lbaas/l7policies/{l7policy_id}/rules/{rule_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_l7policies_rules_l7policy_id'
      - $ref: '#/components/parameters/lbaas_l7policies_rules_rule_id'
    get:
      description: |-
        Shows the details of a L7 rule.

        If you are not an administrative user and the L7 rule object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/l7policies/l7policy_id/rules/rule_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRuleCreateResponse'
      tags:
        - l7-rules
      summary: Show L7 Rule details
    delete:
      description: |-
        Removes a L7 rule and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/l7policies/l7policy_id/rules/rule_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - l7-rules
      summary: Remove a L7 Rule
    put:
      description: |-
        Updates a L7 rule.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the L7 rule
        provisioning status is `ACTIVE`. If the status is
        `PENDING_UPDATE`, use a GET operation to poll the L7 rule
        object for changes.

        This operation returns the updated L7 rule object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/l7policies/l7policy_id/rules/rule_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7RuleRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRuleUpdateResponse'
      tags:
        - l7-rules
      summary: Update a L7 Rule
  /v2/lbaas/pools/{pool_id}/members:
    parameters:
      - $ref: '#/components/parameters/lbaas_pools_members_pool_id'
    get:
      parameters:
        - $ref: '#/components/parameters/lbaas_pools_members_address'
        - $ref: '#/components/parameters/lbaas_pools_members_admin_state_up'
        - $ref: '#/components/parameters/lbaas_pools_members_backup'
        - $ref: '#/components/parameters/lbaas_pools_members_created_at'
        - $ref: '#/components/parameters/lbaas_pools_members_description'
        - $ref: '#/components/parameters/lbaas_pools_members_id'
        - $ref: '#/components/parameters/lbaas_pools_members_limit'
        - $ref: '#/components/parameters/lbaas_pools_members_marker'
        - $ref: '#/components/parameters/lbaas_pools_members_monitor_address'
        - $ref: '#/components/parameters/lbaas_pools_members_monitor_port'
        - $ref: '#/components/parameters/lbaas_pools_members_name'
        - $ref: '#/components/parameters/lbaas_pools_members_page_reverse'
        - $ref: '#/components/parameters/lbaas_pools_members_project_id'
        - $ref: '#/components/parameters/lbaas_pools_members_protocol_port'
        - $ref: '#/components/parameters/lbaas_pools_members_subnet_id'
        - $ref: '#/components/parameters/lbaas_pools_members_updated_at'
        - $ref: '#/components/parameters/lbaas_pools_members_weight'
        - $ref: '#/components/parameters/lbaas_pools_members_provisioning_status'
        - $ref: '#/components/parameters/lbaas_pools_members_operating_status'
        - $ref: '#/components/parameters/lbaas_pools_members_tags'
        - $ref: '#/components/parameters/lbaas_pools_members_tags-any'
        - $ref: '#/components/parameters/lbaas_pools_members_not-tags'
        - $ref: '#/components/parameters/lbaas_pools_members_not-tags-any'
      description: |-
        Lists all members for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list members for other projects.

        The list might be empty.
      operationId: lbaas/pools/pool_id/members:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMembersListResponse'
      tags:
        - members
      summary: List Members
    post:
      description: |-
        This operation provisions a member and adds it to a pool by using
        the configuration that you define in the request object. After the
        API validates the request and starts the provisioning process, it
        returns a response object, which contains a unique ID.

        In the response, the member [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/pools/{pool_id}/members/{member_id}` to view the progress of
        the provisioning operation. When the member status changes
        to `ACTIVE`, the member is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        At a minimum, you must specify these member attributes:

        Some attributes receive default values if you omit them from the
        request:

        If you omit the `subnet_id` parameter, the `vip_subnet_id` for the parent
        load balancer will be used for the member subnet UUID.

        The member `address` does not necessarily need to be a member of the
        `subnet_id` subnet. Members can be routable from the subnet specified
        either via the default route or by using `host_routes` defined on the subnet.

        Administrative users can specify a project ID that is different than
        their own to create members for other projects.

        `monitor_address` and/or `monitor_port` can be used to have the health
        monitor, if one is configured for the pool, connect to an alternate IP address
        and port when executing a health check on the member.

        To create a member, the load balancer must have an `ACTIVE`
        provisioning status.
      operationId: lbaas/pools/pool_id/members:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRootPOST'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMembersCreateResponse'
      tags:
        - members
      summary: Create Member
    put:
      description: |-
        Set the state of members for a pool in one API call. This may include
        creating new members, deleting old members, and updating existing members.
        Existing members are matched based on address/port combination.

        For example, assume a pool currently has two members. These members have the
        following address/port combinations: ‘192.0.2.15:80’ and ‘192.0.2.16:80’.
        Now assume a PUT request is made that includes members with address/port
        combinations: ‘192.0.2.16:80’ and ‘192.0.2.17:80’.

        The member ‘192.0.2.15:80’ will be deleted, because it was not in the request.

        The member ‘192.0.2.16:80’ will be updated to match the request data for that
        member, because it was matched.

        The member ‘192.0.2.17:80’ will be created, because no such member existed.

        The optional parameter `additive_only` when defined as `true` will skip
        deletions for members missing from the provided list. If this were set in the
        above example, the member ‘192.0.2.15:80’ would have remained in the pool.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the updates, check that the member provisioning
        statuses are `ACTIVE` for new or updated members, and that any unspecified
        members were correctly deleted. If the statuses are `PENDING_UPDATE` or
        `PENDING_DELETE`, use GET to poll the member objects for changes.
      operationId: lbaas/pools/pool_id/members:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersRootPUT'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMembersCreateResponse'
      tags:
        - members
      summary: Batch Update Members
  /v2/lbaas/pools/{pool_id}/members/{member_id}:
    parameters:
      - $ref: '#/components/parameters/lbaas_pools_members_pool_id'
      - $ref: '#/components/parameters/lbaas_pools_members_member_id'
    get:
      description: |-
        Shows the details of a pool member.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/pools/pool_id/members/member_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMemberCreateResponse'
      tags:
        - members
      summary: Show Member details
    delete:
      description: |-
        Removes a member and its associated configuration from the pool.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/pools/pool_id/members/member_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - members
      summary: Remove a Member
    put:
      description: |-
        Update an existing member.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the member provisioning
        status is `ACTIVE`. If the status is `PENDING_UPDATE`, use a GET
        operation to poll the member object for changes.

        Setting the member weight to `0` means that the member will not receive
        new requests but will finish any existing connections. This “drains” the
        backend member of active connections.

        This operation returns the updated member object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/pools/pool_id/members/member_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRootPUT'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMemberUpdateResponse'
      tags:
        - members
      summary: Update a Member
  /v2/lbaas/listeners/{listener_id}/stats:
    parameters:
      - $ref: '#/components/parameters/lbaas_listeners_stats_listener_id'
    get:
      description: |-
        Shows the current statistics for a listener.

        This operation returns the statistics of a listener object identified
        by listener_id.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/listeners/listener_id/stats:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenersStatsResponse'
      tags:
        - listeners
      summary: Get Listener statistics
  /v2/lbaas/loadbalancers/{loadbalancer_id}/stats:
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_stats_loadbalancer_id'
    get:
      description: |-
        Shows the current statistics for a load balancer.

        This operation returns the statistics of a load balancer object identified
        by loadbalancer_id.

        If you are not an administrative user and the load balancer object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/loadbalancers/loadbalancer_id/stats:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersStatsResponse'
      tags:
        - load-balancers
      summary: Get Load Balancer statistics
  /v2/lbaas/loadbalancers/{loadbalancer_id}/status:
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_status_loadbalancer_id'
    get:
      description: |-
        Shows the status tree for a load balancer.

        This operation returns a status tree for a load balancer object, by load
        balancer ID.

        `provisioning_status` is the status associated with lifecycle of the resource.
        See [Provisioning Status Codes](#prov-status) for descriptions of the status codes.

        `operating_status` is the observed status of the resource.
        See [Operating Status Codes](#op-status) for descriptions of the status codes.

        If you are not an administrative user and the load balancer object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        If the operation succeeds, the returned element is a status tree that contains
        the load balancer and all provisioning and operating statuses for its children.
      operationId: lbaas/loadbalancers/loadbalancer_id/status:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersStatusResponse'
      tags:
        - load-balancers
      summary: Get the Load Balancer status tree
  /v2/lbaas/loadbalancers/{loadbalancer_id}/failover:
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_failover_loadbalancer_id'
    put:
      description: |-
        Performs a failover of a load balancer.

        This operation is only available to users with load balancer administrative
        rights.
      operationId: lbaas/loadbalancers/loadbalancer_id/failover:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LbaasLoadbalancersFailoverFailoverRequest'
      responses:
        '202':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersFailoverResponse'
      tags:
        - load-balancers
      summary: Failover a load balancer
components:
  schemas:
    LbaasGetResponse:
      type: string
    LbaasLoadbalancersListResponse:
      type: object
      description: Base type for complex types
      properties:
        loadbalancers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the load balancer.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              description:
                type: string
                description: |-
                  A human-readable description for the resource.
              provisioning_status:
                type: string
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              operating_status:
                type: string
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              vip_address:
                type: string
                format: ipaddress
                description: |-
                  The IP address of the Virtual IP (VIP).
              vip_port_id:
                type: string
                format: uuid
                description: |-
                  The ID of the Virtual IP (VIP) port.
              vip_subnet_id:
                type: string
                format: uuid
                description: |-
                  The ID of the subnet for the Virtual IP (VIP).
              vip_network_id:
                type: string
                format: uuid
                description: |-
                  The ID of the network for the Virtual IP (VIP).
              vip_sg_ids:
                type: array
                items:
                  type: string
                  format: uuid
                description: |-
                  The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                  Balancer.

                  **New in version 2.29**
              additional_vips:
                type: array
                items:
                  type: object
                  properties:
                    subnet_id:
                      type: string
                      format: uuid
                    ip_address:
                      type: string
                      format: ipaddress
                  description: |-
                    Type for additional vips
                  required:
                    - subnet_id
                description: |-
                  A list of JSON objects defining “additional VIPs”. The format for these
                  is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                  the `subnet_id` field is mandatory and the `ip_address` field is
                  optional. Additional VIP subnets must all belong to the same network as
                  the primary VIP.

                  **New in version 2.26**
              listeners:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  The associated listener IDs, if any.
              pools:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  The associated pool IDs, if any.
              provider:
                type: string
                description: |-
                  Provider name for the load balancer.
              flavor_id:
                type: string
                format: uuid
                description: |-
                  The ID of the flavor.
              vip_qos_policy_id:
                type: string
                format: uuid
                description: |-
                  The ID of the QoS Policy which will apply to the Virtual IP (VIP).
              tags:
                type: array
                items:
                  type: string
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              availability_zone:
                type: string
                description: |-
                  An availability zone name.
              vip_vnic_type:
                type: string
                description: |-
                  The VIP vNIC type used for the load balancer. One of `normal` or
                  `direct`.

                  **New in version 2.28**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines which attributes are to be shown on any response.
          description: |-
            A list of `loadbalancer` objects.
        loadbalancers_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    LbaasLoadbalancerShowResponse:
      type: object
      description: Base type for complex types
      properties:
        loadbalancer:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the load balancer.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            vip_address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the Virtual IP (VIP).
            vip_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Virtual IP (VIP) port.
            vip_subnet_id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet for the Virtual IP (VIP).
            vip_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network for the Virtual IP (VIP).
            vip_sg_ids:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
            additional_vips:
              type: array
              items:
                type: object
                properties:
                  subnet_id:
                    type: string
                    format: uuid
                  ip_address:
                    type: string
                    format: ipaddress
                description: |-
                  Type for additional vips
                required:
                  - subnet_id
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
            listeners:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                The associated listener IDs, if any.
            pools:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                The associated pool IDs, if any.
            provider:
              type: string
              description: |-
                Provider name for the load balancer.
            flavor_id:
              type: string
              format: uuid
              description: |-
                The ID of the flavor.
            vip_qos_policy_id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            availability_zone:
              type: string
              description: |-
                An availability zone name.
            vip_vnic_type:
              type: string
              description: |-
                The VIP vNIC type used for the load balancer. One of `normal` or
                `direct`.

                **New in version 2.28**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            A load balancer object.
    LoadBalancerRootPOST:
      type: object
      description: Base type for complex types
      properties:
        loadbalancer:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            vip_address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the Virtual IP (VIP).
            vip_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Virtual IP (VIP) port. One of `vip_network_id`,
                `vip_port_id`, or `vip_subnet_id` must be specified.
            vip_subnet_id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet for the Virtual IP (VIP). One of `vip_network_id`,
                `vip_port_id`, or `vip_subnet_id` must be specified.
            vip_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network for the Virtual IP (VIP). One of `vip_network_id`,
                `vip_port_id`, or `vip_subnet_id` must be specified.
            vip_qos_policy_id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
            vip_sg_ids:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
            additional_vips:
              type: array
              items:
                type: object
                properties:
                  subnet_id:
                    type: string
                    format: uuid
                  ip_address:
                    type: string
                    format: ipaddress
                description: |-
                  Type for additional vips
                required:
                  - subnet_id
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
            project_id:
              type: string
              maxLength: 36
              description: |-
                The ID of the project owning this resource.
            listeners:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    maxLength: 255
                  description:
                    type: string
                    maxLength: 255
                  admin_state_up:
                    type: boolean
                  protocol:
                    type: string
                    enum:
                      - HTTPS
                      - TERMINATED_HTTPS
                      - SCTP
                      - HTTP
                      - PROMETHEUS
                      - TCP
                      - UDP
                  protocol_port:
                    type: integer
                    minimum: 1
                    maximum: 65535
                  connection_limit:
                    type: integer
                    minimum: -1
                  default_tls_container_ref:
                    type: string
                    maxLength: 255
                  sni_container_refs:
                    type: array
                    items:
                      type: string
                      maxLength: 255
                  default_pool_id:
                    type: string
                    format: uuid
                  default_pool:
                    type: object
                    properties:
                      name:
                        type: string
                        maxLength: 255
                      description:
                        type: string
                        maxLength: 255
                      admin_state_up:
                        type: boolean
                      protocol:
                        type: string
                        enum:
                          - PROXYV2
                          - HTTPS
                          - SCTP
                          - PROXY
                          - HTTP
                          - TCP
                          - UDP
                      lb_algorithm:
                        type: string
                        enum:
                          - SOURCE_IP_PORT
                          - LEAST_CONNECTIONS
                          - SOURCE_IP
                          - ROUND_ROBIN
                      session_persistence:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - APP_COOKIE
                              - SOURCE_IP
                              - HTTP_COOKIE
                          cookie_name:
                            type: string
                            maxLength: 255
                          persistence_timeout:
                            type: integer
                          persistence_granularity:
                            type: string
                            format: ipaddress
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        required:
                          - type
                      healthmonitor:
                        type: object
                        properties:
                          name:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            enum:
                              - HTTPS
                              - SCTP
                              - PING
                              - HTTP
                              - UDP-CONNECT
                              - TLS-HELLO
                              - TCP
                          delay:
                            type: integer
                          timeout:
                            type: integer
                          max_retries_down:
                            type: integer
                            minimum: 1
                            maximum: 10
                          max_retries:
                            type: integer
                            minimum: 1
                            maximum: 10
                          http_method:
                            type: string
                            enum:
                              - DELETE
                              - GET
                              - PATCH
                              - HEAD
                              - POST
                              - PUT
                              - TRACE
                              - CONNECT
                              - OPTIONS
                          url_path:
                            type: string
                            format: url_path
                          expected_codes:
                            type: string
                          admin_state_up:
                            type: boolean
                          tags:
                            type: array
                            items:
                              type: string
                              maxLength: 255
                            description: |-
                              A list of simple strings assigned to the resource.

                              **New in version 2.5**
                          http_version:
                            type: number
                            enum:
                              - 1.0
                              - 1.1
                          domain_name:
                            type: string
                            minLength: 1
                            maxLength: 255
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        required:
                          - max_retries
                          - delay
                          - timeout
                          - type
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              maxLength: 255
                            admin_state_up:
                              type: boolean
                            address:
                              type: string
                              format: ipaddress
                            protocol_port:
                              type: integer
                              minimum: 1
                              maximum: 65535
                            weight:
                              type: integer
                              maximum: 256
                            backup:
                              type: boolean
                            subnet_id:
                              type: string
                              format: uuid
                            monitor_port:
                              type: integer
                              minimum: 1
                              maximum: 65535
                            monitor_address:
                              type: string
                              format: ipaddress
                            tags:
                              type: array
                              items:
                                type: string
                                maxLength: 255
                            request_sriov:
                              type: boolean
                          description: |-
                            Defines mandatory and optional attributes of a POST request.
                          required:
                            - protocol_port
                            - address
                      tags:
                        type: array
                        items:
                          type: string
                          maxLength: 255
                      tls_container_ref:
                        type: string
                        maxLength: 255
                      ca_tls_container_ref:
                        type: string
                        maxLength: 255
                      crl_container_ref:
                        type: string
                        maxLength: 255
                      tls_enabled:
                        type: boolean
                      tls_ciphers:
                        type: string
                        maxLength: 2048
                      tls_versions:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                      alpn_protocols:
                        type: array
                        items:
                          type: string
                          format: alpn_protocol
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                  l7policies:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          maxLength: 255
                        description:
                          type: string
                          maxLength: 255
                        admin_state_up:
                          type: boolean
                        action:
                          type: string
                          enum:
                            - REJECT
                            - REDIRECT_PREFIX
                            - REDIRECT_TO_URL
                            - REDIRECT_TO_POOL
                        redirect_pool:
                          type: object
                          properties:
                            name:
                              type: string
                              maxLength: 255
                            description:
                              type: string
                              maxLength: 255
                            admin_state_up:
                              type: boolean
                            protocol:
                              type: string
                              enum:
                                - PROXYV2
                                - HTTPS
                                - SCTP
                                - PROXY
                                - HTTP
                                - TCP
                                - UDP
                            lb_algorithm:
                              type: string
                              enum:
                                - SOURCE_IP_PORT
                                - LEAST_CONNECTIONS
                                - SOURCE_IP
                                - ROUND_ROBIN
                            session_persistence:
                              type: object
                              properties:
                                type:
                                  type: string
                                  enum:
                                    - APP_COOKIE
                                    - SOURCE_IP
                                    - HTTP_COOKIE
                                cookie_name:
                                  type: string
                                  maxLength: 255
                                persistence_timeout:
                                  type: integer
                                persistence_granularity:
                                  type: string
                                  format: ipaddress
                              description: |-
                                Defines mandatory and optional attributes of a POST request.
                              required:
                                - type
                            healthmonitor:
                              type: object
                              properties:
                                name:
                                  type: string
                                  maxLength: 255
                                type:
                                  type: string
                                  enum:
                                    - HTTPS
                                    - SCTP
                                    - PING
                                    - HTTP
                                    - UDP-CONNECT
                                    - TLS-HELLO
                                    - TCP
                                delay:
                                  type: integer
                                timeout:
                                  type: integer
                                max_retries_down:
                                  type: integer
                                  minimum: 1
                                  maximum: 10
                                max_retries:
                                  type: integer
                                  minimum: 1
                                  maximum: 10
                                http_method:
                                  type: string
                                  enum:
                                    - DELETE
                                    - GET
                                    - PATCH
                                    - HEAD
                                    - POST
                                    - PUT
                                    - TRACE
                                    - CONNECT
                                    - OPTIONS
                                url_path:
                                  type: string
                                  format: url_path
                                expected_codes:
                                  type: string
                                admin_state_up:
                                  type: boolean
                                tags:
                                  type: array
                                  items:
                                    type: string
                                    maxLength: 255
                                http_version:
                                  type: number
                                  enum:
                                    - 1.0
                                    - 1.1
                                domain_name:
                                  type: string
                                  minLength: 1
                                  maxLength: 255
                              description: |-
                                Defines mandatory and optional attributes of a POST request.
                              required:
                                - max_retries
                                - delay
                                - timeout
                                - type
                            members:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    maxLength: 255
                                  admin_state_up:
                                    type: boolean
                                  address:
                                    type: string
                                    format: ipaddress
                                  protocol_port:
                                    type: integer
                                    minimum: 1
                                    maximum: 65535
                                  weight:
                                    type: integer
                                    maximum: 256
                                  backup:
                                    type: boolean
                                  subnet_id:
                                    type: string
                                    format: uuid
                                  monitor_port:
                                    type: integer
                                    minimum: 1
                                    maximum: 65535
                                  monitor_address:
                                    type: string
                                    format: ipaddress
                                  tags:
                                    type: array
                                    items:
                                      type: string
                                      maxLength: 255
                                  request_sriov:
                                    type: boolean
                                description: |-
                                  Defines mandatory and optional attributes of a POST request.
                                required:
                                  - protocol_port
                                  - address
                            tags:
                              type: array
                              items:
                                type: string
                                maxLength: 255
                            tls_container_ref:
                              type: string
                              maxLength: 255
                            ca_tls_container_ref:
                              type: string
                              maxLength: 255
                            crl_container_ref:
                              type: string
                              maxLength: 255
                            tls_enabled:
                              type: boolean
                            tls_ciphers:
                              type: string
                              maxLength: 2048
                            tls_versions:
                              type: array
                              items:
                                type: string
                                maxLength: 32
                            alpn_protocols:
                              type: array
                              items:
                                type: string
                                format: alpn_protocol
                          description: |-
                            Defines mandatory and optional attributes of a POST request.
                        redirect_url:
                          type: string
                          format: url
                        redirect_prefix:
                          type: string
                          format: url
                        position:
                          type: integer
                          minimum: 1
                          maximum: 2147483647
                        rules:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - SSL_DN_FIELD
                                  - HEADER
                                  - FILE_TYPE
                                  - HOST_NAME
                                  - SSL_VERIFY_RESULT
                                  - PATH
                                  - SSL_CONN_HAS_CERT
                                  - COOKIE
                              compare_type:
                                type: string
                                enum:
                                  - STARTS_WITH
                                  - ENDS_WITH
                                  - EQUAL_TO
                                  - REGEX
                                  - CONTAINS
                              key:
                                type: string
                                maxLength: 255
                              value:
                                type: string
                                maxLength: 255
                              invert:
                                type: boolean
                              admin_state_up:
                                type: boolean
                              tags:
                                type: array
                                items:
                                  type: string
                                  maxLength: 255
                            description: |-
                              Defines mandatory and optional attributes of a POST request.
                            required:
                              - value
                              - compare_type
                              - type
                        tags:
                          type: array
                          items:
                            type: string
                            maxLength: 255
                        redirect_http_code:
                          type: integer
                          enum:
                            - 301
                            - 302
                            - 303
                            - 307
                            - 308
                      description: |-
                        Defines mandatory and optional attributes of a POST request.
                      required:
                        - action
                  insert_headers:
                    type: object
                    additionalProperties:
                      type: string
                      maxLength: 255
                  timeout_client_data:
                    type: integer
                    maximum: 2073600000
                  timeout_member_connect:
                    type: integer
                    maximum: 2073600000
                  timeout_member_data:
                    type: integer
                    maximum: 2073600000
                  timeout_tcp_inspect:
                    type: integer
                    maximum: 2073600000
                  tags:
                    type: array
                    items:
                      type: string
                      maxLength: 255
                  client_ca_tls_container_ref:
                    type: string
                    maxLength: 255
                  client_authentication:
                    type: string
                    enum:
                      - MANDATORY
                      - OPTIONAL
                      - NONE
                  client_crl_container_ref:
                    type: string
                    maxLength: 255
                  allowed_cidrs:
                    type: array
                    items:
                      type: string
                      format: cidr
                  tls_ciphers:
                    type: string
                    maxLength: 2048
                  tls_versions:
                    type: array
                    items:
                      type: string
                      maxLength: 32
                  alpn_protocols:
                    type: array
                    items:
                      type: string
                      format: alpn_protocol
                  hsts_max_age:
                    type: integer
                  hsts_include_subdomains:
                    type: boolean
                  hsts_preload:
                    type: boolean
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                required:
                  - protocol
                  - protocol_port
              description: |-
                The associated listener IDs, if any.
            pools:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    maxLength: 255
                  description:
                    type: string
                    maxLength: 255
                  admin_state_up:
                    type: boolean
                  protocol:
                    type: string
                    enum:
                      - PROXYV2
                      - HTTPS
                      - SCTP
                      - PROXY
                      - HTTP
                      - TCP
                      - UDP
                  lb_algorithm:
                    type: string
                    enum:
                      - SOURCE_IP_PORT
                      - LEAST_CONNECTIONS
                      - SOURCE_IP
                      - ROUND_ROBIN
                  session_persistence:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - APP_COOKIE
                          - SOURCE_IP
                          - HTTP_COOKIE
                      cookie_name:
                        type: string
                        maxLength: 255
                      persistence_timeout:
                        type: integer
                      persistence_granularity:
                        type: string
                        format: ipaddress
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    required:
                      - type
                  healthmonitor:
                    type: object
                    properties:
                      name:
                        type: string
                        maxLength: 255
                      type:
                        type: string
                        enum:
                          - HTTPS
                          - SCTP
                          - PING
                          - HTTP
                          - UDP-CONNECT
                          - TLS-HELLO
                          - TCP
                      delay:
                        type: integer
                      timeout:
                        type: integer
                      max_retries_down:
                        type: integer
                        minimum: 1
                        maximum: 10
                      max_retries:
                        type: integer
                        minimum: 1
                        maximum: 10
                      http_method:
                        type: string
                        enum:
                          - DELETE
                          - GET
                          - PATCH
                          - HEAD
                          - POST
                          - PUT
                          - TRACE
                          - CONNECT
                          - OPTIONS
                      url_path:
                        type: string
                        format: url_path
                      expected_codes:
                        type: string
                      admin_state_up:
                        type: boolean
                      tags:
                        type: array
                        items:
                          type: string
                          maxLength: 255
                      http_version:
                        type: number
                        enum:
                          - 1.0
                          - 1.1
                      domain_name:
                        type: string
                        minLength: 1
                        maxLength: 255
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    required:
                      - max_retries
                      - delay
                      - timeout
                      - type
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          maxLength: 255
                        admin_state_up:
                          type: boolean
                        address:
                          type: string
                          format: ipaddress
                        protocol_port:
                          type: integer
                          minimum: 1
                          maximum: 65535
                        weight:
                          type: integer
                          maximum: 256
                        backup:
                          type: boolean
                        subnet_id:
                          type: string
                          format: uuid
                        monitor_port:
                          type: integer
                          minimum: 1
                          maximum: 65535
                        monitor_address:
                          type: string
                          format: ipaddress
                        tags:
                          type: array
                          items:
                            type: string
                            maxLength: 255
                        request_sriov:
                          type: boolean
                      description: |-
                        Defines mandatory and optional attributes of a POST request.
                      required:
                        - protocol_port
                        - address
                  tags:
                    type: array
                    items:
                      type: string
                      maxLength: 255
                  tls_container_ref:
                    type: string
                    maxLength: 255
                  ca_tls_container_ref:
                    type: string
                    maxLength: 255
                  crl_container_ref:
                    type: string
                    maxLength: 255
                  tls_enabled:
                    type: boolean
                  tls_ciphers:
                    type: string
                    maxLength: 2048
                  tls_versions:
                    type: array
                    items:
                      type: string
                      maxLength: 32
                  alpn_protocols:
                    type: array
                    items:
                      type: string
                      format: alpn_protocol
                description: |-
                  Defines mandatory and optional attributes of a POST request.
            provider:
              type: string
              maxLength: 64
              description: |-
                Provider name for the load balancer. Default is `octavia`.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
            flavor_id:
              type: string
              format: uuid
              description: |-
                The ID of the flavor.
            availability_zone:
              type: string
              maxLength: 255
              description: |-
                An availability zone name.
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            A load balancer object.
    LbaasLoadbalancersCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        loadbalancer:
          type: object
          properties:
            listeners:
              type: array
              items:
                type: object
                properties:
                  l7policies:
                    type: array
                    items:
                      type: object
                      properties:
                        rules:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: |-
                                  The ID of the load balancer.
                              type:
                                type: string
                              compare_type:
                                type: string
                              key:
                                type: string
                              value:
                                type: string
                              invert:
                                type: boolean
                              provisioning_status:
                                type: string
                                description: |-
                                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                              operating_status:
                                type: string
                                description: |-
                                  The operating status of the resource. See [Operating Status Codes](#op-status).
                              created_at:
                                type: string
                                format: date-time
                                description: |-
                                  The UTC date and timestamp when the resource was created.
                              updated_at:
                                type: string
                                format: date-time
                                description: |-
                                  The UTC date and timestamp when the resource was last updated.
                              project_id:
                                type: string
                                description: |-
                                  The ID of the project owning this resource.
                              admin_state_up:
                                type: boolean
                                description: |-
                                  The administrative state of the resource, which is
                                  up (`true`) or down (`false`).
                              tags:
                                type: array
                                items:
                                  type: string
                                description: |-
                                  A list of simple strings assigned to the resource.

                                  **New in version 2.5**
                              tenant_id:
                                type: string
                                maxLength: 36
                            description: |-
                              Defines which attributes are to be shown on any response.
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                          description: |-
                            Human-readable name of the resource.
                        description:
                          type: string
                          description: |-
                            A human-readable description for the resource.
                        provisioning_status:
                          type: string
                        operating_status:
                          type: string
                        admin_state_up:
                          type: boolean
                        project_id:
                          type: string
                        action:
                          type: string
                        listener_id:
                          type: string
                          format: uuid
                        redirect_pool_id:
                          type: string
                          format: uuid
                        redirect_url:
                          type: string
                        redirect_prefix:
                          type: string
                        position:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        tags:
                          type: array
                          items:
                            type: string
                        redirect_http_code:
                          type: integer
                        tenant_id:
                          type: string
                          maxLength: 36
                      description: |-
                        Defines which attributes are to be shown on any response.
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  description:
                    type: string
                  provisioning_status:
                    type: string
                  operating_status:
                    type: string
                  admin_state_up:
                    type: boolean
                  protocol:
                    type: string
                  protocol_port:
                    type: integer
                  connection_limit:
                    type: integer
                  default_tls_container_ref:
                    type: string
                  sni_container_refs:
                    type: array
                    items:
                      type: string
                  project_id:
                    type: string
                  default_pool_id:
                    type: string
                    format: uuid
                  insert_headers:
                    type: object
                    additionalProperties:
                      type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  loadbalancers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                      description: |-
                        Base type for complex types
                      required:
                        - id
                  timeout_client_data:
                    type: integer
                  timeout_member_connect:
                    type: integer
                  timeout_member_data:
                    type: integer
                  timeout_tcp_inspect:
                    type: integer
                  tags:
                    type: array
                    items:
                      type: string
                  client_ca_tls_container_ref:
                    type: string
                  client_authentication:
                    type: string
                  client_crl_container_ref:
                    type: string
                  allowed_cidrs:
                    type: array
                    items:
                      type: string
                      format: cidr
                  tls_ciphers:
                    type: string
                  tls_versions:
                    type: array
                    items:
                      type: string
                  alpn_protocols:
                    type: array
                    items:
                      type: string
                      format: alpn_protocol
                  hsts_max_age:
                    type: integer
                  hsts_include_subdomains:
                    type: boolean
                  hsts_preload:
                    type: boolean
                  tenant_id:
                    type: string
                    maxLength: 36
                description: |-
                  Defines which attributes are to be shown on any response.
              description: |-
                The associated listener IDs, if any.
            pools:
              type: array
              items:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        operating_status:
                          type: string
                        provisioning_status:
                          type: string
                        admin_state_up:
                          type: boolean
                        address:
                          type: string
                          format: ipaddress
                        protocol_port:
                          type: integer
                        weight:
                          type: integer
                        backup:
                          type: boolean
                        subnet_id:
                          type: string
                          format: uuid
                        project_id:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        monitor_address:
                          type: string
                          format: ipaddress
                        monitor_port:
                          type: integer
                        tags:
                          type: array
                          items:
                            type: string
                        vnic_type:
                          type: string
                        tenant_id:
                          type: string
                          maxLength: 36
                      description: |-
                        Defines which attributes are to be shown on any response.
                  healthmonitor:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      type:
                        type: string
                      delay:
                        type: integer
                      timeout:
                        type: integer
                      max_retries:
                        type: integer
                      max_retries_down:
                        type: integer
                      http_method:
                        type: string
                      url_path:
                        type: string
                      expected_codes:
                        type: string
                      admin_state_up:
                        type: boolean
                      project_id:
                        type: string
                      pools:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                          description: |-
                            Base type for complex types
                          required:
                            - id
                      provisioning_status:
                        type: string
                      operating_status:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                      updated_at:
                        type: string
                        format: date-time
                      tags:
                        type: array
                        items:
                          type: string
                      http_version:
                        type: number
                        format: float
                      domain_name:
                        type: string
                      tenant_id:
                        type: string
                        maxLength: 36
                    description: |-
                      Defines which attributes are to be shown on any response.
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  description:
                    type: string
                  provisioning_status:
                    type: string
                  operating_status:
                    type: string
                  admin_state_up:
                    type: boolean
                  protocol:
                    type: string
                  lb_algorithm:
                    type: string
                  session_persistence:
                    type: object
                    properties:
                      type:
                        type: string
                      cookie_name:
                        type: string
                      persistence_timeout:
                        type: integer
                      persistence_granularity:
                        type: string
                        format: ipaddress
                    description: |-
                      Defines which attributes are to be shown on any response.
                  project_id:
                    type: string
                  loadbalancers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                      description: |-
                        Base type for complex types
                      required:
                        - id
                  listeners:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                      description: |-
                        Base type for complex types
                      required:
                        - id
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  healthmonitor_id:
                    type: string
                    format: uuid
                  tags:
                    type: array
                    items:
                      type: string
                  tls_container_ref:
                    type: string
                  ca_tls_container_ref:
                    type: string
                  crl_container_ref:
                    type: string
                  tls_enabled:
                    type: boolean
                  tls_ciphers:
                    type: string
                  tls_versions:
                    type: array
                    items:
                      type: string
                  alpn_protocols:
                    type: array
                    items:
                      type: string
                      format: alpn_protocol
                  tenant_id:
                    type: string
                    maxLength: 36
                description: |-
                  Defines which attributes are to be shown on any response.
              description: |-
                The associated pool IDs, if any.
            id:
              type: string
              format: uuid
            name:
              type: string
            description:
              type: string
            provisioning_status:
              type: string
            operating_status:
              type: string
            admin_state_up:
              type: boolean
            project_id:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            vip_address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the Virtual IP (VIP).
            vip_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Virtual IP (VIP) port.
            vip_subnet_id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet for the Virtual IP (VIP).
            vip_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network for the Virtual IP (VIP).
            vip_sg_ids:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
            additional_vips:
              type: array
              items:
                type: object
                properties:
                  subnet_id:
                    type: string
                    format: uuid
                  ip_address:
                    type: string
                    format: ipaddress
                description: |-
                  Type for additional vips
                required:
                  - subnet_id
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
            provider:
              type: string
              description: |-
                Provider name for the load balancer.
            flavor_id:
              type: string
              format: uuid
              description: |-
                The ID of the flavor.
            vip_qos_policy_id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
            tags:
              type: array
              items:
                type: string
            availability_zone:
              type: string
              description: |-
                An availability zone name.
            vip_vnic_type:
              type: string
              description: |-
                The VIP vNIC type used for the load balancer. One of `normal` or
                `direct`.

                **New in version 2.28**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            A load balancer object.
    LoadBalancerRootPUT:
      type: object
      description: Base type for complex types
      properties:
        loadbalancer:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            vip_qos_policy_id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            vip_sg_ids:
              type: array
              items:
                type: string
                format: uuid
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
          description: |-
            A load balancer object.
    LbaasLoadbalancerUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        loadbalancer:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the load balancer.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            vip_address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the Virtual IP (VIP).
            vip_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Virtual IP (VIP) port.
            vip_subnet_id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet for the Virtual IP (VIP).
            vip_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network for the Virtual IP (VIP).
            vip_sg_ids:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
            additional_vips:
              type: array
              items:
                type: object
                properties:
                  subnet_id:
                    type: string
                    format: uuid
                  ip_address:
                    type: string
                    format: ipaddress
                description: |-
                  Type for additional vips
                required:
                  - subnet_id
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
            listeners:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                The associated listener IDs, if any.
            pools:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                The associated pool IDs, if any.
            provider:
              type: string
              description: |-
                Provider name for the load balancer.
            flavor_id:
              type: string
              format: uuid
              description: |-
                The ID of the flavor.
            vip_qos_policy_id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            availability_zone:
              type: string
            vip_vnic_type:
              type: string
              description: |-
                The VIP vNIC type used for the load balancer. One of `normal` or
                `direct`.

                **New in version 2.28**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            A load balancer object.
    LbaasListenersListResponse:
      type: object
      description: Base type for complex types
      properties:
        listeners:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the listener.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              description:
                type: string
                description: |-
                  A human-readable description for the resource.
              provisioning_status:
                type: string
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              operating_status:
                type: string
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              protocol:
                type: string
                description: |-
                  The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                  `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
              protocol_port:
                type: integer
                description: |-
                  The protocol port number for the resource.
              connection_limit:
                type: integer
                description: |-
                  The maximum number of connections permitted for this listener. Default
                  value is -1 which represents infinite connections or a default value
                  defined by the provider driver.
              default_tls_container_ref:
                type: string
                description: |-
                  The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                  DEPRECATED: A secret container of type “certificate” containing the
                  certificate and key for `TERMINATED_HTTPS` listeners.
              sni_container_refs:
                type: array
                items:
                  type: string
                description: |-
                  A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                  PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                  (DEPRECATED) Secret containers of type “certificate” containing the
                  certificates and keys for `TERMINATED_HTTPS` listeners.
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              default_pool_id:
                type: string
                format: uuid
                description: |-
                  The ID of the pool used by the listener if no L7 policies match. The pool
                  has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              l7policies:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  A list of L7 policy IDs.
              insert_headers:
                type: object
                additionalProperties:
                  type: string
                description: |-
                  A dictionary of optional headers to insert into the request before it is
                  sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                  and values are always specified as strings.
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              loadbalancers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  A list of load balancer IDs.
              timeout_client_data:
                type: integer
                description: |-
                  Frontend client inactivity timeout in milliseconds. Default: 50000.

                  **New in version 2.1**
              timeout_member_connect:
                type: integer
                description: |-
                  Backend member connection timeout in milliseconds. Default: 5000.

                  **New in version 2.1**
              timeout_member_data:
                type: integer
                description: |-
                  Backend member inactivity timeout in milliseconds. Default: 50000.

                  **New in version 2.1**
              timeout_tcp_inspect:
                type: integer
                description: |-
                  Time, in milliseconds, to wait for additional TCP packets for content
                  inspection. Default: 0.

                  **New in version 2.1**
              tags:
                type: array
                items:
                  type: string
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              client_ca_tls_container_ref:
                type: string
                description: |-
                  The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                  listeners.

                  **New in version 2.8**
              client_authentication:
                type: string
                description: |-
                  The TLS client authentication mode. One of the options `NONE`,
                  `OPTIONAL` or `MANDATORY`.

                  **New in version 2.8**
              client_crl_container_ref:
                type: string
                description: |-
                  The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                  **New in version 2.8**
              allowed_cidrs:
                type: array
                items:
                  type: string
                  format: cidr
                description: |-
                  A list of IPv4, IPv6 or mix of both CIDRs.

                  **New in version 2.12**
              tls_ciphers:
                type: string
                description: |-
                  List of ciphers in OpenSSL format (colon-separated).
                  See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                  **New in version 2.15**
              tls_versions:
                type: array
                items:
                  type: string
                description: |-
                  A list of TLS protocol versions.
                  Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                  **New in version 2.17**
              alpn_protocols:
                type: array
                items:
                  type: string
                  format: alpn_protocol
                description: |-
                  A list of ALPN protocols.
                  Available protocols: http/1.0, http/1.1, h2

                  **New in version 2.20**
              hsts_max_age:
                type: integer
                description: |-
                  The value of the `max_age` directive for the
                  Strict-Transport-Security HTTP response header.

                  **New in version 2.27**
              hsts_include_subdomains:
                type: boolean
                description: |-
                  Defines whether the `includeSubDomains` directive should be
                  added to the Strict-Transport-Security HTTP response
                  header.

                  **New in version 2.27**
              hsts_preload:
                type: boolean
                description: |-
                  Defines whether the `preload` directive should be
                  added to the Strict-Transport-Security HTTP response
                  header.

                  **New in version 2.27**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines which attributes are to be shown on any response.
        listeners_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    LbaasListenerShowResponse:
      type: object
      description: Base type for complex types
      properties:
        listener:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the listener.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            protocol:
              type: string
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
            protocol_port:
              type: integer
              description: |-
                The protocol port number for the resource.
            connection_limit:
              type: integer
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
            default_tls_container_ref:
              type: string
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
            sni_container_refs:
              type: array
              items:
                type: string
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            default_pool_id:
              type: string
              format: uuid
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            l7policies:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of L7 policy IDs.
            insert_headers:
              type: object
              additionalProperties:
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            loadbalancers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of load balancer IDs.
            timeout_client_data:
              type: integer
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_member_connect:
              type: integer
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
            timeout_member_data:
              type: integer
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_tcp_inspect:
              type: integer
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            client_ca_tls_container_ref:
              type: string
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
            client_authentication:
              type: string
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
            client_crl_container_ref:
              type: string
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
            allowed_cidrs:
              type: array
              items:
                type: string
                format: cidr
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs.

                **New in version 2.12**
            tls_ciphers:
              type: string
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
            hsts_max_age:
              type: integer
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.

                **New in version 2.27**
            hsts_include_subdomains:
              type: boolean
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
            hsts_preload:
              type: boolean
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            A listener object.
    ListenerRootPOST:
      type: object
      description: Base type for complex types
      properties:
        listener:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            protocol:
              type: string
              enum:
                - HTTPS
                - TERMINATED_HTTPS
                - SCTP
                - HTTP
                - PROMETHEUS
                - TCP
                - UDP
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
            protocol_port:
              type: integer
              minimum: 1
              maximum: 65535
              description: |-
                The protocol port number for the resource.
            connection_limit:
              type: integer
              minimum: -1
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
            default_tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
            sni_container_refs:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
            project_id:
              type: string
              maxLength: 36
              description: |-
                The ID of the project owning this resource. (deprecated)
            default_pool_id:
              type: string
              format: uuid
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            default_pool:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                description:
                  type: string
                  maxLength: 255
                admin_state_up:
                  type: boolean
                protocol:
                  type: string
                  enum:
                    - PROXYV2
                    - HTTPS
                    - SCTP
                    - PROXY
                    - HTTP
                    - TCP
                    - UDP
                lb_algorithm:
                  type: string
                  enum:
                    - SOURCE_IP_PORT
                    - LEAST_CONNECTIONS
                    - SOURCE_IP
                    - ROUND_ROBIN
                session_persistence:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - APP_COOKIE
                        - SOURCE_IP
                        - HTTP_COOKIE
                    cookie_name:
                      type: string
                      maxLength: 255
                    persistence_timeout:
                      type: integer
                    persistence_granularity:
                      type: string
                      format: ipaddress
                  description: |-
                    Defines mandatory and optional attributes of a POST request.
                  required:
                    - type
                healthmonitor:
                  type: object
                  properties:
                    name:
                      type: string
                      maxLength: 255
                    type:
                      type: string
                      enum:
                        - HTTPS
                        - SCTP
                        - PING
                        - HTTP
                        - UDP-CONNECT
                        - TLS-HELLO
                        - TCP
                    delay:
                      type: integer
                    timeout:
                      type: integer
                    max_retries_down:
                      type: integer
                      minimum: 1
                      maximum: 10
                    max_retries:
                      type: integer
                      minimum: 1
                      maximum: 10
                    http_method:
                      type: string
                      enum:
                        - DELETE
                        - GET
                        - PATCH
                        - HEAD
                        - POST
                        - PUT
                        - TRACE
                        - CONNECT
                        - OPTIONS
                    url_path:
                      type: string
                      format: url_path
                    expected_codes:
                      type: string
                    admin_state_up:
                      type: boolean
                    tags:
                      type: array
                      items:
                        type: string
                        maxLength: 255
                      description: |-
                        A list of simple strings assigned to the resource.

                        **New in version 2.5**
                    http_version:
                      type: number
                      enum:
                        - 1.0
                        - 1.1
                    domain_name:
                      type: string
                      minLength: 1
                      maxLength: 255
                  description: |-
                    Defines mandatory and optional attributes of a POST request.
                  required:
                    - max_retries
                    - delay
                    - timeout
                    - type
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        maxLength: 255
                      admin_state_up:
                        type: boolean
                      address:
                        type: string
                        format: ipaddress
                      protocol_port:
                        type: integer
                        minimum: 1
                        maximum: 65535
                      weight:
                        type: integer
                        maximum: 256
                      backup:
                        type: boolean
                      subnet_id:
                        type: string
                        format: uuid
                      monitor_port:
                        type: integer
                        minimum: 1
                        maximum: 65535
                      monitor_address:
                        type: string
                        format: ipaddress
                      tags:
                        type: array
                        items:
                          type: string
                          maxLength: 255
                      request_sriov:
                        type: boolean
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    required:
                      - protocol_port
                      - address
                tags:
                  type: array
                  items:
                    type: string
                    maxLength: 255
                tls_container_ref:
                  type: string
                  maxLength: 255
                ca_tls_container_ref:
                  type: string
                  maxLength: 255
                crl_container_ref:
                  type: string
                  maxLength: 255
                tls_enabled:
                  type: boolean
                tls_ciphers:
                  type: string
                  maxLength: 2048
                  description: |-
                    List of ciphers in OpenSSL format (colon-separated).
                    See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                    **New in version 2.15**
                tls_versions:
                  type: array
                  items:
                    type: string
                    maxLength: 32
                  description: |-
                    A list of TLS protocol versions.
                    Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                    **New in version 2.17**
                alpn_protocols:
                  type: array
                  items:
                    type: string
                    format: alpn_protocol
                  description: |-
                    A list of ALPN protocols.
                    Available protocols: http/1.0, http/1.1, h2

                    **New in version 2.20**
              description: |-
                A pool object.
            l7policies:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    maxLength: 255
                  description:
                    type: string
                    maxLength: 255
                  admin_state_up:
                    type: boolean
                  action:
                    type: string
                    enum:
                      - REJECT
                      - REDIRECT_PREFIX
                      - REDIRECT_TO_URL
                      - REDIRECT_TO_POOL
                  redirect_pool:
                    type: object
                    properties:
                      name:
                        type: string
                        maxLength: 255
                      description:
                        type: string
                        maxLength: 255
                      admin_state_up:
                        type: boolean
                      protocol:
                        type: string
                        enum:
                          - PROXYV2
                          - HTTPS
                          - SCTP
                          - PROXY
                          - HTTP
                          - TCP
                          - UDP
                      lb_algorithm:
                        type: string
                        enum:
                          - SOURCE_IP_PORT
                          - LEAST_CONNECTIONS
                          - SOURCE_IP
                          - ROUND_ROBIN
                      session_persistence:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - APP_COOKIE
                              - SOURCE_IP
                              - HTTP_COOKIE
                          cookie_name:
                            type: string
                            maxLength: 255
                          persistence_timeout:
                            type: integer
                          persistence_granularity:
                            type: string
                            format: ipaddress
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        required:
                          - type
                      healthmonitor:
                        type: object
                        properties:
                          name:
                            type: string
                            maxLength: 255
                          type:
                            type: string
                            enum:
                              - HTTPS
                              - SCTP
                              - PING
                              - HTTP
                              - UDP-CONNECT
                              - TLS-HELLO
                              - TCP
                          delay:
                            type: integer
                          timeout:
                            type: integer
                          max_retries_down:
                            type: integer
                            minimum: 1
                            maximum: 10
                          max_retries:
                            type: integer
                            minimum: 1
                            maximum: 10
                          http_method:
                            type: string
                            enum:
                              - DELETE
                              - GET
                              - PATCH
                              - HEAD
                              - POST
                              - PUT
                              - TRACE
                              - CONNECT
                              - OPTIONS
                          url_path:
                            type: string
                            format: url_path
                          expected_codes:
                            type: string
                          admin_state_up:
                            type: boolean
                          tags:
                            type: array
                            items:
                              type: string
                              maxLength: 255
                          http_version:
                            type: number
                            enum:
                              - 1.0
                              - 1.1
                          domain_name:
                            type: string
                            minLength: 1
                            maxLength: 255
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        required:
                          - max_retries
                          - delay
                          - timeout
                          - type
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              maxLength: 255
                            admin_state_up:
                              type: boolean
                            address:
                              type: string
                              format: ipaddress
                            protocol_port:
                              type: integer
                              minimum: 1
                              maximum: 65535
                            weight:
                              type: integer
                              maximum: 256
                            backup:
                              type: boolean
                            subnet_id:
                              type: string
                              format: uuid
                            monitor_port:
                              type: integer
                              minimum: 1
                              maximum: 65535
                            monitor_address:
                              type: string
                              format: ipaddress
                            tags:
                              type: array
                              items:
                                type: string
                                maxLength: 255
                            request_sriov:
                              type: boolean
                          description: |-
                            Defines mandatory and optional attributes of a POST request.
                          required:
                            - protocol_port
                            - address
                      tags:
                        type: array
                        items:
                          type: string
                          maxLength: 255
                      tls_container_ref:
                        type: string
                        maxLength: 255
                      ca_tls_container_ref:
                        type: string
                        maxLength: 255
                      crl_container_ref:
                        type: string
                        maxLength: 255
                      tls_enabled:
                        type: boolean
                      tls_ciphers:
                        type: string
                        maxLength: 2048
                      tls_versions:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                      alpn_protocols:
                        type: array
                        items:
                          type: string
                          format: alpn_protocol
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                  redirect_url:
                    type: string
                    format: url
                  redirect_prefix:
                    type: string
                    format: url
                  position:
                    type: integer
                    minimum: 1
                    maximum: 2147483647
                  rules:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - SSL_DN_FIELD
                            - HEADER
                            - FILE_TYPE
                            - HOST_NAME
                            - SSL_VERIFY_RESULT
                            - PATH
                            - SSL_CONN_HAS_CERT
                            - COOKIE
                        compare_type:
                          type: string
                          enum:
                            - STARTS_WITH
                            - ENDS_WITH
                            - EQUAL_TO
                            - REGEX
                            - CONTAINS
                        key:
                          type: string
                          maxLength: 255
                        value:
                          type: string
                          maxLength: 255
                        invert:
                          type: boolean
                        admin_state_up:
                          type: boolean
                        tags:
                          type: array
                          items:
                            type: string
                            maxLength: 255
                      description: |-
                        Defines mandatory and optional attributes of a POST request.
                      required:
                        - value
                        - compare_type
                        - type
                  tags:
                    type: array
                    items:
                      type: string
                      maxLength: 255
                  redirect_http_code:
                    type: integer
                    enum:
                      - 301
                      - 302
                      - 303
                      - 307
                      - 308
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                required:
                  - action
              description: |-
                A list of L7 policy objects.
            insert_headers:
              type: object
              additionalProperties:
                type: string
                maxLength: 255
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
            loadbalancer_id:
              type: string
              format: uuid
              description: |-
                The ID of the load balancer.
            timeout_client_data:
              type: integer
              maximum: 2073600000
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_member_connect:
              type: integer
              maximum: 2073600000
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
            timeout_member_data:
              type: integer
              maximum: 2073600000
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_tcp_inspect:
              type: integer
              maximum: 2073600000
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
            tags:
              type: array
              items:
                type: string
                maxLength: 255
            client_ca_tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
            client_authentication:
              type: string
              enum:
                - MANDATORY
                - OPTIONAL
                - NONE
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
            client_crl_container_ref:
              type: string
              maxLength: 255
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
            allowed_cidrs:
              type: array
              items:
                type: string
                format: cidr
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs. The default is all allowed.
                When a list of CIDRs is provided, the default switches to deny all.

                **New in version 2.12**
            tls_ciphers:
              type: string
              maxLength: 2048
            tls_versions:
              type: array
              items:
                type: string
                maxLength: 32
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
            hsts_max_age:
              type: integer
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.
                Setting this enables HTTP Strict Transport
                Security (HSTS) for the TLS-terminated listener.

                **New in version 2.27**
            hsts_include_subdomains:
              type: boolean
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
            hsts_preload:
              type: boolean
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - protocol
            - loadbalancer_id
            - protocol_port
    LbaasListenersCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        listener:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the listener.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            protocol:
              type: string
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
            protocol_port:
              type: integer
              description: |-
                The protocol port number for the resource.
            connection_limit:
              type: integer
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
            default_tls_container_ref:
              type: string
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
            sni_container_refs:
              type: array
              items:
                type: string
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            default_pool_id:
              type: string
              format: uuid
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            l7policies:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of L7 policy IDs.
            insert_headers:
              type: object
              additionalProperties:
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            loadbalancers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of load balancer IDs.
            timeout_client_data:
              type: integer
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_member_connect:
              type: integer
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
            timeout_member_data:
              type: integer
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_tcp_inspect:
              type: integer
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            client_ca_tls_container_ref:
              type: string
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
            client_authentication:
              type: string
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
            client_crl_container_ref:
              type: string
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
            allowed_cidrs:
              type: array
              items:
                type: string
                format: cidr
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs.

                **New in version 2.12**
            tls_ciphers:
              type: string
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
            hsts_max_age:
              type: integer
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.

                **New in version 2.27**
            hsts_include_subdomains:
              type: boolean
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
            hsts_preload:
              type: boolean
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            A listener object.
    ListenerRootPUT:
      type: object
      description: Base type for complex types
      properties:
        listener:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            connection_limit:
              type: integer
              minimum: -1
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
            default_tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
            sni_container_refs:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
            default_pool_id:
              type: string
              format: uuid
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            insert_headers:
              type: object
              additionalProperties:
                type: string
                maxLength: 255
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
            timeout_client_data:
              type: integer
              maximum: 2073600000
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_member_connect:
              type: integer
              maximum: 2073600000
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
            timeout_member_data:
              type: integer
              maximum: 2073600000
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_tcp_inspect:
              type: integer
              maximum: 2073600000
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            client_ca_tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
            client_authentication:
              type: string
              enum:
                - MANDATORY
                - OPTIONAL
                - NONE
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
            client_crl_container_ref:
              type: string
              maxLength: 255
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
            allowed_cidrs:
              type: array
              items:
                type: string
                format: cidr
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs. The default is all allowed.
                When a list of CIDRs is provided, the default switches to deny all.

                **New in version 2.12**
            tls_ciphers:
              type: string
              maxLength: 2048
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
                maxLength: 32
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
            hsts_max_age:
              type: integer
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.
                Setting this enables HTTP Strict Transport
                Security (HSTS) for the TLS-terminated listener.

                **New in version 2.27**
            hsts_include_subdomains:
              type: boolean
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
            hsts_preload:
              type: boolean
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
          description: |-
            Defines attributes that are acceptable of a PUT request.
    LbaasListenerUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        listener:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the listener.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            protocol:
              type: string
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
            protocol_port:
              type: integer
              description: |-
                The protocol port number for the resource.
            connection_limit:
              type: integer
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
            default_tls_container_ref:
              type: string
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
            sni_container_refs:
              type: array
              items:
                type: string
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            default_pool_id:
              type: string
              format: uuid
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            l7policies:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of L7 policy IDs.
            insert_headers:
              type: object
              additionalProperties:
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            loadbalancers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of load balancer IDs.
            timeout_client_data:
              type: integer
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_member_connect:
              type: integer
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
            timeout_member_data:
              type: integer
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
            timeout_tcp_inspect:
              type: integer
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            client_ca_tls_container_ref:
              type: string
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
            client_authentication:
              type: string
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
            client_crl_container_ref:
              type: string
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
            allowed_cidrs:
              type: array
              items:
                type: string
                format: cidr
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs.

                **New in version 2.12**
            tls_ciphers:
              type: string
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
            hsts_max_age:
              type: integer
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.

                **New in version 2.27**
            hsts_include_subdomains:
              type: boolean
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
            hsts_preload:
              type: boolean
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            A listener object.
    LbaasPoolGetResponse:
      type: object
      description: Base type for complex types
      properties:
        pool:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the pool.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            protocol:
              type: string
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
            lb_algorithm:
              type: string
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
            session_persistence:
              type: object
              properties:
                type:
                  type: string
                cookie_name:
                  type: string
                persistence_timeout:
                  type: integer
                persistence_granularity:
                  type: string
                  format: ipaddress
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            loadbalancers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of load balancer IDs.
            listeners:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of listener IDs.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            healthmonitor_id:
              type: string
              format: uuid
              description: |-
                The associated health monitor ID.
            members:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of member IDs.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tls_container_ref:
              type: string
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
            ca_tls_container_ref:
              type: string
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
            crl_container_ref:
              type: string
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
            tls_enabled:
              type: boolean
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
            tls_ciphers:
              type: string
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasPoolsListResponse:
      type: object
      description: Base type for complex types
      properties:
        pools:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the pool.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              description:
                type: string
                description: |-
                  A human-readable description for the resource.
              provisioning_status:
                type: string
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              operating_status:
                type: string
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              protocol:
                type: string
                description: |-
                  The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                  `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
              lb_algorithm:
                type: string
                description: |-
                  The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                  `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
              session_persistence:
                type: object
                properties:
                  type:
                    type: string
                  cookie_name:
                    type: string
                  persistence_timeout:
                    type: integer
                  persistence_granularity:
                    type: string
                    format: ipaddress
                description: |-
                  A JSON object specifying the session persistence for the pool or `null`
                  for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                  `null`.
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              loadbalancers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  A list of load balancer IDs.
              listeners:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  A list of listener IDs.
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              healthmonitor_id:
                type: string
                format: uuid
                description: |-
                  The associated health monitor ID.
              members:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  A list of member IDs.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              tls_container_ref:
                type: string
                description: |-
                  The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PKCS12 format certificate/key bundle for `tls_enabled` pools for
                  TLS client authentication to the member servers.

                  **New in version 2.8**
              ca_tls_container_ref:
                type: string
                description: |-
                  The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format CA certificate bundle for `tls_enabled` pools.

                  **New in version 2.8**
              crl_container_ref:
                type: string
                description: |-
                  The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format CA revocation list file for `tls_enabled` pools.
              tls_enabled:
                type: boolean
                description: |-
                  When `true` connections to backend member servers will use TLS
                  encryption. Default is `false`.

                  **New in version 2.8**
              tls_ciphers:
                type: string
                description: |-
                  List of ciphers in OpenSSL format (colon-separated).
                  See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                  **New in version 2.15**
              tls_versions:
                type: array
                items:
                  type: string
                description: |-
                  A list of TLS protocol versions.
                  Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                  **New in version 2.17**
              alpn_protocols:
                type: array
                items:
                  type: string
                  format: alpn_protocol
                description: |-
                  A list of ALPN protocols.
                  Available protocols: http/1.0, http/1.1, h2

                  **New in version 2.24**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines which attributes are to be shown on any response.
        pools_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    PoolRootPOST:
      type: object
      description: Base type for complex types
      properties:
        pool:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            listener_id:
              type: string
              format: uuid
              description: |-
                The ID of the listener for the pool. Either `listener_id` or
                `loadbalancer_id` must be specified. The listener has some restrictions,
                See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            loadbalancer_id:
              type: string
              format: uuid
              description: |-
                The ID of the load balancer for the pool. Either `listener_id` or
                `loadbalancer_id` must be specified.
            protocol:
              type: string
              enum:
                - PROXYV2
                - HTTPS
                - SCTP
                - PROXY
                - HTTP
                - TCP
                - UDP
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
            lb_algorithm:
              type: string
              enum:
                - SOURCE_IP_PORT
                - LEAST_CONNECTIONS
                - SOURCE_IP
                - ROUND_ROBIN
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
            session_persistence:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - APP_COOKIE
                    - SOURCE_IP
                    - HTTP_COOKIE
                cookie_name:
                  type: string
                  maxLength: 255
                persistence_timeout:
                  type: integer
                persistence_granularity:
                  type: string
                  format: ipaddress
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
              required:
                - type
            project_id:
              type: string
              maxLength: 36
              description: |-
                The ID of the project owning this resource. (deprecated)
            healthmonitor:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 255
                type:
                  type: string
                  enum:
                    - HTTPS
                    - SCTP
                    - PING
                    - HTTP
                    - UDP-CONNECT
                    - TLS-HELLO
                    - TCP
                delay:
                  type: integer
                timeout:
                  type: integer
                max_retries_down:
                  type: integer
                  minimum: 1
                  maximum: 10
                max_retries:
                  type: integer
                  minimum: 1
                  maximum: 10
                http_method:
                  type: string
                  enum:
                    - DELETE
                    - GET
                    - PATCH
                    - HEAD
                    - POST
                    - PUT
                    - TRACE
                    - CONNECT
                    - OPTIONS
                url_path:
                  type: string
                  format: url_path
                expected_codes:
                  type: string
                admin_state_up:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
                    maxLength: 255
                  description: |-
                    A list of simple strings assigned to the resource.

                    **New in version 2.5**
                http_version:
                  type: number
                  enum:
                    - 1.0
                    - 1.1
                domain_name:
                  type: string
                  minLength: 1
                  maxLength: 255
              description: |-
                Defines mandatory and optional attributes of a POST request.
              required:
                - max_retries
                - delay
                - timeout
                - type
            members:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    maxLength: 255
                  admin_state_up:
                    type: boolean
                  address:
                    type: string
                    format: ipaddress
                  protocol_port:
                    type: integer
                    minimum: 1
                    maximum: 65535
                  weight:
                    type: integer
                    maximum: 256
                  backup:
                    type: boolean
                  subnet_id:
                    type: string
                    format: uuid
                  monitor_port:
                    type: integer
                    minimum: 1
                    maximum: 65535
                  monitor_address:
                    type: string
                    format: ipaddress
                  tags:
                    type: array
                    items:
                      type: string
                      maxLength: 255
                  request_sriov:
                    type: boolean
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                required:
                  - protocol_port
                  - address
            tags:
              type: array
              items:
                type: string
                maxLength: 255
            tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
            ca_tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
            crl_container_ref:
              type: string
              maxLength: 255
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
            tls_enabled:
              type: boolean
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
            tls_ciphers:
              type: string
              maxLength: 2048
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
                maxLength: 32
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - lb_algorithm
            - protocol
    LbaasPoolsCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        pool:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the pool.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            protocol:
              type: string
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
            lb_algorithm:
              type: string
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
            session_persistence:
              type: object
              properties:
                type:
                  type: string
                cookie_name:
                  type: string
                persistence_timeout:
                  type: integer
                persistence_granularity:
                  type: string
                  format: ipaddress
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            loadbalancers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of load balancer IDs.
            listeners:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of listener IDs.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            healthmonitor_id:
              type: string
              format: uuid
              description: |-
                The associated health monitor ID.
            members:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of member IDs.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tls_container_ref:
              type: string
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
            ca_tls_container_ref:
              type: string
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
            crl_container_ref:
              type: string
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
            tls_enabled:
              type: boolean
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
            tls_ciphers:
              type: string
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    PoolRootPut:
      type: object
      description: Base type for complex types
      properties:
        pool:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            lb_algorithm:
              type: string
              enum:
                - SOURCE_IP_PORT
                - LEAST_CONNECTIONS
                - SOURCE_IP
                - ROUND_ROBIN
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, or `SOURCE_IP`.
            session_persistence:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - APP_COOKIE
                    - SOURCE_IP
                    - HTTP_COOKIE
                cookie_name:
                  type: string
                  maxLength: 255
                persistence_timeout:
                  type: integer
                persistence_granularity:
                  type: string
                  format: ipaddress
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
            ca_tls_container_ref:
              type: string
              maxLength: 255
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
            crl_container_ref:
              type: string
              maxLength: 255
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
            tls_enabled:
              type: boolean
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
            tls_ciphers:
              type: string
              maxLength: 2048
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
                maxLength: 32
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
          description: |-
            Defines attributes that are acceptable of a PUT request.
    LbaasPoolUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        pool:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the pool.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            protocol:
              type: string
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
            lb_algorithm:
              type: string
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
            session_persistence:
              type: object
              properties:
                type:
                  type: string
                cookie_name:
                  type: string
                persistence_timeout:
                  type: integer
                persistence_granularity:
                  type: string
                  format: ipaddress
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            loadbalancers:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of load balancer IDs.
            listeners:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of listener IDs.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            healthmonitor_id:
              type: string
              format: uuid
              description: |-
                The associated health monitor ID.
            members:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                A list of member IDs.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tls_container_ref:
              type: string
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
            ca_tls_container_ref:
              type: string
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
            crl_container_ref:
              type: string
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
            tls_enabled:
              type: boolean
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
            tls_ciphers:
              type: string
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
            tls_versions:
              type: array
              items:
                type: string
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
            alpn_protocols:
              type: array
              items:
                type: string
                format: alpn_protocol
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasL7PolicyGetResponse:
      type: object
      description: Base type for complex types
      properties:
        l7policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the L7 policy.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            action:
              type: string
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
            listener_id:
              type: string
              format: uuid
              description: |-
                The ID of the listener.
            redirect_pool_id:
              type: string
              format: uuid
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            redirect_url:
              type: string
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
            redirect_prefix:
              type: string
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
            position:
              type: integer
              description: |-
                The position of this policy on the listener. Positions start at 1.
            rules:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                List of associated L7 rule IDs.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            redirect_http_code:
              type: integer
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasL7PoliciesListResponse:
      type: object
      description: Base type for complex types
      properties:
        l7policies:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the L7 policy.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              description:
                type: string
                description: |-
                  A human-readable description for the resource.
              provisioning_status:
                type: string
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              operating_status:
                type: string
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              action:
                type: string
                description: |-
                  The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                  `REDIRECT_TO_URL`, or `REJECT`.
              listener_id:
                type: string
                format: uuid
                description: |-
                  The ID of the listener.
              redirect_pool_id:
                type: string
                format: uuid
                description: |-
                  Requests matching this policy will be redirected to the pool with this ID.
                  Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                  restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              redirect_url:
                type: string
                description: |-
                  Requests matching this policy will be redirected to this URL.
                  Only valid if `action` is `REDIRECT_TO_URL`.
              redirect_prefix:
                type: string
                description: |-
                  Requests matching this policy will be redirected to this Prefix URL.
                  Only valid if `action` is `REDIRECT_PREFIX`.
              position:
                type: integer
                description: |-
                  The position of this policy on the listener. Positions start at 1.
              rules:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
                description: |-
                  List of associated L7 rule IDs.
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              redirect_http_code:
                type: integer
                description: |-
                  Requests matching this policy will be redirected to the specified URL or
                  Prefix URL with the HTTP response code. Valid if `action` is
                  `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                  303, 307, or 308. Default is 302.

                  **New in version 2.9**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines which attributes are to be shown on any response.
        l7policies_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    L7PolicyRootPOST:
      type: object
      description: Base type for complex types
      properties:
        l7policy:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            project_id:
              type: string
              maxLength: 36
              description: |-
                The ID of the project owning this resource.
            action:
              type: string
              enum:
                - REJECT
                - REDIRECT_PREFIX
                - REDIRECT_TO_URL
                - REDIRECT_TO_POOL
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
            redirect_pool_id:
              type: string
              format: uuid
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            redirect_url:
              type: string
              format: url
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
            redirect_prefix:
              type: string
              format: url
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
            position:
              type: integer
              minimum: 1
              maximum: 2147483647
              description: |-
                The position of this policy on the listener. Positions start at 1.
            listener_id:
              type: string
              format: uuid
              description: |-
                The ID of the listener.
            rules:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SSL_DN_FIELD
                      - HEADER
                      - FILE_TYPE
                      - HOST_NAME
                      - SSL_VERIFY_RESULT
                      - PATH
                      - SSL_CONN_HAS_CERT
                      - COOKIE
                  compare_type:
                    type: string
                    enum:
                      - STARTS_WITH
                      - ENDS_WITH
                      - EQUAL_TO
                      - REGEX
                      - CONTAINS
                  key:
                    type: string
                    maxLength: 255
                  value:
                    type: string
                    maxLength: 255
                  invert:
                    type: boolean
                  admin_state_up:
                    type: boolean
                  tags:
                    type: array
                    items:
                      type: string
                      maxLength: 255
                    description: |-
                      A list of simple strings assigned to the resource.

                      **New in version 2.5**
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                required:
                  - value
                  - compare_type
                  - type
            tags:
              type: array
              items:
                type: string
                maxLength: 255
            redirect_http_code:
              type: integer
              enum:
                - 301
                - 302
                - 303
                - 307
                - 308
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - listener_id
            - action
    LbaasL7PoliciesCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        l7policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the L7 policy.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            action:
              type: string
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
            listener_id:
              type: string
              format: uuid
              description: |-
                The ID of the listener.
            redirect_pool_id:
              type: string
              format: uuid
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            redirect_url:
              type: string
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
            redirect_prefix:
              type: string
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
            position:
              type: integer
              description: |-
                The position of this policy on the listener. Positions start at 1.
            rules:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                List of associated L7 rule IDs.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            redirect_http_code:
              type: integer
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    L7PolicyRootPUT:
      type: object
      description: Base type for complex types
      properties:
        l7policy:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            action:
              type: string
              enum:
                - REJECT
                - REDIRECT_PREFIX
                - REDIRECT_TO_URL
                - REDIRECT_TO_POOL
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
            redirect_pool_id:
              type: string
              format: uuid
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            redirect_url:
              type: string
              format: url
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
            redirect_prefix:
              type: string
              format: url
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
            position:
              type: integer
              minimum: 1
              maximum: 2147483647
              description: |-
                The position of this policy on the listener. Positions start at 1.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            redirect_http_code:
              type: integer
              enum:
                - 301
                - 302
                - 303
                - 307
                - 308
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
          description: |-
            Defines attributes that are acceptable of a PUT request.
    LbaasL7PolicyUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        l7policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the L7 policy.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              description: |-
                A human-readable description for the resource.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            action:
              type: string
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
            listener_id:
              type: string
              format: uuid
              description: |-
                The ID of the listener.
            redirect_pool_id:
              type: string
              format: uuid
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
            redirect_url:
              type: string
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
            redirect_prefix:
              type: string
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
            position:
              type: integer
              description: |-
                The position of this policy on the listener. Positions start at 1.
            rules:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
              description: |-
                List of associated L7 rule IDs.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            redirect_http_code:
              type: integer
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasHealthmonitorsListResponse:
      type: object
      description: Base type for complex types
      properties:
        healthmonitors:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The associated health monitor ID.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              type:
                type: string
                description: |-
                  The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                  `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
              delay:
                type: integer
                description: |-
                  The time, in seconds, between sending probes to members.
              timeout:
                type: integer
                description: |-
                  The maximum time, in seconds, that a monitor waits to connect before it
                  times out. This value must be less than the delay value.
              max_retries:
                type: integer
                description: |-
                  The number of successful checks before changing the `operating status`
                  of the member to `ONLINE`. A valid value is from `1` to `10`.
              max_retries_down:
                type: integer
                description: |-
                  The number of allowed check failures before changing the `operating
                  status` of the member to `ERROR`. A valid value is from `1` to `10`.
              http_method:
                type: string
                description: |-
                  The HTTP method that the health monitor uses for requests. One of
                  `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                  `POST`, `PUT`, or `TRACE`.
              url_path:
                type: string
                description: |-
                  The HTTP URL path of the request sent by the monitor to test the health of
                  a backend member. Must be a string that begins with a forward slash
                  (`/`).
              expected_codes:
                type: string
                description: |-
                  The list of HTTP status codes expected in response from the member to
                  declare it healthy. Specify one of the following values:

                  * A single value, such as `200`
                  * A list, such as `200, 202`
                  * A range, such as `200-204`
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              pools:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                  description: |-
                    Base type for complex types
                  required:
                    - id
              provisioning_status:
                type: string
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              operating_status:
                type: string
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              http_version:
                type: number
                format: float
                description: |-
                  The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                  **New in version 2.10**
              domain_name:
                type: string
                description: |-
                  The domain name, which be injected into the HTTP Host Header to the backend
                  server for HTTP health check.

                  **New in version 2.10**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines which attributes are to be shown on any response.
        healthmonitors_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    LbaasHealthmonitorShowResponse:
      type: object
      description: Base type for complex types
      properties:
        healthmonitor:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The associated health monitor ID.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            type:
              type: string
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
            delay:
              type: integer
              description: |-
                The time, in seconds, between sending probes to members.
            timeout:
              type: integer
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
            max_retries:
              type: integer
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
            max_retries_down:
              type: integer
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
            http_method:
              type: string
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`.
            url_path:
              type: string
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`).
            expected_codes:
              type: string
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            pools:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            http_version:
              type: number
              format: float
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
            domain_name:
              type: string
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    HealthMonitorRootPOST:
      type: object
      description: Base type for complex types
      properties:
        healthmonitor:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            type:
              type: string
              enum:
                - HTTPS
                - SCTP
                - PING
                - HTTP
                - UDP-CONNECT
                - TLS-HELLO
                - TCP
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
            delay:
              type: integer
              description: |-
                The time, in seconds, between sending probes to members.
            timeout:
              type: integer
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
            max_retries_down:
              type: integer
              minimum: 1
              maximum: 10
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
                The default is `3`.
            max_retries:
              type: integer
              minimum: 1
              maximum: 10
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
            http_method:
              type: string
              enum:
                - DELETE
                - GET
                - PATCH
                - HEAD
                - POST
                - PUT
                - TRACE
                - CONNECT
                - OPTIONS
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`. The default is `GET`.
            url_path:
              type: string
              format: url_path
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`). The default URL path is `/`.
            expected_codes:
              type: string
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`

                The default is 200.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            project_id:
              type: string
              maxLength: 36
              description: |-
                The ID of the project owning this resource. (deprecated)
            pool_id:
              type: string
              format: uuid
              description: |-
                The ID of the pool.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            http_version:
              type: number
              enum:
                - 1.0
                - 1.1
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
            domain_name:
              type: string
              minLength: 1
              maxLength: 255
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - max_retries
            - delay
            - timeout
            - pool_id
            - type
    LbaasHealthmonitorsCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        healthmonitor:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The associated health monitor ID.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            type:
              type: string
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
            delay:
              type: integer
              description: |-
                The time, in seconds, between sending probes to members.
            timeout:
              type: integer
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
            max_retries:
              type: integer
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
            max_retries_down:
              type: integer
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
            http_method:
              type: string
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`.
            url_path:
              type: string
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`).
            expected_codes:
              type: string
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            pools:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            http_version:
              type: number
              format: float
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
            domain_name:
              type: string
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    HealthMonitorRootPUT:
      type: object
      description: Base type for complex types
      properties:
        healthmonitor:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            delay:
              type: integer
              description: |-
                The time, in seconds, between sending probes to members.
            timeout:
              type: integer
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
            max_retries_down:
              type: integer
              minimum: 1
              maximum: 10
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
                The default is `3`.
            max_retries:
              type: integer
              minimum: 1
              maximum: 10
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
            http_method:
              type: string
              enum:
                - DELETE
                - GET
                - PATCH
                - HEAD
                - POST
                - PUT
                - TRACE
                - CONNECT
                - OPTIONS
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`. The default is `GET`.
            url_path:
              type: string
              format: url_path
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`). The default URL path is `/`.
            expected_codes:
              type: string
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`

                The default is 200.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            http_version:
              type: number
              enum:
                - 1.0
                - 1.1
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
            domain_name:
              type: string
              minLength: 1
              maxLength: 255
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
          description: |-
            Defines attributes that are acceptable of a PUT request.
    LbaasHealthmonitorUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        healthmonitor:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The associated health monitor ID.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            type:
              type: string
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
            delay:
              type: integer
              description: |-
                The time, in seconds, between sending probes to members.
            timeout:
              type: integer
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
            max_retries:
              type: integer
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
            max_retries_down:
              type: integer
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
            http_method:
              type: string
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`.
            url_path:
              type: string
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`).
            expected_codes:
              type: string
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            pools:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                description: |-
                  Base type for complex types
                required:
                  - id
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            http_version:
              type: number
              format: float
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
            domain_name:
              type: string
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasQuotaGetResponse:
      type: object
      description: Wrapper object for quotas responses.
      properties:
        quota:
          type: object
          properties:
            loadbalancer:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured load balancer quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
            load_balancer:
              type: integer
              minimum: -1
              maximum: 2000000000
            listener:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured listener quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
            member:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured member quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
            pool:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured pool quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
            healthmonitor:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured health monitor quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1`
                means unlimited.
            health_monitor:
              type: integer
              minimum: -1
              maximum: 2000000000
            l7policy:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured l7policy quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
            l7rule:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured l7rule quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
          description: |-
            Individual quota definitions.
    LbaasQuotasListResponse:
      type: object
      description: Base type for complex types
      properties:
        quotas:
          type: array
          items:
            type: object
            properties:
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              loadbalancer:
                type: integer
                description: |-
                  The configured load balancer quota limit. A setting of `null` means it
                  is using the deployment default quota. A setting of `-1` means
                  unlimited.
              load_balancer:
                type: integer
              listener:
                type: integer
                description: |-
                  The configured listener quota limit. A setting of `null` means it is
                  using the deployment default quota. A setting of `-1` means unlimited.
              member:
                type: integer
                description: |-
                  The configured member quota limit. A setting of `null` means it is using
                  the deployment default quota. A setting of `-1` means unlimited.
              pool:
                type: integer
                description: |-
                  The configured pool quota limit. A setting of `null` means it is using
                  the deployment default quota. A setting of `-1` means unlimited.
              healthmonitor:
                type: integer
                description: |-
                  The configured health monitor quota limit. A setting of `null` means it
                  is using the deployment default quota. A setting of `-1`
                  means unlimited.
              health_monitor:
                type: integer
              l7policy:
                type: integer
                description: |-
                  The configured l7policy quota limit. A setting of `null` means it is
                  using the deployment default quota. A setting of `-1` means unlimited.
              l7rule:
                type: integer
                description: |-
                  The configured l7rule quota limit. A setting of `null` means it is
                  using the deployment default quota. A setting of `-1` means unlimited.
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Wrapper object for get all quotas responses.
        quotas_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    QuotaPUT:
      type: object
      description: Overall object for quota PUT request.
      properties:
        quota:
          type: object
          properties:
            loadbalancer:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured load balancer quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
            load_balancer:
              type: integer
              minimum: -1
              maximum: 2000000000
            listener:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured listener quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
            member:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured member quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
            pool:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured pool quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
            healthmonitor:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured health monitor quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
            health_monitor:
              type: integer
              minimum: -1
              maximum: 2000000000
            l7policy:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured l7policy quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
            l7rule:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured l7rule quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
          description: |-
            Individual quota definitions.
    LbaasQuotaUpdateResponse:
      type: object
      description: Wrapper object for quotas responses.
      properties:
        quota:
          type: object
          properties:
            loadbalancer:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured load balancer quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
            load_balancer:
              type: integer
              minimum: -1
              maximum: 2000000000
            listener:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured listener quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
            member:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured member quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
            pool:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured pool quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
            healthmonitor:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured health monitor quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1`
                means unlimited.
            health_monitor:
              type: integer
              minimum: -1
              maximum: 2000000000
            l7policy:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured l7policy quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
            l7rule:
              type: integer
              minimum: -1
              maximum: 2000000000
              description: |-
                The configured l7rule quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
          description: |-
            Individual quota definitions.
    LbaasProvidersListResponse:
      type: object
      description: Base type for complex types
      properties:
        providers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |-
                  Provider name.
              description:
                type: string
                description: |-
                  Provider description.
            description: |-
              Base type for complex types
    LbaasFlavorsListResponse:
      type: object
      description: Base type for complex types
      properties:
        flavors:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              description:
                type: string
              enabled:
                type: boolean
              flavor_profile_id:
                type: string
            description: |-
              Defines which attributes are to be shown on any response.
        flavors_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    LbaasFlavorShowResponse:
      type: object
      description: Base type for complex types
      properties:
        flavor:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            flavor_profile_id:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    FlavorRootPOST:
      type: object
      description: Base type for complex types
      properties:
        flavor:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
            enabled:
              type: boolean
            flavor_profile_id:
              type: string
              format: uuid
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - flavor_profile_id
            - name
    LbaasFlavorsCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        flavor:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            flavor_profile_id:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    FlavorRootPUT:
      type: object
      description: Base type for complex types
      properties:
        flavor:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
            enabled:
              type: boolean
          description: |-
            Defines the attributes of a PUT request.
    LbaasFlavorUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        flavor:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            flavor_profile_id:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasFlavorprofilesListResponse:
      type: object
      description: Base type for complex types
      properties:
        flavorprofiles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              provider_name:
                type: string
              flavor_data:
                type: string
            description: |-
              Defines which attributes are to be shown on any response.
        flavorprofile_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    LbaasFlavorprofileShowResponse:
      type: object
      description: Base type for complex types
      properties:
        flavorprofile:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            provider_name:
              type: string
            flavor_data:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    FlavorProfileRootPOST:
      type: object
      description: Base type for complex types
      properties:
        flavorprofile:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            provider_name:
              type: string
              maxLength: 255
            flavor_data:
              type: string
              maxLength: 4096
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - flavor_data
            - name
            - provider_name
    LbaasFlavorprofilesCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        flavorprofile:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            provider_name:
              type: string
            flavor_data:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    FlavorProfileRootPUT:
      type: object
      description: Base type for complex types
      properties:
        flavorprofile:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            provider_name:
              type: string
              maxLength: 255
            flavor_data:
              type: string
              maxLength: 4096
          description: |-
            Defines the attributes of a PUT request.
    LbaasFlavorprofileUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        flavorprofile:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            provider_name:
              type: string
            flavor_data:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasAvailabilityzonesListResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zones:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              enabled:
                type: boolean
              availability_zone_profile_id:
                type: string
            description: |-
              Defines which attributes are to be shown on any response.
        availability_zones_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    LbaasAvailabilityzoneShowResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            availability_zone_profile_id:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    AvailabilityZoneRootPOST:
      type: object
      description: Base type for complex types
      properties:
        availability_zone:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
            enabled:
              type: boolean
            availability_zone_profile_id:
              type: string
              format: uuid
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - name
            - availability_zone_profile_id
    LbaasAvailabilityzonesCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            availability_zone_profile_id:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    AvailabilityZoneRootPUT:
      type: object
      description: Base type for complex types
      properties:
        availability_zone:
          type: object
          properties:
            description:
              type: string
              maxLength: 255
            enabled:
              type: boolean
          description: |-
            Defines the attributes of a PUT request.
    LbaasAvailabilityzoneUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            availability_zone_profile_id:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasAvailabilityzoneprofilesListResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone_profiles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
              provider_name:
                type: string
              availability_zone_data:
                type: string
            description: |-
              Defines which attributes are to be shown on any response.
        availability_zone_profile_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    LbaasAvailabilityzoneprofileShowResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            provider_name:
              type: string
            availability_zone_data:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    AvailabilityZoneProfileRootPOST:
      type: object
      description: Base type for complex types
      properties:
        availability_zone_profile:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            provider_name:
              type: string
              maxLength: 255
            availability_zone_data:
              type: string
              maxLength: 4096
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - name
            - availability_zone_data
            - provider_name
    LbaasAvailabilityzoneprofilesCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            provider_name:
              type: string
            availability_zone_data:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    AvailabilityZoneProfileRootPUT:
      type: object
      description: Base type for complex types
      properties:
        availability_zone_profile:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            provider_name:
              type: string
              maxLength: 255
            availability_zone_data:
              type: string
              maxLength: 4096
          description: |-
            Defines the attributes of a PUT request.
    LbaasAvailabilityzoneprofileUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            provider_name:
              type: string
            availability_zone_data:
              type: string
          description: |-
            Defines which attributes are to be shown on any response.
    OctaviaGetResponse:
      type: string
    OctaviaAmphoraeListResponse:
      type: object
      description: Base type for complex types
      properties:
        amphorae:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The associated amphora ID.
              loadbalancer_id:
                type: string
                format: uuid
                description: |-
                  The ID of the load balancer.
              compute_id:
                type: string
                format: uuid
                description: |-
                  The ID of the amphora resource in the compute system.
              lb_network_ip:
                type: string
                format: ipaddress
                description: |-
                  The management IP of the amphora.
              vrrp_ip:
                type: string
                format: ipaddress
                description: |-
                  The address of the vrrp port on the amphora.
              ha_ip:
                type: string
                format: ipaddress
                description: |-
                  The IP address of the Virtual IP (VIP).
              vrrp_port_id:
                type: string
                format: uuid
                description: |-
                  The vrrp port’s ID in the networking system.
              ha_port_id:
                type: string
                format: uuid
                description: |-
                  The ID of the Virtual IP (VIP) port.
              cert_expiration:
                type: string
                format: date-time
                description: |-
                  The date the certificate for the amphora expires.
              cert_busy:
                type: boolean
                description: |-
                  Whether the certificate is in the process of being replaced.
              role:
                type: string
                description: |-
                  The role of the amphora. One of `STANDALONE`, `MASTER`, `BACKUP`.
              status:
                type: string
                description: |-
                  The status of the amphora. One of: `BOOTING`, `ALLOCATED`, `READY`,
                  `PENDING_CREATE`, `PENDING_DELETE`, `DELETED`, `ERROR`.
              vrrp_interface:
                type: string
                description: |-
                  The bound interface name of the vrrp port on the amphora.
              vrrp_id:
                type: integer
                description: |-
                  The vrrp group’s ID for the amphora.
              vrrp_priority:
                type: integer
                description: |-
                  The priority of the amphora in the vrrp group.
              cached_zone:
                type: string
                description: |-
                  The availability zone of a compute instance, cached at create time. This
                  is not guaranteed to be current. May be an empty-string if the compute
                  service does not use zones.
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              image_id:
                type: string
                format: uuid
                description: |-
                  The ID of the glance image used for the amphora.

                  **New in version 2.1**
              compute_flavor:
                type: string
                description: |-
                  The ID of the compute flavor used for the amphora.

                  **New in version 2.3**
            description: |-
              Defines which attributes are to be shown on any response.
        amphorae_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    OctaviaAmphoraeShowResponse:
      type: object
      description: Base type for complex types
      properties:
        amphora:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The associated amphora ID.
            loadbalancer_id:
              type: string
              format: uuid
              description: |-
                The ID of the load balancer.
            compute_id:
              type: string
              format: uuid
              description: |-
                The ID of the amphora resource in the compute system.
            lb_network_ip:
              type: string
              format: ipaddress
              description: |-
                The management IP of the amphora.
            vrrp_ip:
              type: string
              format: ipaddress
              description: |-
                The address of the vrrp port on the amphora.
            ha_ip:
              type: string
              format: ipaddress
              description: |-
                The IP address of the Virtual IP (VIP).
            vrrp_port_id:
              type: string
              format: uuid
              description: |-
                The vrrp port’s ID in the networking system.
            ha_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Virtual IP (VIP) port.
            cert_expiration:
              type: string
              format: date-time
              description: |-
                The date the certificate for the amphora expires.
            cert_busy:
              type: boolean
              description: |-
                Whether the certificate is in the process of being replaced.
            role:
              type: string
              description: |-
                The role of the amphora. One of `STANDALONE`, `MASTER`, `BACKUP`.
            status:
              type: string
              description: |-
                The status of the amphora. One of: `BOOTING`, `ALLOCATED`, `READY`,
                `PENDING_CREATE`, `PENDING_DELETE`, `DELETED`, `ERROR`.
            vrrp_interface:
              type: string
              description: |-
                The bound interface name of the vrrp port on the amphora.
            vrrp_id:
              type: integer
              description: |-
                The vrrp group’s ID for the amphora.
            vrrp_priority:
              type: integer
              description: |-
                The priority of the amphora in the vrrp group.
            cached_zone:
              type: string
              description: |-
                The availability zone of a compute instance, cached at create time. This
                is not guaranteed to be current. May be an empty-string if the compute
                service does not use zones.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            image_id:
              type: string
              format: uuid
              description: |-
                The ID of the glance image used for the amphora.

                **New in version 2.1**
            compute_flavor:
              type: string
              description: |-
                The ID of the compute flavor used for the amphora.

                **New in version 2.3**
          description: |-
            Defines which attributes are to be shown on any response.
    OctaviaAmphoraeStatsResponse:
      type: object
      description: Base type for complex types
      properties:
        amphora_stats:
          type: array
          items:
            type: object
            properties:
              active_connections:
                type: integer
                description: |-
                  The currently active connections.
              bytes_in:
                type: integer
                description: |-
                  The total bytes received.
              bytes_out:
                type: integer
                description: |-
                  The total bytes sent.
              id:
                type: string
                format: uuid
                description: |-
                  The associated amphora ID.
              listener_id:
                type: string
                format: uuid
                description: |-
                  The ID of the listener.
              loadbalancer_id:
                type: string
                format: uuid
                description: |-
                  The ID of the load balancer.
              request_errors:
                type: integer
                description: |-
                  The total requests that were unable to be fulfilled.
              total_connections:
                type: integer
                description: |-
                  The total connections handled.
            description: |-
              Defines which attributes are to show on stats response.
          description: |-
            A list of amphora statistics objects, one per listener.

            **New in version 2.3**
    OctaviaAmphoraeConfigConfigRequest:
      type: object
      description: Request of the octavia/amphorae/amphora_id/config:put operation
      x-openstack:
        action-name: config
    OctaviaAmphoraeConfigResponse:
      type: object
      description: Response of the octavia/amphorae/amphora_id/config:put operation
    OctaviaAmphoraeFailoverFailoverRequest:
      type: 'null'
    OctaviaAmphoraeFailoverResponse:
      type: object
      description: Response of the octavia/amphorae/amphora_id/failover:put operation
    LbaasProvidersFlavor_CapabilitiesResponse:
      type: object
      description: Base type for complex types
      properties:
        flavor_capabilities:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |-
                  The provider flavor capability name.
              description:
                type: string
                description: |-
                  The provider flavor capability description.
            description: |-
              Base type for complex types
          description: |-
            The provider flavor capabilities dictionary object.
    LbaasProvidersAvailability_Zone_CapabilitiesAz_CapabilitiesResponse:
      type: object
      description: Base type for complex types
      properties:
        availability_zone_capabilities:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |-
                  The provider availability zone capability name.
              description:
                type: string
                description: |-
                  The provider availability zone capability description.
            description: |-
              Base type for complex types
          description: |-
            The provider availability zone capabilities dictionary object.
    LbaasL7PoliciesRulesListResponse:
      type: object
      description: Base type for complex types
      properties:
        rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the L7 rule.
              type:
                type: string
                description: |-
                  The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                  `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                  or `SSL_DN_FIELD`.
              compare_type:
                type: string
                description: |-
                  The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                  `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
              key:
                type: string
                description: |-
                  The key to use for the comparison. For example, the name of the cookie
                  to evaluate.
              value:
                type: string
                description: |-
                  The value to use for the comparison. For example, the file type to compare.
              invert:
                type: boolean
                description: |-
                  When `true` the logic of the rule is inverted. For example, with
                  invert `true`, equal to would become not equal to.
              provisioning_status:
                type: string
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              operating_status:
                type: string
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              tags:
                type: array
                items:
                  type: string
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines which attributes are to be shown on any response.
        rules_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    L7RuleRootPOST:
      type: object
      description: Base type for complex types
      properties:
        rule:
          type: object
          properties:
            type:
              type: string
              enum:
                - SSL_DN_FIELD
                - HEADER
                - FILE_TYPE
                - HOST_NAME
                - SSL_VERIFY_RESULT
                - PATH
                - SSL_CONN_HAS_CERT
                - COOKIE
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
            compare_type:
              type: string
              enum:
                - STARTS_WITH
                - ENDS_WITH
                - EQUAL_TO
                - REGEX
                - CONTAINS
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
            key:
              type: string
              maxLength: 255
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
            value:
              type: string
              maxLength: 255
              description: |-
                The value to use for the comparison. For example, the file type to compare.
            invert:
              type: boolean
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
                Default is `false`.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            project_id:
              type: string
              maxLength: 36
              description: |-
                The ID of the project owning this resource.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - value
            - compare_type
            - type
    LbaasL7PoliciesRulesCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the L7 rule.
            type:
              type: string
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
            compare_type:
              type: string
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
            key:
              type: string
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
            value:
              type: string
              description: |-
                The value to use for the comparison. For example, the file type to compare.
            invert:
              type: boolean
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasL7PoliciesRuleCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the L7 rule.
            type:
              type: string
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
            compare_type:
              type: string
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
            key:
              type: string
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
            value:
              type: string
              description: |-
                The value to use for the comparison. For example, the file type to compare.
            invert:
              type: boolean
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    L7RuleRootPUT:
      type: object
      description: Base type for complex types
      properties:
        rule:
          type: object
          properties:
            type:
              type: string
              enum:
                - SSL_DN_FIELD
                - HEADER
                - FILE_TYPE
                - HOST_NAME
                - SSL_VERIFY_RESULT
                - PATH
                - SSL_CONN_HAS_CERT
                - COOKIE
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
            compare_type:
              type: string
              enum:
                - STARTS_WITH
                - ENDS_WITH
                - EQUAL_TO
                - REGEX
                - CONTAINS
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
            key:
              type: string
              maxLength: 255
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
            value:
              type: string
              maxLength: 255
              description: |-
                The value to use for the comparison. For example, the file type to compare.
            invert:
              type: boolean
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
                Default is `false`.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
          description: |-
            Defines attributes that are acceptable of a PUT request.
    LbaasL7PoliciesRuleUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the L7 rule.
            type:
              type: string
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
            compare_type:
              type: string
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
            key:
              type: string
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
            value:
              type: string
              description: |-
                The value to use for the comparison. For example, the file type to compare.
            invert:
              type: boolean
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasPoolsMembersListResponse:
      type: object
      description: Base type for complex types
      properties:
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the member.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              operating_status:
                type: string
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
              provisioning_status:
                type: string
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              address:
                type: string
                format: ipaddress
                description: |-
                  The IP address of the backend member server.
              protocol_port:
                type: integer
                description: |-
                  The protocol port number the backend member server is listening on.
              weight:
                type: integer
                description: |-
                  The weight of a member determines the portion of requests or connections it
                  services compared to the other members of the pool. For example, a member
                  with a weight of 10 receives five times as many requests as a member with a
                  weight of 2. A value of 0 means the member does not receive new connections
                  but continues to service existing connections. A valid value is
                  from `0` to `256`. Default is `1`.
              backup:
                type: boolean
                description: |-
                  Is the member a backup? Backup members only receive traffic when all
                  non-backup members are down.

                  **New in version 2.1**
              subnet_id:
                type: string
                format: uuid
                description: |-
                  The subnet ID the member service is accessible from.
              project_id:
                type: string
                description: |-
                  The ID of the project owning this resource.
              created_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was created.
              updated_at:
                type: string
                format: date-time
                description: |-
                  The UTC date and timestamp when the resource was last updated.
              monitor_address:
                type: string
                format: ipaddress
                description: |-
                  An alternate IP address used for health monitoring a backend member.
                  Default is `null` which monitors the member `address`.
              monitor_port:
                type: integer
                description: |-
                  An alternate protocol port used for health monitoring a backend member.
                  Default is `null` which monitors the member `protocol_port`.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              vnic_type:
                type: string
                description: |-
                  The member vNIC type used for the member port. One of `normal` or
                  `direct`.

                  **New in version 2.29**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines which attributes are to be shown on any response.
        members_links:
          type: array
          items:
            type: object
            properties:
              href:
                type: string
              rel:
                type: string
            description: |-
              Base type for complex types
    MemberRootPOST:
      type: object
      description: Base type for complex types
      properties:
        member:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the resource.
            protocol_port:
              type: integer
              minimum: 1
              maximum: 65535
              description: |-
                The protocol port number for the resource.
            weight:
              type: integer
              maximum: 256
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
            backup:
              type: boolean
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
            subnet_id:
              type: string
              format: uuid
              description: |-
                The subnet ID the member service is accessible from.
            project_id:
              type: string
              maxLength: 36
              description: |-
                The ID of the project owning this resource. (deprecated)
            monitor_port:
              type: integer
              minimum: 1
              maximum: 65535
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
            monitor_address:
              type: string
              format: ipaddress
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            request_sriov:
              type: boolean
              description: |-
                Request that an SR-IOV VF be used for the member network port. Defaults to
                `false`.

                **New in version 2.29**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines mandatory and optional attributes of a POST request.
          required:
            - protocol_port
            - address
    LbaasPoolsMembersCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        member:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the member.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the backend member server.
            protocol_port:
              type: integer
              description: |-
                The protocol port number the backend member server is listening on.
            weight:
              type: integer
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
            backup:
              type: boolean
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
            subnet_id:
              type: string
              format: uuid
              description: |-
                The subnet ID the member service is accessible from.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            monitor_address:
              type: string
              format: ipaddress
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
            monitor_port:
              type: integer
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            vnic_type:
              type: string
              description: |-
                The member vNIC type used for the member port. One of `normal` or
                `direct`.

                **New in version 2.29**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    MembersRootPUT:
      type: object
      description: Base type for complex types
      properties:
        members:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`). Default is `true`.
              address:
                type: string
                format: ipaddress
                description: |-
                  The IP address of the resource.
              protocol_port:
                type: integer
                minimum: 1
                maximum: 65535
                description: |-
                  The protocol port number for the resource.
              weight:
                type: integer
                maximum: 256
                description: |-
                  The weight of a member determines the portion of requests or connections it
                  services compared to the other members of the pool. For example, a member
                  with a weight of 10 receives five times as many requests as a member with a
                  weight of 2. A value of 0 means the member does not receive new connections
                  but continues to service existing connections. A valid value is
                  from `0` to `256`. Default is `1`.
              backup:
                type: boolean
                description: |-
                  Is the member a backup? Backup members only receive traffic when all
                  non-backup members are down.

                  **New in version 2.1**
              subnet_id:
                type: string
                format: uuid
                description: |-
                  The subnet ID the member service is accessible from.
              project_id:
                type: string
                maxLength: 36
                description: |-
                  The ID of the project owning this resource. (deprecated)
              monitor_port:
                type: integer
                minimum: 1
                maximum: 65535
                description: |-
                  An alternate protocol port used for health monitoring a backend member.
                  Default is `null` which monitors the member `protocol_port`.
              monitor_address:
                type: string
                format: ipaddress
                description: |-
                  An alternate IP address used for health monitoring a backend member.
                  Default is `null` which monitors the member `address`.
              tags:
                type: array
                items:
                  type: string
                  maxLength: 255
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
              request_sriov:
                type: boolean
                description: |-
                  Request that an SR-IOV VF be used for the member network port. Defaults to
                  `false`.

                  **New in version 2.29**
              tenant_id:
                type: string
                maxLength: 36
            description: |-
              Defines mandatory and optional attributes of a POST request.
            required:
              - protocol_port
              - address
    LbaasPoolsMemberCreateResponse:
      type: object
      description: Base type for complex types
      properties:
        member:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the member.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the backend member server.
            protocol_port:
              type: integer
              description: |-
                The protocol port number the backend member server is listening on.
            weight:
              type: integer
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
            backup:
              type: boolean
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
            subnet_id:
              type: string
              format: uuid
              description: |-
                The subnet ID the member service is accessible from.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            monitor_address:
              type: string
              format: ipaddress
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
            monitor_port:
              type: integer
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            vnic_type:
              type: string
              description: |-
                The member vNIC type used for the member port. One of `normal` or
                `direct`.

                **New in version 2.29**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    MemberRootPUT:
      type: object
      description: Base type for complex types
      properties:
        member:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
            weight:
              type: integer
              maximum: 256
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
            backup:
              type: boolean
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
            monitor_port:
              type: integer
              minimum: 1
              maximum: 65535
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
            monitor_address:
              type: string
              format: ipaddress
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
            tags:
              type: array
              items:
                type: string
                maxLength: 255
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
          description: |-
            Defines attributes that are acceptable of a PUT request.
    LbaasPoolsMemberUpdateResponse:
      type: object
      description: Base type for complex types
      properties:
        member:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the member.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            operating_status:
              type: string
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
            provisioning_status:
              type: string
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
            admin_state_up:
              type: boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            address:
              type: string
              format: ipaddress
              description: |-
                The IP address of the backend member server.
            protocol_port:
              type: integer
              description: |-
                The protocol port number the backend member server is listening on.
            weight:
              type: integer
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
            backup:
              type: boolean
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
            subnet_id:
              type: string
              format: uuid
              description: |-
                The subnet ID the member service is accessible from.
            project_id:
              type: string
              description: |-
                The ID of the project owning this resource.
            created_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was created.
            updated_at:
              type: string
              format: date-time
              description: |-
                The UTC date and timestamp when the resource was last updated.
            monitor_address:
              type: string
              format: ipaddress
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
            monitor_port:
              type: integer
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
            tags:
              type: array
              items:
                type: string
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
            vnic_type:
              type: string
              description: |-
                The member vNIC type used for the member port. One of `normal` or
                `direct`.

                **New in version 2.29**
            tenant_id:
              type: string
              maxLength: 36
          description: |-
            Defines which attributes are to be shown on any response.
    LbaasListenersStatsResponse:
      type: object
      description: Base type for complex types
      properties:
        stats:
          type: object
          properties:
            bytes_in:
              type: integer
              description: |-
                The total bytes received.
            bytes_out:
              type: integer
              description: |-
                The total bytes sent.
            active_connections:
              type: integer
              description: |-
                The currently active connections.
            total_connections:
              type: integer
              description: |-
                The total connections handled.
            request_errors:
              type: integer
              description: |-
                The total requests that were unable to be fulfilled.
          description: |-
            A statistics object.
    LbaasLoadbalancersStatsResponse:
      type: object
      description: Base type for complex types
      properties:
        stats:
          type: object
          properties:
            bytes_in:
              type: integer
              description: |-
                The total bytes received.
            bytes_out:
              type: integer
              description: |-
                The total bytes sent.
            active_connections:
              type: integer
              description: |-
                The currently active connections.
            total_connections:
              type: integer
              description: |-
                The total connections handled.
            request_errors:
              type: integer
              description: |-
                The total requests that were unable to be fulfilled.
          description: |-
            A statistics object.
    LbaasLoadbalancersStatusResponse:
      type: object
      description: Base type for complex types
      properties:
        statuses:
          type: object
          properties:
            loadbalancer:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: |-
                    The ID of the resource.
                name:
                  type: string
                  description: |-
                    Human-readable name of the resource.
                operating_status:
                  type: string
                  description: |-
                    The operating status of the resource. See [Operating Status Codes](#op-status).
                provisioning_status:
                  type: string
                  description: |-
                    The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                listeners:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      operating_status:
                        type: string
                      provisioning_status:
                        type: string
                      pools:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            provisioning_status:
                              type: string
                            operating_status:
                              type: string
                            health_monitor:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                type:
                                  type: string
                                  description: |-
                                    The type associated with the resource.
                                provisioning_status:
                                  type: string
                                operating_status:
                                  type: string
                              description: |-
                                Defines which attributes are to be shown on status response.
                            members:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                  name:
                                    type: string
                                  operating_status:
                                    type: string
                                  provisioning_status:
                                    type: string
                                  address:
                                    type: string
                                    format: ipaddress
                                    description: |-
                                      The IP address of the resource.
                                  protocol_port:
                                    type: integer
                                    description: |-
                                      The protocol port number for the resource.
                                description: |-
                                  Defines which attributes are to be shown on status response.
                              description: |-
                                A list of members status objects.
                          description: |-
                            Defines which attributes are to be shown on status response.
                        description: |-
                          The list of pools status objects.
                    description: |-
                      Defines which attributes are to be shown on status response.
                  description: |-
                    A list of listener status objects.
              description: |-
                A load balancer status object.
          description: |-
            The status tree of a load balancer object contains all provisioning and
            operating statuses for its children.
    LbaasLoadbalancersFailoverFailoverRequest:
      type: 'null'
    LbaasLoadbalancersFailoverResponse:
      type: object
      description: Response of the lbaas/loadbalancers/loadbalancer_id/failover:put
        operation
  parameters:
    lbaas_loadbalancers_loadbalancer_id:
      in: path
      name: loadbalancer_id
      description: loadbalancer_id parameter for /v2/lbaas/loadbalancers/{loadbalancer_id}
        API
      schema:
        type: string
      required: true
    lbaas_loadbalancers_availability_zone:
      in: query
      name: availability_zone
      description: An availability zone name.
      schema:
        type: string
        description: An availability zone name.
    lbaas_loadbalancers_created_at:
      in: query
      name: created_at
      description: The UTC date and timestamp when the resource was created.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was created.
    lbaas_loadbalancers_description:
      in: query
      name: description
      description: A human-readable description for the resource.
      schema:
        type: string
        description: A human-readable description for the resource.
    lbaas_loadbalancers_flavor_id:
      in: query
      name: flavor_id
      description: The ID of the flavor.
      schema:
        type: string
        format: uuid
        description: The ID of the flavor.
    lbaas_loadbalancers_id:
      in: query
      name: id
      description: The ID of the resource
      schema:
        type: string
        format: uuid
        description: The ID of the resource
    lbaas_loadbalancers_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_loadbalancers_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_loadbalancers_name:
      in: query
      name: name
      description: Human-readable name of the resource.
      schema:
        type: string
        description: Human-readable name of the resource.
    lbaas_loadbalancers_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_loadbalancers_provider:
      in: query
      name: provider
      description: Provider name for the load balancer.
      schema:
        type: string
        description: Provider name for the load balancer.
    lbaas_loadbalancers_project_id:
      in: query
      name: project_id
      description: The ID of the project owning this resource.
      schema:
        type: string
        format: uuid
        description: The ID of the project owning this resource.
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_loadbalancers_updated_at:
      in: query
      name: updated_at
      description: The UTC date and timestamp when the resource was last updated.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was last updated.
    lbaas_loadbalancers_vip_address:
      in: query
      name: vip_address
      description: The IP address of the Virtual IP (VIP).
      schema:
        type: string
        description: The IP address of the Virtual IP (VIP).
    lbaas_loadbalancers_vip_network_id:
      in: query
      name: vip_network_id
      description: The ID of the network for the Virtual IP (VIP).
      schema:
        type: string
        format: uuid
        description: The ID of the network for the Virtual IP (VIP).
    lbaas_loadbalancers_vip_port_id:
      in: query
      name: vip_port_id
      description: The ID of the Virtual IP (VIP) port.
      schema:
        type: string
        format: uuid
        description: The ID of the Virtual IP (VIP) port.
    lbaas_loadbalancers_vip_subnet_id:
      in: query
      name: vip_subnet_id
      description: The ID of the subnet for the Virtual IP (VIP).
      schema:
        type: string
        format: uuid
        description: The ID of the subnet for the Virtual IP (VIP).
    lbaas_loadbalancers_vip_qos_policy_id:
      in: query
      name: vip_qos_policy_id
      description: The ID of the QoS Policy which will apply to the Virtual IP (VIP).
      schema:
        type: string
        format: uuid
        description: The ID of the QoS Policy which will apply to the Virtual IP (VIP).
    lbaas_loadbalancers_provisioning_status:
      in: query
      name: provisioning_status
      description: The provisioning status of the resource.
      schema:
        type: string
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_UPDATE
          - PENDING_DELETE
    lbaas_loadbalancers_operating_status:
      in: query
      name: operating_status
      description: The operating status of the resource.
      schema:
        type: string
        description: The operating status of the resource.
        enum:
          - ONLINE
          - DRAINING
          - OFFLINE
          - DEGRADED
          - ERROR
          - NO_MONITOR
    lbaas_loadbalancers_tags:
      in: query
      name: tags
      description: Return the list of entities that have this tag or tags.
      schema:
        type: string
    lbaas_loadbalancers_tags-any:
      in: query
      name: tags-any
      description: Return the list of entities that have one or more of the given
        tags.
      schema:
        type: string
    lbaas_loadbalancers_not-tags:
      in: query
      name: not-tags
      description: Return the list of entities that do not have one or more of the
        given tags.
      schema:
        type: string
    lbaas_loadbalancers_not-tags-any:
      in: query
      name: not-tags-any
      description: Return the list of entities that do not have at least one of the
        given tags.
      schema:
        type: string
    lbaas_listeners_listener_id:
      in: path
      name: listener_id
      description: listener_id parameter for /v2/lbaas/listeners/{listener_id} API
      schema:
        type: string
      required: true
    lbaas_listeners_admin_state_up:
      in: query
      name: admin_state_up
      description: The administrative state of the resource
      schema:
        type: boolean
        description: The administrative state of the resource
    lbaas_listeners_alpn_protocols:
      in: query
      name: alpn_protocols
      description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
        h2'
      schema:
        type: string
        description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
          h2'
    lbaas_listeners_connection_limit:
      in: query
      name: connection_limit
      description: The maximum number of connections permitted for this listener.
        Default value is -1 which represents infinite connections or a default value
        defined by the provider driver.
      schema:
        type: string
        description: The maximum number of connections permitted for this listener.
          Default value is -1 which represents infinite connections or a default value
          defined by the provider driver.
    lbaas_listeners_created_at:
      in: query
      name: created_at
      description: The UTC date and timestamp when the resource was created.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was created.
    lbaas_listeners_default_pool_id:
      in: query
      name: default_pool_id
      description: The ID of the pool used by the listener if no L7 policies match.
      schema:
        type: string
        description: The ID of the pool used by the listener if no L7 policies match.
    lbaas_listeners_description:
      in: query
      name: description
      description: A human-readable description for the resource.
      schema:
        type: string
        description: A human-readable description for the resource.
    lbaas_listeners_hsts_include_subdomains:
      in: query
      name: hsts_include_subdomains
      description: Defines whether the includeSubDomains directive should be added
        to the Strict-Transport-Security HTTP response header.
      schema:
        type: boolean
        description: Defines whether the includeSubDomains directive should be added
          to the Strict-Transport-Security HTTP response header.
    lbaas_listeners_hsts_max_age:
      in: query
      name: hsts_max_age
      description: The value of the max_age directive for the Strict-Transport-Security
        HTTP response header.
      schema:
        type: integer
        description: The value of the max_age directive for the Strict-Transport-Security
          HTTP response header.
    lbaas_listeners_hsts_preload:
      in: query
      name: hsts_preload
      description: Defines whether the preload directive should be added to the Strict-Transport-Security
        HTTP response header.
      schema:
        type: boolean
        description: Defines whether the preload directive should be added to the
          Strict-Transport-Security HTTP response header.
    lbaas_listeners_id:
      in: query
      name: id
      description: The ID of the resource
      schema:
        type: string
        format: uuid
        description: The ID of the resource
    lbaas_listeners_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_listeners_load_balancer_id:
      in: query
      name: load_balancer_id
      description: Load balancer ID
      schema:
        type: string
        description: Load balancer ID
    lbaas_listeners_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_listeners_name:
      in: query
      name: name
      description: Human-readable name of the resource.
      schema:
        type: string
        description: Human-readable name of the resource.
    lbaas_listeners_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_listeners_project_id:
      in: query
      name: project_id
      description: The ID of the project owning this resource.
      schema:
        type: string
        description: The ID of the project owning this resource.
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_listeners_protocol:
      in: query
      name: protocol
      description: The protocol for the resource.
      schema:
        type: string
        description: The protocol for the resource.
        enum:
          - HTTP
          - HTTPS
          - SCTP
          - PROMETHEUS
          - TCP
          - TERMINATED_HTTPS
          - UDP
    lbaas_listeners_protocol_port:
      in: query
      name: protocol_port
      description: The protocol port number for the resource.
      schema:
        type: integer
        description: The protocol port number for the resource.
    lbaas_listeners_timeout_client_data:
      in: query
      name: timeout_client_data
      description: Frontend client inactivity timeout in milliseconds.
      schema:
        type: integer
        description: Frontend client inactivity timeout in milliseconds.
    lbaas_listeners_timeout_member_connect:
      in: query
      name: timeout_member_connect
      description: Backend member connection timeout in milliseconds.
      schema:
        type: integer
        description: Backend member connection timeout in milliseconds.
    lbaas_listeners_timeout_member_data:
      in: query
      name: timeout_member_data
      description: Backend member inactivity timeout in milliseconds.
      schema:
        type: integer
        description: Backend member inactivity timeout in milliseconds.
    lbaas_listeners_timeout_tcp_inspect:
      in: query
      name: timeout_tcp_inspect
      description: Time, in milliseconds, to wait for additional TCP packets for content
        inspection.
      schema:
        type: integer
        description: Time, in milliseconds, to wait for additional TCP packets for
          content inspection.
    lbaas_listeners_tls_ciphers:
      in: query
      name: tls_ciphers
      description: 'List of ciphers in OpenSSL format '
      schema:
        type: string
        description: 'List of ciphers in OpenSSL format '
    lbaas_listeners_tls_versions:
      in: query
      name: tls_versions
      description: A list of TLS protocol versions.
      schema:
        type: string
        description: A list of TLS protocol versions.
    lbaas_listeners_updated_at:
      in: query
      name: updated_at
      description: The UTC date and timestamp when the resource was last updated.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was last updated.
    lbaas_listeners_provisioning_status:
      in: query
      name: provisioning_status
      description: The provisioning status of the resource.
      schema:
        type: string
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_UPDATE
          - PENDING_DELETE
    lbaas_listeners_operating_status:
      in: query
      name: operating_status
      description: The operating status of the resource.
      schema:
        type: string
        description: The operating status of the resource.
        enum:
          - ONLINE
          - DRAINING
          - OFFLINE
          - DEGRADED
          - ERROR
          - NO_MONITOR
    lbaas_listeners_tags:
      in: query
      name: tags
      description: Return the list of entities that have this tag or tags.
      schema:
        type: string
    lbaas_listeners_tags-any:
      in: query
      name: tags-any
      description: Return the list of entities that have one or more of the given
        tags.
      schema:
        type: string
    lbaas_listeners_not-tags:
      in: query
      name: not-tags
      description: Return the list of entities that do not have one or more of the
        given tags.
      schema:
        type: string
    lbaas_listeners_not-tags-any:
      in: query
      name: not-tags-any
      description: Return the list of entities that do not have at least one of the
        given tags.
      schema:
        type: string
    lbaas_pools_pool_id:
      in: path
      name: pool_id
      description: pool_id parameter for /v2/lbaas/pools/{pool_id} API
      schema:
        type: string
      required: true
    lbaas_pools_admin_state_up:
      in: query
      name: admin_state_up
      description: The administrative state of the resource
      schema:
        type: boolean
        description: The administrative state of the resource
    lbaas_pools_alpn_protocols:
      in: query
      name: alpn_protocols
      description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
        h2'
      schema:
        type: string
        description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
          h2'
    lbaas_pools_created_at:
      in: query
      name: created_at
      description: The UTC date and timestamp when the resource was created.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was created.
    lbaas_pools_description:
      in: query
      name: description
      description: A human-readable description for the resource.
      schema:
        type: string
        description: A human-readable description for the resource.
    lbaas_pools_id:
      in: query
      name: id
      description: The ID of the resource
      schema:
        type: string
        format: uuid
        description: The ID of the resource
    lbaas_pools_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_pools_loadbalancer_id:
      in: query
      name: loadbalancer_id
      description: The ID of the load balancer for the pool.
      schema:
        type: string
        format: uuid
        description: The ID of the load balancer for the pool.
    lbaas_pools_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_pools_name:
      in: query
      name: name
      description: Human-readable name of the resource.
      schema:
        type: string
        description: Human-readable name of the resource.
    lbaas_pools_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_pools_project_id:
      in: query
      name: project_id
      description: The ID of the project owning this resource.
      schema:
        type: string
        description: The ID of the project owning this resource.
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_pools_tls_enabled:
      in: query
      name: tls_enabled
      schema:
        type: boolean
    lbaas_pools_tls_ciphers:
      in: query
      name: tls_ciphers
      description: 'List of ciphers in OpenSSL format '
      schema:
        type: string
        description: 'List of ciphers in OpenSSL format '
    lbaas_pools_tls_versions:
      in: query
      name: tls_versions
      description: A list of TLS protocol versions.
      schema:
        type: string
        description: A list of TLS protocol versions.
    lbaas_pools_updated_at:
      in: query
      name: updated_at
      description: The UTC date and timestamp when the resource was last updated.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was last updated.
    lbaas_pools_provisioning_status:
      in: query
      name: provisioning_status
      description: The provisioning status of the resource.
      schema:
        type: string
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_UPDATE
          - PENDING_DELETE
    lbaas_pools_operating_status:
      in: query
      name: operating_status
      description: The operating status of the resource.
      schema:
        type: string
        description: The operating status of the resource.
        enum:
          - ONLINE
          - DRAINING
          - OFFLINE
          - DEGRADED
          - ERROR
          - NO_MONITOR
    lbaas_pools_tags:
      in: query
      name: tags
      description: Return the list of entities that have this tag or tags.
      schema:
        type: string
    lbaas_pools_tags-any:
      in: query
      name: tags-any
      description: Return the list of entities that have one or more of the given
        tags.
      schema:
        type: string
    lbaas_pools_not-tags:
      in: query
      name: not-tags
      description: Return the list of entities that do not have one or more of the
        given tags.
      schema:
        type: string
    lbaas_pools_not-tags-any:
      in: query
      name: not-tags-any
      description: Return the list of entities that do not have at least one of the
        given tags.
      schema:
        type: string
    lbaas_l7policies_l7policy_id:
      in: path
      name: l7policy_id
      description: l7policy_id parameter for /v2/lbaas/l7policies/{l7policy_id} API
      schema:
        type: string
      required: true
    lbaas_l7policies_action:
      in: query
      name: action
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_admin_state_up:
      in: query
      name: admin_state_up
      description: ''
      schema:
        type: boolean
        description: ''
    lbaas_l7policies_description:
      in: query
      name: description
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_l7policies_listener_id:
      in: query
      name: listener_id
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_l7policies_name:
      in: query
      name: name
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_operating_status:
      in: query
      name: operating_status
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_l7policies_position:
      in: query
      name: position
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_project_id:
      in: query
      name: project_id
      description: ''
      schema:
        type: string
        description: ''
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_l7policies_provisioning_status:
      in: query
      name: provisioning_status
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_redirect_pool_id:
      in: query
      name: redirect_pool_id
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_redirect_prefix:
      in: query
      name: redirect_prefix
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_redirect_url:
      in: query
      name: redirect_url
      description: ''
      schema:
        type: string
        description: ''
    lbaas_healthmonitors_healthmonitor_id:
      in: path
      name: healthmonitor_id
      description: healthmonitor_id parameter for /v2/lbaas/healthmonitors/{healthmonitor_id}
        API
      schema:
        type: string
      required: true
    lbaas_healthmonitors_admin_state_up:
      in: query
      name: admin_state_up
      description: The administrative state of the resource
      schema:
        type: boolean
        description: The administrative state of the resource
    lbaas_healthmonitors_created_at:
      in: query
      name: created_at
      description: The UTC date and timestamp when the resource was created.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was created.
    lbaas_healthmonitors_delay:
      in: query
      name: delay
      description: The time, in seconds, between sending probes to members.
      schema:
        type: integer
        description: The time, in seconds, between sending probes to members.
    lbaas_healthmonitors_description:
      in: query
      name: description
      description: A human-readable description for the resource.
      schema:
        type: string
        description: A human-readable description for the resource.
    lbaas_healthmonitors_expected_codes:
      in: query
      name: expected_codes
      description: The list of HTTP status codes expected in response from the member
        to declare it healthy.
      schema:
        type: string
        description: The list of HTTP status codes expected in response from the member
          to declare it healthy.
    lbaas_healthmonitors_http_method:
      in: query
      name: http_method
      description: The HTTP method that the health monitor uses for requests.
      schema:
        type: string
        description: The HTTP method that the health monitor uses for requests.
        enum:
          - CONNECT
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          - TRACE
    lbaas_healthmonitors_id:
      in: query
      name: id
      description: The ID of the resource
      schema:
        type: string
        format: uuid
        description: The ID of the resource
    lbaas_healthmonitors_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_healthmonitors_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_healthmonitors_max_retries:
      in: query
      name: max_retries
      description: The number of successful checks before changing the operating status
        of the member to ONLINE. A valid value is from 1 to 10.
      schema:
        type: integer
        description: The number of successful checks before changing the operating
          status of the member to ONLINE. A valid value is from 1 to 10.
    lbaas_healthmonitors_max_retries_down:
      in: query
      name: max_retries_down
      description: The number of allowed check failures before changing the operating
        status of the member to ERROR. A valid value is from 1 to 10.
      schema:
        type: integer
        description: The number of allowed check failures before changing the operating
          status of the member to ERROR. A valid value is from 1 to 10.
    lbaas_healthmonitors_name:
      in: query
      name: name
      description: Human-readable name of the resource.
      schema:
        type: string
        description: Human-readable name of the resource.
    lbaas_healthmonitors_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_healthmonitors_pool_id:
      in: query
      name: pool_id
      description: The ID of the pool.
      schema:
        type: string
        description: The ID of the pool.
    lbaas_healthmonitors_project_id:
      in: query
      name: project_id
      description: The ID of the project owning this resource.
      schema:
        type: string
        description: The ID of the project owning this resource.
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_healthmonitors_timeout:
      in: query
      name: timeout
      description: The maximum time, in seconds, that a monitor waits to connect before
        it times out.
      schema:
        type: integer
        description: The maximum time, in seconds, that a monitor waits to connect
          before it times out.
    lbaas_healthmonitors_type:
      in: query
      name: type
      description: The type of health monitor.
      schema:
        type: string
        description: The type of health monitor.
        enum:
          - HTTP
          - HTTPS
          - PING
          - SCTP
          - TCP
          - TLS-HELLO
          - UDP-CONNECT
    lbaas_healthmonitors_updated_at:
      in: query
      name: updated_at
      description: The UTC date and timestamp when the resource was last updated.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was last updated.
    lbaas_healthmonitors_url_path:
      in: query
      name: url_path
      description: The HTTP URL path of the request sent by the monitor to test the
        health of a backend member. Must be a string that begins with a forward slash
        (/).
      schema:
        type: string
        description: The HTTP URL path of the request sent by the monitor to test
          the health of a backend member. Must be a string that begins with a forward
          slash (/).
    lbaas_healthmonitors_provisioning_status:
      in: query
      name: provisioning_status
      description: The provisioning status of the resource.
      schema:
        type: string
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_UPDATE
          - PENDING_DELETE
    lbaas_healthmonitors_operating_status:
      in: query
      name: operating_status
      description: The operating status of the resource.
      schema:
        type: string
        description: The operating status of the resource.
        enum:
          - ONLINE
          - DRAINING
          - OFFLINE
          - DEGRADED
          - ERROR
          - NO_MONITOR
    lbaas_healthmonitors_tags:
      in: query
      name: tags
      description: Return the list of entities that have this tag or tags.
      schema:
        type: string
    lbaas_healthmonitors_tags-any:
      in: query
      name: tags-any
      description: Return the list of entities that have one or more of the given
        tags.
      schema:
        type: string
    lbaas_healthmonitors_not-tags:
      in: query
      name: not-tags
      description: Return the list of entities that do not have one or more of the
        given tags.
      schema:
        type: string
    lbaas_healthmonitors_not-tags-any:
      in: query
      name: not-tags-any
      description: Return the list of entities that do not have at least one of the
        given tags.
      schema:
        type: string
    lbaas_quotas_project_id:
      in: path
      name: project_id
      description: project_id parameter for /v2/lbaas/quotas/{project_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_providers_description:
      in: query
      name: description
      description: ''
      schema:
        type: string
        description: ''
    lbaas_providers_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_providers_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_providers_name:
      in: query
      name: name
      description: ''
      schema:
        type: string
        description: ''
    lbaas_providers_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_flavors_flavor_id:
      in: path
      name: flavor_id
      description: flavor_id parameter for /v2/lbaas/flavors/{flavor_id} API
      schema:
        type: string
      required: true
    lbaas_flavors_description:
      in: query
      name: description
      description: ''
      schema:
        type: string
        description: ''
    lbaas_flavors_enabled:
      in: query
      name: enabled
      description: ''
      schema:
        type: boolean
        description: ''
    lbaas_flavors_flavor_profile_id:
      in: query
      name: flavor_profile_id
      schema:
        type: string
    lbaas_flavors_id:
      in: query
      name: id
      description: ''
      schema:
        type: string
        description: ''
    lbaas_flavors_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_flavors_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_flavors_name:
      in: query
      name: name
      description: ''
      schema:
        type: string
        description: ''
    lbaas_flavors_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_flavorprofiles_flavorprofile_id:
      in: path
      name: flavorprofile_id
      description: flavorprofile_id parameter for /v2/lbaas/flavorprofiles/{flavorprofile_id}
        API
      schema:
        type: string
      required: true
    lbaas_flavorprofiles_flavor_data:
      in: query
      name: flavor_data
      description: ''
      schema:
        type: string
        description: ''
    lbaas_flavorprofiles_id:
      in: query
      name: id
      description: ''
      schema:
        type: string
        description: ''
    lbaas_flavorprofiles_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_flavorprofiles_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_flavorprofiles_name:
      in: query
      name: name
      description: ''
      schema:
        type: string
        description: ''
    lbaas_flavorprofiles_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_flavorprofiles_provider_name:
      in: query
      name: provider_name
      description: ''
      schema:
        type: string
        description: ''
    lbaas_availabilityzones_availabilityzone_id:
      in: path
      name: availabilityzone_id
      description: availabilityzone_id parameter for /v2/lbaas/availabilityzones/{availabilityzone_id}
        API
      schema:
        type: string
      required: true
    lbaas_availabilityzones_availability_zone_profile_id:
      in: query
      name: availability_zone_profile_id
      description: ''
      schema:
        type: string
        description: ''
    lbaas_availabilityzones_description:
      in: query
      name: description
      description: ''
      schema:
        type: string
        description: ''
    lbaas_availabilityzones_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_availabilityzones_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_availabilityzones_name:
      in: query
      name: name
      description: ''
      schema:
        type: string
        description: ''
    lbaas_availabilityzones_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_availabilityzones_status:
      in: query
      name: status
      schema:
        type: string
    lbaas_availabilityzoneprofiles_availabilityzoneprofile_id:
      in: path
      name: availabilityzoneprofile_id
      description: availabilityzoneprofile_id parameter for /v2/lbaas/availabilityzoneprofiles/{availabilityzoneprofile_id}
        API
      schema:
        type: string
      required: true
    lbaas_availabilityzoneprofiles_availability_zone_data:
      in: query
      name: availability_zone_data
      schema:
        type: string
    lbaas_availabilityzoneprofiles_id:
      in: query
      name: id
      description: ''
      schema:
        type: string
        description: ''
    lbaas_availabilityzoneprofiles_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_availabilityzoneprofiles_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_availabilityzoneprofiles_name:
      in: query
      name: name
      description: ''
      schema:
        type: string
        description: ''
    lbaas_availabilityzoneprofiles_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_availabilityzoneprofiles_provider_name:
      in: query
      name: provider_name
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_amphora_id:
      in: path
      name: amphora_id
      description: amphora_id parameter for /v2/octavia/amphorae/{amphora_id} API
      schema:
        type: string
      required: true
    octavia_amphorae_cached_zone:
      in: query
      name: cached_zone
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_cert_busy:
      in: query
      name: cert_busy
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_cert_expiration:
      in: query
      name: cert_expiration
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_compute_id:
      in: query
      name: compute_id
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_compute_flavor:
      in: query
      name: compute_flavor
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_created_at:
      in: query
      name: created_at
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_ha_ip:
      in: query
      name: ha_ip
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_ha_port_id:
      in: query
      name: ha_port_id
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_id:
      in: query
      name: id
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_image_id:
      in: query
      name: image_id
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_lb_network_ip:
      in: query
      name: lb_network_ip
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    octavia_amphorae_loadbalancer_id:
      in: query
      name: loadbalancer_id
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    octavia_amphorae_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    octavia_amphorae_role:
      in: query
      name: role
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_status:
      in: query
      name: status
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_updated_at:
      in: query
      name: updated_at
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_vrrp_ip:
      in: query
      name: vrrp_ip
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_vrrp_port_id:
      in: query
      name: vrrp_port_id
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_vrrp_interface:
      in: query
      name: vrrp_interface
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_vrrp_id:
      in: query
      name: vrrp_id
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_vrrp_priority:
      in: query
      name: vrrp_priority
      description: ''
      schema:
        type: string
        description: ''
    octavia_amphorae_stats_amphora_id:
      in: path
      name: amphora_id
      description: amphora_id parameter for /v2/octavia/amphorae/{amphora_id}/stats
        API
      schema:
        type: string
      required: true
    octavia_amphorae_config_amphora_id:
      in: path
      name: amphora_id
      description: amphora_id parameter for /v2/octavia/amphorae/{amphora_id}/config
        API
      schema:
        type: string
      required: true
    octavia_amphorae_failover_amphora_id:
      in: path
      name: amphora_id
      description: amphora_id parameter for /v2/octavia/amphorae/{amphora_id}/failover
        API
      schema:
        type: string
      required: true
    lbaas_providers_flavor_capabilities_provider:
      in: path
      name: provider
      description: provider parameter for /v2/lbaas/providers/{provider}/flavor_capabilities
        API
      schema:
        type: string
      required: true
    lbaas_providers_availability_zone_capabilities_provider:
      in: path
      name: provider
      description: provider parameter for /v2/lbaas/providers/{provider}/availability_zone_capabilities
        API
      schema:
        type: string
      required: true
    lbaas_l7policies_rules_l7policy_id:
      in: path
      name: l7policy_id
      description: l7policy_id parameter for /v2/lbaas/l7policies/{l7policy_id}/rules/{rule_id}
        API
      schema:
        type: string
      required: true
    lbaas_l7policies_rules_admin_state_up:
      in: query
      name: admin_state_up
      description: ''
      schema:
        type: boolean
        description: ''
    lbaas_l7policies_rules_compare_type:
      in: query
      name: compare_type
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_created_at:
      in: query
      name: created_at
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_invert:
      in: query
      name: invert
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_key:
      in: query
      name: key
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_l7policies_rules_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_l7policies_rules_operating_status:
      in: query
      name: operating_status
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_l7policies_rules_project_id:
      in: query
      name: project_id
      description: ''
      schema:
        type: string
        description: ''
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_l7policies_rules_provisioning_status:
      in: query
      name: provisioning_status
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_rule_value:
      in: query
      name: rule_value
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_type:
      in: query
      name: type
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_updated_at:
      in: query
      name: updated_at
      description: ''
      schema:
        type: string
        description: ''
    lbaas_l7policies_rules_rule_id:
      in: path
      name: rule_id
      description: rule_id parameter for /v2/lbaas/l7policies/{l7policy_id}/rules/{rule_id}
        API
      schema:
        type: string
      required: true
    lbaas_pools_members_pool_id:
      in: path
      name: pool_id
      description: pool_id parameter for /v2/lbaas/pools/{pool_id}/members/{member_id}
        API
      schema:
        type: string
      required: true
    lbaas_pools_members_address:
      in: query
      name: address
      description: The IP address of the backend member server.
      schema:
        type: string
        description: The IP address of the backend member server.
    lbaas_pools_members_admin_state_up:
      in: query
      name: admin_state_up
      description: The administrative state of the resource
      schema:
        type: boolean
        description: The administrative state of the resource
    lbaas_pools_members_backup:
      in: query
      name: backup
      description: Is the member a backup?
      schema:
        type: boolean
        description: Is the member a backup?
    lbaas_pools_members_created_at:
      in: query
      name: created_at
      description: The UTC date and timestamp when the resource was created.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was created.
    lbaas_pools_members_description:
      in: query
      name: description
      description: A human-readable description for the resource.
      schema:
        type: string
        description: A human-readable description for the resource.
    lbaas_pools_members_id:
      in: query
      name: id
      description: The ID of the resource
      schema:
        type: string
        format: uuid
        description: The ID of the resource
    lbaas_pools_members_limit:
      in: query
      name: limit
      description: Page size
      schema:
        type: integer
        description: Page size
    lbaas_pools_members_marker:
      in: query
      name: marker
      description: ID of the last item in the previous list
      schema:
        type: string
        format: uuid
        description: ID of the last item in the previous list
    lbaas_pools_members_monitor_address:
      in: query
      name: monitor_address
      description: An alternate IP address used for health monitoring a backend member.
      schema:
        type: string
        description: An alternate IP address used for health monitoring a backend
          member.
    lbaas_pools_members_monitor_port:
      in: query
      name: monitor_port
      description: An alternate protocol port used for health monitoring a backend
        member.
      schema:
        type: string
        description: An alternate protocol port used for health monitoring a backend
          member.
    lbaas_pools_members_name:
      in: query
      name: name
      description: Human-readable name of the resource.
      schema:
        type: string
        description: Human-readable name of the resource.
    lbaas_pools_members_page_reverse:
      in: query
      name: page_reverse
      description: The page direction.
      schema:
        type: boolean
        description: The page direction.
    lbaas_pools_members_project_id:
      in: query
      name: project_id
      description: The ID of the project owning this resource.
      schema:
        type: string
        description: The ID of the project owning this resource.
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_pools_members_protocol_port:
      in: query
      name: protocol_port
      description: The protocol port number the backend member server is listening
        on.
      schema:
        type: integer
        description: The protocol port number the backend member server is listening
          on.
    lbaas_pools_members_subnet_id:
      in: query
      name: subnet_id
      description: The subnet ID the member service is accessible from.
      schema:
        type: string
        format: uuid
        description: The subnet ID the member service is accessible from.
    lbaas_pools_members_updated_at:
      in: query
      name: updated_at
      description: The UTC date and timestamp when the resource was last updated.
      schema:
        type: string
        format: date-time
        description: The UTC date and timestamp when the resource was last updated.
    lbaas_pools_members_weight:
      in: query
      name: weight
      description: The weight of a member determines the portion of requests or connections
        it services compared to the other members of the pool.
      schema:
        type: integer
        description: The weight of a member determines the portion of requests or
          connections it services compared to the other members of the pool.
    lbaas_pools_members_provisioning_status:
      in: query
      name: provisioning_status
      description: The provisioning status of the resource.
      schema:
        type: string
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_UPDATE
          - PENDING_DELETE
    lbaas_pools_members_operating_status:
      in: query
      name: operating_status
      description: The operating status of the resource.
      schema:
        type: string
        description: The operating status of the resource.
        enum:
          - ONLINE
          - DRAINING
          - OFFLINE
          - DEGRADED
          - ERROR
          - NO_MONITOR
    lbaas_pools_members_tags:
      in: query
      name: tags
      description: Return the list of entities that have this tag or tags.
      schema:
        type: string
    lbaas_pools_members_tags-any:
      in: query
      name: tags-any
      description: Return the list of entities that have one or more of the given
        tags.
      schema:
        type: string
    lbaas_pools_members_not-tags:
      in: query
      name: not-tags
      description: Return the list of entities that do not have one or more of the
        given tags.
      schema:
        type: string
    lbaas_pools_members_not-tags-any:
      in: query
      name: not-tags-any
      description: Return the list of entities that do not have at least one of the
        given tags.
      schema:
        type: string
    lbaas_pools_members_member_id:
      in: path
      name: member_id
      description: member_id parameter for /v2/lbaas/pools/{pool_id}/members/{member_id}
        API
      schema:
        type: string
      required: true
    lbaas_listeners_stats_listener_id:
      in: path
      name: listener_id
      description: listener_id parameter for /v2/lbaas/listeners/{listener_id}/stats
        API
      schema:
        type: string
      required: true
    lbaas_loadbalancers_stats_loadbalancer_id:
      in: path
      name: loadbalancer_id
      description: loadbalancer_id parameter for /v2/lbaas/loadbalancers/{loadbalancer_id}/stats
        API
      schema:
        type: string
      required: true
    lbaas_loadbalancers_status_loadbalancer_id:
      in: path
      name: loadbalancer_id
      description: loadbalancer_id parameter for /v2/lbaas/loadbalancers/{loadbalancer_id}/status
        API
      schema:
        type: string
      required: true
    lbaas_loadbalancers_failover_loadbalancer_id:
      in: path
      name: loadbalancer_id
      description: loadbalancer_id parameter for /v2/lbaas/loadbalancers/{loadbalancer_id}/failover
        API
      schema:
        type: string
      required: true
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
tags:
  - name: lbaas
  - name: load-balancers
  - name: listeners
  - name: pools
  - name: l7-policies
  - name: healthmonitors
  - name: quotas
  - name: providers
  - name: flavors
  - name: flavor-profiles
  - name: availability-zones
  - name: availability-zone-profiles
  - name: octavia
  - name: amphorae
  - name: l7-rules
  - name: members
security:
  - ApiKeyAuth: []
