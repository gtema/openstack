openapi: 3.1.0
info:
  description: |-
    Load Balancing API provided by Octavia service
  title: OpenStack Load Balancing API
  version: '2.27'
paths:
  /v2/lbaas:
    get:
      operationId: lbaas:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasGetResponse'
          description: Ok
      tags:
        - lbaas
  /v2/lbaas/availabilityzoneprofiles:
    get:
      description: |-
        Lists all Availability Zone Profiles.
      operationId: lbaas/availabilityzoneprofiles:get
      parameters:
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_availability_zone_data'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_id'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_limit'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_marker'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_name'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_page_reverse'
        - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_provider_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofilesListResponse'
          description: Ok
      tags:
        - availability-zone-profiles
    post:
      description: |-
        Creates an Availability Zone Profile.
      operationId: lbaas/availabilityzoneprofiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneProfileRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofilesCreateResponse'
          description: Ok
      tags:
        - availability-zone-profiles
  /v2/lbaas/availabilityzoneprofiles/{availabilityzoneprofile_id}:
    delete:
      description: |-
        Deletes an Availability Zone Profile
      operationId: 
        lbaas/availabilityzoneprofiles/availabilityzoneprofile_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - availability-zone-profiles
    get:
      description: |-
        Gets an Availability Zone Profile's detail.
      operationId: lbaas/availabilityzoneprofiles/availabilityzoneprofile_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofileShowResponse'
          description: Ok
      tags:
        - availability-zone-profiles
    parameters:
      - $ref: '#/components/parameters/lbaas_availabilityzoneprofiles_availabilityzoneprofile_id'
    put:
      description: |-
        Updates an Availability Zone Profile.
      operationId: lbaas/availabilityzoneprofiles/availabilityzoneprofile_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneProfileRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneprofileUpdateResponse'
          description: Ok
      tags:
        - availability-zone-profiles
  /v2/lbaas/availabilityzones:
    get:
      description: |-
        Lists all Availability Zones.
      operationId: lbaas/availabilityzones:get
      parameters:
        - $ref: '#/components/parameters/lbaas_availabilityzones_availability_zone_profile_id'
        - $ref: '#/components/parameters/lbaas_availabilityzones_description'
        - $ref: '#/components/parameters/lbaas_availabilityzones_limit'
        - $ref: '#/components/parameters/lbaas_availabilityzones_marker'
        - $ref: '#/components/parameters/lbaas_availabilityzones_name'
        - $ref: '#/components/parameters/lbaas_availabilityzones_page_reverse'
        - $ref: '#/components/parameters/lbaas_availabilityzones_status'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzonesListResponse'
          description: Ok
      tags:
        - availability-zones
    post:
      description: |-
        Creates an Availability Zone.
      operationId: lbaas/availabilityzones:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzonesCreateResponse'
          description: Ok
      tags:
        - availability-zones
  /v2/lbaas/availabilityzones/{availabilityzone_id}:
    delete:
      description: |-
        Deletes an Availability Zone
      operationId: lbaas/availabilityzones/availabilityzone_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - availability-zones
    get:
      description: |-
        Gets an Availability Zone's detail.
      operationId: lbaas/availabilityzones/availabilityzone_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneShowResponse'
          description: Ok
      tags:
        - availability-zones
    parameters:
      - $ref: '#/components/parameters/lbaas_availabilityzones_availabilityzone_id'
    put:
      operationId: lbaas/availabilityzones/availabilityzone_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityZoneRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasAvailabilityzoneUpdateResponse'
          description: Ok
      tags:
        - availability-zones
  /v2/lbaas/flavorprofiles:
    get:
      description: |-
        Lists all flavor profiles.
      operationId: lbaas/flavorprofiles:get
      parameters:
        - $ref: '#/components/parameters/lbaas_flavorprofiles_flavor_data'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_id'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_limit'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_marker'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_name'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_page_reverse'
        - $ref: '#/components/parameters/lbaas_flavorprofiles_provider_name'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofilesListResponse'
          description: Ok
      tags:
        - flavor-profiles
    post:
      description: |-
        Creates a flavor Profile.
      operationId: lbaas/flavorprofiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorProfileRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofilesCreateResponse'
          description: Ok
      tags:
        - flavor-profiles
  /v2/lbaas/flavorprofiles/{flavorprofile_id}:
    delete:
      description: |-
        Deletes a Flavor Profile
      operationId: lbaas/flavorprofiles/flavorprofile_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavor-profiles
    get:
      description: |-
        Gets a flavor profile's detail.
      operationId: lbaas/flavorprofiles/flavorprofile_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofileShowResponse'
          description: Ok
      tags:
        - flavor-profiles
    parameters:
      - $ref: '#/components/parameters/lbaas_flavorprofiles_flavorprofile_id'
    put:
      description: |-
        Updates a flavor Profile.
      operationId: lbaas/flavorprofiles/flavorprofile_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorProfileRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorprofileUpdateResponse'
          description: Ok
      tags:
        - flavor-profiles
  /v2/lbaas/flavors:
    get:
      description: |-
        Lists all flavors.
      operationId: lbaas/flavors:get
      parameters:
        - $ref: '#/components/parameters/lbaas_flavors_description'
        - $ref: '#/components/parameters/lbaas_flavors_enabled'
        - $ref: '#/components/parameters/lbaas_flavors_flavor_profile_id'
        - $ref: '#/components/parameters/lbaas_flavors_id'
        - $ref: '#/components/parameters/lbaas_flavors_limit'
        - $ref: '#/components/parameters/lbaas_flavors_marker'
        - $ref: '#/components/parameters/lbaas_flavors_name'
        - $ref: '#/components/parameters/lbaas_flavors_page_reverse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorsListResponse'
          description: Ok
      tags:
        - flavors
    post:
      description: |-
        Creates a flavor.
      operationId: lbaas/flavors:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorsCreateResponse'
          description: Ok
      tags:
        - flavors
  /v2/lbaas/flavors/{flavor_id}:
    delete:
      description: |-
        Deletes a Flavor
      operationId: lbaas/flavors/flavor_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavors
    get:
      description: |-
        Gets a flavor's detail.
      operationId: lbaas/flavors/flavor_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorShowResponse'
          description: Ok
      tags:
        - flavors
    parameters:
      - $ref: '#/components/parameters/lbaas_flavors_flavor_id'
    put:
      operationId: lbaas/flavors/flavor_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasFlavorUpdateResponse'
          description: Ok
      tags:
        - flavors
  /v2/lbaas/healthmonitors:
    get:
      description: |-
        Lists all health monitors for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list health monitors for other projects.

        The list might be empty.
      operationId: lbaas/healthmonitors:get
      parameters:
        - $ref: '#/components/parameters/lbaas_healthmonitors_admin_state_up'
        - $ref: '#/components/parameters/lbaas_healthmonitors_created_at'
        - $ref: '#/components/parameters/lbaas_healthmonitors_delay'
        - $ref: '#/components/parameters/lbaas_healthmonitors_description'
        - $ref: '#/components/parameters/lbaas_healthmonitors_expected_codes'
        - $ref: '#/components/parameters/lbaas_healthmonitors_http_method'
        - $ref: '#/components/parameters/lbaas_healthmonitors_id'
        - $ref: '#/components/parameters/lbaas_healthmonitors_limit'
        - $ref: '#/components/parameters/lbaas_healthmonitors_marker'
        - $ref: '#/components/parameters/lbaas_healthmonitors_max_retries'
        - $ref: '#/components/parameters/lbaas_healthmonitors_max_retries_down'
        - $ref: '#/components/parameters/lbaas_healthmonitors_name'
        - $ref: '#/components/parameters/lbaas_healthmonitors_not-tags'
        - $ref: '#/components/parameters/lbaas_healthmonitors_not-tags-any'
        - $ref: '#/components/parameters/lbaas_healthmonitors_operating_status'
        - $ref: '#/components/parameters/lbaas_healthmonitors_page_reverse'
        - $ref: '#/components/parameters/lbaas_healthmonitors_pool_id'
        - $ref: '#/components/parameters/lbaas_healthmonitors_project_id'
        - $ref: '#/components/parameters/lbaas_healthmonitors_provisioning_status'
        - $ref: '#/components/parameters/lbaas_healthmonitors_tags'
        - $ref: '#/components/parameters/lbaas_healthmonitors_tags-any'
        - $ref: '#/components/parameters/lbaas_healthmonitors_timeout'
        - $ref: '#/components/parameters/lbaas_healthmonitors_type'
        - $ref: '#/components/parameters/lbaas_healthmonitors_updated_at'
        - $ref: '#/components/parameters/lbaas_healthmonitors_url_path'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorsListResponse'
          description: Ok
      summary: List Health Monitors
      tags:
        - healthmonitors
    post:
      description: |-
        Creates a health monitor on a pool.

        Health monitors define how the load balancer monitors backend servers
        to determine if they are available to service requests.

        This operation provisions a new health monitor by using the configuration that
        you define in the request object. After the API validates the request and
        starts the provisioning process, the API returns a response object that
        contains a unique ID and the status of provisioning the health monitor.

        In the response, the health monitor [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/healthmonitors/{healthmonitor_id}` to view the progress of
        the provisioning operation. When the health monitor status changes
        to `ACTIVE`, the health monitor is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Specifying a project_id is deprecated. The health monitor will inherit
        the project_id of the parent load balancer.

        At a minimum, you must specify these health monitor attributes:

        Some attributes receive default values if you omit them from the request:

        To create a health monitor, the parent load balancer must have an `ACTIVE`
        provisioning status.
      operationId: lbaas/healthmonitors:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthMonitorRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorsCreateResponse'
          description: Ok
      summary: Create Health Monitor
      tags:
        - healthmonitors
  /v2/lbaas/healthmonitors/{healthmonitor_id}:
    delete:
      description: |-
        Removes a health monitor and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/healthmonitors/healthmonitor_id:delete
      responses:
        '204':
          description: Ok
      summary: Remove a Health Monitor
      tags:
        - healthmonitors
    get:
      description: |-
        Shows the details of a health monitor.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/healthmonitors/healthmonitor_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorShowResponse'
          description: Ok
      summary: Show Health Monitor details
      tags:
        - healthmonitors
    parameters:
      - $ref: '#/components/parameters/lbaas_healthmonitors_healthmonitor_id'
    put:
      description: |-
        Update an existing health monitor.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the health monitor
        provisioning status is `ACTIVE`. If the status is `PENDING_UPDATE`,
        use a GET operation to poll the health monitor object for changes.

        This operation returns the updated health monitor object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/healthmonitors/healthmonitor_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthMonitorRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasHealthmonitorUpdateResponse'
          description: Ok
      summary: Update a Health Monitor
      tags:
        - healthmonitors
  /v2/lbaas/l7policies:
    get:
      description: |-
        Lists all L7 policies for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list L7 policies for other projects.

        The list might be empty.
      operationId: lbaas/l7policies:get
      parameters:
        - $ref: '#/components/parameters/lbaas_l7policies_action'
        - $ref: '#/components/parameters/lbaas_l7policies_admin_state_up'
        - $ref: '#/components/parameters/lbaas_l7policies_description'
        - $ref: '#/components/parameters/lbaas_l7policies_limit'
        - $ref: '#/components/parameters/lbaas_l7policies_listener_id'
        - $ref: '#/components/parameters/lbaas_l7policies_marker'
        - $ref: '#/components/parameters/lbaas_l7policies_name'
        - $ref: '#/components/parameters/lbaas_l7policies_operating_status'
        - $ref: '#/components/parameters/lbaas_l7policies_page_reverse'
        - $ref: '#/components/parameters/lbaas_l7policies_position'
        - $ref: '#/components/parameters/lbaas_l7policies_project_id'
        - $ref: '#/components/parameters/lbaas_l7policies_provisioning_status'
        - $ref: '#/components/parameters/lbaas_l7policies_redirect_pool_id'
        - $ref: '#/components/parameters/lbaas_l7policies_redirect_prefix'
        - $ref: '#/components/parameters/lbaas_l7policies_redirect_url'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesListResponse'
          description: Ok
      summary: List L7 Policies
      tags:
        - l7-policies
    post:
      description: |-
        Creates a L7 policy.

        This operation provisions a new L7 policy by using the
        configuration that you define in the request object. After the API
        validates the request and starts the provisioning process, the API
        returns a response object that contains a unique ID and the status
        of provisioning the L7 policy.

        In the response, the L7 policy [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/l7policies/{l7policy_id}` to view the progress of
        the provisioning operation. When the L7 policy status changes
        to `ACTIVE`, the L7 policy is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        All the rules associated with a given policy are logically ANDead together. A
        request must match all the policy’s rules to match the policy.

        If you need to express a logical OR operation between rules, then do this by
        creating multiple policies with the same action.

        If a new policy is created with a position that matches that of an existing
        policy, then the new policy is inserted at the given position.

        L7 policies with `action` of `REDIRECT_TO_URL` will return the default HTTP
        `Found (302)` response code with the `redirect_url`. Also, specify
        `redirect_http_code` to configure the needed HTTP response code, such as,
        301, 302, 303, 307 and 308.

        L7 policies with `action` of `REJECT` will return a `Forbidden (403)`
        response code to the requester.
      operationId: lbaas/l7policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7PolicyRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesCreateResponse'
          description: Ok
      summary: Create an L7 Policy
      tags:
        - l7-policies
  /v2/lbaas/l7policies/{l7policy_id}:
    delete:
      description: |-
        Removes a L7 policy and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/l7policies/l7policy_id:delete
      responses:
        '204':
          description: Ok
      summary: Remove a L7 Policy
      tags:
        - l7-policies
    get:
      description: |-
        Shows the details of a L7 policy.

        If you are not an administrative user and the L7 policy object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/l7policies/l7policy_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PolicyGetResponse'
          description: Ok
      summary: Show L7 Policy details
      tags:
        - l7-policies
    parameters:
      - $ref: '#/components/parameters/lbaas_l7policies_l7policy_id'
    put:
      description: |-
        Updates a L7 policy.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the L7 policy
        provisioning status is `ACTIVE`. If the status is
        `PENDING_UPDATE`, use a GET operation to poll the L7 policy
        object for changes.

        This operation returns the updated L7 policy object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.

        If a policy is updated with a position that matches that of an existing
        policy, then the updated policy is inserted at the given position.
      operationId: lbaas/l7policies/l7policy_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7PolicyRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PolicyUpdateResponse'
          description: Ok
      summary: Update a L7 Policy
      tags:
        - l7-policies
  /v2/lbaas/l7policies/{l7policy_id}/rules:
    get:
      description: |-
        Lists all L7 rules for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list L7 policies for other projects.

        The list might be empty.
      operationId: lbaas/l7policies/l7policy_id/rules:get
      parameters:
        - $ref: '#/components/parameters/lbaas_l7policies_rules_admin_state_up'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_compare_type'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_created_at'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_invert'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_key'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_limit'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_marker'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_operating_status'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_page_reverse'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_project_id'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_provisioning_status'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_rule_value'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_type'
        - $ref: '#/components/parameters/lbaas_l7policies_rules_updated_at'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRulesListResponse'
          description: Ok
      summary: List L7 Rules
      tags:
        - l7-rules
    parameters:
      - $ref: '#/components/parameters/lbaas_l7policies_rules_l7policy_id'
    post:
      description: |-
        Creates a L7 rule.

        This operation provisions a new L7 rule by using the
        configuration that you define in the request object. After the API
        validates the request and starts the provisioning process, the API
        returns a response object that contains a unique ID and the status
        of provisioning the L7 rule.

        In the response, the L7 rule [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/l7policies/{l7policy_id}/rules/{l7rule_id}` to view the
        progress of the provisioning operation. When the L7 rule status changes
        to `ACTIVE`, the L7 rule is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        All the rules associated with a given policy are logically ANDead together. A
        request must match all the policy’s rules to match the policy.

        If you need to express a logical OR operation between rules, then do this by
        creating multiple policies with the same action.
      operationId: lbaas/l7policies/l7policy_id/rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7RuleRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRulesCreateResponse'
          description: Ok
      summary: Create an L7 Rule
      tags:
        - l7-rules
  /v2/lbaas/l7policies/{l7policy_id}/rules/{rule_id}:
    delete:
      description: |-
        Removes a L7 rule and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/l7policies/l7policy_id/rules/rule_id:delete
      responses:
        '204':
          description: Ok
      summary: Remove a L7 Rule
      tags:
        - l7-rules
    get:
      description: |-
        Shows the details of a L7 rule.

        If you are not an administrative user and the L7 rule object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/l7policies/l7policy_id/rules/rule_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRuleCreateResponse'
          description: Ok
      summary: Show L7 Rule details
      tags:
        - l7-rules
    parameters:
      - $ref: '#/components/parameters/lbaas_l7policies_rules_l7policy_id'
      - $ref: '#/components/parameters/lbaas_l7policies_rules_rule_id'
    put:
      description: |-
        Updates a L7 rule.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the L7 rule
        provisioning status is `ACTIVE`. If the status is
        `PENDING_UPDATE`, use a GET operation to poll the L7 rule
        object for changes.

        This operation returns the updated L7 rule object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/l7policies/l7policy_id/rules/rule_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/L7RuleRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasL7PoliciesRuleUpdateResponse'
          description: Ok
      summary: Update a L7 Rule
      tags:
        - l7-rules
  /v2/lbaas/listeners:
    get:
      description: |-
        Lists all listeners for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list listeners for other projects.

        The list might be empty.
      operationId: lbaas/listeners:get
      parameters:
        - $ref: '#/components/parameters/lbaas_listeners_admin_state_up'
        - $ref: '#/components/parameters/lbaas_listeners_alpn_protocols'
        - $ref: '#/components/parameters/lbaas_listeners_connection_limit'
        - $ref: '#/components/parameters/lbaas_listeners_created_at'
        - $ref: '#/components/parameters/lbaas_listeners_default_pool_id'
        - $ref: '#/components/parameters/lbaas_listeners_description'
        - $ref: '#/components/parameters/lbaas_listeners_hsts_include_subdomains'
        - $ref: '#/components/parameters/lbaas_listeners_hsts_max_age'
        - $ref: '#/components/parameters/lbaas_listeners_hsts_preload'
        - $ref: '#/components/parameters/lbaas_listeners_id'
        - $ref: '#/components/parameters/lbaas_listeners_limit'
        - $ref: '#/components/parameters/lbaas_listeners_load_balancer_id'
        - $ref: '#/components/parameters/lbaas_listeners_marker'
        - $ref: '#/components/parameters/lbaas_listeners_name'
        - $ref: '#/components/parameters/lbaas_listeners_not-tags'
        - $ref: '#/components/parameters/lbaas_listeners_not-tags-any'
        - $ref: '#/components/parameters/lbaas_listeners_operating_status'
        - $ref: '#/components/parameters/lbaas_listeners_page_reverse'
        - $ref: '#/components/parameters/lbaas_listeners_project_id'
        - $ref: '#/components/parameters/lbaas_listeners_protocol'
        - $ref: '#/components/parameters/lbaas_listeners_protocol_port'
        - $ref: '#/components/parameters/lbaas_listeners_provisioning_status'
        - $ref: '#/components/parameters/lbaas_listeners_tags'
        - $ref: '#/components/parameters/lbaas_listeners_tags-any'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_client_data'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_member_connect'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_member_data'
        - $ref: '#/components/parameters/lbaas_listeners_timeout_tcp_inspect'
        - $ref: '#/components/parameters/lbaas_listeners_tls_ciphers'
        - $ref: '#/components/parameters/lbaas_listeners_tls_versions'
        - $ref: '#/components/parameters/lbaas_listeners_updated_at'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenersListResponse'
          description: Ok
      summary: List Listeners
      tags:
        - listeners
    post:
      description: |-
        Creates a listener for a load balancer.

        The listener configures a port and protocol for the load balancer to listen
        on for incoming requests. A load balancer may have zero or more listeners
        configured.

        This operation provisions a new listener by using the configuration that
        you define in the request object. After the API validates the request and
        starts the provisioning process, the API returns a response object that
        contains a unique ID and the status of provisioning the listener.

        In the response, the listener [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/listeners/{listener_id}` to view the progress of
        the provisioning operation. When the listener status changes
        to `ACTIVE`, the listener is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Specifying a project_id is deprecated. The listener will inherit
        the project_id of the parent load balancer.

        You can configure all documented features of the listener at creation time by
        specifying the additional elements or attributes in the request.

        To create a listener, the parent load balancer must have an `ACTIVE`
        provisioning status.
      operationId: lbaas/listeners:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListenerRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenersCreateResponse'
          description: Ok
      summary: Create Listener
      tags:
        - listeners
  /v2/lbaas/listeners/{listener_id}:
    delete:
      description: |-
        Removes a listener and its associated configuration from the project.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/listeners/listener_id:delete
      responses:
        '204':
          description: Ok
      summary: Remove a Listener
      tags:
        - listeners
    get:
      description: |-
        Shows the details of a listener.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/listeners/listener_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenerShowResponse'
          description: Ok
      summary: Show Listener details
      tags:
        - listeners
    parameters:
      - $ref: '#/components/parameters/lbaas_listeners_listener_id'
    put:
      description: |-
        Update an existing listener.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the listener provisioning
        status is `ACTIVE`. If the status is `PENDING_UPDATE`, use a GET
        operation to poll the listener object for changes.

        This operation returns the updated listener object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/listeners/listener_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListenerRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenerUpdateResponse'
          description: Ok
      summary: Update a Listener
      tags:
        - listeners
  /v2/lbaas/listeners/{listener_id}/stats:
    get:
      description: |-
        Shows the current statistics for a listener.

        This operation returns the statistics of a listener object identified
        by listener_id.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/listeners/listener_id/stats:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasListenersStatsResponse'
          description: Ok
      summary: Get Listener statistics
      tags:
        - listeners
    parameters:
      - $ref: '#/components/parameters/lbaas_listeners_stats_listener_id'
  /v2/lbaas/loadbalancers:
    get:
      description: |-
        Lists all load balancers for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list load balancers for other projects.

        The list might be empty.
      operationId: lbaas/loadbalancers:get
      parameters:
        - $ref: '#/components/parameters/lbaas_loadbalancers_availability_zone'
        - $ref: '#/components/parameters/lbaas_loadbalancers_created_at'
        - $ref: '#/components/parameters/lbaas_loadbalancers_description'
        - $ref: '#/components/parameters/lbaas_loadbalancers_flavor_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_limit'
        - $ref: '#/components/parameters/lbaas_loadbalancers_marker'
        - $ref: '#/components/parameters/lbaas_loadbalancers_name'
        - $ref: '#/components/parameters/lbaas_loadbalancers_not-tags'
        - $ref: '#/components/parameters/lbaas_loadbalancers_not-tags-any'
        - $ref: '#/components/parameters/lbaas_loadbalancers_operating_status'
        - $ref: '#/components/parameters/lbaas_loadbalancers_page_reverse'
        - $ref: '#/components/parameters/lbaas_loadbalancers_project_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_provider'
        - $ref: '#/components/parameters/lbaas_loadbalancers_provisioning_status'
        - $ref: '#/components/parameters/lbaas_loadbalancers_tags'
        - $ref: '#/components/parameters/lbaas_loadbalancers_tags-any'
        - $ref: '#/components/parameters/lbaas_loadbalancers_updated_at'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_address'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_network_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_port_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_qos_policy_id'
        - $ref: '#/components/parameters/lbaas_loadbalancers_vip_subnet_id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersListResponse'
          description: Ok
      summary: List Load Balancers
      tags:
        - load-balancers
    post:
      description: |-
        Creates a load balancer.

        This operation provisions a new load balancer by using the
        configuration that you define in the request object. After the API
        validates the request and starts the provisioning process, the API
        returns a response object that contains a unique ID and the status
        of provisioning the load balancer.

        In the response, the load balancer [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/loadbalancers/{loadbalancer_id}` to view the progress of
        the provisioning operation. When the load balancer status changes
        to `ACTIVE`, the load balancer is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Administrative users can specify a project ID that is different than
        their own to create load balancers for other projects.

        An optional `flavor_id` attribute can be used to create the load balancer
        using a pre-configured octavia flavor. Flavors are created by the operator
        to allow custom load balancer configurations, such as allocating more
        memory for the load balancer.

        An optional `vip_qos_policy_id` attribute from Neutron can be used to
        apply QoS policies on a loadbalancer VIP, also could pass a ‘null’ value to
        remove QoS policies.

        You can also specify the `provider` attribute when you create a
        load balancer. The `provider` attribute specifies which backend should
        be used to create the load balancer. This could be the default provider
        (`octavia`) or a vendor supplied `provider` if one has been installed.
        Setting both a flavor_id and a provider will result in a conflict error if
        the provider does not match the provider of the configured flavor profiles.

        Specifying a Virtual IP (VIP) is mandatory. There are three ways to specify
        a VIP network for the load balancer:

        Additional VIPs may also be specified in the `additional_vips` field, by
        providing a list of JSON objects containing a `subnet_id` and optionally
        an `ip_address`. All additional subnets must be part of the same network
        as the primary VIP.

        An optional `vip_sg_ids` attribute can be used to set custom Neutron Security
        Groups that are applied on the VIP port of the Load Balancer. When this option
        is used, Octavia does not manage the security of the Listeners, the user
        must set Security Group Rules to allow the network traffic on the VIP port.
        `vip_sg_ids` are incompatible with SR-IOV load balancer and cannot be set if
        the load balancer has a listener that uses `allowed_cidrs`.
      operationId: lbaas/loadbalancers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancerRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersCreateResponse'
          description: Ok
      summary: Create a Load Balancer
      tags:
        - load-balancers
  /v2/lbaas/loadbalancers/{loadbalancer_id}:
    delete:
      description: |-
        Removes a load balancer and its associated configuration from the project.

        The optional parameter `cascade` when defined as `true` will delete all
        child objects of the load balancer.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/loadbalancers/loadbalancer_id:delete
      parameters:
        - $ref: '#/components/parameters/lbaas_loadbalancer_cascade'
      responses:
        '204':
          description: Ok
      summary: Remove a Load Balancer
      tags:
        - load-balancers
    get:
      description: |-
        Shows the details of a load balancer.

        If you are not an administrative user and the load balancer object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/loadbalancers/loadbalancer_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancerShowResponse'
          description: Ok
      summary: Show Load Balancer details
      tags:
        - load-balancers
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_loadbalancer_id'
    put:
      description: |-
        Updates a load balancer.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the load balancer
        provisioning status is `ACTIVE`. If the status is
        `PENDING_UPDATE`, use a GET operation to poll the load balancer
        object for changes.

        This operation returns the updated load balancer object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/loadbalancers/loadbalancer_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancerRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancerUpdateResponse'
          description: Ok
      summary: Update a Load Balancer
      tags:
        - load-balancers
  /v2/lbaas/loadbalancers/{loadbalancer_id}/failover:
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_failover_loadbalancer_id'
    put:
      description: |-
        Performs a failover of a load balancer.

        This operation is only available to users with load balancer administrative
        rights.
      operationId: lbaas/loadbalancers/loadbalancer_id/failover:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LbaasLoadbalancersFailoverFailoverRequest'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersFailoverResponse'
          description: Ok
      summary: Failover a load balancer
      tags:
        - load-balancers
  /v2/lbaas/loadbalancers/{loadbalancer_id}/stats:
    get:
      description: |-
        Shows the current statistics for a load balancer.

        This operation returns the statistics of a load balancer object identified
        by loadbalancer_id.

        If you are not an administrative user and the load balancer object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/loadbalancers/loadbalancer_id/stats:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersStatsResponse'
          description: Ok
      summary: Get Load Balancer statistics
      tags:
        - load-balancers
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_stats_loadbalancer_id'
  /v2/lbaas/loadbalancers/{loadbalancer_id}/status:
    get:
      description: |-
        Shows the status tree for a load balancer.

        This operation returns a status tree for a load balancer object, by load
        balancer ID.

        `provisioning_status` is the status associated with lifecycle of the resource.
        See [Provisioning Status Codes](#prov-status) for descriptions of the status codes.

        `operating_status` is the observed status of the resource.
        See [Operating Status Codes](#op-status) for descriptions of the status codes.

        If you are not an administrative user and the load balancer object does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        If the operation succeeds, the returned element is a status tree that contains
        the load balancer and all provisioning and operating statuses for its children.
      operationId: lbaas/loadbalancers/loadbalancer_id/status:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasLoadbalancersStatusResponse'
          description: Ok
      summary: Get the Load Balancer status tree
      tags:
        - load-balancers
    parameters:
      - $ref: '#/components/parameters/lbaas_loadbalancers_status_loadbalancer_id'
  /v2/lbaas/pools:
    get:
      description: |-
        Lists all pools for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list pools for other projects.

        The list might be empty.
      operationId: lbaas/pools:get
      parameters:
        - $ref: '#/components/parameters/lbaas_pools_admin_state_up'
        - $ref: '#/components/parameters/lbaas_pools_alpn_protocols'
        - $ref: '#/components/parameters/lbaas_pools_created_at'
        - $ref: '#/components/parameters/lbaas_pools_description'
        - $ref: '#/components/parameters/lbaas_pools_id'
        - $ref: '#/components/parameters/lbaas_pools_limit'
        - $ref: '#/components/parameters/lbaas_pools_loadbalancer_id'
        - $ref: '#/components/parameters/lbaas_pools_marker'
        - $ref: '#/components/parameters/lbaas_pools_name'
        - $ref: '#/components/parameters/lbaas_pools_not-tags'
        - $ref: '#/components/parameters/lbaas_pools_not-tags-any'
        - $ref: '#/components/parameters/lbaas_pools_operating_status'
        - $ref: '#/components/parameters/lbaas_pools_page_reverse'
        - $ref: '#/components/parameters/lbaas_pools_project_id'
        - $ref: '#/components/parameters/lbaas_pools_provisioning_status'
        - $ref: '#/components/parameters/lbaas_pools_tags'
        - $ref: '#/components/parameters/lbaas_pools_tags-any'
        - $ref: '#/components/parameters/lbaas_pools_tls_ciphers'
        - $ref: '#/components/parameters/lbaas_pools_tls_enabled'
        - $ref: '#/components/parameters/lbaas_pools_tls_versions'
        - $ref: '#/components/parameters/lbaas_pools_updated_at'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsListResponse'
          description: Ok
      summary: List Pools
      tags:
        - pools
    post:
      description: |-
        Creates a pool for a load balancer.

        The pool defines how requests should be balanced across the backend
        member servers.

        This operation provisions a pool by using the configuration that
        you define in the request object. After the API validates the
        request and starts the provisioning process, the API returns a
        response object, which contains a unique ID.

        In the response, the pool [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/pools/{pool_id}` to view the progress of
        the provisioning operation. When the pool status changes
        to `ACTIVE`, the pool is successfully provisioned and
        is ready for further configuration.

        At a minimum, you must specify these pool attributes:

        Some attributes receive default values if you omit them from the
        request:

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Specifying a project_id is deprecated. The pool will inherit the
        project_id of the parent load balancer.

        You can configure all documented features of the pool at creation time by
        specifying the additional elements or attributes in the request.

        To create a pool, the parent load balancer must have an `ACTIVE`
        provisioning status.

        `SOURCE_IP_PORT` algorithm is available from version 2.13.
      operationId: lbaas/pools:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsCreateResponse'
          description: Ok
      summary: Create Pool
      tags:
        - pools
  /v2/lbaas/pools/{pool_id}:
    delete:
      description: |-
        Removes a pool and its associated configuration from the load balancer.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/pools/pool_id:delete
      responses:
        '204':
          description: Ok
      summary: Remove a Pool
      tags:
        - pools
    get:
      description: |-
        Shows the details of a pool.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/pools/pool_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolGetResponse'
          description: Ok
      summary: Show Pool details
      tags:
        - pools
    parameters:
      - $ref: '#/components/parameters/lbaas_pools_pool_id'
    put:
      description: |-
        Update an existing pool.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the pool provisioning
        status is `ACTIVE`. If the status is `PENDING_UPDATE`, use a GET
        operation to poll the pool object for changes.

        This operation returns the updated pool object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/pools/pool_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoolRootPut'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolUpdateResponse'
          description: Ok
      summary: Update a Pool
      tags:
        - pools
  /v2/lbaas/pools/{pool_id}/members:
    get:
      description: |-
        Lists all members for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list members for other projects.

        The list might be empty.
      operationId: lbaas/pools/pool_id/members:get
      parameters:
        - $ref: '#/components/parameters/lbaas_pools_members_address'
        - $ref: '#/components/parameters/lbaas_pools_members_admin_state_up'
        - $ref: '#/components/parameters/lbaas_pools_members_backup'
        - $ref: '#/components/parameters/lbaas_pools_members_created_at'
        - $ref: '#/components/parameters/lbaas_pools_members_description'
        - $ref: '#/components/parameters/lbaas_pools_members_id'
        - $ref: '#/components/parameters/lbaas_pools_members_limit'
        - $ref: '#/components/parameters/lbaas_pools_members_marker'
        - $ref: '#/components/parameters/lbaas_pools_members_monitor_address'
        - $ref: '#/components/parameters/lbaas_pools_members_monitor_port'
        - $ref: '#/components/parameters/lbaas_pools_members_name'
        - $ref: '#/components/parameters/lbaas_pools_members_not-tags'
        - $ref: '#/components/parameters/lbaas_pools_members_not-tags-any'
        - $ref: '#/components/parameters/lbaas_pools_members_operating_status'
        - $ref: '#/components/parameters/lbaas_pools_members_page_reverse'
        - $ref: '#/components/parameters/lbaas_pools_members_project_id'
        - $ref: '#/components/parameters/lbaas_pools_members_protocol_port'
        - $ref: '#/components/parameters/lbaas_pools_members_provisioning_status'
        - $ref: '#/components/parameters/lbaas_pools_members_subnet_id'
        - $ref: '#/components/parameters/lbaas_pools_members_tags'
        - $ref: '#/components/parameters/lbaas_pools_members_tags-any'
        - $ref: '#/components/parameters/lbaas_pools_members_updated_at'
        - $ref: '#/components/parameters/lbaas_pools_members_weight'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMembersListResponse'
          description: Ok
      summary: List Members
      tags:
        - members
    parameters:
      - $ref: '#/components/parameters/lbaas_pools_members_pool_id'
    post:
      description: |-
        This operation provisions a member and adds it to a pool by using
        the configuration that you define in the request object. After the
        API validates the request and starts the provisioning process, it
        returns a response object, which contains a unique ID.

        In the response, the member [provisioning status](#prov-status) is
        `ACTIVE`, `PENDING_CREATE`, or `ERROR`.

        If the status is `PENDING_CREATE`, issue GET
        `/v2/lbaas/pools/{pool_id}/members/{member_id}` to view the progress of
        the provisioning operation. When the member status changes
        to `ACTIVE`, the member is successfully provisioned and
        is ready for further configuration.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        At a minimum, you must specify these member attributes:

        Some attributes receive default values if you omit them from the
        request:

        If you omit the `subnet_id` parameter, the `vip_subnet_id` for the parent
        load balancer will be used for the member subnet UUID.

        The member `address` does not necessarily need to be a member of the
        `subnet_id` subnet. Members can be routable from the subnet specified
        either via the default route or by using `host_routes` defined on the subnet.

        Administrative users can specify a project ID that is different than
        their own to create members for other projects.

        `monitor_address` and/or `monitor_port` can be used to have the health
        monitor, if one is configured for the pool, connect to an alternate IP address
        and port when executing a health check on the member.

        To create a member, the load balancer must have an `ACTIVE`
        provisioning status.
      operationId: lbaas/pools/pool_id/members:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRootPOST'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMembersCreateResponse'
          description: Ok
      summary: Create Member
      tags:
        - members
    put:
      description: |-
        Set the state of members for a pool in one API call. This may include
        creating new members, deleting old members, and updating existing members.
        Existing members are matched based on address/port combination.

        For example, assume a pool currently has two members. These members have the
        following address/port combinations: ‘192.0.2.15:80’ and ‘192.0.2.16:80’.
        Now assume a PUT request is made that includes members with address/port
        combinations: ‘192.0.2.16:80’ and ‘192.0.2.17:80’.

        The member ‘192.0.2.15:80’ will be deleted, because it was not in the request.

        The member ‘192.0.2.16:80’ will be updated to match the request data for that
        member, because it was matched.

        The member ‘192.0.2.17:80’ will be created, because no such member existed.

        The optional parameter `additive_only` when defined as `true` will skip
        deletions for members missing from the provided list. If this were set in the
        above example, the member ‘192.0.2.15:80’ would have remained in the pool.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the updates, check that the member provisioning
        statuses are `ACTIVE` for new or updated members, and that any unspecified
        members were correctly deleted. If the statuses are `PENDING_UPDATE` or
        `PENDING_DELETE`, use GET to poll the member objects for changes.
      operationId: lbaas/pools/pool_id/members:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersRootPUT'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMembersCreateResponse'
          description: Ok
      summary: Batch Update Members
      tags:
        - members
  /v2/lbaas/pools/{pool_id}/members/{member_id}:
    delete:
      description: |-
        Removes a member and its associated configuration from the pool.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.
      operationId: lbaas/pools/pool_id/members/member_id:delete
      responses:
        '204':
          description: Ok
      summary: Remove a Member
      tags:
        - members
    get:
      description: |-
        Shows the details of a pool member.

        If you are not an administrative user and the parent load balancer does not
        belong to your project, the service returns the HTTP `Forbidden (403)`
        response code.

        This operation does not require a request body.
      operationId: lbaas/pools/pool_id/members/member_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMemberCreateResponse'
          description: Ok
      summary: Show Member details
      tags:
        - members
    parameters:
      - $ref: '#/components/parameters/lbaas_pools_members_member_id'
      - $ref: '#/components/parameters/lbaas_pools_members_pool_id'
    put:
      description: |-
        Update an existing member.

        If the request is valid, the service returns the `Accepted (202)`
        response code. To confirm the update, check that the member provisioning
        status is `ACTIVE`. If the status is `PENDING_UPDATE`, use a GET
        operation to poll the member object for changes.

        Setting the member weight to `0` means that the member will not receive
        new requests but will finish any existing connections. This “drains” the
        backend member of active connections.

        This operation returns the updated member object with the
        `ACTIVE`, `PENDING_UPDATE`, or `ERROR` provisioning status.
      operationId: lbaas/pools/pool_id/members/member_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRootPUT'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasPoolsMemberUpdateResponse'
          description: Ok
      summary: Update a Member
      tags:
        - members
  /v2/lbaas/providers:
    get:
      description: |-
        Lists all enabled provider drivers.

        Use the `fields` query parameter to control which fields are
        returned in the response body.

        The list might be empty.
      operationId: lbaas/providers:get
      parameters:
        - $ref: '#/components/parameters/lbaas_providers_description'
        - $ref: '#/components/parameters/lbaas_providers_limit'
        - $ref: '#/components/parameters/lbaas_providers_marker'
        - $ref: '#/components/parameters/lbaas_providers_name'
        - $ref: '#/components/parameters/lbaas_providers_page_reverse'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasProvidersListResponse'
          description: Ok
      summary: List Providers
      tags:
        - providers
  /v2/lbaas/providers/{provider}/availability_zone_capabilities:
    get:
      description: |-
        Shows the provider driver availability zone capabilities. These are the
        features of the provider driver that can be configured in an Octavia
        availability zone. This API returns a list of dictionaries with the name and
        description of each availability zone capability of the provider.

        The list might be empty and a provider driver may not implement this feature.

        **New in version 2.14**
      operationId: lbaas/providers/provider/availability_zone_capabilities:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasProvidersAvailability_Zone_CapabilitiesAz_CapabilitiesResponse'
          description: Ok
      summary: Show Provider Availability Zone Capabilities
      tags:
        - providers
    parameters:
      - $ref: '#/components/parameters/lbaas_providers_availability_zone_capabilities_provider'
  /v2/lbaas/providers/{provider}/flavor_capabilities:
    get:
      description: |-
        Shows the provider driver flavor capabilities. These are the features of the
        provider driver that can be configured in an Octavia flavor. This API returns
        a list of dictionaries with the name and description of each flavor capability
        of the provider.

        The list might be empty and a provider driver may not implement this feature.

        **New in version 2.6**
      operationId: lbaas/providers/provider/flavor_capabilities:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasProvidersFlavor_CapabilitiesResponse'
          description: Ok
      summary: Show Provider Flavor Capabilities
      tags:
        - providers
    parameters:
      - $ref: '#/components/parameters/lbaas_providers_flavor_capabilities_provider'
  /v2/lbaas/quotas:
    get:
      description: |-
        Lists all quotas for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to list quotas for other projects.

        If the quota is listed as `null` the quota is using the deployment default
        quota settings.

        A quota of `-1` means the quota is unlimited.

        The list might be empty.
      operationId: lbaas/quotas:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasQuotasListResponse'
          description: Ok
      summary: List Quota
      tags:
        - quotas
  /v2/lbaas/quotas/{project_id}:
    delete:
      description: |-
        Resets a project quota to use the deployment default quota.
      operationId: lbaas/quotas/project_id:delete
      responses:
        '202':
          description: Ok
      summary: Reset a Quota
      tags:
        - quotas
    get:
      description: |-
        Show the quota for the project.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        Administrative users can specify a project ID that is different than their own
        to show quota for other projects.

        A quota of `-1` means the quota is unlimited.
      operationId: lbaas/quotas/project_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasQuotaGetResponse'
          description: Ok
      summary: Show Project Quota
      tags:
        - quotas
    parameters:
      - $ref: '#/components/parameters/lbaas_quotas_project_id'
    put:
      description: |-
        Updates a quota for a project.

        If the request is valid, the service returns the `Accepted (202)`
        response code.

        This operation returns the updated quota object.

        If the quota is specified as `null` the quota will use the deployment default
        quota settings.

        Specifying a quota of `-1` means the quota is unlimited.

        Specifying a quota of `0` means the project cannot create any of the
        resource.
      operationId: lbaas/quotas/project_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaPUT'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LbaasQuotaUpdateResponse'
          description: Ok
      summary: Update a Quota
      tags:
        - quotas
  /v2/octavia:
    get:
      operationId: octavia:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaGetResponse'
          description: Ok
      tags:
        - octavia
  /v2/octavia/amphorae:
    get:
      description: |-
        Lists all amphora for the project.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        Use the `fields` query parameter to control which fields are
        returned in the response body. Additionally, you can filter results
        by using query string parameters. For information, see [Filtering and column selection](#filtering).

        The list might be empty.
      operationId: octavia/amphorae:get
      parameters:
        - $ref: '#/components/parameters/octavia_amphorae_cached_zone'
        - $ref: '#/components/parameters/octavia_amphorae_cert_busy'
        - $ref: '#/components/parameters/octavia_amphorae_cert_expiration'
        - $ref: '#/components/parameters/octavia_amphorae_compute_flavor'
        - $ref: '#/components/parameters/octavia_amphorae_compute_id'
        - $ref: '#/components/parameters/octavia_amphorae_created_at'
        - $ref: '#/components/parameters/octavia_amphorae_ha_ip'
        - $ref: '#/components/parameters/octavia_amphorae_ha_port_id'
        - $ref: '#/components/parameters/octavia_amphorae_id'
        - $ref: '#/components/parameters/octavia_amphorae_image_id'
        - $ref: '#/components/parameters/octavia_amphorae_lb_network_ip'
        - $ref: '#/components/parameters/octavia_amphorae_limit'
        - $ref: '#/components/parameters/octavia_amphorae_loadbalancer_id'
        - $ref: '#/components/parameters/octavia_amphorae_marker'
        - $ref: '#/components/parameters/octavia_amphorae_page_reverse'
        - $ref: '#/components/parameters/octavia_amphorae_role'
        - $ref: '#/components/parameters/octavia_amphorae_status'
        - $ref: '#/components/parameters/octavia_amphorae_updated_at'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_id'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_interface'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_ip'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_port_id'
        - $ref: '#/components/parameters/octavia_amphorae_vrrp_priority'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeListResponse'
          description: Ok
      summary: List Amphora
      tags:
        - amphorae
  /v2/octavia/amphorae/{amphora_id}:
    delete:
      description: |-
        Removes an amphora and its associated configuration.

        The API immediately purges any and all configuration data, depending on the
        configuration settings. You cannot recover it.

        **New in version 2.20**
      operationId: octavia/amphorae/amphora_id:delete
      responses:
        '204':
          description: Ok
      summary: Remove an Amphora
      tags:
        - amphorae
    get:
      description: |-
        Shows the details of an amphora.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        This operation does not require a request body.
      operationId: octavia/amphorae/amphora_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeShowResponse'
          description: Ok
      summary: Show Amphora details
      tags:
        - amphorae
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_amphora_id'
  /v2/octavia/amphorae/{amphora_id}/config:
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_config_amphora_id'
    put:
      description: |-
        Update the amphora agent configuration. This will push the new configuration
        to the amphora agent and will update the configuration options that are
        mutable.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        This operation does not require a request body.

        **New in version 2.7**
      operationId: octavia/amphorae/amphora_id/config:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OctaviaAmphoraeConfigConfigRequest'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeConfigResponse'
          description: Ok
      summary: Configure Amphora
      tags:
        - amphorae
  /v2/octavia/amphorae/{amphora_id}/failover:
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_failover_amphora_id'
    put:
      description: |-
        Force an amphora to failover.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        This operation does not require a request body.
      operationId: octavia/amphorae/amphora_id/failover:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OctaviaAmphoraeFailoverFailoverRequest'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeFailoverResponse'
          description: Ok
      summary: Failover Amphora
      tags:
        - amphorae
  /v2/octavia/amphorae/{amphora_id}/stats:
    get:
      description: |-
        Show the statistics for an amphora.

        If you are not an administrative user, the service returns the HTTP
        `Forbidden (403)` response code.

        Use the `fields` query parameter to control which fields are
        returned in the response body.

        **New in version 2.3**
      operationId: octavia/amphorae/amphora_id/stats:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OctaviaAmphoraeStatsResponse'
          description: Ok
      summary: Show Amphora Statistics
      tags:
        - amphorae
    parameters:
      - $ref: '#/components/parameters/octavia_amphorae_stats_amphora_id'
components:
  parameters:
    lbaas_availabilityzoneprofiles_availability_zone_data:
      in: query
      name: availability_zone_data
      schema:
        type: string
    lbaas_availabilityzoneprofiles_availabilityzoneprofile_id:
      description: availabilityzoneprofile_id parameter for 
        /v2/lbaas/availabilityzoneprofiles/{availabilityzoneprofile_id} API
      in: path
      name: availabilityzoneprofile_id
      required: true
      schema:
        type: string
    lbaas_availabilityzoneprofiles_id:
      description: ''
      in: query
      name: id
      schema:
        description: ''
        type: string
    lbaas_availabilityzoneprofiles_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_availabilityzoneprofiles_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_availabilityzoneprofiles_name:
      description: ''
      in: query
      name: name
      schema:
        description: ''
        type: string
    lbaas_availabilityzoneprofiles_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_availabilityzoneprofiles_provider_name:
      description: ''
      in: query
      name: provider_name
      schema:
        description: ''
        type: string
    lbaas_availabilityzones_availability_zone_profile_id:
      description: ''
      in: query
      name: availability_zone_profile_id
      schema:
        description: ''
        type: string
    lbaas_availabilityzones_availabilityzone_id:
      description: availabilityzone_id parameter for 
        /v2/lbaas/availabilityzones/{availabilityzone_id} API
      in: path
      name: availabilityzone_id
      required: true
      schema:
        type: string
    lbaas_availabilityzones_description:
      description: ''
      in: query
      name: description
      schema:
        description: ''
        type: string
    lbaas_availabilityzones_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_availabilityzones_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_availabilityzones_name:
      description: ''
      in: query
      name: name
      schema:
        description: ''
        type: string
    lbaas_availabilityzones_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_availabilityzones_status:
      in: query
      name: status
      schema:
        type: string
    lbaas_flavorprofiles_flavor_data:
      description: ''
      in: query
      name: flavor_data
      schema:
        description: ''
        type: string
    lbaas_flavorprofiles_flavorprofile_id:
      description: flavorprofile_id parameter for 
        /v2/lbaas/flavorprofiles/{flavorprofile_id} API
      in: path
      name: flavorprofile_id
      required: true
      schema:
        type: string
    lbaas_flavorprofiles_id:
      description: ''
      in: query
      name: id
      schema:
        description: ''
        type: string
    lbaas_flavorprofiles_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_flavorprofiles_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_flavorprofiles_name:
      description: ''
      in: query
      name: name
      schema:
        description: ''
        type: string
    lbaas_flavorprofiles_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_flavorprofiles_provider_name:
      description: ''
      in: query
      name: provider_name
      schema:
        description: ''
        type: string
    lbaas_flavors_description:
      description: ''
      in: query
      name: description
      schema:
        description: ''
        type: string
    lbaas_flavors_enabled:
      description: ''
      in: query
      name: enabled
      schema:
        description: ''
        type: boolean
    lbaas_flavors_flavor_id:
      description: flavor_id parameter for /v2/lbaas/flavors/{flavor_id} API
      in: path
      name: flavor_id
      required: true
      schema:
        type: string
    lbaas_flavors_flavor_profile_id:
      in: query
      name: flavor_profile_id
      schema:
        type: string
    lbaas_flavors_id:
      description: ''
      in: query
      name: id
      schema:
        description: ''
        type: string
    lbaas_flavors_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_flavors_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_flavors_name:
      description: ''
      in: query
      name: name
      schema:
        description: ''
        type: string
    lbaas_flavors_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_healthmonitors_admin_state_up:
      description: The administrative state of the resource
      in: query
      name: admin_state_up
      schema:
        description: The administrative state of the resource
        type: boolean
    lbaas_healthmonitors_created_at:
      description: The UTC date and timestamp when the resource was created.
      in: query
      name: created_at
      schema:
        description: The UTC date and timestamp when the resource was created.
        format: date-time
        type: string
    lbaas_healthmonitors_delay:
      description: The time, in seconds, between sending probes to members.
      in: query
      name: delay
      schema:
        description: The time, in seconds, between sending probes to members.
        type: integer
    lbaas_healthmonitors_description:
      description: A human-readable description for the resource.
      in: query
      name: description
      schema:
        description: A human-readable description for the resource.
        type: string
    lbaas_healthmonitors_expected_codes:
      description: The list of HTTP status codes expected in response from the 
        member to declare it healthy.
      in: query
      name: expected_codes
      schema:
        description: The list of HTTP status codes expected in response from the
          member to declare it healthy.
        type: string
    lbaas_healthmonitors_healthmonitor_id:
      description: healthmonitor_id parameter for 
        /v2/lbaas/healthmonitors/{healthmonitor_id} API
      in: path
      name: healthmonitor_id
      required: true
      schema:
        type: string
    lbaas_healthmonitors_http_method:
      description: The HTTP method that the health monitor uses for requests.
      in: query
      name: http_method
      schema:
        description: The HTTP method that the health monitor uses for requests.
        enum:
          - CONNECT
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          - TRACE
        type: string
    lbaas_healthmonitors_id:
      description: The ID of the resource
      in: query
      name: id
      schema:
        description: The ID of the resource
        format: uuid
        type: string
    lbaas_healthmonitors_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_healthmonitors_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_healthmonitors_max_retries:
      description: The number of successful checks before changing the operating
        status of the member to ONLINE. A valid value is from 1 to 10.
      in: query
      name: max_retries
      schema:
        description: The number of successful checks before changing the 
          operating status of the member to ONLINE. A valid value is from 1 to 
          10.
        type: integer
    lbaas_healthmonitors_max_retries_down:
      description: The number of allowed check failures before changing the 
        operating status of the member to ERROR. A valid value is from 1 to 10.
      in: query
      name: max_retries_down
      schema:
        description: The number of allowed check failures before changing the 
          operating status of the member to ERROR. A valid value is from 1 to 
          10.
        type: integer
    lbaas_healthmonitors_name:
      description: Human-readable name of the resource.
      in: query
      name: name
      schema:
        description: Human-readable name of the resource.
        type: string
    lbaas_healthmonitors_not-tags:
      description: Return the list of entities that do not have one or more of 
        the given tags.
      in: query
      name: not-tags
      schema:
        type: string
    lbaas_healthmonitors_not-tags-any:
      description: Return the list of entities that do not have at least one of 
        the given tags.
      in: query
      name: not-tags-any
      schema:
        type: string
    lbaas_healthmonitors_operating_status:
      description: The operating status of the resource.
      in: query
      name: operating_status
      schema:
        description: The operating status of the resource.
        enum:
          - DEGRADED
          - DRAINING
          - ERROR
          - NO_MONITOR
          - OFFLINE
          - ONLINE
        type: string
    lbaas_healthmonitors_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_healthmonitors_pool_id:
      description: The ID of the pool.
      in: query
      name: pool_id
      schema:
        description: The ID of the pool.
        type: string
    lbaas_healthmonitors_project_id:
      description: The ID of the project owning this resource.
      in: query
      name: project_id
      schema:
        description: The ID of the project owning this resource.
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_healthmonitors_provisioning_status:
      description: The provisioning status of the resource.
      in: query
      name: provisioning_status
      schema:
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_DELETE
          - PENDING_UPDATE
        type: string
    lbaas_healthmonitors_tags:
      description: Return the list of entities that have this tag or tags.
      in: query
      name: tags
      schema:
        type: string
    lbaas_healthmonitors_tags-any:
      description: Return the list of entities that have one or more of the 
        given tags.
      in: query
      name: tags-any
      schema:
        type: string
    lbaas_healthmonitors_timeout:
      description: The maximum time, in seconds, that a monitor waits to connect
        before it times out.
      in: query
      name: timeout
      schema:
        description: The maximum time, in seconds, that a monitor waits to 
          connect before it times out.
        type: integer
    lbaas_healthmonitors_type:
      description: The type of health monitor.
      in: query
      name: type
      schema:
        description: The type of health monitor.
        enum:
          - HTTP
          - HTTPS
          - PING
          - SCTP
          - TCP
          - TLS-HELLO
          - UDP-CONNECT
        type: string
    lbaas_healthmonitors_updated_at:
      description: The UTC date and timestamp when the resource was last 
        updated.
      in: query
      name: updated_at
      schema:
        description: The UTC date and timestamp when the resource was last 
          updated.
        format: date-time
        type: string
    lbaas_healthmonitors_url_path:
      description: The HTTP URL path of the request sent by the monitor to test 
        the health of a backend member. Must be a string that begins with a 
        forward slash (/).
      in: query
      name: url_path
      schema:
        description: The HTTP URL path of the request sent by the monitor to 
          test the health of a backend member. Must be a string that begins with
          a forward slash (/).
        type: string
    lbaas_l7policies_action:
      description: ''
      in: query
      name: action
      schema:
        description: ''
        type: string
    lbaas_l7policies_admin_state_up:
      description: ''
      in: query
      name: admin_state_up
      schema:
        description: ''
        type: boolean
    lbaas_l7policies_description:
      description: ''
      in: query
      name: description
      schema:
        description: ''
        type: string
    lbaas_l7policies_l7policy_id:
      description: l7policy_id parameter for /v2/lbaas/l7policies/{l7policy_id} 
        API
      in: path
      name: l7policy_id
      required: true
      schema:
        type: string
    lbaas_l7policies_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_l7policies_listener_id:
      description: ''
      in: query
      name: listener_id
      schema:
        description: ''
        type: string
    lbaas_l7policies_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_l7policies_name:
      description: ''
      in: query
      name: name
      schema:
        description: ''
        type: string
    lbaas_l7policies_operating_status:
      description: ''
      in: query
      name: operating_status
      schema:
        description: ''
        type: string
    lbaas_l7policies_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_l7policies_position:
      description: ''
      in: query
      name: position
      schema:
        description: ''
        type: string
    lbaas_l7policies_project_id:
      description: ''
      in: query
      name: project_id
      schema:
        description: ''
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_l7policies_provisioning_status:
      description: ''
      in: query
      name: provisioning_status
      schema:
        description: ''
        type: string
    lbaas_l7policies_redirect_pool_id:
      description: ''
      in: query
      name: redirect_pool_id
      schema:
        description: ''
        type: string
    lbaas_l7policies_redirect_prefix:
      description: ''
      in: query
      name: redirect_prefix
      schema:
        description: ''
        type: string
    lbaas_l7policies_redirect_url:
      description: ''
      in: query
      name: redirect_url
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_admin_state_up:
      description: ''
      in: query
      name: admin_state_up
      schema:
        description: ''
        type: boolean
    lbaas_l7policies_rules_compare_type:
      description: ''
      in: query
      name: compare_type
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_created_at:
      description: ''
      in: query
      name: created_at
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_invert:
      description: ''
      in: query
      name: invert
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_key:
      description: ''
      in: query
      name: key
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_l7policy_id:
      description: l7policy_id parameter for 
        /v2/lbaas/l7policies/{l7policy_id}/rules/{rule_id} API
      in: path
      name: l7policy_id
      required: true
      schema:
        type: string
    lbaas_l7policies_rules_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_l7policies_rules_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_l7policies_rules_operating_status:
      description: ''
      in: query
      name: operating_status
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_l7policies_rules_project_id:
      description: ''
      in: query
      name: project_id
      schema:
        description: ''
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_l7policies_rules_provisioning_status:
      description: ''
      in: query
      name: provisioning_status
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_rule_id:
      description: rule_id parameter for 
        /v2/lbaas/l7policies/{l7policy_id}/rules/{rule_id} API
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    lbaas_l7policies_rules_rule_value:
      description: ''
      in: query
      name: rule_value
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_type:
      description: ''
      in: query
      name: type
      schema:
        description: ''
        type: string
    lbaas_l7policies_rules_updated_at:
      description: ''
      in: query
      name: updated_at
      schema:
        description: ''
        type: string
    lbaas_listeners_admin_state_up:
      description: The administrative state of the resource
      in: query
      name: admin_state_up
      schema:
        description: The administrative state of the resource
        type: boolean
    lbaas_listeners_alpn_protocols:
      description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
        h2'
      in: query
      name: alpn_protocols
      schema:
        description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
          h2'
        type: string
    lbaas_listeners_connection_limit:
      description: The maximum number of connections permitted for this 
        listener. Default value is -1 which represents infinite connections or a
        default value defined by the provider driver.
      in: query
      name: connection_limit
      schema:
        description: The maximum number of connections permitted for this 
          listener. Default value is -1 which represents infinite connections or
          a default value defined by the provider driver.
        type: string
    lbaas_listeners_created_at:
      description: The UTC date and timestamp when the resource was created.
      in: query
      name: created_at
      schema:
        description: The UTC date and timestamp when the resource was created.
        format: date-time
        type: string
    lbaas_listeners_default_pool_id:
      description: The ID of the pool used by the listener if no L7 policies 
        match.
      in: query
      name: default_pool_id
      schema:
        description: The ID of the pool used by the listener if no L7 policies 
          match.
        type: string
    lbaas_listeners_description:
      description: A human-readable description for the resource.
      in: query
      name: description
      schema:
        description: A human-readable description for the resource.
        type: string
    lbaas_listeners_hsts_include_subdomains:
      description: Defines whether the includeSubDomains directive should be 
        added to the Strict-Transport-Security HTTP response header.
      in: query
      name: hsts_include_subdomains
      schema:
        description: Defines whether the includeSubDomains directive should be 
          added to the Strict-Transport-Security HTTP response header.
        type: boolean
    lbaas_listeners_hsts_max_age:
      description: The value of the max_age directive for the 
        Strict-Transport-Security HTTP response header.
      in: query
      name: hsts_max_age
      schema:
        description: The value of the max_age directive for the 
          Strict-Transport-Security HTTP response header.
        type: integer
    lbaas_listeners_hsts_preload:
      description: Defines whether the preload directive should be added to the 
        Strict-Transport-Security HTTP response header.
      in: query
      name: hsts_preload
      schema:
        description: Defines whether the preload directive should be added to 
          the Strict-Transport-Security HTTP response header.
        type: boolean
    lbaas_listeners_id:
      description: The ID of the resource
      in: query
      name: id
      schema:
        description: The ID of the resource
        format: uuid
        type: string
    lbaas_listeners_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_listeners_listener_id:
      description: listener_id parameter for /v2/lbaas/listeners/{listener_id} 
        API
      in: path
      name: listener_id
      required: true
      schema:
        type: string
    lbaas_listeners_load_balancer_id:
      description: Load balancer ID
      in: query
      name: load_balancer_id
      schema:
        description: Load balancer ID
        type: string
    lbaas_listeners_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_listeners_name:
      description: Human-readable name of the resource.
      in: query
      name: name
      schema:
        description: Human-readable name of the resource.
        type: string
    lbaas_listeners_not-tags:
      description: Return the list of entities that do not have one or more of 
        the given tags.
      in: query
      name: not-tags
      schema:
        type: string
    lbaas_listeners_not-tags-any:
      description: Return the list of entities that do not have at least one of 
        the given tags.
      in: query
      name: not-tags-any
      schema:
        type: string
    lbaas_listeners_operating_status:
      description: The operating status of the resource.
      in: query
      name: operating_status
      schema:
        description: The operating status of the resource.
        enum:
          - DEGRADED
          - DRAINING
          - ERROR
          - NO_MONITOR
          - OFFLINE
          - ONLINE
        type: string
    lbaas_listeners_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_listeners_project_id:
      description: The ID of the project owning this resource.
      in: query
      name: project_id
      schema:
        description: The ID of the project owning this resource.
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_listeners_protocol:
      description: The protocol for the resource.
      in: query
      name: protocol
      schema:
        description: The protocol for the resource.
        enum:
          - HTTP
          - HTTPS
          - PROMETHEUS
          - SCTP
          - TCP
          - TERMINATED_HTTPS
          - UDP
        type: string
    lbaas_listeners_protocol_port:
      description: The protocol port number for the resource.
      in: query
      name: protocol_port
      schema:
        description: The protocol port number for the resource.
        type: integer
    lbaas_listeners_provisioning_status:
      description: The provisioning status of the resource.
      in: query
      name: provisioning_status
      schema:
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_DELETE
          - PENDING_UPDATE
        type: string
    lbaas_listeners_stats_listener_id:
      description: listener_id parameter for 
        /v2/lbaas/listeners/{listener_id}/stats API
      in: path
      name: listener_id
      required: true
      schema:
        type: string
    lbaas_listeners_tags:
      description: Return the list of entities that have this tag or tags.
      in: query
      name: tags
      schema:
        type: string
    lbaas_listeners_tags-any:
      description: Return the list of entities that have one or more of the 
        given tags.
      in: query
      name: tags-any
      schema:
        type: string
    lbaas_listeners_timeout_client_data:
      description: Frontend client inactivity timeout in milliseconds.
      in: query
      name: timeout_client_data
      schema:
        description: Frontend client inactivity timeout in milliseconds.
        type: integer
    lbaas_listeners_timeout_member_connect:
      description: Backend member connection timeout in milliseconds.
      in: query
      name: timeout_member_connect
      schema:
        description: Backend member connection timeout in milliseconds.
        type: integer
    lbaas_listeners_timeout_member_data:
      description: Backend member inactivity timeout in milliseconds.
      in: query
      name: timeout_member_data
      schema:
        description: Backend member inactivity timeout in milliseconds.
        type: integer
    lbaas_listeners_timeout_tcp_inspect:
      description: Time, in milliseconds, to wait for additional TCP packets for
        content inspection.
      in: query
      name: timeout_tcp_inspect
      schema:
        description: Time, in milliseconds, to wait for additional TCP packets 
          for content inspection.
        type: integer
    lbaas_listeners_tls_ciphers:
      description: 'List of ciphers in OpenSSL format '
      in: query
      name: tls_ciphers
      schema:
        description: 'List of ciphers in OpenSSL format '
        type: string
    lbaas_listeners_tls_versions:
      description: A list of TLS protocol versions.
      in: query
      name: tls_versions
      schema:
        description: A list of TLS protocol versions.
        type: string
    lbaas_listeners_updated_at:
      description: The UTC date and timestamp when the resource was last 
        updated.
      in: query
      name: updated_at
      schema:
        description: The UTC date and timestamp when the resource was last 
          updated.
        format: date-time
        type: string
    lbaas_loadbalancer_cascade:
      description: If true will delete all child objects of the load balancer.
      in: query
      name: cascade
      schema:
        description: If true will delete all child objects of the load balancer.
        type: boolean
    lbaas_loadbalancers_availability_zone:
      description: An availability zone name.
      in: query
      name: availability_zone
      schema:
        description: An availability zone name.
        type: string
    lbaas_loadbalancers_created_at:
      description: The UTC date and timestamp when the resource was created.
      in: query
      name: created_at
      schema:
        description: The UTC date and timestamp when the resource was created.
        format: date-time
        type: string
    lbaas_loadbalancers_description:
      description: A human-readable description for the resource.
      in: query
      name: description
      schema:
        description: A human-readable description for the resource.
        type: string
    lbaas_loadbalancers_failover_loadbalancer_id:
      description: loadbalancer_id parameter for 
        /v2/lbaas/loadbalancers/{loadbalancer_id}/failover API
      in: path
      name: loadbalancer_id
      required: true
      schema:
        type: string
    lbaas_loadbalancers_flavor_id:
      description: The ID of the flavor.
      in: query
      name: flavor_id
      schema:
        description: The ID of the flavor.
        format: uuid
        type: string
    lbaas_loadbalancers_id:
      description: The ID of the resource
      in: query
      name: id
      schema:
        description: The ID of the resource
        format: uuid
        type: string
    lbaas_loadbalancers_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_loadbalancers_loadbalancer_id:
      description: loadbalancer_id parameter for 
        /v2/lbaas/loadbalancers/{loadbalancer_id} API
      in: path
      name: loadbalancer_id
      required: true
      schema:
        type: string
    lbaas_loadbalancers_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_loadbalancers_name:
      description: Human-readable name of the resource.
      in: query
      name: name
      schema:
        description: Human-readable name of the resource.
        type: string
    lbaas_loadbalancers_not-tags:
      description: Return the list of entities that do not have one or more of 
        the given tags.
      in: query
      name: not-tags
      schema:
        type: string
    lbaas_loadbalancers_not-tags-any:
      description: Return the list of entities that do not have at least one of 
        the given tags.
      in: query
      name: not-tags-any
      schema:
        type: string
    lbaas_loadbalancers_operating_status:
      description: The operating status of the resource.
      in: query
      name: operating_status
      schema:
        description: The operating status of the resource.
        enum:
          - DEGRADED
          - DRAINING
          - ERROR
          - NO_MONITOR
          - OFFLINE
          - ONLINE
        type: string
    lbaas_loadbalancers_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_loadbalancers_project_id:
      description: The ID of the project owning this resource.
      in: query
      name: project_id
      schema:
        description: The ID of the project owning this resource.
        format: uuid
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_loadbalancers_provider:
      description: Provider name for the load balancer.
      in: query
      name: provider
      schema:
        description: Provider name for the load balancer.
        type: string
    lbaas_loadbalancers_provisioning_status:
      description: The provisioning status of the resource.
      in: query
      name: provisioning_status
      schema:
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_DELETE
          - PENDING_UPDATE
        type: string
    lbaas_loadbalancers_stats_loadbalancer_id:
      description: loadbalancer_id parameter for 
        /v2/lbaas/loadbalancers/{loadbalancer_id}/stats API
      in: path
      name: loadbalancer_id
      required: true
      schema:
        type: string
    lbaas_loadbalancers_status_loadbalancer_id:
      description: loadbalancer_id parameter for 
        /v2/lbaas/loadbalancers/{loadbalancer_id}/status API
      in: path
      name: loadbalancer_id
      required: true
      schema:
        type: string
    lbaas_loadbalancers_tags:
      description: Return the list of entities that have this tag or tags.
      in: query
      name: tags
      schema:
        type: string
    lbaas_loadbalancers_tags-any:
      description: Return the list of entities that have one or more of the 
        given tags.
      in: query
      name: tags-any
      schema:
        type: string
    lbaas_loadbalancers_updated_at:
      description: The UTC date and timestamp when the resource was last 
        updated.
      in: query
      name: updated_at
      schema:
        description: The UTC date and timestamp when the resource was last 
          updated.
        format: date-time
        type: string
    lbaas_loadbalancers_vip_address:
      description: The IP address of the Virtual IP (VIP).
      in: query
      name: vip_address
      schema:
        description: The IP address of the Virtual IP (VIP).
        type: string
    lbaas_loadbalancers_vip_network_id:
      description: The ID of the network for the Virtual IP (VIP).
      in: query
      name: vip_network_id
      schema:
        description: The ID of the network for the Virtual IP (VIP).
        format: uuid
        type: string
    lbaas_loadbalancers_vip_port_id:
      description: The ID of the Virtual IP (VIP) port.
      in: query
      name: vip_port_id
      schema:
        description: The ID of the Virtual IP (VIP) port.
        format: uuid
        type: string
    lbaas_loadbalancers_vip_qos_policy_id:
      description: The ID of the QoS Policy which will apply to the Virtual IP 
        (VIP).
      in: query
      name: vip_qos_policy_id
      schema:
        description: The ID of the QoS Policy which will apply to the Virtual IP
          (VIP).
        format: uuid
        type: string
    lbaas_loadbalancers_vip_subnet_id:
      description: The ID of the subnet for the Virtual IP (VIP).
      in: query
      name: vip_subnet_id
      schema:
        description: The ID of the subnet for the Virtual IP (VIP).
        format: uuid
        type: string
    lbaas_pools_admin_state_up:
      description: The administrative state of the resource
      in: query
      name: admin_state_up
      schema:
        description: The administrative state of the resource
        type: boolean
    lbaas_pools_alpn_protocols:
      description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
        h2'
      in: query
      name: alpn_protocols
      schema:
        description: 'A list of ALPN protocols. Available protocols: http/1.0, http/1.1,
          h2'
        type: string
    lbaas_pools_created_at:
      description: The UTC date and timestamp when the resource was created.
      in: query
      name: created_at
      schema:
        description: The UTC date and timestamp when the resource was created.
        format: date-time
        type: string
    lbaas_pools_description:
      description: A human-readable description for the resource.
      in: query
      name: description
      schema:
        description: A human-readable description for the resource.
        type: string
    lbaas_pools_id:
      description: The ID of the resource
      in: query
      name: id
      schema:
        description: The ID of the resource
        format: uuid
        type: string
    lbaas_pools_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_pools_loadbalancer_id:
      description: The ID of the load balancer for the pool.
      in: query
      name: loadbalancer_id
      schema:
        description: The ID of the load balancer for the pool.
        format: uuid
        type: string
    lbaas_pools_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_pools_members_address:
      description: The IP address of the backend member server.
      in: query
      name: address
      schema:
        description: The IP address of the backend member server.
        type: string
    lbaas_pools_members_admin_state_up:
      description: The administrative state of the resource
      in: query
      name: admin_state_up
      schema:
        description: The administrative state of the resource
        type: boolean
    lbaas_pools_members_backup:
      description: Is the member a backup?
      in: query
      name: backup
      schema:
        description: Is the member a backup?
        type: boolean
    lbaas_pools_members_created_at:
      description: The UTC date and timestamp when the resource was created.
      in: query
      name: created_at
      schema:
        description: The UTC date and timestamp when the resource was created.
        format: date-time
        type: string
    lbaas_pools_members_description:
      description: A human-readable description for the resource.
      in: query
      name: description
      schema:
        description: A human-readable description for the resource.
        type: string
    lbaas_pools_members_id:
      description: The ID of the resource
      in: query
      name: id
      schema:
        description: The ID of the resource
        format: uuid
        type: string
    lbaas_pools_members_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_pools_members_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_pools_members_member_id:
      description: member_id parameter for 
        /v2/lbaas/pools/{pool_id}/members/{member_id} API
      in: path
      name: member_id
      required: true
      schema:
        type: string
    lbaas_pools_members_monitor_address:
      description: An alternate IP address used for health monitoring a backend 
        member.
      in: query
      name: monitor_address
      schema:
        description: An alternate IP address used for health monitoring a 
          backend member.
        type: string
    lbaas_pools_members_monitor_port:
      description: An alternate protocol port used for health monitoring a 
        backend member.
      in: query
      name: monitor_port
      schema:
        description: An alternate protocol port used for health monitoring a 
          backend member.
        type: string
    lbaas_pools_members_name:
      description: Human-readable name of the resource.
      in: query
      name: name
      schema:
        description: Human-readable name of the resource.
        type: string
    lbaas_pools_members_not-tags:
      description: Return the list of entities that do not have one or more of 
        the given tags.
      in: query
      name: not-tags
      schema:
        type: string
    lbaas_pools_members_not-tags-any:
      description: Return the list of entities that do not have at least one of 
        the given tags.
      in: query
      name: not-tags-any
      schema:
        type: string
    lbaas_pools_members_operating_status:
      description: The operating status of the resource.
      in: query
      name: operating_status
      schema:
        description: The operating status of the resource.
        enum:
          - DEGRADED
          - DRAINING
          - ERROR
          - NO_MONITOR
          - OFFLINE
          - ONLINE
        type: string
    lbaas_pools_members_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_pools_members_pool_id:
      description: pool_id parameter for 
        /v2/lbaas/pools/{pool_id}/members/{member_id} API
      in: path
      name: pool_id
      required: true
      schema:
        type: string
    lbaas_pools_members_project_id:
      description: The ID of the project owning this resource.
      in: query
      name: project_id
      schema:
        description: The ID of the project owning this resource.
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_pools_members_protocol_port:
      description: The protocol port number the backend member server is 
        listening on.
      in: query
      name: protocol_port
      schema:
        description: The protocol port number the backend member server is 
          listening on.
        type: integer
    lbaas_pools_members_provisioning_status:
      description: The provisioning status of the resource.
      in: query
      name: provisioning_status
      schema:
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_DELETE
          - PENDING_UPDATE
        type: string
    lbaas_pools_members_subnet_id:
      description: The subnet ID the member service is accessible from.
      in: query
      name: subnet_id
      schema:
        description: The subnet ID the member service is accessible from.
        format: uuid
        type: string
    lbaas_pools_members_tags:
      description: Return the list of entities that have this tag or tags.
      in: query
      name: tags
      schema:
        type: string
    lbaas_pools_members_tags-any:
      description: Return the list of entities that have one or more of the 
        given tags.
      in: query
      name: tags-any
      schema:
        type: string
    lbaas_pools_members_updated_at:
      description: The UTC date and timestamp when the resource was last 
        updated.
      in: query
      name: updated_at
      schema:
        description: The UTC date and timestamp when the resource was last 
          updated.
        format: date-time
        type: string
    lbaas_pools_members_weight:
      description: The weight of a member determines the portion of requests or 
        connections it services compared to the other members of the pool.
      in: query
      name: weight
      schema:
        description: The weight of a member determines the portion of requests 
          or connections it services compared to the other members of the pool.
        type: integer
    lbaas_pools_name:
      description: Human-readable name of the resource.
      in: query
      name: name
      schema:
        description: Human-readable name of the resource.
        type: string
    lbaas_pools_not-tags:
      description: Return the list of entities that do not have one or more of 
        the given tags.
      in: query
      name: not-tags
      schema:
        type: string
    lbaas_pools_not-tags-any:
      description: Return the list of entities that do not have at least one of 
        the given tags.
      in: query
      name: not-tags-any
      schema:
        type: string
    lbaas_pools_operating_status:
      description: The operating status of the resource.
      in: query
      name: operating_status
      schema:
        description: The operating status of the resource.
        enum:
          - DEGRADED
          - DRAINING
          - ERROR
          - NO_MONITOR
          - OFFLINE
          - ONLINE
        type: string
    lbaas_pools_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_pools_pool_id:
      description: pool_id parameter for /v2/lbaas/pools/{pool_id} API
      in: path
      name: pool_id
      required: true
      schema:
        type: string
    lbaas_pools_project_id:
      description: The ID of the project owning this resource.
      in: query
      name: project_id
      schema:
        description: The ID of the project owning this resource.
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    lbaas_pools_provisioning_status:
      description: The provisioning status of the resource.
      in: query
      name: provisioning_status
      schema:
        description: The provisioning status of the resource.
        enum:
          - ACTIVE
          - DELETED
          - ERROR
          - PENDING_CREATE
          - PENDING_DELETE
          - PENDING_UPDATE
        type: string
    lbaas_pools_tags:
      description: Return the list of entities that have this tag or tags.
      in: query
      name: tags
      schema:
        type: string
    lbaas_pools_tags-any:
      description: Return the list of entities that have one or more of the 
        given tags.
      in: query
      name: tags-any
      schema:
        type: string
    lbaas_pools_tls_ciphers:
      description: 'List of ciphers in OpenSSL format '
      in: query
      name: tls_ciphers
      schema:
        description: 'List of ciphers in OpenSSL format '
        type: string
    lbaas_pools_tls_enabled:
      in: query
      name: tls_enabled
      schema:
        type: boolean
    lbaas_pools_tls_versions:
      description: A list of TLS protocol versions.
      in: query
      name: tls_versions
      schema:
        description: A list of TLS protocol versions.
        type: string
    lbaas_pools_updated_at:
      description: The UTC date and timestamp when the resource was last 
        updated.
      in: query
      name: updated_at
      schema:
        description: The UTC date and timestamp when the resource was last 
          updated.
        format: date-time
        type: string
    lbaas_providers_availability_zone_capabilities_provider:
      description: provider parameter for 
        /v2/lbaas/providers/{provider}/availability_zone_capabilities API
      in: path
      name: provider
      required: true
      schema:
        type: string
    lbaas_providers_description:
      description: ''
      in: query
      name: description
      schema:
        description: ''
        type: string
    lbaas_providers_flavor_capabilities_provider:
      description: provider parameter for 
        /v2/lbaas/providers/{provider}/flavor_capabilities API
      in: path
      name: provider
      required: true
      schema:
        type: string
    lbaas_providers_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    lbaas_providers_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    lbaas_providers_name:
      description: ''
      in: query
      name: name
      schema:
        description: ''
        type: string
    lbaas_providers_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    lbaas_quotas_project_id:
      description: project_id parameter for /v2/lbaas/quotas/{project_id} API
      in: path
      name: project_id
      required: true
      schema:
        type: string
      x-openstack:
        resource_link: identity/v3/project.id
    octavia_amphorae_amphora_id:
      description: amphora_id parameter for /v2/octavia/amphorae/{amphora_id} 
        API
      in: path
      name: amphora_id
      required: true
      schema:
        type: string
    octavia_amphorae_cached_zone:
      description: ''
      in: query
      name: cached_zone
      schema:
        description: ''
        type: string
    octavia_amphorae_cert_busy:
      description: ''
      in: query
      name: cert_busy
      schema:
        description: ''
        type: string
    octavia_amphorae_cert_expiration:
      description: ''
      in: query
      name: cert_expiration
      schema:
        description: ''
        type: string
    octavia_amphorae_compute_flavor:
      description: ''
      in: query
      name: compute_flavor
      schema:
        description: ''
        type: string
    octavia_amphorae_compute_id:
      description: ''
      in: query
      name: compute_id
      schema:
        description: ''
        type: string
    octavia_amphorae_config_amphora_id:
      description: amphora_id parameter for 
        /v2/octavia/amphorae/{amphora_id}/config API
      in: path
      name: amphora_id
      required: true
      schema:
        type: string
    octavia_amphorae_created_at:
      description: ''
      in: query
      name: created_at
      schema:
        description: ''
        type: string
    octavia_amphorae_failover_amphora_id:
      description: amphora_id parameter for 
        /v2/octavia/amphorae/{amphora_id}/failover API
      in: path
      name: amphora_id
      required: true
      schema:
        type: string
    octavia_amphorae_ha_ip:
      description: ''
      in: query
      name: ha_ip
      schema:
        description: ''
        type: string
    octavia_amphorae_ha_port_id:
      description: ''
      in: query
      name: ha_port_id
      schema:
        description: ''
        type: string
    octavia_amphorae_id:
      description: ''
      in: query
      name: id
      schema:
        description: ''
        type: string
    octavia_amphorae_image_id:
      description: ''
      in: query
      name: image_id
      schema:
        description: ''
        type: string
    octavia_amphorae_lb_network_ip:
      description: ''
      in: query
      name: lb_network_ip
      schema:
        description: ''
        type: string
    octavia_amphorae_limit:
      description: Page size
      in: query
      name: limit
      schema:
        description: Page size
        type: integer
    octavia_amphorae_loadbalancer_id:
      description: ''
      in: query
      name: loadbalancer_id
      schema:
        description: ''
        type: string
    octavia_amphorae_marker:
      description: ID of the last item in the previous list
      in: query
      name: marker
      schema:
        description: ID of the last item in the previous list
        format: uuid
        type: string
    octavia_amphorae_page_reverse:
      description: The page direction.
      in: query
      name: page_reverse
      schema:
        description: The page direction.
        type: boolean
    octavia_amphorae_role:
      description: ''
      in: query
      name: role
      schema:
        description: ''
        type: string
    octavia_amphorae_stats_amphora_id:
      description: amphora_id parameter for 
        /v2/octavia/amphorae/{amphora_id}/stats API
      in: path
      name: amphora_id
      required: true
      schema:
        type: string
    octavia_amphorae_status:
      description: ''
      in: query
      name: status
      schema:
        description: ''
        type: string
    octavia_amphorae_updated_at:
      description: ''
      in: query
      name: updated_at
      schema:
        description: ''
        type: string
    octavia_amphorae_vrrp_id:
      description: ''
      in: query
      name: vrrp_id
      schema:
        description: ''
        type: string
    octavia_amphorae_vrrp_interface:
      description: ''
      in: query
      name: vrrp_interface
      schema:
        description: ''
        type: string
    octavia_amphorae_vrrp_ip:
      description: ''
      in: query
      name: vrrp_ip
      schema:
        description: ''
        type: string
    octavia_amphorae_vrrp_port_id:
      description: ''
      in: query
      name: vrrp_port_id
      schema:
        description: ''
        type: string
    octavia_amphorae_vrrp_priority:
      description: ''
      in: query
      name: vrrp_priority
      schema:
        description: ''
        type: string
  schemas:
    AvailabilityZoneProfileRootPOST:
      description: Base type for complex types
      properties:
        availability_zone_profile:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            availability_zone_data:
              maxLength: 4096
              type: string
            name:
              maxLength: 255
              type: string
            provider_name:
              maxLength: 255
              type: string
          required:
            - availability_zone_data
            - name
            - provider_name
          type: object
      type: object
    AvailabilityZoneProfileRootPUT:
      description: Base type for complex types
      properties:
        availability_zone_profile:
          description: |-
            Defines the attributes of a PUT request.
          properties:
            availability_zone_data:
              maxLength: 4096
              type: string
            name:
              maxLength: 255
              type: string
            provider_name:
              maxLength: 255
              type: string
          type: object
      type: object
    AvailabilityZoneRootPOST:
      description: Base type for complex types
      properties:
        availability_zone:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            availability_zone_profile_id:
              format: uuid
              type: string
            description:
              maxLength: 255
              type: string
            enabled:
              type: boolean
            name:
              maxLength: 255
              type: string
          required:
            - availability_zone_profile_id
            - name
          type: object
      type: object
    AvailabilityZoneRootPUT:
      description: Base type for complex types
      properties:
        availability_zone:
          description: |-
            Defines the attributes of a PUT request.
          properties:
            description:
              maxLength: 255
              type: string
            enabled:
              type: boolean
          type: object
      type: object
    FlavorProfileRootPOST:
      description: Base type for complex types
      properties:
        flavorprofile:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            flavor_data:
              maxLength: 4096
              type: string
            name:
              maxLength: 255
              type: string
            provider_name:
              maxLength: 255
              type: string
          required:
            - flavor_data
            - name
            - provider_name
          type: object
      type: object
    FlavorProfileRootPUT:
      description: Base type for complex types
      properties:
        flavorprofile:
          description: |-
            Defines the attributes of a PUT request.
          properties:
            flavor_data:
              maxLength: 4096
              type: string
            name:
              maxLength: 255
              type: string
            provider_name:
              maxLength: 255
              type: string
          type: object
      type: object
    FlavorRootPOST:
      description: Base type for complex types
      properties:
        flavor:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            description:
              maxLength: 255
              type: string
            enabled:
              type: boolean
            flavor_profile_id:
              format: uuid
              type: string
            name:
              maxLength: 255
              type: string
          required:
            - flavor_profile_id
            - name
          type: object
      type: object
    FlavorRootPUT:
      description: Base type for complex types
      properties:
        flavor:
          description: |-
            Defines the attributes of a PUT request.
          properties:
            description:
              maxLength: 255
              type: string
            enabled:
              type: boolean
            name:
              maxLength: 255
              type: string
          type: object
      type: object
    HealthMonitorRootPOST:
      description: Base type for complex types
      properties:
        healthmonitor:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            delay:
              description: |-
                The time, in seconds, between sending probes to members.
              type: integer
            domain_name:
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
              maxLength: 255
              minLength: 1
              type: string
            expected_codes:
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`

                The default is 200.
              type: string
            http_method:
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`. The default is `GET`.
              enum:
                - CONNECT
                - DELETE
                - GET
                - HEAD
                - OPTIONS
                - PATCH
                - POST
                - PUT
                - TRACE
              type: string
            http_version:
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
              enum:
                - 1.0
                - 1.1
              type: number
            max_retries:
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
              maximum: 10
              minimum: 1
              type: integer
            max_retries_down:
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
                The default is `3`.
              maximum: 10
              minimum: 1
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            pool_id:
              description: |-
                The ID of the pool.
              format: uuid
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource. (deprecated)
              maxLength: 36
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout:
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
              type: integer
            type:
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
              enum:
                - HTTP
                - HTTPS
                - PING
                - SCTP
                - TCP
                - TLS-HELLO
                - UDP-CONNECT
              type: string
            url_path:
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`). The default URL path is `/`.
              format: url_path
              type: string
          required:
            - delay
            - max_retries
            - pool_id
            - timeout
            - type
          type: object
      type: object
    HealthMonitorRootPUT:
      description: Base type for complex types
      properties:
        healthmonitor:
          description: |-
            Defines attributes that are acceptable of a PUT request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            delay:
              description: |-
                The time, in seconds, between sending probes to members.
              type: integer
            domain_name:
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
              maxLength: 255
              minLength: 1
              type: string
            expected_codes:
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`

                The default is 200.
              type: string
            http_method:
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`. The default is `GET`.
              enum:
                - CONNECT
                - DELETE
                - GET
                - HEAD
                - OPTIONS
                - PATCH
                - POST
                - PUT
                - TRACE
              type: string
            http_version:
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
              enum:
                - 1.0
                - 1.1
              type: number
            max_retries:
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
              maximum: 10
              minimum: 1
              type: integer
            max_retries_down:
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
                The default is `3`.
              maximum: 10
              minimum: 1
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            timeout:
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
              type: integer
            url_path:
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`). The default URL path is `/`.
              format: url_path
              type: string
          type: object
      type: object
    L7PolicyRootPOST:
      description: Base type for complex types
      properties:
        l7policy:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            action:
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
              enum:
                - REDIRECT_PREFIX
                - REDIRECT_TO_POOL
                - REDIRECT_TO_URL
                - REJECT
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            listener_id:
              description: |-
                The ID of the listener.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            position:
              description: |-
                The position of this policy on the listener. Positions start at 1.
              maximum: 2147483647
              minimum: 1
              type: integer
            project_id:
              description: |-
                The ID of the project owning this resource.
              maxLength: 36
              type: string
            redirect_http_code:
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
              enum:
                - 301
                - 302
                - 303
                - 307
                - 308
              type: integer
            redirect_pool_id:
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            redirect_prefix:
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
              format: url
              type: string
            redirect_url:
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
              format: url
              type: string
            rules:
              items:
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                properties:
                  admin_state_up:
                    type: boolean
                  compare_type:
                    enum:
                      - CONTAINS
                      - ENDS_WITH
                      - EQUAL_TO
                      - REGEX
                      - STARTS_WITH
                    type: string
                  invert:
                    type: boolean
                  key:
                    maxLength: 255
                    type: string
                  tags:
                    description: |-
                      A list of simple strings assigned to the resource.

                      **New in version 2.5**
                    items:
                      maxLength: 255
                      type: string
                    type: array
                  type:
                    enum:
                      - COOKIE
                      - FILE_TYPE
                      - HEADER
                      - HOST_NAME
                      - PATH
                      - SSL_CONN_HAS_CERT
                      - SSL_DN_FIELD
                      - SSL_VERIFY_RESULT
                    type: string
                  value:
                    maxLength: 255
                    type: string
                required:
                  - compare_type
                  - type
                  - value
                type: object
              type: array
            tags:
              items:
                maxLength: 255
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
          required:
            - action
            - listener_id
          type: object
      type: object
    L7PolicyRootPUT:
      description: Base type for complex types
      properties:
        l7policy:
          description: |-
            Defines attributes that are acceptable of a PUT request.
          properties:
            action:
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
              enum:
                - REDIRECT_PREFIX
                - REDIRECT_TO_POOL
                - REDIRECT_TO_URL
                - REJECT
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            position:
              description: |-
                The position of this policy on the listener. Positions start at 1.
              maximum: 2147483647
              minimum: 1
              type: integer
            redirect_http_code:
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
              enum:
                - 301
                - 302
                - 303
                - 307
                - 308
              type: integer
            redirect_pool_id:
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            redirect_prefix:
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
              format: url
              type: string
            redirect_url:
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
              format: url
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
          type: object
      type: object
    L7RuleRootPOST:
      description: Base type for complex types
      properties:
        rule:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            compare_type:
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
              enum:
                - CONTAINS
                - ENDS_WITH
                - EQUAL_TO
                - REGEX
                - STARTS_WITH
              type: string
            invert:
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
                Default is `false`.
              type: boolean
            key:
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              maxLength: 36
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            type:
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
              enum:
                - COOKIE
                - FILE_TYPE
                - HEADER
                - HOST_NAME
                - PATH
                - SSL_CONN_HAS_CERT
                - SSL_DN_FIELD
                - SSL_VERIFY_RESULT
              type: string
            value:
              description: |-
                The value to use for the comparison. For example, the file type to compare.
              maxLength: 255
              type: string
          required:
            - compare_type
            - type
            - value
          type: object
      type: object
    L7RuleRootPUT:
      description: Base type for complex types
      properties:
        rule:
          description: |-
            Defines attributes that are acceptable of a PUT request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            compare_type:
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
              enum:
                - CONTAINS
                - ENDS_WITH
                - EQUAL_TO
                - REGEX
                - STARTS_WITH
              type: string
            invert:
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
                Default is `false`.
              type: boolean
            key:
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
              maxLength: 255
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            type:
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
              enum:
                - COOKIE
                - FILE_TYPE
                - HEADER
                - HOST_NAME
                - PATH
                - SSL_CONN_HAS_CERT
                - SSL_DN_FIELD
                - SSL_VERIFY_RESULT
              type: string
            value:
              description: |-
                The value to use for the comparison. For example, the file type to compare.
              maxLength: 255
              type: string
          type: object
      type: object
    LbaasAvailabilityzoneShowResponse:
      description: Base type for complex types
      properties:
        availability_zone:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            availability_zone_profile_id:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            name:
              type: string
          type: object
      type: object
    LbaasAvailabilityzoneUpdateResponse:
      description: Base type for complex types
      properties:
        availability_zone:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            availability_zone_profile_id:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            name:
              type: string
          type: object
      type: object
    LbaasAvailabilityzoneprofileShowResponse:
      description: Base type for complex types
      properties:
        availability_zone_profile:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            availability_zone_data:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
            provider_name:
              type: string
          type: object
      type: object
    LbaasAvailabilityzoneprofileUpdateResponse:
      description: Base type for complex types
      properties:
        availability_zone_profile:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            availability_zone_data:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
            provider_name:
              type: string
          type: object
      type: object
    LbaasAvailabilityzoneprofilesCreateResponse:
      description: Base type for complex types
      properties:
        availability_zone_profile:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            availability_zone_data:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
            provider_name:
              type: string
          type: object
      type: object
    LbaasAvailabilityzoneprofilesListResponse:
      description: Base type for complex types
      properties:
        availability_zone_profile_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
        availability_zone_profiles:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              availability_zone_data:
                type: string
              id:
                format: uuid
                type: string
              name:
                type: string
              provider_name:
                type: string
            type: object
          type: array
      type: object
    LbaasAvailabilityzonesCreateResponse:
      description: Base type for complex types
      properties:
        availability_zone:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            availability_zone_profile_id:
              type: string
            description:
              type: string
            enabled:
              type: boolean
            name:
              type: string
          type: object
      type: object
    LbaasAvailabilityzonesListResponse:
      description: Base type for complex types
      properties:
        availability_zones:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              availability_zone_profile_id:
                type: string
              description:
                type: string
              enabled:
                type: boolean
              name:
                type: string
            type: object
          type: array
        availability_zones_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasFlavorShowResponse:
      description: Base type for complex types
      properties:
        flavor:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            description:
              type: string
            enabled:
              type: boolean
            flavor_profile_id:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
          type: object
      type: object
    LbaasFlavorUpdateResponse:
      description: Base type for complex types
      properties:
        flavor:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            description:
              type: string
            enabled:
              type: boolean
            flavor_profile_id:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
          type: object
      type: object
    LbaasFlavorprofileShowResponse:
      description: Base type for complex types
      properties:
        flavorprofile:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            flavor_data:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
            provider_name:
              type: string
          type: object
      type: object
    LbaasFlavorprofileUpdateResponse:
      description: Base type for complex types
      properties:
        flavorprofile:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            flavor_data:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
            provider_name:
              type: string
          type: object
      type: object
    LbaasFlavorprofilesCreateResponse:
      description: Base type for complex types
      properties:
        flavorprofile:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            flavor_data:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
            provider_name:
              type: string
          type: object
      type: object
    LbaasFlavorprofilesListResponse:
      description: Base type for complex types
      properties:
        flavorprofile_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
        flavorprofiles:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              flavor_data:
                type: string
              id:
                format: uuid
                type: string
              name:
                type: string
              provider_name:
                type: string
            type: object
          type: array
      type: object
    LbaasFlavorsCreateResponse:
      description: Base type for complex types
      properties:
        flavor:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            description:
              type: string
            enabled:
              type: boolean
            flavor_profile_id:
              type: string
            id:
              format: uuid
              type: string
            name:
              type: string
          type: object
      type: object
    LbaasFlavorsListResponse:
      description: Base type for complex types
      properties:
        flavors:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              description:
                type: string
              enabled:
                type: boolean
              flavor_profile_id:
                type: string
              id:
                format: uuid
                type: string
              name:
                type: string
            type: object
          type: array
        flavors_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasGetResponse:
      type: string
    LbaasHealthmonitorShowResponse:
      description: Base type for complex types
      properties:
        healthmonitor:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            delay:
              description: |-
                The time, in seconds, between sending probes to members.
              type: integer
            domain_name:
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
              type: string
            expected_codes:
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`
              type: string
            http_method:
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`.
              type: string
            http_version:
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
              format: float
              type: number
            id:
              description: |-
                The associated health monitor ID.
              format: uuid
              type: string
            max_retries:
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
              type: integer
            max_retries_down:
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            pools:
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout:
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
              type: integer
            type:
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            url_path:
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`).
              type: string
          type: object
      type: object
    LbaasHealthmonitorUpdateResponse:
      description: Base type for complex types
      properties:
        healthmonitor:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            delay:
              description: |-
                The time, in seconds, between sending probes to members.
              type: integer
            domain_name:
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
              type: string
            expected_codes:
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`
              type: string
            http_method:
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`.
              type: string
            http_version:
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
              format: float
              type: number
            id:
              description: |-
                The associated health monitor ID.
              format: uuid
              type: string
            max_retries:
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
              type: integer
            max_retries_down:
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            pools:
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout:
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
              type: integer
            type:
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            url_path:
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`).
              type: string
          type: object
      type: object
    LbaasHealthmonitorsCreateResponse:
      description: Base type for complex types
      properties:
        healthmonitor:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            delay:
              description: |-
                The time, in seconds, between sending probes to members.
              type: integer
            domain_name:
              description: |-
                The domain name, which be injected into the HTTP Host Header to the backend
                server for HTTP health check.

                **New in version 2.10**
              type: string
            expected_codes:
              description: |-
                The list of HTTP status codes expected in response from the member to
                declare it healthy. Specify one of the following values:

                * A single value, such as `200`
                * A list, such as `200, 202`
                * A range, such as `200-204`
              type: string
            http_method:
              description: |-
                The HTTP method that the health monitor uses for requests. One of
                `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                `POST`, `PUT`, or `TRACE`.
              type: string
            http_version:
              description: |-
                The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                **New in version 2.10**
              format: float
              type: number
            id:
              description: |-
                The associated health monitor ID.
              format: uuid
              type: string
            max_retries:
              description: |-
                The number of successful checks before changing the `operating status`
                of the member to `ONLINE`. A valid value is from `1` to `10`.
              type: integer
            max_retries_down:
              description: |-
                The number of allowed check failures before changing the `operating
                status` of the member to `ERROR`. A valid value is from `1` to `10`.
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            pools:
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout:
              description: |-
                The maximum time, in seconds, that a monitor waits to connect before it
                times out. This value must be less than the delay value.
              type: integer
            type:
              description: |-
                The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            url_path:
              description: |-
                The HTTP URL path of the request sent by the monitor to test the health of
                a backend member. Must be a string that begins with a forward slash
                (`/`).
              type: string
          type: object
      type: object
    LbaasHealthmonitorsListResponse:
      description: Base type for complex types
      properties:
        healthmonitors:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              delay:
                description: |-
                  The time, in seconds, between sending probes to members.
                type: integer
              domain_name:
                description: |-
                  The domain name, which be injected into the HTTP Host Header to the backend
                  server for HTTP health check.

                  **New in version 2.10**
                type: string
              expected_codes:
                description: |-
                  The list of HTTP status codes expected in response from the member to
                  declare it healthy. Specify one of the following values:

                  * A single value, such as `200`
                  * A list, such as `200, 202`
                  * A range, such as `200-204`
                type: string
              http_method:
                description: |-
                  The HTTP method that the health monitor uses for requests. One of
                  `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`,
                  `POST`, `PUT`, or `TRACE`.
                type: string
              http_version:
                description: |-
                  The HTTP version. One of `1.0` or `1.1`. The default is `1.0`.

                  **New in version 2.10**
                format: float
                type: number
              id:
                description: |-
                  The associated health monitor ID.
                format: uuid
                type: string
              max_retries:
                description: |-
                  The number of successful checks before changing the `operating status`
                  of the member to `ONLINE`. A valid value is from `1` to `10`.
                type: integer
              max_retries_down:
                description: |-
                  The number of allowed check failures before changing the `operating
                  status` of the member to `ERROR`. A valid value is from `1` to `10`.
                type: integer
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              operating_status:
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
                type: string
              pools:
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              provisioning_status:
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                type: string
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              timeout:
                description: |-
                  The maximum time, in seconds, that a monitor waits to connect before it
                  times out. This value must be less than the delay value.
                type: integer
              type:
                description: |-
                  The type of health monitor. One of `HTTP`, `HTTPS`, `PING`,
                  `SCTP`, `TCP`, `TLS-HELLO`, or `UDP-CONNECT`.
                type: string
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
              url_path:
                description: |-
                  The HTTP URL path of the request sent by the monitor to test the health of
                  a backend member. Must be a string that begins with a forward slash
                  (`/`).
                type: string
            type: object
          type: array
        healthmonitors_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasL7PoliciesCreateResponse:
      description: Base type for complex types
      properties:
        l7policy:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            action:
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            id:
              description: |-
                The ID of the L7 policy.
              format: uuid
              type: string
            listener_id:
              description: |-
                The ID of the listener.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            position:
              description: |-
                The position of this policy on the listener. Positions start at 1.
              type: integer
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            redirect_http_code:
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
              type: integer
            redirect_pool_id:
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            redirect_prefix:
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
              type: string
            redirect_url:
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
              type: string
            rules:
              description: |-
                List of associated L7 rule IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasL7PoliciesListResponse:
      description: Base type for complex types
      properties:
        l7policies:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              action:
                description: |-
                  The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                  `REDIRECT_TO_URL`, or `REJECT`.
                type: string
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                type: string
              id:
                description: |-
                  The ID of the L7 policy.
                format: uuid
                type: string
              listener_id:
                description: |-
                  The ID of the listener.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              operating_status:
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
                type: string
              position:
                description: |-
                  The position of this policy on the listener. Positions start at 1.
                type: integer
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              provisioning_status:
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                type: string
              redirect_http_code:
                description: |-
                  Requests matching this policy will be redirected to the specified URL or
                  Prefix URL with the HTTP response code. Valid if `action` is
                  `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                  303, 307, or 308. Default is 302.

                  **New in version 2.9**
                type: integer
              redirect_pool_id:
                description: |-
                  Requests matching this policy will be redirected to the pool with this ID.
                  Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                  restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
                format: uuid
                type: string
              redirect_prefix:
                description: |-
                  Requests matching this policy will be redirected to this Prefix URL.
                  Only valid if `action` is `REDIRECT_PREFIX`.
                type: string
              redirect_url:
                description: |-
                  Requests matching this policy will be redirected to this URL.
                  Only valid if `action` is `REDIRECT_TO_URL`.
                type: string
              rules:
                description: |-
                  List of associated L7 rule IDs.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
            type: object
          type: array
        l7policies_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasL7PoliciesRuleCreateResponse:
      description: Base type for complex types
      properties:
        rule:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            compare_type:
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            id:
              description: |-
                The ID of the L7 rule.
              format: uuid
              type: string
            invert:
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
              type: boolean
            key:
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            type:
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            value:
              description: |-
                The value to use for the comparison. For example, the file type to compare.
              type: string
          type: object
      type: object
    LbaasL7PoliciesRuleUpdateResponse:
      description: Base type for complex types
      properties:
        rule:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            compare_type:
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            id:
              description: |-
                The ID of the L7 rule.
              format: uuid
              type: string
            invert:
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
              type: boolean
            key:
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            type:
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            value:
              description: |-
                The value to use for the comparison. For example, the file type to compare.
              type: string
          type: object
      type: object
    LbaasL7PoliciesRulesCreateResponse:
      description: Base type for complex types
      properties:
        rule:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            compare_type:
              description: |-
                The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            id:
              description: |-
                The ID of the L7 rule.
              format: uuid
              type: string
            invert:
              description: |-
                When `true` the logic of the rule is inverted. For example, with
                invert `true`, equal to would become not equal to.
              type: boolean
            key:
              description: |-
                The key to use for the comparison. For example, the name of the cookie
                to evaluate.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            type:
              description: |-
                The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                or `SSL_DN_FIELD`.
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            value:
              description: |-
                The value to use for the comparison. For example, the file type to compare.
              type: string
          type: object
      type: object
    LbaasL7PoliciesRulesListResponse:
      description: Base type for complex types
      properties:
        rules:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              compare_type:
                description: |-
                  The comparison type for the L7 rule. One of `CONTAINS`, `ENDS_WITH`,
                  `EQUAL_TO`, `REGEX`, or `STARTS_WITH`.
                type: string
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              id:
                description: |-
                  The ID of the L7 rule.
                format: uuid
                type: string
              invert:
                description: |-
                  When `true` the logic of the rule is inverted. For example, with
                  invert `true`, equal to would become not equal to.
                type: boolean
              key:
                description: |-
                  The key to use for the comparison. For example, the name of the cookie
                  to evaluate.
                type: string
              operating_status:
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
                type: string
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              provisioning_status:
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                type: string
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              type:
                description: |-
                  The L7 rule type. One of `COOKIE`, `FILE_TYPE`, `HEADER`,
                  `HOST_NAME`, `PATH`, `SSL_CONN_HAS_CERT`, `SSL_VERIFY_RESULT`,
                  or `SSL_DN_FIELD`.
                type: string
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
              value:
                description: |-
                  The value to use for the comparison. For example, the file type to compare.
                type: string
            type: object
          type: array
        rules_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasL7PolicyGetResponse:
      description: Base type for complex types
      properties:
        l7policy:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            action:
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            id:
              description: |-
                The ID of the L7 policy.
              format: uuid
              type: string
            listener_id:
              description: |-
                The ID of the listener.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            position:
              description: |-
                The position of this policy on the listener. Positions start at 1.
              type: integer
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            redirect_http_code:
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
              type: integer
            redirect_pool_id:
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            redirect_prefix:
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
              type: string
            redirect_url:
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
              type: string
            rules:
              description: |-
                List of associated L7 rule IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasL7PolicyUpdateResponse:
      description: Base type for complex types
      properties:
        l7policy:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            action:
              description: |-
                The L7 policy action. One of `REDIRECT_PREFIX`, `REDIRECT_TO_POOL`,
                `REDIRECT_TO_URL`, or `REJECT`.
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            id:
              description: |-
                The ID of the L7 policy.
              format: uuid
              type: string
            listener_id:
              description: |-
                The ID of the listener.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            position:
              description: |-
                The position of this policy on the listener. Positions start at 1.
              type: integer
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            redirect_http_code:
              description: |-
                Requests matching this policy will be redirected to the specified URL or
                Prefix URL with the HTTP response code. Valid if `action` is
                `REDIRECT_TO_URL` or `REDIRECT_PREFIX`. Valid options are: 301, 302,
                303, 307, or 308. Default is 302.

                **New in version 2.9**
              type: integer
            redirect_pool_id:
              description: |-
                Requests matching this policy will be redirected to the pool with this ID.
                Only valid if `action` is `REDIRECT_TO_POOL`. The pool has some
                restrictions, See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            redirect_prefix:
              description: |-
                Requests matching this policy will be redirected to this Prefix URL.
                Only valid if `action` is `REDIRECT_PREFIX`.
              type: string
            redirect_url:
              description: |-
                Requests matching this policy will be redirected to this URL.
                Only valid if `action` is `REDIRECT_TO_URL`.
              type: string
            rules:
              description: |-
                List of associated L7 rule IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasListenerShowResponse:
      description: Base type for complex types
      properties:
        listener:
          description: |-
            A listener object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            allowed_cidrs:
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs.

                **New in version 2.12**
              items:
                format: cidr
                type: string
              type: array
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
              items:
                format: alpn_protocol
                type: string
              type: array
            client_authentication:
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
              type: string
            client_ca_tls_container_ref:
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
              type: string
            client_crl_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
              type: string
            connection_limit:
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
              type: integer
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            default_pool_id:
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            default_tls_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            hsts_include_subdomains:
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
              type: boolean
            hsts_max_age:
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.

                **New in version 2.27**
              type: integer
            hsts_preload:
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
              type: boolean
            id:
              description: |-
                The ID of the listener.
              format: uuid
              type: string
            insert_headers:
              additionalProperties:
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
              type: object
            l7policies:
              description: |-
                A list of L7 policy IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            loadbalancers:
              description: |-
                A list of load balancer IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
              type: string
            protocol_port:
              description: |-
                The protocol port number for the resource.
              type: integer
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            sni_container_refs:
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
              items:
                type: string
              type: array
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout_client_data:
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              type: integer
            timeout_member_connect:
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
              type: integer
            timeout_member_data:
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              type: integer
            timeout_tcp_inspect:
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
              type: integer
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              type: string
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                type: string
              type: array
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasListenerUpdateResponse:
      description: Base type for complex types
      properties:
        listener:
          description: |-
            A listener object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            allowed_cidrs:
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs.

                **New in version 2.12**
              items:
                format: cidr
                type: string
              type: array
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
              items:
                format: alpn_protocol
                type: string
              type: array
            client_authentication:
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
              type: string
            client_ca_tls_container_ref:
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
              type: string
            client_crl_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
              type: string
            connection_limit:
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
              type: integer
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            default_pool_id:
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            default_tls_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            hsts_include_subdomains:
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
              type: boolean
            hsts_max_age:
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.

                **New in version 2.27**
              type: integer
            hsts_preload:
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
              type: boolean
            id:
              description: |-
                The ID of the listener.
              format: uuid
              type: string
            insert_headers:
              additionalProperties:
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
              type: object
            l7policies:
              description: |-
                A list of L7 policy IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            loadbalancers:
              description: |-
                A list of load balancer IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
              type: string
            protocol_port:
              description: |-
                The protocol port number for the resource.
              type: integer
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            sni_container_refs:
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
              items:
                type: string
              type: array
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout_client_data:
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              type: integer
            timeout_member_connect:
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
              type: integer
            timeout_member_data:
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              type: integer
            timeout_tcp_inspect:
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
              type: integer
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              type: string
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                type: string
              type: array
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasListenersCreateResponse:
      description: Base type for complex types
      properties:
        listener:
          description: |-
            A listener object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            allowed_cidrs:
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs.

                **New in version 2.12**
              items:
                format: cidr
                type: string
              type: array
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
              items:
                format: alpn_protocol
                type: string
              type: array
            client_authentication:
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
              type: string
            client_ca_tls_container_ref:
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
              type: string
            client_crl_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
              type: string
            connection_limit:
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
              type: integer
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            default_pool_id:
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            default_tls_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            hsts_include_subdomains:
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
              type: boolean
            hsts_max_age:
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.

                **New in version 2.27**
              type: integer
            hsts_preload:
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header.

                **New in version 2.27**
              type: boolean
            id:
              description: |-
                The ID of the listener.
              format: uuid
              type: string
            insert_headers:
              additionalProperties:
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
              type: object
            l7policies:
              description: |-
                A list of L7 policy IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            loadbalancers:
              description: |-
                A list of load balancer IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
              type: string
            protocol_port:
              description: |-
                The protocol port number for the resource.
              type: integer
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            sni_container_refs:
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
              items:
                type: string
              type: array
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout_client_data:
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              type: integer
            timeout_member_connect:
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
              type: integer
            timeout_member_data:
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              type: integer
            timeout_tcp_inspect:
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
              type: integer
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              type: string
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                type: string
              type: array
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasListenersListResponse:
      description: Base type for complex types
      properties:
        listeners:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              allowed_cidrs:
                description: |-
                  A list of IPv4, IPv6 or mix of both CIDRs.

                  **New in version 2.12**
                items:
                  format: cidr
                  type: string
                type: array
              alpn_protocols:
                description: |-
                  A list of ALPN protocols.
                  Available protocols: http/1.0, http/1.1, h2

                  **New in version 2.20**
                items:
                  format: alpn_protocol
                  type: string
                type: array
              client_authentication:
                description: |-
                  The TLS client authentication mode. One of the options `NONE`,
                  `OPTIONAL` or `MANDATORY`.

                  **New in version 2.8**
                type: string
              client_ca_tls_container_ref:
                description: |-
                  The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                  listeners.

                  **New in version 2.8**
                type: string
              client_crl_container_ref:
                description: |-
                  The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                  **New in version 2.8**
                type: string
              connection_limit:
                description: |-
                  The maximum number of connections permitted for this listener. Default
                  value is -1 which represents infinite connections or a default value
                  defined by the provider driver.
                type: integer
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              default_pool_id:
                description: |-
                  The ID of the pool used by the listener if no L7 policies match. The pool
                  has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
                format: uuid
                type: string
              default_tls_container_ref:
                description: |-
                  The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                  DEPRECATED: A secret container of type “certificate” containing the
                  certificate and key for `TERMINATED_HTTPS` listeners.
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                type: string
              hsts_include_subdomains:
                description: |-
                  Defines whether the `includeSubDomains` directive should be
                  added to the Strict-Transport-Security HTTP response
                  header.

                  **New in version 2.27**
                type: boolean
              hsts_max_age:
                description: |-
                  The value of the `max_age` directive for the
                  Strict-Transport-Security HTTP response header.

                  **New in version 2.27**
                type: integer
              hsts_preload:
                description: |-
                  Defines whether the `preload` directive should be
                  added to the Strict-Transport-Security HTTP response
                  header.

                  **New in version 2.27**
                type: boolean
              id:
                description: |-
                  The ID of the listener.
                format: uuid
                type: string
              insert_headers:
                additionalProperties:
                  type: string
                description: |-
                  A dictionary of optional headers to insert into the request before it is
                  sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                  and values are always specified as strings.
                type: object
              l7policies:
                description: |-
                  A list of L7 policy IDs.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              loadbalancers:
                description: |-
                  A list of load balancer IDs.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              operating_status:
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
                type: string
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              protocol:
                description: |-
                  The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                  `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
                type: string
              protocol_port:
                description: |-
                  The protocol port number for the resource.
                type: integer
              provisioning_status:
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                type: string
              sni_container_refs:
                description: |-
                  A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                  PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                  (DEPRECATED) Secret containers of type “certificate” containing the
                  certificates and keys for `TERMINATED_HTTPS` listeners.
                items:
                  type: string
                type: array
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              timeout_client_data:
                description: |-
                  Frontend client inactivity timeout in milliseconds. Default: 50000.

                  **New in version 2.1**
                type: integer
              timeout_member_connect:
                description: |-
                  Backend member connection timeout in milliseconds. Default: 5000.

                  **New in version 2.1**
                type: integer
              timeout_member_data:
                description: |-
                  Backend member inactivity timeout in milliseconds. Default: 50000.

                  **New in version 2.1**
                type: integer
              timeout_tcp_inspect:
                description: |-
                  Time, in milliseconds, to wait for additional TCP packets for content
                  inspection. Default: 0.

                  **New in version 2.1**
                type: integer
              tls_ciphers:
                description: |-
                  List of ciphers in OpenSSL format (colon-separated).
                  See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                  **New in version 2.15**
                type: string
              tls_versions:
                description: |-
                  A list of TLS protocol versions.
                  Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                  **New in version 2.17**
                items:
                  type: string
                type: array
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
            type: object
          type: array
        listeners_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasListenersStatsResponse:
      description: Base type for complex types
      properties:
        stats:
          description: |-
            A statistics object.
          properties:
            active_connections:
              description: |-
                The currently active connections.
              type: integer
            bytes_in:
              description: |-
                The total bytes received.
              type: integer
            bytes_out:
              description: |-
                The total bytes sent.
              type: integer
            request_errors:
              description: |-
                The total requests that were unable to be fulfilled.
              type: integer
            total_connections:
              description: |-
                The total connections handled.
              type: integer
          type: object
      type: object
    LbaasLoadbalancerShowResponse:
      description: Base type for complex types
      properties:
        loadbalancer:
          description: |-
            A load balancer object.
          properties:
            additional_vips:
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
              items:
                description: |-
                  Type for additional vips
                properties:
                  ip_address:
                    format: ipaddress
                    type: string
                  subnet_id:
                    format: uuid
                    type: string
                required:
                  - subnet_id
                type: object
              type: array
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            availability_zone:
              description: |-
                An availability zone name.
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the load balancer.
              format: uuid
              type: string
            listeners:
              description: |-
                The associated listener IDs, if any.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            pools:
              description: |-
                The associated pool IDs, if any.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provider:
              description: |-
                Provider name for the load balancer.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            vip_address:
              description: |-
                The IP address of the Virtual IP (VIP).
              format: ipaddress
              type: string
            vip_network_id:
              description: |-
                The ID of the network for the Virtual IP (VIP).
              format: uuid
              type: string
            vip_port_id:
              description: |-
                The ID of the Virtual IP (VIP) port.
              format: uuid
              type: string
            vip_qos_policy_id:
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
              format: uuid
              type: string
            vip_sg_ids:
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
              items:
                format: uuid
                type: string
              type: array
            vip_subnet_id:
              description: |-
                The ID of the subnet for the Virtual IP (VIP).
              format: uuid
              type: string
            vip_vnic_type:
              description: |-
                The VIP vNIC type used for the load balancer. One of `normal` or
                `direct`.

                **New in version 2.28**
              type: string
          type: object
      type: object
    LbaasLoadbalancerUpdateResponse:
      description: Base type for complex types
      properties:
        loadbalancer:
          description: |-
            A load balancer object.
          properties:
            additional_vips:
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
              items:
                description: |-
                  Type for additional vips
                properties:
                  ip_address:
                    format: ipaddress
                    type: string
                  subnet_id:
                    format: uuid
                    type: string
                required:
                  - subnet_id
                type: object
              type: array
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            availability_zone:
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the load balancer.
              format: uuid
              type: string
            listeners:
              description: |-
                The associated listener IDs, if any.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            pools:
              description: |-
                The associated pool IDs, if any.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            provider:
              description: |-
                Provider name for the load balancer.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            vip_address:
              description: |-
                The IP address of the Virtual IP (VIP).
              format: ipaddress
              type: string
            vip_network_id:
              description: |-
                The ID of the network for the Virtual IP (VIP).
              format: uuid
              type: string
            vip_port_id:
              description: |-
                The ID of the Virtual IP (VIP) port.
              format: uuid
              type: string
            vip_qos_policy_id:
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
              format: uuid
              type: string
            vip_sg_ids:
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
              items:
                format: uuid
                type: string
              type: array
            vip_subnet_id:
              description: |-
                The ID of the subnet for the Virtual IP (VIP).
              format: uuid
              type: string
            vip_vnic_type:
              description: |-
                The VIP vNIC type used for the load balancer. One of `normal` or
                `direct`.

                **New in version 2.28**
              type: string
          type: object
      type: object
    LbaasLoadbalancersCreateResponse:
      description: Base type for complex types
      properties:
        loadbalancer:
          description: |-
            A load balancer object.
          properties:
            additional_vips:
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
              items:
                description: |-
                  Type for additional vips
                properties:
                  ip_address:
                    format: ipaddress
                    type: string
                  subnet_id:
                    format: uuid
                    type: string
                required:
                  - subnet_id
                type: object
              type: array
            admin_state_up:
              type: boolean
            availability_zone:
              description: |-
                An availability zone name.
              type: string
            created_at:
              format: date-time
              type: string
            description:
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type: string
            id:
              format: uuid
              type: string
            listeners:
              description: |-
                The associated listener IDs, if any.
              items:
                description: |-
                  Defines which attributes are to be shown on any response.
                properties:
                  admin_state_up:
                    type: boolean
                  allowed_cidrs:
                    items:
                      format: cidr
                      type: string
                    type: array
                  alpn_protocols:
                    items:
                      format: alpn_protocol
                      type: string
                    type: array
                  client_authentication:
                    type: string
                  client_ca_tls_container_ref:
                    type: string
                  client_crl_container_ref:
                    type: string
                  connection_limit:
                    type: integer
                  created_at:
                    format: date-time
                    type: string
                  default_pool_id:
                    format: uuid
                    type: string
                  default_tls_container_ref:
                    type: string
                  description:
                    type: string
                  hsts_include_subdomains:
                    type: boolean
                  hsts_max_age:
                    type: integer
                  hsts_preload:
                    type: boolean
                  id:
                    format: uuid
                    type: string
                  insert_headers:
                    additionalProperties:
                      type: string
                    type: object
                  l7policies:
                    items:
                      description: |-
                        Defines which attributes are to be shown on any response.
                      properties:
                        action:
                          type: string
                        admin_state_up:
                          type: boolean
                        created_at:
                          format: date-time
                          type: string
                        description:
                          description: |-
                            A human-readable description for the resource.
                          type: string
                        id:
                          format: uuid
                          type: string
                        listener_id:
                          format: uuid
                          type: string
                        name:
                          description: |-
                            Human-readable name of the resource.
                          type: string
                        operating_status:
                          type: string
                        position:
                          type: integer
                        project_id:
                          type: string
                        provisioning_status:
                          type: string
                        redirect_http_code:
                          type: integer
                        redirect_pool_id:
                          format: uuid
                          type: string
                        redirect_prefix:
                          type: string
                        redirect_url:
                          type: string
                        rules:
                          items:
                            description: |-
                              Defines which attributes are to be shown on any response.
                            properties:
                              admin_state_up:
                                description: |-
                                  The administrative state of the resource, which is
                                  up (`true`) or down (`false`).
                                type: boolean
                              compare_type:
                                type: string
                              created_at:
                                description: |-
                                  The UTC date and timestamp when the resource was created.
                                format: date-time
                                type: string
                              id:
                                description: |-
                                  The ID of the load balancer.
                                format: uuid
                                type: string
                              invert:
                                type: boolean
                              key:
                                type: string
                              operating_status:
                                description: |-
                                  The operating status of the resource. See [Operating Status Codes](#op-status).
                                type: string
                              project_id:
                                description: |-
                                  The ID of the project owning this resource.
                                type: string
                              provisioning_status:
                                description: |-
                                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                                type: string
                              tags:
                                description: |-
                                  A list of simple strings assigned to the resource.

                                  **New in version 2.5**
                                items:
                                  type: string
                                type: array
                              tenant_id:
                                maxLength: 36
                                type: string
                              type:
                                type: string
                              updated_at:
                                description: |-
                                  The UTC date and timestamp when the resource was last updated.
                                format: date-time
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        tags:
                          items:
                            type: string
                          type: array
                        tenant_id:
                          maxLength: 36
                          type: string
                        updated_at:
                          format: date-time
                          type: string
                      type: object
                    type: array
                  loadbalancers:
                    items:
                      description: |-
                        Base type for complex types
                      properties:
                        id:
                          format: uuid
                          type: string
                      required:
                        - id
                      type: object
                    type: array
                  name:
                    type: string
                  operating_status:
                    type: string
                  project_id:
                    type: string
                  protocol:
                    type: string
                  protocol_port:
                    type: integer
                  provisioning_status:
                    type: string
                  sni_container_refs:
                    items:
                      type: string
                    type: array
                  tags:
                    items:
                      type: string
                    type: array
                  tenant_id:
                    maxLength: 36
                    type: string
                  timeout_client_data:
                    type: integer
                  timeout_member_connect:
                    type: integer
                  timeout_member_data:
                    type: integer
                  timeout_tcp_inspect:
                    type: integer
                  tls_ciphers:
                    type: string
                  tls_versions:
                    items:
                      type: string
                    type: array
                  updated_at:
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              type: string
            operating_status:
              type: string
            pools:
              description: |-
                The associated pool IDs, if any.
              items:
                description: |-
                  Defines which attributes are to be shown on any response.
                properties:
                  admin_state_up:
                    type: boolean
                  alpn_protocols:
                    items:
                      format: alpn_protocol
                      type: string
                    type: array
                  ca_tls_container_ref:
                    type: string
                  created_at:
                    format: date-time
                    type: string
                  crl_container_ref:
                    type: string
                  description:
                    type: string
                  healthmonitor:
                    description: |-
                      Defines which attributes are to be shown on any response.
                    properties:
                      admin_state_up:
                        type: boolean
                      created_at:
                        format: date-time
                        type: string
                      delay:
                        type: integer
                      domain_name:
                        type: string
                      expected_codes:
                        type: string
                      http_method:
                        type: string
                      http_version:
                        format: float
                        type: number
                      id:
                        format: uuid
                        type: string
                      max_retries:
                        type: integer
                      max_retries_down:
                        type: integer
                      name:
                        type: string
                      operating_status:
                        type: string
                      pools:
                        items:
                          description: |-
                            Base type for complex types
                          properties:
                            id:
                              format: uuid
                              type: string
                          required:
                            - id
                          type: object
                        type: array
                      project_id:
                        type: string
                      provisioning_status:
                        type: string
                      tags:
                        items:
                          type: string
                        type: array
                      tenant_id:
                        maxLength: 36
                        type: string
                      timeout:
                        type: integer
                      type:
                        type: string
                      updated_at:
                        format: date-time
                        type: string
                      url_path:
                        type: string
                    type: object
                  healthmonitor_id:
                    format: uuid
                    type: string
                  id:
                    format: uuid
                    type: string
                  lb_algorithm:
                    type: string
                  listeners:
                    items:
                      description: |-
                        Base type for complex types
                      properties:
                        id:
                          format: uuid
                          type: string
                      required:
                        - id
                      type: object
                    type: array
                  loadbalancers:
                    items:
                      description: |-
                        Base type for complex types
                      properties:
                        id:
                          format: uuid
                          type: string
                      required:
                        - id
                      type: object
                    type: array
                  members:
                    items:
                      description: |-
                        Defines which attributes are to be shown on any response.
                      properties:
                        address:
                          format: ipaddress
                          type: string
                        admin_state_up:
                          type: boolean
                        backup:
                          type: boolean
                        created_at:
                          format: date-time
                          type: string
                        id:
                          format: uuid
                          type: string
                        monitor_address:
                          format: ipaddress
                          type: string
                        monitor_port:
                          type: integer
                        name:
                          type: string
                        operating_status:
                          type: string
                        project_id:
                          type: string
                        protocol_port:
                          type: integer
                        provisioning_status:
                          type: string
                        subnet_id:
                          format: uuid
                          type: string
                        tags:
                          items:
                            type: string
                          type: array
                        tenant_id:
                          maxLength: 36
                          type: string
                        updated_at:
                          format: date-time
                          type: string
                        vnic_type:
                          type: string
                        weight:
                          type: integer
                      type: object
                    type: array
                  name:
                    type: string
                  operating_status:
                    type: string
                  project_id:
                    type: string
                  protocol:
                    type: string
                  provisioning_status:
                    type: string
                  session_persistence:
                    description: |-
                      Defines which attributes are to be shown on any response.
                    properties:
                      cookie_name:
                        type: string
                      persistence_granularity:
                        format: ipaddress
                        type: string
                      persistence_timeout:
                        type: integer
                      type:
                        type: string
                    type: object
                  tags:
                    items:
                      type: string
                    type: array
                  tenant_id:
                    maxLength: 36
                    type: string
                  tls_ciphers:
                    type: string
                  tls_container_ref:
                    type: string
                  tls_enabled:
                    type: boolean
                  tls_versions:
                    items:
                      type: string
                    type: array
                  updated_at:
                    format: date-time
                    type: string
                type: object
              type: array
            project_id:
              type: string
            provider:
              description: |-
                Provider name for the load balancer.
              type: string
            provisioning_status:
              type: string
            tags:
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              format: date-time
              type: string
            vip_address:
              description: |-
                The IP address of the Virtual IP (VIP).
              format: ipaddress
              type: string
            vip_network_id:
              description: |-
                The ID of the network for the Virtual IP (VIP).
              format: uuid
              type: string
            vip_port_id:
              description: |-
                The ID of the Virtual IP (VIP) port.
              format: uuid
              type: string
            vip_qos_policy_id:
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
              format: uuid
              type: string
            vip_sg_ids:
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
              items:
                format: uuid
                type: string
              type: array
            vip_subnet_id:
              description: |-
                The ID of the subnet for the Virtual IP (VIP).
              format: uuid
              type: string
            vip_vnic_type:
              description: |-
                The VIP vNIC type used for the load balancer. One of `normal` or
                `direct`.

                **New in version 2.28**
              type: string
          type: object
      type: object
    LbaasLoadbalancersFailoverFailoverRequest:
      type: 'null'
    LbaasLoadbalancersFailoverResponse:
      description: Response of the 
        lbaas/loadbalancers/loadbalancer_id/failover:put operation
      type: object
    LbaasLoadbalancersListResponse:
      description: Base type for complex types
      properties:
        loadbalancers:
          description: |-
            A list of `loadbalancer` objects.
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              additional_vips:
                description: |-
                  A list of JSON objects defining “additional VIPs”. The format for these
                  is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                  the `subnet_id` field is mandatory and the `ip_address` field is
                  optional. Additional VIP subnets must all belong to the same network as
                  the primary VIP.

                  **New in version 2.26**
                items:
                  description: |-
                    Type for additional vips
                  properties:
                    ip_address:
                      format: ipaddress
                      type: string
                    subnet_id:
                      format: uuid
                      type: string
                  required:
                    - subnet_id
                  type: object
                type: array
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              availability_zone:
                description: |-
                  An availability zone name.
                type: string
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                type: string
              flavor_id:
                description: |-
                  The ID of the flavor.
                format: uuid
                type: string
              id:
                description: |-
                  The ID of the load balancer.
                format: uuid
                type: string
              listeners:
                description: |-
                  The associated listener IDs, if any.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              operating_status:
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
                type: string
              pools:
                description: |-
                  The associated pool IDs, if any.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              provider:
                description: |-
                  Provider name for the load balancer.
                type: string
              provisioning_status:
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                type: string
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
              vip_address:
                description: |-
                  The IP address of the Virtual IP (VIP).
                format: ipaddress
                type: string
              vip_network_id:
                description: |-
                  The ID of the network for the Virtual IP (VIP).
                format: uuid
                type: string
              vip_port_id:
                description: |-
                  The ID of the Virtual IP (VIP) port.
                format: uuid
                type: string
              vip_qos_policy_id:
                description: |-
                  The ID of the QoS Policy which will apply to the Virtual IP (VIP).
                format: uuid
                type: string
              vip_sg_ids:
                description: |-
                  The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                  Balancer.

                  **New in version 2.29**
                items:
                  format: uuid
                  type: string
                type: array
              vip_subnet_id:
                description: |-
                  The ID of the subnet for the Virtual IP (VIP).
                format: uuid
                type: string
              vip_vnic_type:
                description: |-
                  The VIP vNIC type used for the load balancer. One of `normal` or
                  `direct`.

                  **New in version 2.28**
                type: string
            type: object
          type: array
        loadbalancers_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasLoadbalancersStatsResponse:
      description: Base type for complex types
      properties:
        stats:
          description: |-
            A statistics object.
          properties:
            active_connections:
              description: |-
                The currently active connections.
              type: integer
            bytes_in:
              description: |-
                The total bytes received.
              type: integer
            bytes_out:
              description: |-
                The total bytes sent.
              type: integer
            request_errors:
              description: |-
                The total requests that were unable to be fulfilled.
              type: integer
            total_connections:
              description: |-
                The total connections handled.
              type: integer
          type: object
      type: object
    LbaasLoadbalancersStatusResponse:
      description: Base type for complex types
      properties:
        statuses:
          description: |-
            The status tree of a load balancer object contains all provisioning and
            operating statuses for its children.
          properties:
            loadbalancer:
              description: |-
                A load balancer status object.
              properties:
                id:
                  description: |-
                    The ID of the resource.
                  format: uuid
                  type: string
                listeners:
                  description: |-
                    A list of listener status objects.
                  items:
                    description: |-
                      Defines which attributes are to be shown on status response.
                    properties:
                      id:
                        format: uuid
                        type: string
                      name:
                        type: string
                      operating_status:
                        type: string
                      pools:
                        description: |-
                          The list of pools status objects.
                        items:
                          description: |-
                            Defines which attributes are to be shown on status response.
                          properties:
                            health_monitor:
                              description: |-
                                Defines which attributes are to be shown on status response.
                              properties:
                                id:
                                  format: uuid
                                  type: string
                                name:
                                  type: string
                                operating_status:
                                  type: string
                                provisioning_status:
                                  type: string
                                type:
                                  description: |-
                                    The type associated with the resource.
                                  type: string
                              type: object
                            id:
                              format: uuid
                              type: string
                            members:
                              description: |-
                                A list of members status objects.
                              items:
                                description: |-
                                  Defines which attributes are to be shown on status response.
                                properties:
                                  address:
                                    description: |-
                                      The IP address of the resource.
                                    format: ipaddress
                                    type: string
                                  id:
                                    format: uuid
                                    type: string
                                  name:
                                    type: string
                                  operating_status:
                                    type: string
                                  protocol_port:
                                    description: |-
                                      The protocol port number for the resource.
                                    type: integer
                                  provisioning_status:
                                    type: string
                                type: object
                              type: array
                            name:
                              type: string
                            operating_status:
                              type: string
                            provisioning_status:
                              type: string
                          type: object
                        type: array
                      provisioning_status:
                        type: string
                    type: object
                  type: array
                name:
                  description: |-
                    Human-readable name of the resource.
                  type: string
                operating_status:
                  description: |-
                    The operating status of the resource. See [Operating Status Codes](#op-status).
                  type: string
                provisioning_status:
                  description: |-
                    The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                  type: string
              type: object
          type: object
      type: object
    LbaasPoolGetResponse:
      description: Base type for complex types
      properties:
        pool:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
              items:
                format: alpn_protocol
                type: string
              type: array
            ca_tls_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            crl_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            healthmonitor_id:
              description: |-
                The associated health monitor ID.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the pool.
              format: uuid
              type: string
            lb_algorithm:
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
              type: string
            listeners:
              description: |-
                A list of listener IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            loadbalancers:
              description: |-
                A list of load balancer IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            members:
              description: |-
                A list of member IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            session_persistence:
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
              properties:
                cookie_name:
                  type: string
                persistence_granularity:
                  format: ipaddress
                  type: string
                persistence_timeout:
                  type: integer
                type:
                  type: string
              type: object
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              type: string
            tls_container_ref:
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
              type: string
            tls_enabled:
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
              type: boolean
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                type: string
              type: array
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasPoolUpdateResponse:
      description: Base type for complex types
      properties:
        pool:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
              items:
                format: alpn_protocol
                type: string
              type: array
            ca_tls_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            crl_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            healthmonitor_id:
              description: |-
                The associated health monitor ID.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the pool.
              format: uuid
              type: string
            lb_algorithm:
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
              type: string
            listeners:
              description: |-
                A list of listener IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            loadbalancers:
              description: |-
                A list of load balancer IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            members:
              description: |-
                A list of member IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            session_persistence:
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
              properties:
                cookie_name:
                  type: string
                persistence_granularity:
                  format: ipaddress
                  type: string
                persistence_timeout:
                  type: integer
                type:
                  type: string
              type: object
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              type: string
            tls_container_ref:
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
              type: string
            tls_enabled:
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
              type: boolean
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                type: string
              type: array
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasPoolsCreateResponse:
      description: Base type for complex types
      properties:
        pool:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
              items:
                format: alpn_protocol
                type: string
              type: array
            ca_tls_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            crl_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              type: string
            healthmonitor_id:
              description: |-
                The associated health monitor ID.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the pool.
              format: uuid
              type: string
            lb_algorithm:
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
              type: string
            listeners:
              description: |-
                A list of listener IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            loadbalancers:
              description: |-
                A list of load balancer IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            members:
              description: |-
                A list of member IDs.
              items:
                description: |-
                  Base type for complex types
                properties:
                  id:
                    format: uuid
                    type: string
                required:
                  - id
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
              type: string
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            session_persistence:
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
              properties:
                cookie_name:
                  type: string
                persistence_granularity:
                  format: ipaddress
                  type: string
                persistence_timeout:
                  type: integer
                type:
                  type: string
              type: object
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              type: string
            tls_container_ref:
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
              type: string
            tls_enabled:
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
              type: boolean
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                type: string
              type: array
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
          type: object
      type: object
    LbaasPoolsListResponse:
      description: Base type for complex types
      properties:
        pools:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              alpn_protocols:
                description: |-
                  A list of ALPN protocols.
                  Available protocols: http/1.0, http/1.1, h2

                  **New in version 2.24**
                items:
                  format: alpn_protocol
                  type: string
                type: array
              ca_tls_container_ref:
                description: |-
                  The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format CA certificate bundle for `tls_enabled` pools.

                  **New in version 2.8**
                type: string
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              crl_container_ref:
                description: |-
                  The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PEM format CA revocation list file for `tls_enabled` pools.
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                type: string
              healthmonitor_id:
                description: |-
                  The associated health monitor ID.
                format: uuid
                type: string
              id:
                description: |-
                  The ID of the pool.
                format: uuid
                type: string
              lb_algorithm:
                description: |-
                  The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                  `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
                type: string
              listeners:
                description: |-
                  A list of listener IDs.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              loadbalancers:
                description: |-
                  A list of load balancer IDs.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              members:
                description: |-
                  A list of member IDs.
                items:
                  description: |-
                    Base type for complex types
                  properties:
                    id:
                      format: uuid
                      type: string
                  required:
                    - id
                  type: object
                type: array
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              operating_status:
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
                type: string
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              protocol:
                description: |-
                  The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                  `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
                type: string
              provisioning_status:
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                type: string
              session_persistence:
                description: |-
                  A JSON object specifying the session persistence for the pool or `null`
                  for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                  `null`.
                properties:
                  cookie_name:
                    type: string
                  persistence_granularity:
                    format: ipaddress
                    type: string
                  persistence_timeout:
                    type: integer
                  type:
                    type: string
                type: object
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              tls_ciphers:
                description: |-
                  List of ciphers in OpenSSL format (colon-separated).
                  See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                  **New in version 2.15**
                type: string
              tls_container_ref:
                description: |-
                  The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                  PKCS12 format certificate/key bundle for `tls_enabled` pools for
                  TLS client authentication to the member servers.

                  **New in version 2.8**
                type: string
              tls_enabled:
                description: |-
                  When `true` connections to backend member servers will use TLS
                  encryption. Default is `false`.

                  **New in version 2.8**
                type: boolean
              tls_versions:
                description: |-
                  A list of TLS protocol versions.
                  Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                  **New in version 2.17**
                items:
                  type: string
                type: array
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
            type: object
          type: array
        pools_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasPoolsMemberCreateResponse:
      description: Base type for complex types
      properties:
        member:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            address:
              description: |-
                The IP address of the backend member server.
              format: ipaddress
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            backup:
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            id:
              description: |-
                The ID of the member.
              format: uuid
              type: string
            monitor_address:
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
              format: ipaddress
              type: string
            monitor_port:
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol_port:
              description: |-
                The protocol port number the backend member server is listening on.
              type: integer
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            subnet_id:
              description: |-
                The subnet ID the member service is accessible from.
              format: uuid
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            vnic_type:
              description: |-
                The member vNIC type used for the member port. One of `normal` or
                `direct`.

                **New in version 2.29**
              type: string
            weight:
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
              type: integer
          type: object
      type: object
    LbaasPoolsMemberUpdateResponse:
      description: Base type for complex types
      properties:
        member:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            address:
              description: |-
                The IP address of the backend member server.
              format: ipaddress
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            backup:
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            id:
              description: |-
                The ID of the member.
              format: uuid
              type: string
            monitor_address:
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
              format: ipaddress
              type: string
            monitor_port:
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol_port:
              description: |-
                The protocol port number the backend member server is listening on.
              type: integer
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            subnet_id:
              description: |-
                The subnet ID the member service is accessible from.
              format: uuid
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            vnic_type:
              description: |-
                The member vNIC type used for the member port. One of `normal` or
                `direct`.

                **New in version 2.29**
              type: string
            weight:
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
              type: integer
          type: object
      type: object
    LbaasPoolsMembersCreateResponse:
      description: Base type for complex types
      properties:
        member:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            address:
              description: |-
                The IP address of the backend member server.
              format: ipaddress
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            backup:
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
              type: boolean
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            id:
              description: |-
                The ID of the member.
              format: uuid
              type: string
            monitor_address:
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
              format: ipaddress
              type: string
            monitor_port:
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            operating_status:
              description: |-
                The operating status of the resource. See [Operating Status Codes](#op-status).
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource.
              type: string
            protocol_port:
              description: |-
                The protocol port number the backend member server is listening on.
              type: integer
            provisioning_status:
              description: |-
                The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
              type: string
            subnet_id:
              description: |-
                The subnet ID the member service is accessible from.
              format: uuid
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            vnic_type:
              description: |-
                The member vNIC type used for the member port. One of `normal` or
                `direct`.

                **New in version 2.29**
              type: string
            weight:
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
              type: integer
          type: object
      type: object
    LbaasPoolsMembersListResponse:
      description: Base type for complex types
      properties:
        members:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              address:
                description: |-
                  The IP address of the backend member server.
                format: ipaddress
                type: string
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              backup:
                description: |-
                  Is the member a backup? Backup members only receive traffic when all
                  non-backup members are down.

                  **New in version 2.1**
                type: boolean
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              id:
                description: |-
                  The ID of the member.
                format: uuid
                type: string
              monitor_address:
                description: |-
                  An alternate IP address used for health monitoring a backend member.
                  Default is `null` which monitors the member `address`.
                format: ipaddress
                type: string
              monitor_port:
                description: |-
                  An alternate protocol port used for health monitoring a backend member.
                  Default is `null` which monitors the member `protocol_port`.
                type: integer
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              operating_status:
                description: |-
                  The operating status of the resource. See [Operating Status Codes](#op-status).
                type: string
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              protocol_port:
                description: |-
                  The protocol port number the backend member server is listening on.
                type: integer
              provisioning_status:
                description: |-
                  The provisioning status of the resource. See [Provisioning Status Codes](#prov-status).
                type: string
              subnet_id:
                description: |-
                  The subnet ID the member service is accessible from.
                format: uuid
                type: string
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
              vnic_type:
                description: |-
                  The member vNIC type used for the member port. One of `normal` or
                  `direct`.

                  **New in version 2.29**
                type: string
              weight:
                description: |-
                  The weight of a member determines the portion of requests or connections it
                  services compared to the other members of the pool. For example, a member
                  with a weight of 10 receives five times as many requests as a member with a
                  weight of 2. A value of 0 means the member does not receive new connections
                  but continues to service existing connections. A valid value is
                  from `0` to `256`. Default is `1`.
                type: integer
            type: object
          type: array
        members_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    LbaasProvidersAvailability_Zone_CapabilitiesAz_CapabilitiesResponse:
      description: Base type for complex types
      properties:
        availability_zone_capabilities:
          description: |-
            The provider availability zone capabilities dictionary object.
          items:
            description: |-
              Base type for complex types
            properties:
              description:
                description: |-
                  The provider availability zone capability description.
                type: string
              name:
                description: |-
                  The provider availability zone capability name.
                type: string
            type: object
          type: array
      type: object
    LbaasProvidersFlavor_CapabilitiesResponse:
      description: Base type for complex types
      properties:
        flavor_capabilities:
          description: |-
            The provider flavor capabilities dictionary object.
          items:
            description: |-
              Base type for complex types
            properties:
              description:
                description: |-
                  The provider flavor capability description.
                type: string
              name:
                description: |-
                  The provider flavor capability name.
                type: string
            type: object
          type: array
      type: object
    LbaasProvidersListResponse:
      description: Base type for complex types
      properties:
        providers:
          items:
            description: |-
              Base type for complex types
            properties:
              description:
                description: |-
                  Provider description.
                type: string
              name:
                description: |-
                  Provider name.
                type: string
            type: object
          type: array
      type: object
    LbaasQuotaGetResponse:
      description: Wrapper object for quotas responses.
      properties:
        quota:
          description: |-
            Individual quota definitions.
          properties:
            health_monitor:
              maximum: 2000000000
              minimum: -1
              type: integer
            healthmonitor:
              description: |-
                The configured health monitor quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1`
                means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            l7policy:
              description: |-
                The configured l7policy quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            l7rule:
              description: |-
                The configured l7rule quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            listener:
              description: |-
                The configured listener quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            load_balancer:
              maximum: 2000000000
              minimum: -1
              type: integer
            loadbalancer:
              description: |-
                The configured load balancer quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            member:
              description: |-
                The configured member quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            pool:
              description: |-
                The configured pool quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
          type: object
      type: object
    LbaasQuotaUpdateResponse:
      description: Wrapper object for quotas responses.
      properties:
        quota:
          description: |-
            Individual quota definitions.
          properties:
            health_monitor:
              maximum: 2000000000
              minimum: -1
              type: integer
            healthmonitor:
              description: |-
                The configured health monitor quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1`
                means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            l7policy:
              description: |-
                The configured l7policy quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            l7rule:
              description: |-
                The configured l7rule quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            listener:
              description: |-
                The configured listener quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            load_balancer:
              maximum: 2000000000
              minimum: -1
              type: integer
            loadbalancer:
              description: |-
                The configured load balancer quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            member:
              description: |-
                The configured member quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            pool:
              description: |-
                The configured pool quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
          type: object
      type: object
    LbaasQuotasListResponse:
      description: Base type for complex types
      properties:
        quotas:
          items:
            description: |-
              Wrapper object for get all quotas responses.
            properties:
              health_monitor:
                type: integer
              healthmonitor:
                description: |-
                  The configured health monitor quota limit. A setting of `null` means it
                  is using the deployment default quota. A setting of `-1`
                  means unlimited.
                type: integer
              l7policy:
                description: |-
                  The configured l7policy quota limit. A setting of `null` means it is
                  using the deployment default quota. A setting of `-1` means unlimited.
                type: integer
              l7rule:
                description: |-
                  The configured l7rule quota limit. A setting of `null` means it is
                  using the deployment default quota. A setting of `-1` means unlimited.
                type: integer
              listener:
                description: |-
                  The configured listener quota limit. A setting of `null` means it is
                  using the deployment default quota. A setting of `-1` means unlimited.
                type: integer
              load_balancer:
                type: integer
              loadbalancer:
                description: |-
                  The configured load balancer quota limit. A setting of `null` means it
                  is using the deployment default quota. A setting of `-1` means
                  unlimited.
                type: integer
              member:
                description: |-
                  The configured member quota limit. A setting of `null` means it is using
                  the deployment default quota. A setting of `-1` means unlimited.
                type: integer
              pool:
                description: |-
                  The configured pool quota limit. A setting of `null` means it is using
                  the deployment default quota. A setting of `-1` means unlimited.
                type: integer
              project_id:
                description: |-
                  The ID of the project owning this resource.
                type: string
              tenant_id:
                maxLength: 36
                type: string
            type: object
          type: array
        quotas_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    ListenerRootPOST:
      description: Base type for complex types
      properties:
        listener:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            allowed_cidrs:
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs. The default is all allowed.
                When a list of CIDRs is provided, the default switches to deny all.

                **New in version 2.12**
              items:
                format: cidr
                type: string
              type: array
            alpn_protocols:
              items:
                format: alpn_protocol
                type: string
              type: array
            client_authentication:
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
              enum:
                - MANDATORY
                - NONE
                - OPTIONAL
              type: string
            client_ca_tls_container_ref:
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
              maxLength: 255
              type: string
            client_crl_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
              maxLength: 255
              type: string
            connection_limit:
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
              minimum: -1
              type: integer
            default_pool:
              description: |-
                A pool object.
              properties:
                admin_state_up:
                  type: boolean
                alpn_protocols:
                  description: |-
                    A list of ALPN protocols.
                    Available protocols: http/1.0, http/1.1, h2

                    **New in version 2.20**
                  items:
                    format: alpn_protocol
                    type: string
                  type: array
                ca_tls_container_ref:
                  maxLength: 255
                  type: string
                crl_container_ref:
                  maxLength: 255
                  type: string
                description:
                  maxLength: 255
                  type: string
                healthmonitor:
                  description: |-
                    Defines mandatory and optional attributes of a POST request.
                  properties:
                    admin_state_up:
                      type: boolean
                    delay:
                      type: integer
                    domain_name:
                      maxLength: 255
                      minLength: 1
                      type: string
                    expected_codes:
                      type: string
                    http_method:
                      enum:
                        - CONNECT
                        - DELETE
                        - GET
                        - HEAD
                        - OPTIONS
                        - PATCH
                        - POST
                        - PUT
                        - TRACE
                      type: string
                    http_version:
                      enum:
                        - 1.0
                        - 1.1
                      type: number
                    max_retries:
                      maximum: 10
                      minimum: 1
                      type: integer
                    max_retries_down:
                      maximum: 10
                      minimum: 1
                      type: integer
                    name:
                      maxLength: 255
                      type: string
                    tags:
                      description: |-
                        A list of simple strings assigned to the resource.

                        **New in version 2.5**
                      items:
                        maxLength: 255
                        type: string
                      type: array
                    timeout:
                      type: integer
                    type:
                      enum:
                        - HTTP
                        - HTTPS
                        - PING
                        - SCTP
                        - TCP
                        - TLS-HELLO
                        - UDP-CONNECT
                      type: string
                    url_path:
                      format: url_path
                      type: string
                  required:
                    - delay
                    - max_retries
                    - timeout
                    - type
                  type: object
                lb_algorithm:
                  enum:
                    - LEAST_CONNECTIONS
                    - ROUND_ROBIN
                    - SOURCE_IP
                    - SOURCE_IP_PORT
                  type: string
                members:
                  items:
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    properties:
                      address:
                        format: ipaddress
                        type: string
                      admin_state_up:
                        type: boolean
                      backup:
                        type: boolean
                      monitor_address:
                        format: ipaddress
                        type: string
                      monitor_port:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      name:
                        maxLength: 255
                        type: string
                      protocol_port:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      request_sriov:
                        type: boolean
                      subnet_id:
                        format: uuid
                        type: string
                      tags:
                        items:
                          maxLength: 255
                          type: string
                        type: array
                      weight:
                        maximum: 256
                        type: integer
                    required:
                      - address
                      - protocol_port
                    type: object
                  type: array
                name:
                  maxLength: 255
                  type: string
                protocol:
                  enum:
                    - HTTP
                    - HTTPS
                    - PROXY
                    - PROXYV2
                    - SCTP
                    - TCP
                    - UDP
                  type: string
                session_persistence:
                  description: |-
                    Defines mandatory and optional attributes of a POST request.
                  properties:
                    cookie_name:
                      maxLength: 255
                      type: string
                    persistence_granularity:
                      format: ipaddress
                      type: string
                    persistence_timeout:
                      type: integer
                    type:
                      enum:
                        - APP_COOKIE
                        - HTTP_COOKIE
                        - SOURCE_IP
                      type: string
                  required:
                    - type
                  type: object
                tags:
                  items:
                    maxLength: 255
                    type: string
                  type: array
                tls_ciphers:
                  description: |-
                    List of ciphers in OpenSSL format (colon-separated).
                    See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                    **New in version 2.15**
                  maxLength: 2048
                  type: string
                tls_container_ref:
                  maxLength: 255
                  type: string
                tls_enabled:
                  type: boolean
                tls_versions:
                  description: |-
                    A list of TLS protocol versions.
                    Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                    **New in version 2.17**
                  items:
                    maxLength: 32
                    type: string
                  type: array
              type: object
            default_pool_id:
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            default_tls_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
              maxLength: 255
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            hsts_include_subdomains:
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
              type: boolean
            hsts_max_age:
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.
                Setting this enables HTTP Strict Transport
                Security (HSTS) for the TLS-terminated listener.

                **New in version 2.27**
              type: integer
            hsts_preload:
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
              type: boolean
            insert_headers:
              additionalProperties:
                maxLength: 255
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
              type: object
            l7policies:
              description: |-
                A list of L7 policy objects.
              items:
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                properties:
                  action:
                    enum:
                      - REDIRECT_PREFIX
                      - REDIRECT_TO_POOL
                      - REDIRECT_TO_URL
                      - REJECT
                    type: string
                  admin_state_up:
                    type: boolean
                  description:
                    maxLength: 255
                    type: string
                  name:
                    maxLength: 255
                    type: string
                  position:
                    maximum: 2147483647
                    minimum: 1
                    type: integer
                  redirect_http_code:
                    enum:
                      - 301
                      - 302
                      - 303
                      - 307
                      - 308
                    type: integer
                  redirect_pool:
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    properties:
                      admin_state_up:
                        type: boolean
                      alpn_protocols:
                        items:
                          format: alpn_protocol
                          type: string
                        type: array
                      ca_tls_container_ref:
                        maxLength: 255
                        type: string
                      crl_container_ref:
                        maxLength: 255
                        type: string
                      description:
                        maxLength: 255
                        type: string
                      healthmonitor:
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        properties:
                          admin_state_up:
                            type: boolean
                          delay:
                            type: integer
                          domain_name:
                            maxLength: 255
                            minLength: 1
                            type: string
                          expected_codes:
                            type: string
                          http_method:
                            enum:
                              - CONNECT
                              - DELETE
                              - GET
                              - HEAD
                              - OPTIONS
                              - PATCH
                              - POST
                              - PUT
                              - TRACE
                            type: string
                          http_version:
                            enum:
                              - 1.0
                              - 1.1
                            type: number
                          max_retries:
                            maximum: 10
                            minimum: 1
                            type: integer
                          max_retries_down:
                            maximum: 10
                            minimum: 1
                            type: integer
                          name:
                            maxLength: 255
                            type: string
                          tags:
                            items:
                              maxLength: 255
                              type: string
                            type: array
                          timeout:
                            type: integer
                          type:
                            enum:
                              - HTTP
                              - HTTPS
                              - PING
                              - SCTP
                              - TCP
                              - TLS-HELLO
                              - UDP-CONNECT
                            type: string
                          url_path:
                            format: url_path
                            type: string
                        required:
                          - delay
                          - max_retries
                          - timeout
                          - type
                        type: object
                      lb_algorithm:
                        enum:
                          - LEAST_CONNECTIONS
                          - ROUND_ROBIN
                          - SOURCE_IP
                          - SOURCE_IP_PORT
                        type: string
                      members:
                        items:
                          description: |-
                            Defines mandatory and optional attributes of a POST request.
                          properties:
                            address:
                              format: ipaddress
                              type: string
                            admin_state_up:
                              type: boolean
                            backup:
                              type: boolean
                            monitor_address:
                              format: ipaddress
                              type: string
                            monitor_port:
                              maximum: 65535
                              minimum: 1
                              type: integer
                            name:
                              maxLength: 255
                              type: string
                            protocol_port:
                              maximum: 65535
                              minimum: 1
                              type: integer
                            request_sriov:
                              type: boolean
                            subnet_id:
                              format: uuid
                              type: string
                            tags:
                              items:
                                maxLength: 255
                                type: string
                              type: array
                            weight:
                              maximum: 256
                              type: integer
                          required:
                            - address
                            - protocol_port
                          type: object
                        type: array
                      name:
                        maxLength: 255
                        type: string
                      protocol:
                        enum:
                          - HTTP
                          - HTTPS
                          - PROXY
                          - PROXYV2
                          - SCTP
                          - TCP
                          - UDP
                        type: string
                      session_persistence:
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        properties:
                          cookie_name:
                            maxLength: 255
                            type: string
                          persistence_granularity:
                            format: ipaddress
                            type: string
                          persistence_timeout:
                            type: integer
                          type:
                            enum:
                              - APP_COOKIE
                              - HTTP_COOKIE
                              - SOURCE_IP
                            type: string
                        required:
                          - type
                        type: object
                      tags:
                        items:
                          maxLength: 255
                          type: string
                        type: array
                      tls_ciphers:
                        maxLength: 2048
                        type: string
                      tls_container_ref:
                        maxLength: 255
                        type: string
                      tls_enabled:
                        type: boolean
                      tls_versions:
                        items:
                          maxLength: 32
                          type: string
                        type: array
                    type: object
                  redirect_prefix:
                    format: url
                    type: string
                  redirect_url:
                    format: url
                    type: string
                  rules:
                    items:
                      description: |-
                        Defines mandatory and optional attributes of a POST request.
                      properties:
                        admin_state_up:
                          type: boolean
                        compare_type:
                          enum:
                            - CONTAINS
                            - ENDS_WITH
                            - EQUAL_TO
                            - REGEX
                            - STARTS_WITH
                          type: string
                        invert:
                          type: boolean
                        key:
                          maxLength: 255
                          type: string
                        tags:
                          items:
                            maxLength: 255
                            type: string
                          type: array
                        type:
                          enum:
                            - COOKIE
                            - FILE_TYPE
                            - HEADER
                            - HOST_NAME
                            - PATH
                            - SSL_CONN_HAS_CERT
                            - SSL_DN_FIELD
                            - SSL_VERIFY_RESULT
                          type: string
                        value:
                          maxLength: 255
                          type: string
                      required:
                        - compare_type
                        - type
                        - value
                      type: object
                    type: array
                  tags:
                    items:
                      maxLength: 255
                      type: string
                    type: array
                required:
                  - action
                type: object
              type: array
            loadbalancer_id:
              description: |-
                The ID of the load balancer.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource. (deprecated)
              maxLength: 36
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `SCTP`,
                `PROMETHEUS`, `TCP`, `TERMINATED_HTTPS`, or `UDP`.
              enum:
                - HTTP
                - HTTPS
                - PROMETHEUS
                - SCTP
                - TCP
                - TERMINATED_HTTPS
                - UDP
              type: string
            protocol_port:
              description: |-
                The protocol port number for the resource.
              maximum: 65535
              minimum: 1
              type: integer
            sni_container_refs:
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
              items:
                maxLength: 255
                type: string
              type: array
            tags:
              items:
                maxLength: 255
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            timeout_client_data:
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            timeout_member_connect:
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            timeout_member_data:
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            timeout_tcp_inspect:
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            tls_ciphers:
              maxLength: 2048
              type: string
            tls_versions:
              items:
                maxLength: 32
                type: string
              type: array
          required:
            - loadbalancer_id
            - protocol
            - protocol_port
          type: object
      type: object
    ListenerRootPUT:
      description: Base type for complex types
      properties:
        listener:
          description: |-
            Defines attributes that are acceptable of a PUT request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            allowed_cidrs:
              description: |-
                A list of IPv4, IPv6 or mix of both CIDRs. The default is all allowed.
                When a list of CIDRs is provided, the default switches to deny all.

                **New in version 2.12**
              items:
                format: cidr
                type: string
              type: array
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.20**
              items:
                format: alpn_protocol
                type: string
              type: array
            client_authentication:
              description: |-
                The TLS client authentication mode. One of the options `NONE`,
                `OPTIONAL` or `MANDATORY`.

                **New in version 2.8**
              enum:
                - MANDATORY
                - NONE
                - OPTIONAL
              type: string
            client_ca_tls_container_ref:
              description: |-
                The ref of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format client CA certificate bundle for `TERMINATED_HTTPS`
                listeners.

                **New in version 2.8**
              maxLength: 255
              type: string
            client_crl_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `TERMINATED_HTTPS` listeners.

                **New in version 2.8**
              maxLength: 255
              type: string
            connection_limit:
              description: |-
                The maximum number of connections permitted for this listener. Default
                value is -1 which represents infinite connections or a default value
                defined by the provider driver.
              minimum: -1
              type: integer
            default_pool_id:
              description: |-
                The ID of the pool used by the listener if no L7 policies match. The pool
                has some restrictions. See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            default_tls_container_ref:
              description: |-
                The URI of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `TERMINATED_HTTPS` listeners.
                DEPRECATED: A secret container of type “certificate” containing the
                certificate and key for `TERMINATED_HTTPS` listeners.
              maxLength: 255
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            hsts_include_subdomains:
              description: |-
                Defines whether the `includeSubDomains` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
              type: boolean
            hsts_max_age:
              description: |-
                The value of the `max_age` directive for the
                Strict-Transport-Security HTTP response header.
                Setting this enables HTTP Strict Transport
                Security (HSTS) for the TLS-terminated listener.

                **New in version 2.27**
              type: integer
            hsts_preload:
              description: |-
                Defines whether the `preload` directive should be
                added to the Strict-Transport-Security HTTP response
                header. This requires setting the `hsts_max_age` option as well in
                order to become effective.

                **New in version 2.27**
              type: boolean
            insert_headers:
              additionalProperties:
                maxLength: 255
                type: string
              description: |-
                A dictionary of optional headers to insert into the request before it is
                sent to the backend `member`. See [Supported HTTP Header Insertions](#header-insertions). Both keys
                and values are always specified as strings.
              type: object
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            sni_container_refs:
              description: |-
                A list of URIs to the [key manager service](https://docs.openstack.org/barbican/latest/) secrets containing
                PKCS12 format certificate/key bundles for `TERMINATED_HTTPS` listeners.
                (DEPRECATED) Secret containers of type “certificate” containing the
                certificates and keys for `TERMINATED_HTTPS` listeners.
              items:
                maxLength: 255
                type: string
              type: array
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            timeout_client_data:
              description: |-
                Frontend client inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            timeout_member_connect:
              description: |-
                Backend member connection timeout in milliseconds. Default: 5000.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            timeout_member_data:
              description: |-
                Backend member inactivity timeout in milliseconds. Default: 50000.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            timeout_tcp_inspect:
              description: |-
                Time, in milliseconds, to wait for additional TCP packets for content
                inspection. Default: 0.

                **New in version 2.1**
              maximum: 2073600000
              type: integer
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              maxLength: 2048
              type: string
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                maxLength: 32
                type: string
              type: array
          type: object
      type: object
    LoadBalancerRootPOST:
      description: Base type for complex types
      properties:
        loadbalancer:
          description: |-
            A load balancer object.
          properties:
            additional_vips:
              description: |-
                A list of JSON objects defining “additional VIPs”. The format for these
                is `{"subnet_id": <subnet_id>, "ip_address": <ip_address>}`, where
                the `subnet_id` field is mandatory and the `ip_address` field is
                optional. Additional VIP subnets must all belong to the same network as
                the primary VIP.

                **New in version 2.26**
              items:
                description: |-
                  Type for additional vips
                properties:
                  ip_address:
                    format: ipaddress
                    type: string
                  subnet_id:
                    format: uuid
                    type: string
                required:
                  - subnet_id
                type: object
              type: array
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            availability_zone:
              description: |-
                An availability zone name.
              maxLength: 255
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type: string
            listeners:
              description: |-
                The associated listener IDs, if any.
              items:
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                properties:
                  admin_state_up:
                    type: boolean
                  allowed_cidrs:
                    items:
                      format: cidr
                      type: string
                    type: array
                  alpn_protocols:
                    items:
                      format: alpn_protocol
                      type: string
                    type: array
                  client_authentication:
                    enum:
                      - MANDATORY
                      - NONE
                      - OPTIONAL
                    type: string
                  client_ca_tls_container_ref:
                    maxLength: 255
                    type: string
                  client_crl_container_ref:
                    maxLength: 255
                    type: string
                  connection_limit:
                    minimum: -1
                    type: integer
                  default_pool:
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    properties:
                      admin_state_up:
                        type: boolean
                      alpn_protocols:
                        items:
                          format: alpn_protocol
                          type: string
                        type: array
                      ca_tls_container_ref:
                        maxLength: 255
                        type: string
                      crl_container_ref:
                        maxLength: 255
                        type: string
                      description:
                        maxLength: 255
                        type: string
                      healthmonitor:
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        properties:
                          admin_state_up:
                            type: boolean
                          delay:
                            type: integer
                          domain_name:
                            maxLength: 255
                            minLength: 1
                            type: string
                          expected_codes:
                            type: string
                          http_method:
                            enum:
                              - CONNECT
                              - DELETE
                              - GET
                              - HEAD
                              - OPTIONS
                              - PATCH
                              - POST
                              - PUT
                              - TRACE
                            type: string
                          http_version:
                            enum:
                              - 1.0
                              - 1.1
                            type: number
                          max_retries:
                            maximum: 10
                            minimum: 1
                            type: integer
                          max_retries_down:
                            maximum: 10
                            minimum: 1
                            type: integer
                          name:
                            maxLength: 255
                            type: string
                          tags:
                            description: |-
                              A list of simple strings assigned to the resource.

                              **New in version 2.5**
                            items:
                              maxLength: 255
                              type: string
                            type: array
                          timeout:
                            type: integer
                          type:
                            enum:
                              - HTTP
                              - HTTPS
                              - PING
                              - SCTP
                              - TCP
                              - TLS-HELLO
                              - UDP-CONNECT
                            type: string
                          url_path:
                            format: url_path
                            type: string
                        required:
                          - delay
                          - max_retries
                          - timeout
                          - type
                        type: object
                      lb_algorithm:
                        enum:
                          - LEAST_CONNECTIONS
                          - ROUND_ROBIN
                          - SOURCE_IP
                          - SOURCE_IP_PORT
                        type: string
                      members:
                        items:
                          description: |-
                            Defines mandatory and optional attributes of a POST request.
                          properties:
                            address:
                              format: ipaddress
                              type: string
                            admin_state_up:
                              type: boolean
                            backup:
                              type: boolean
                            monitor_address:
                              format: ipaddress
                              type: string
                            monitor_port:
                              maximum: 65535
                              minimum: 1
                              type: integer
                            name:
                              maxLength: 255
                              type: string
                            protocol_port:
                              maximum: 65535
                              minimum: 1
                              type: integer
                            request_sriov:
                              type: boolean
                            subnet_id:
                              format: uuid
                              type: string
                            tags:
                              items:
                                maxLength: 255
                                type: string
                              type: array
                            weight:
                              maximum: 256
                              type: integer
                          required:
                            - address
                            - protocol_port
                          type: object
                        type: array
                      name:
                        maxLength: 255
                        type: string
                      protocol:
                        enum:
                          - HTTP
                          - HTTPS
                          - PROXY
                          - PROXYV2
                          - SCTP
                          - TCP
                          - UDP
                        type: string
                      session_persistence:
                        description: |-
                          Defines mandatory and optional attributes of a POST request.
                        properties:
                          cookie_name:
                            maxLength: 255
                            type: string
                          persistence_granularity:
                            format: ipaddress
                            type: string
                          persistence_timeout:
                            type: integer
                          type:
                            enum:
                              - APP_COOKIE
                              - HTTP_COOKIE
                              - SOURCE_IP
                            type: string
                        required:
                          - type
                        type: object
                      tags:
                        items:
                          maxLength: 255
                          type: string
                        type: array
                      tls_ciphers:
                        maxLength: 2048
                        type: string
                      tls_container_ref:
                        maxLength: 255
                        type: string
                      tls_enabled:
                        type: boolean
                      tls_versions:
                        items:
                          maxLength: 32
                          type: string
                        type: array
                    type: object
                  default_pool_id:
                    format: uuid
                    type: string
                  default_tls_container_ref:
                    maxLength: 255
                    type: string
                  description:
                    maxLength: 255
                    type: string
                  hsts_include_subdomains:
                    type: boolean
                  hsts_max_age:
                    type: integer
                  hsts_preload:
                    type: boolean
                  insert_headers:
                    additionalProperties:
                      maxLength: 255
                      type: string
                    type: object
                  l7policies:
                    items:
                      description: |-
                        Defines mandatory and optional attributes of a POST request.
                      properties:
                        action:
                          enum:
                            - REDIRECT_PREFIX
                            - REDIRECT_TO_POOL
                            - REDIRECT_TO_URL
                            - REJECT
                          type: string
                        admin_state_up:
                          type: boolean
                        description:
                          maxLength: 255
                          type: string
                        name:
                          maxLength: 255
                          type: string
                        position:
                          maximum: 2147483647
                          minimum: 1
                          type: integer
                        redirect_http_code:
                          enum:
                            - 301
                            - 302
                            - 303
                            - 307
                            - 308
                          type: integer
                        redirect_pool:
                          description: |-
                            Defines mandatory and optional attributes of a POST request.
                          properties:
                            admin_state_up:
                              type: boolean
                            alpn_protocols:
                              items:
                                format: alpn_protocol
                                type: string
                              type: array
                            ca_tls_container_ref:
                              maxLength: 255
                              type: string
                            crl_container_ref:
                              maxLength: 255
                              type: string
                            description:
                              maxLength: 255
                              type: string
                            healthmonitor:
                              description: |-
                                Defines mandatory and optional attributes of a POST request.
                              properties:
                                admin_state_up:
                                  type: boolean
                                delay:
                                  type: integer
                                domain_name:
                                  maxLength: 255
                                  minLength: 1
                                  type: string
                                expected_codes:
                                  type: string
                                http_method:
                                  enum:
                                    - CONNECT
                                    - DELETE
                                    - GET
                                    - HEAD
                                    - OPTIONS
                                    - PATCH
                                    - POST
                                    - PUT
                                    - TRACE
                                  type: string
                                http_version:
                                  enum:
                                    - 1.0
                                    - 1.1
                                  type: number
                                max_retries:
                                  maximum: 10
                                  minimum: 1
                                  type: integer
                                max_retries_down:
                                  maximum: 10
                                  minimum: 1
                                  type: integer
                                name:
                                  maxLength: 255
                                  type: string
                                tags:
                                  items:
                                    maxLength: 255
                                    type: string
                                  type: array
                                timeout:
                                  type: integer
                                type:
                                  enum:
                                    - HTTP
                                    - HTTPS
                                    - PING
                                    - SCTP
                                    - TCP
                                    - TLS-HELLO
                                    - UDP-CONNECT
                                  type: string
                                url_path:
                                  format: url_path
                                  type: string
                              required:
                                - delay
                                - max_retries
                                - timeout
                                - type
                              type: object
                            lb_algorithm:
                              enum:
                                - LEAST_CONNECTIONS
                                - ROUND_ROBIN
                                - SOURCE_IP
                                - SOURCE_IP_PORT
                              type: string
                            members:
                              items:
                                description: |-
                                  Defines mandatory and optional attributes of a POST request.
                                properties:
                                  address:
                                    format: ipaddress
                                    type: string
                                  admin_state_up:
                                    type: boolean
                                  backup:
                                    type: boolean
                                  monitor_address:
                                    format: ipaddress
                                    type: string
                                  monitor_port:
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  name:
                                    maxLength: 255
                                    type: string
                                  protocol_port:
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  request_sriov:
                                    type: boolean
                                  subnet_id:
                                    format: uuid
                                    type: string
                                  tags:
                                    items:
                                      maxLength: 255
                                      type: string
                                    type: array
                                  weight:
                                    maximum: 256
                                    type: integer
                                required:
                                  - address
                                  - protocol_port
                                type: object
                              type: array
                            name:
                              maxLength: 255
                              type: string
                            protocol:
                              enum:
                                - HTTP
                                - HTTPS
                                - PROXY
                                - PROXYV2
                                - SCTP
                                - TCP
                                - UDP
                              type: string
                            session_persistence:
                              description: |-
                                Defines mandatory and optional attributes of a POST request.
                              properties:
                                cookie_name:
                                  maxLength: 255
                                  type: string
                                persistence_granularity:
                                  format: ipaddress
                                  type: string
                                persistence_timeout:
                                  type: integer
                                type:
                                  enum:
                                    - APP_COOKIE
                                    - HTTP_COOKIE
                                    - SOURCE_IP
                                  type: string
                              required:
                                - type
                              type: object
                            tags:
                              items:
                                maxLength: 255
                                type: string
                              type: array
                            tls_ciphers:
                              maxLength: 2048
                              type: string
                            tls_container_ref:
                              maxLength: 255
                              type: string
                            tls_enabled:
                              type: boolean
                            tls_versions:
                              items:
                                maxLength: 32
                                type: string
                              type: array
                          type: object
                        redirect_prefix:
                          format: url
                          type: string
                        redirect_url:
                          format: url
                          type: string
                        rules:
                          items:
                            description: |-
                              Defines mandatory and optional attributes of a POST request.
                            properties:
                              admin_state_up:
                                type: boolean
                              compare_type:
                                enum:
                                  - CONTAINS
                                  - ENDS_WITH
                                  - EQUAL_TO
                                  - REGEX
                                  - STARTS_WITH
                                type: string
                              invert:
                                type: boolean
                              key:
                                maxLength: 255
                                type: string
                              tags:
                                items:
                                  maxLength: 255
                                  type: string
                                type: array
                              type:
                                enum:
                                  - COOKIE
                                  - FILE_TYPE
                                  - HEADER
                                  - HOST_NAME
                                  - PATH
                                  - SSL_CONN_HAS_CERT
                                  - SSL_DN_FIELD
                                  - SSL_VERIFY_RESULT
                                type: string
                              value:
                                maxLength: 255
                                type: string
                            required:
                              - compare_type
                              - type
                              - value
                            type: object
                          type: array
                        tags:
                          items:
                            maxLength: 255
                            type: string
                          type: array
                      required:
                        - action
                      type: object
                    type: array
                  name:
                    maxLength: 255
                    type: string
                  protocol:
                    enum:
                      - HTTP
                      - HTTPS
                      - PROMETHEUS
                      - SCTP
                      - TCP
                      - TERMINATED_HTTPS
                      - UDP
                    type: string
                  protocol_port:
                    maximum: 65535
                    minimum: 1
                    type: integer
                  sni_container_refs:
                    items:
                      maxLength: 255
                      type: string
                    type: array
                  tags:
                    items:
                      maxLength: 255
                      type: string
                    type: array
                  timeout_client_data:
                    maximum: 2073600000
                    type: integer
                  timeout_member_connect:
                    maximum: 2073600000
                    type: integer
                  timeout_member_data:
                    maximum: 2073600000
                    type: integer
                  timeout_tcp_inspect:
                    maximum: 2073600000
                    type: integer
                  tls_ciphers:
                    maxLength: 2048
                    type: string
                  tls_versions:
                    items:
                      maxLength: 32
                      type: string
                    type: array
                required:
                  - protocol
                  - protocol_port
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            pools:
              items:
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                properties:
                  admin_state_up:
                    type: boolean
                  alpn_protocols:
                    items:
                      format: alpn_protocol
                      type: string
                    type: array
                  ca_tls_container_ref:
                    maxLength: 255
                    type: string
                  crl_container_ref:
                    maxLength: 255
                    type: string
                  description:
                    maxLength: 255
                    type: string
                  healthmonitor:
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    properties:
                      admin_state_up:
                        type: boolean
                      delay:
                        type: integer
                      domain_name:
                        maxLength: 255
                        minLength: 1
                        type: string
                      expected_codes:
                        type: string
                      http_method:
                        enum:
                          - CONNECT
                          - DELETE
                          - GET
                          - HEAD
                          - OPTIONS
                          - PATCH
                          - POST
                          - PUT
                          - TRACE
                        type: string
                      http_version:
                        enum:
                          - 1.0
                          - 1.1
                        type: number
                      max_retries:
                        maximum: 10
                        minimum: 1
                        type: integer
                      max_retries_down:
                        maximum: 10
                        minimum: 1
                        type: integer
                      name:
                        maxLength: 255
                        type: string
                      tags:
                        items:
                          maxLength: 255
                          type: string
                        type: array
                      timeout:
                        type: integer
                      type:
                        enum:
                          - HTTP
                          - HTTPS
                          - PING
                          - SCTP
                          - TCP
                          - TLS-HELLO
                          - UDP-CONNECT
                        type: string
                      url_path:
                        format: url_path
                        type: string
                    required:
                      - delay
                      - max_retries
                      - timeout
                      - type
                    type: object
                  lb_algorithm:
                    enum:
                      - LEAST_CONNECTIONS
                      - ROUND_ROBIN
                      - SOURCE_IP
                      - SOURCE_IP_PORT
                    type: string
                  members:
                    items:
                      description: |-
                        Defines mandatory and optional attributes of a POST request.
                      properties:
                        address:
                          format: ipaddress
                          type: string
                        admin_state_up:
                          type: boolean
                        backup:
                          type: boolean
                        monitor_address:
                          format: ipaddress
                          type: string
                        monitor_port:
                          maximum: 65535
                          minimum: 1
                          type: integer
                        name:
                          maxLength: 255
                          type: string
                        protocol_port:
                          maximum: 65535
                          minimum: 1
                          type: integer
                        request_sriov:
                          type: boolean
                        subnet_id:
                          format: uuid
                          type: string
                        tags:
                          items:
                            maxLength: 255
                            type: string
                          type: array
                        weight:
                          maximum: 256
                          type: integer
                      required:
                        - address
                        - protocol_port
                      type: object
                    type: array
                  name:
                    maxLength: 255
                    type: string
                  protocol:
                    enum:
                      - HTTP
                      - HTTPS
                      - PROXY
                      - PROXYV2
                      - SCTP
                      - TCP
                      - UDP
                    type: string
                  session_persistence:
                    description: |-
                      Defines mandatory and optional attributes of a POST request.
                    properties:
                      cookie_name:
                        maxLength: 255
                        type: string
                      persistence_granularity:
                        format: ipaddress
                        type: string
                      persistence_timeout:
                        type: integer
                      type:
                        enum:
                          - APP_COOKIE
                          - HTTP_COOKIE
                          - SOURCE_IP
                        type: string
                    required:
                      - type
                    type: object
                  tags:
                    items:
                      maxLength: 255
                      type: string
                    type: array
                  tls_ciphers:
                    maxLength: 2048
                    type: string
                  tls_container_ref:
                    maxLength: 255
                    type: string
                  tls_enabled:
                    type: boolean
                  tls_versions:
                    items:
                      maxLength: 32
                      type: string
                    type: array
                type: object
              type: array
            project_id:
              description: |-
                The ID of the project owning this resource.
              maxLength: 36
              type: string
            provider:
              description: |-
                Provider name for the load balancer. Default is `octavia`.
              maxLength: 64
              type: string
            tags:
              items:
                maxLength: 255
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            vip_address:
              description: |-
                The IP address of the Virtual IP (VIP).
              format: ipaddress
              type: string
            vip_network_id:
              description: |-
                The ID of the network for the Virtual IP (VIP). One of `vip_network_id`,
                `vip_port_id`, or `vip_subnet_id` must be specified.
              format: uuid
              type: string
            vip_port_id:
              description: |-
                The ID of the Virtual IP (VIP) port. One of `vip_network_id`,
                `vip_port_id`, or `vip_subnet_id` must be specified.
              format: uuid
              type: string
            vip_qos_policy_id:
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
              format: uuid
              type: string
            vip_sg_ids:
              description: |-
                The list of Security Group IDs of the Virtual IP (VIP) port of the Load
                Balancer.

                **New in version 2.29**
              items:
                format: uuid
                type: string
              type: array
            vip_subnet_id:
              description: |-
                The ID of the subnet for the Virtual IP (VIP). One of `vip_network_id`,
                `vip_port_id`, or `vip_subnet_id` must be specified.
              format: uuid
              type: string
          type: object
      type: object
    LoadBalancerRootPUT:
      description: Base type for complex types
      properties:
        loadbalancer:
          description: |-
            A load balancer object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type: boolean
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            vip_qos_policy_id:
              description: |-
                The ID of the QoS Policy which will apply to the Virtual IP (VIP).
              format: uuid
              type: string
            vip_sg_ids:
              items:
                format: uuid
                type: string
              type: array
          type: object
      type: object
    MemberRootPOST:
      description: Base type for complex types
      properties:
        member:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            address:
              description: |-
                The IP address of the resource.
              format: ipaddress
              type: string
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            backup:
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
              type: boolean
            monitor_address:
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
              format: ipaddress
              type: string
            monitor_port:
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
              maximum: 65535
              minimum: 1
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource. (deprecated)
              maxLength: 36
              type: string
            protocol_port:
              description: |-
                The protocol port number for the resource.
              maximum: 65535
              minimum: 1
              type: integer
            request_sriov:
              description: |-
                Request that an SR-IOV VF be used for the member network port. Defaults to
                `false`.

                **New in version 2.29**
              type: boolean
            subnet_id:
              description: |-
                The subnet ID the member service is accessible from.
              format: uuid
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            weight:
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
              maximum: 256
              type: integer
          required:
            - address
            - protocol_port
          type: object
      type: object
    MemberRootPUT:
      description: Base type for complex types
      properties:
        member:
          description: |-
            Defines attributes that are acceptable of a PUT request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            backup:
              description: |-
                Is the member a backup? Backup members only receive traffic when all
                non-backup members are down.

                **New in version 2.1**
              type: boolean
            monitor_address:
              description: |-
                An alternate IP address used for health monitoring a backend member.
                Default is `null` which monitors the member `address`.
              format: ipaddress
              type: string
            monitor_port:
              description: |-
                An alternate protocol port used for health monitoring a backend member.
                Default is `null` which monitors the member `protocol_port`.
              maximum: 65535
              minimum: 1
              type: integer
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            weight:
              description: |-
                The weight of a member determines the portion of requests or connections it
                services compared to the other members of the pool. For example, a member
                with a weight of 10 receives five times as many requests as a member with a
                weight of 2. A value of 0 means the member does not receive new connections
                but continues to service existing connections. A valid value is
                from `0` to `256`. Default is `1`.
              maximum: 256
              type: integer
          type: object
      type: object
    MembersRootPUT:
      description: Base type for complex types
      properties:
        members:
          items:
            description: |-
              Defines mandatory and optional attributes of a POST request.
            properties:
              address:
                description: |-
                  The IP address of the resource.
                format: ipaddress
                type: string
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`). Default is `true`.
                type: boolean
              backup:
                description: |-
                  Is the member a backup? Backup members only receive traffic when all
                  non-backup members are down.

                  **New in version 2.1**
                type: boolean
              monitor_address:
                description: |-
                  An alternate IP address used for health monitoring a backend member.
                  Default is `null` which monitors the member `address`.
                format: ipaddress
                type: string
              monitor_port:
                description: |-
                  An alternate protocol port used for health monitoring a backend member.
                  Default is `null` which monitors the member `protocol_port`.
                maximum: 65535
                minimum: 1
                type: integer
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              project_id:
                description: |-
                  The ID of the project owning this resource. (deprecated)
                maxLength: 36
                type: string
              protocol_port:
                description: |-
                  The protocol port number for the resource.
                maximum: 65535
                minimum: 1
                type: integer
              request_sriov:
                description: |-
                  Request that an SR-IOV VF be used for the member network port. Defaults to
                  `false`.

                  **New in version 2.29**
                type: boolean
              subnet_id:
                description: |-
                  The subnet ID the member service is accessible from.
                format: uuid
                type: string
              tags:
                description: |-
                  A list of simple strings assigned to the resource.

                  **New in version 2.5**
                items:
                  maxLength: 255
                  type: string
                type: array
              tenant_id:
                maxLength: 36
                type: string
              weight:
                description: |-
                  The weight of a member determines the portion of requests or connections it
                  services compared to the other members of the pool. For example, a member
                  with a weight of 10 receives five times as many requests as a member with a
                  weight of 2. A value of 0 means the member does not receive new connections
                  but continues to service existing connections. A valid value is
                  from `0` to `256`. Default is `1`.
                maximum: 256
                type: integer
            required:
              - address
              - protocol_port
            type: object
          type: array
      type: object
    OctaviaAmphoraeConfigConfigRequest:
      description: Request of the octavia/amphorae/amphora_id/config:put 
        operation
      type: object
      x-openstack:
        action-name: config
    OctaviaAmphoraeConfigResponse:
      description: Response of the octavia/amphorae/amphora_id/config:put 
        operation
      type: object
    OctaviaAmphoraeFailoverFailoverRequest:
      type: 'null'
    OctaviaAmphoraeFailoverResponse:
      description: Response of the octavia/amphorae/amphora_id/failover:put 
        operation
      type: object
    OctaviaAmphoraeListResponse:
      description: Base type for complex types
      properties:
        amphorae:
          items:
            description: |-
              Defines which attributes are to be shown on any response.
            properties:
              cached_zone:
                description: |-
                  The availability zone of a compute instance, cached at create time. This
                  is not guaranteed to be current. May be an empty-string if the compute
                  service does not use zones.
                type: string
              cert_busy:
                description: |-
                  Whether the certificate is in the process of being replaced.
                type: boolean
              cert_expiration:
                description: |-
                  The date the certificate for the amphora expires.
                format: date-time
                type: string
              compute_flavor:
                description: |-
                  The ID of the compute flavor used for the amphora.

                  **New in version 2.3**
                type: string
              compute_id:
                description: |-
                  The ID of the amphora resource in the compute system.
                format: uuid
                type: string
              created_at:
                description: |-
                  The UTC date and timestamp when the resource was created.
                format: date-time
                type: string
              ha_ip:
                description: |-
                  The IP address of the Virtual IP (VIP).
                format: ipaddress
                type: string
              ha_port_id:
                description: |-
                  The ID of the Virtual IP (VIP) port.
                format: uuid
                type: string
              id:
                description: |-
                  The associated amphora ID.
                format: uuid
                type: string
              image_id:
                description: |-
                  The ID of the glance image used for the amphora.

                  **New in version 2.1**
                format: uuid
                type: string
              lb_network_ip:
                description: |-
                  The management IP of the amphora.
                format: ipaddress
                type: string
              loadbalancer_id:
                description: |-
                  The ID of the load balancer.
                format: uuid
                type: string
              role:
                description: |-
                  The role of the amphora. One of `STANDALONE`, `MASTER`, `BACKUP`.
                type: string
              status:
                description: |-
                  The status of the amphora. One of: `BOOTING`, `ALLOCATED`, `READY`,
                  `PENDING_CREATE`, `PENDING_DELETE`, `DELETED`, `ERROR`.
                type: string
              updated_at:
                description: |-
                  The UTC date and timestamp when the resource was last updated.
                format: date-time
                type: string
              vrrp_id:
                description: |-
                  The vrrp group’s ID for the amphora.
                type: integer
              vrrp_interface:
                description: |-
                  The bound interface name of the vrrp port on the amphora.
                type: string
              vrrp_ip:
                description: |-
                  The address of the vrrp port on the amphora.
                format: ipaddress
                type: string
              vrrp_port_id:
                description: |-
                  The vrrp port’s ID in the networking system.
                format: uuid
                type: string
              vrrp_priority:
                description: |-
                  The priority of the amphora in the vrrp group.
                type: integer
            type: object
          type: array
        amphorae_links:
          items:
            description: |-
              Base type for complex types
            properties:
              href:
                type: string
              rel:
                type: string
            type: object
          type: array
      type: object
    OctaviaAmphoraeShowResponse:
      description: Base type for complex types
      properties:
        amphora:
          description: |-
            Defines which attributes are to be shown on any response.
          properties:
            cached_zone:
              description: |-
                The availability zone of a compute instance, cached at create time. This
                is not guaranteed to be current. May be an empty-string if the compute
                service does not use zones.
              type: string
            cert_busy:
              description: |-
                Whether the certificate is in the process of being replaced.
              type: boolean
            cert_expiration:
              description: |-
                The date the certificate for the amphora expires.
              format: date-time
              type: string
            compute_flavor:
              description: |-
                The ID of the compute flavor used for the amphora.

                **New in version 2.3**
              type: string
            compute_id:
              description: |-
                The ID of the amphora resource in the compute system.
              format: uuid
              type: string
            created_at:
              description: |-
                The UTC date and timestamp when the resource was created.
              format: date-time
              type: string
            ha_ip:
              description: |-
                The IP address of the Virtual IP (VIP).
              format: ipaddress
              type: string
            ha_port_id:
              description: |-
                The ID of the Virtual IP (VIP) port.
              format: uuid
              type: string
            id:
              description: |-
                The associated amphora ID.
              format: uuid
              type: string
            image_id:
              description: |-
                The ID of the glance image used for the amphora.

                **New in version 2.1**
              format: uuid
              type: string
            lb_network_ip:
              description: |-
                The management IP of the amphora.
              format: ipaddress
              type: string
            loadbalancer_id:
              description: |-
                The ID of the load balancer.
              format: uuid
              type: string
            role:
              description: |-
                The role of the amphora. One of `STANDALONE`, `MASTER`, `BACKUP`.
              type: string
            status:
              description: |-
                The status of the amphora. One of: `BOOTING`, `ALLOCATED`, `READY`,
                `PENDING_CREATE`, `PENDING_DELETE`, `DELETED`, `ERROR`.
              type: string
            updated_at:
              description: |-
                The UTC date and timestamp when the resource was last updated.
              format: date-time
              type: string
            vrrp_id:
              description: |-
                The vrrp group’s ID for the amphora.
              type: integer
            vrrp_interface:
              description: |-
                The bound interface name of the vrrp port on the amphora.
              type: string
            vrrp_ip:
              description: |-
                The address of the vrrp port on the amphora.
              format: ipaddress
              type: string
            vrrp_port_id:
              description: |-
                The vrrp port’s ID in the networking system.
              format: uuid
              type: string
            vrrp_priority:
              description: |-
                The priority of the amphora in the vrrp group.
              type: integer
          type: object
      type: object
    OctaviaAmphoraeStatsResponse:
      description: Base type for complex types
      properties:
        amphora_stats:
          description: |-
            A list of amphora statistics objects, one per listener.

            **New in version 2.3**
          items:
            description: |-
              Defines which attributes are to show on stats response.
            properties:
              active_connections:
                description: |-
                  The currently active connections.
                type: integer
              bytes_in:
                description: |-
                  The total bytes received.
                type: integer
              bytes_out:
                description: |-
                  The total bytes sent.
                type: integer
              id:
                description: |-
                  The associated amphora ID.
                format: uuid
                type: string
              listener_id:
                description: |-
                  The ID of the listener.
                format: uuid
                type: string
              loadbalancer_id:
                description: |-
                  The ID of the load balancer.
                format: uuid
                type: string
              request_errors:
                description: |-
                  The total requests that were unable to be fulfilled.
                type: integer
              total_connections:
                description: |-
                  The total connections handled.
                type: integer
            type: object
          type: array
      type: object
    OctaviaGetResponse:
      type: string
    PoolRootPOST:
      description: Base type for complex types
      properties:
        pool:
          description: |-
            Defines mandatory and optional attributes of a POST request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
              items:
                format: alpn_protocol
                type: string
              type: array
            ca_tls_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
              maxLength: 255
              type: string
            crl_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
              maxLength: 255
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            healthmonitor:
              description: |-
                Defines mandatory and optional attributes of a POST request.
              properties:
                admin_state_up:
                  type: boolean
                delay:
                  type: integer
                domain_name:
                  maxLength: 255
                  minLength: 1
                  type: string
                expected_codes:
                  type: string
                http_method:
                  enum:
                    - CONNECT
                    - DELETE
                    - GET
                    - HEAD
                    - OPTIONS
                    - PATCH
                    - POST
                    - PUT
                    - TRACE
                  type: string
                http_version:
                  enum:
                    - 1.0
                    - 1.1
                  type: number
                max_retries:
                  maximum: 10
                  minimum: 1
                  type: integer
                max_retries_down:
                  maximum: 10
                  minimum: 1
                  type: integer
                name:
                  maxLength: 255
                  type: string
                tags:
                  description: |-
                    A list of simple strings assigned to the resource.

                    **New in version 2.5**
                  items:
                    maxLength: 255
                    type: string
                  type: array
                timeout:
                  type: integer
                type:
                  enum:
                    - HTTP
                    - HTTPS
                    - PING
                    - SCTP
                    - TCP
                    - TLS-HELLO
                    - UDP-CONNECT
                  type: string
                url_path:
                  format: url_path
                  type: string
              required:
                - delay
                - max_retries
                - timeout
                - type
              type: object
            lb_algorithm:
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, `SOURCE_IP`, or `SOURCE_IP_PORT`.
              enum:
                - LEAST_CONNECTIONS
                - ROUND_ROBIN
                - SOURCE_IP
                - SOURCE_IP_PORT
              type: string
            listener_id:
              description: |-
                The ID of the listener for the pool. Either `listener_id` or
                `loadbalancer_id` must be specified. The listener has some restrictions,
                See [Protocol Combinations (Listener/Pool)](#valid-protocol).
              format: uuid
              type: string
            loadbalancer_id:
              description: |-
                The ID of the load balancer for the pool. Either `listener_id` or
                `loadbalancer_id` must be specified.
              format: uuid
              type: string
            members:
              items:
                description: |-
                  Defines mandatory and optional attributes of a POST request.
                properties:
                  address:
                    format: ipaddress
                    type: string
                  admin_state_up:
                    type: boolean
                  backup:
                    type: boolean
                  monitor_address:
                    format: ipaddress
                    type: string
                  monitor_port:
                    maximum: 65535
                    minimum: 1
                    type: integer
                  name:
                    maxLength: 255
                    type: string
                  protocol_port:
                    maximum: 65535
                    minimum: 1
                    type: integer
                  request_sriov:
                    type: boolean
                  subnet_id:
                    format: uuid
                    type: string
                  tags:
                    items:
                      maxLength: 255
                      type: string
                    type: array
                  weight:
                    maximum: 256
                    type: integer
                required:
                  - address
                  - protocol_port
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project owning this resource. (deprecated)
              maxLength: 36
              type: string
            protocol:
              description: |-
                The protocol for the resource. One of `HTTP`, `HTTPS`, `PROXY`,
                `PROXYV2`, `SCTP`, `TCP`, or `UDP`.
              enum:
                - HTTP
                - HTTPS
                - PROXY
                - PROXYV2
                - SCTP
                - TCP
                - UDP
              type: string
            session_persistence:
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
              properties:
                cookie_name:
                  maxLength: 255
                  type: string
                persistence_granularity:
                  format: ipaddress
                  type: string
                persistence_timeout:
                  type: integer
                type:
                  enum:
                    - APP_COOKIE
                    - HTTP_COOKIE
                    - SOURCE_IP
                  type: string
              required:
                - type
              type: object
            tags:
              items:
                maxLength: 255
                type: string
              type: array
            tenant_id:
              maxLength: 36
              type: string
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              maxLength: 2048
              type: string
            tls_container_ref:
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
              maxLength: 255
              type: string
            tls_enabled:
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
              type: boolean
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                maxLength: 32
                type: string
              type: array
          required:
            - lb_algorithm
            - protocol
          type: object
      type: object
    PoolRootPut:
      description: Base type for complex types
      properties:
        pool:
          description: |-
            Defines attributes that are acceptable of a PUT request.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`). Default is `true`.
              type: boolean
            alpn_protocols:
              description: |-
                A list of ALPN protocols.
                Available protocols: http/1.0, http/1.1, h2

                **New in version 2.24**
              items:
                format: alpn_protocol
                type: string
              type: array
            ca_tls_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA certificate bundle for `tls_enabled` pools.

                **New in version 2.8**
              maxLength: 255
              type: string
            crl_container_ref:
              description: |-
                The reference of the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PEM format CA revocation list file for `tls_enabled` pools.
              maxLength: 255
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            lb_algorithm:
              description: |-
                The load balancing algorithm for the pool. One of `LEAST_CONNECTIONS`,
                `ROUND_ROBIN`, or `SOURCE_IP`.
              enum:
                - LEAST_CONNECTIONS
                - ROUND_ROBIN
                - SOURCE_IP
                - SOURCE_IP_PORT
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            session_persistence:
              description: |-
                A JSON object specifying the session persistence for the pool or `null`
                for no session persistence. See [Pool Session Persistence](#session-persistence). Default is
                `null`.
              properties:
                cookie_name:
                  maxLength: 255
                  type: string
                persistence_granularity:
                  format: ipaddress
                  type: string
                persistence_timeout:
                  type: integer
                type:
                  enum:
                    - APP_COOKIE
                    - HTTP_COOKIE
                    - SOURCE_IP
                  type: string
              type: object
            tags:
              description: |-
                A list of simple strings assigned to the resource.

                **New in version 2.5**
              items:
                maxLength: 255
                type: string
              type: array
            tls_ciphers:
              description: |-
                List of ciphers in OpenSSL format (colon-separated).
                See <https://www.openssl.org/docs/man1.1.1/man1/ciphers.html>

                **New in version 2.15**
              maxLength: 2048
              type: string
            tls_container_ref:
              description: |-
                The reference to the [key manager service](https://docs.openstack.org/castellan/latest/) secret containing a
                PKCS12 format certificate/key bundle for `tls_enabled` pools for
                TLS client authentication to the member servers.

                **New in version 2.8**
              maxLength: 255
              type: string
            tls_enabled:
              description: |-
                When `true` connections to backend member servers will use TLS
                encryption. Default is `false`.

                **New in version 2.8**
              type: boolean
            tls_versions:
              description: |-
                A list of TLS protocol versions.
                Available versions: SSLv3, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3

                **New in version 2.17**
              items:
                maxLength: 32
                type: string
              type: array
          type: object
      type: object
    QuotaPUT:
      description: Overall object for quota PUT request.
      properties:
        quota:
          description: |-
            Individual quota definitions.
          properties:
            health_monitor:
              maximum: 2000000000
              minimum: -1
              type: integer
            healthmonitor:
              description: |-
                The configured health monitor quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            l7policy:
              description: |-
                The configured l7policy quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            l7rule:
              description: |-
                The configured l7rule quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            listener:
              description: |-
                The configured listener quota limit. A setting of `null` means it is
                using the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            load_balancer:
              maximum: 2000000000
              minimum: -1
              type: integer
            loadbalancer:
              description: |-
                The configured load balancer quota limit. A setting of `null` means it
                is using the deployment default quota. A setting of `-1` means
                unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            member:
              description: |-
                The configured member quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
            pool:
              description: |-
                The configured pool quota limit. A setting of `null` means it is using
                the deployment default quota. A setting of `-1` means unlimited.
              maximum: 2000000000
              minimum: -1
              type: integer
          type: object
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Auth-Token
      type: apiKey
security:
  - ApiKeyAuth: []
tags:
  - name: amphorae
  - name: availability-zone-profiles
  - name: availability-zones
  - name: flavor-profiles
  - name: flavors
  - name: healthmonitors
  - name: l7-policies
  - name: l7-rules
  - name: lbaas
  - name: listeners
  - name: load-balancers
  - name: members
  - name: octavia
  - name: pools
  - name: providers
  - name: quotas
