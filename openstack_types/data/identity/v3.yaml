openapi: 3.1.0
info:
  title: OpenStack Identity API
  description: |-
    Identity API provided by Keystone service
  version: '3.14'
paths:
  /:
    get:
      description: |-
        GET operation on /
      operationId: versions:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootGetResponse'
      tags:
        - version
    head:
      description: |-
        HEAD operation on /
      operationId: versions:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - version
  /v3:
    get:
      description: |-
        GET operation on /v3
      operationId: version:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootGetResponse'
      tags:
        - v3
    head:
      description: |-
        HEAD operation on /v3
      operationId: version:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - v3
  /v3/auth/projects:
    get:
      description: |-
        New in version 3.3

        This call returns the list of projects that are available to be scoped
        to based on the X-Auth-Token provided in the request.

        The structure of the response is exactly the same as listing projects
        for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_projects`
      operationId: auth/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProjectsGetResponse'
      tags:
        - auth
      summary: Get available project scopes
    head:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: auth/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/OS-FEDERATION/projects:
    get:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: OS-FEDERATION/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationProjectsGetResponse'
      tags:
        - OS-FEDERATION
      deprecated: true
    head:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: OS-FEDERATION/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
      deprecated: true
  /v3/auth/domains:
    get:
      description: |-
        New in version 3.3

        This call returns the list of domains that are available to be scoped
        to based on the X-Auth-Token provided in the request.

        The structure is the same as listing domains.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_domains`
      operationId: auth/domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDomainsGetResponse'
      tags:
        - auth
      summary: Get available domain scopes
    head:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: auth/domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/OS-FEDERATION/domains:
    get:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: OS-FEDERATION/domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationDomainsGetResponse'
      tags:
        - OS-FEDERATION
      deprecated: true
    head:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: OS-FEDERATION/domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
      deprecated: true
  /v3/auth/system:
    get:
      description: |-
        New in version 3.10

        This call returns the list of systems that are available to be scoped
        to based on the X-Auth-Token provided in the request.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_system`
      operationId: auth/system:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSystemGetResponse'
      tags:
        - auth
      summary: Get available system scopes
    head:
      description: |-
        Get possible system scopes for token.

        GET/HEAD /v3/auth/system
      operationId: auth/system:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/catalog:
    get:
      description: |-
        New in version 3.3

        This call returns a service catalog for the X-Auth-Token provided in the
        request, even if the token does not contain a catalog itself (for example,
        if it was generated using ?nocatalog).

        The structure of the catalog object is identical to that contained in a token.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_catalog`
      operationId: auth/catalog:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCatalogGetResponse'
      tags:
        - auth
      summary: Get service catalog
    head:
      description: |-
        Get service catalog for token.

        GET/HEAD /v3/auth/catalog
      operationId: auth/catalog:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/tokens/OS-PKI/revoked:
    get:
      description: |-
        Lists revoked PKI tokens.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/tokens/OS-PKI/revoked`
      operationId: auth/tokens/OS-PKI/revoked:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensOs_PkiRevokedGetResponse'
      tags:
        - auth
      summary: List revoked tokens
    head:
      description: |-
        Deprecated; get revoked token list.

        GET/HEAD /v3/auth/tokens/OS-PKI/revoked
      operationId: auth/tokens/OS-PKI/revoked:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/tokens:
    get:
      parameters:
        - $ref: '#/components/parameters/X-Subject-Token'
      description: |-
        Validates and shows information for a token, including its expiration date and authorization scope.

        Pass your own token in the `X-Auth-Token` request header.

        Pass the token that you want to validate in the `X-Subject-Token`
        request header.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_tokens`
      operationId: auth/tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensGetResponse'
          headers:
            X-Subject-Token:
              $ref: '#/components/headers/X-Subject-Token'
      tags:
        - auth
      summary: Validate and show information for token
    post:
      description: |-
        Authenticates an identity and generates a token. Uses the password authentication method. Authorization is unscoped.

        The request body must include a payload that specifies the
        authentication method, which is `password`, and the user, by ID
        or name, and password credentials.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_tokens`
      operationId: auth/tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensPostResponse'
          headers:
            X-Subject-Token:
              $ref: '#/components/headers/X-Subject-Token'
        '401':
          description: Unauthorized
          headers:
            Openstack-Auth-Receipt:
              $ref: '#/components/headers/Openstack-Auth-Receipt'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthReceiptSchema'
      tags:
        - auth
      security: []
      summary: Password authentication with unscoped authorization
    delete:
      description: |-
        Revokes a token.

        This call is similar to the HEAD `/auth/tokens` call except that
        the `X-Subject-Token` token is immediately not valid, regardless
        of the `expires_at` attribute value. An additional
        `X-Auth-Token` is not required.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_tokens`
      operationId: auth/tokens:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
          headers: {}
      tags:
        - auth
      summary: Revoke token
    head:
      description: |-
        Validates a token.

        This call is similar to `GET /auth/tokens` but no response body
        is provided even in the `X-Subject-Token` header.

        The Identity API returns the same response as when the subject
        token was issued by `POST /auth/tokens` even if an error occurs
        because the token is not valid. An HTTP `204` response code
        indicates that the `X-Subject-Token` is valid.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth_tokens`
      operationId: auth/tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          headers: {}
      tags:
        - auth
      summary: Check token
  /v3/auth/OS-FEDERATION/saml2:
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2GetResponse'
      tags:
        - auth
    post:
      description: |-
        Exchange a scoped token for a SAML assertion.

        POST /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationSaml2PostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2PostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/saml2/ecp:
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2EcpGetResponse'
      tags:
        - auth
    post:
      description: |-
        Exchange a scoped token for an ECP assertion.

        POST /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationSaml2EcpPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2EcpPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/websso/{protocol_id}:
    parameters:
      - $ref: '#/components/parameters/auth_OS_FEDERATION_websso_protocol_id'
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationWebssoGetResponse'
      tags:
        - auth
    post:
      description: |-
        POST operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:post
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationWebssoPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso:
    parameters:
      - $ref: '#/components/parameters/auth_OS_FEDERATION_identity_providers_protocols_websso_idp_id'
      - $ref: '#/components/parameters/auth_OS_FEDERATION_identity_providers_protocols_websso_protocol_id'
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationIdentity_ProvidersProtocolsWebssoGetResponse'
      tags:
        - auth
    post:
      description: |-
        POST operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:post
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/credentials:
    get:
      parameters:
        - $ref: '#/components/parameters/credentials_user_id'
        - $ref: '#/components/parameters/credentials_type'
      description: |-
        Lists all credentials.

        Optionally, you can include the `user_id` or `type` query parameter in the
        URI to filter the response by a user or credential type.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credentials`
      operationId: credentials:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetResponse'
      tags:
        - credentials
      summary: List credentials
    post:
      description: |-
        Creates a credential.

        The following example shows how to create an EC2-style credential.
        The credential blob is a string that contains a JSON-serialized
        dictionary with the `access` and `secret` keys. This format is
        required when you specify the `ec2` type. To specify other
        credentials, such as `access_key`, change the type and contents
        of the data blob.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credentials`
      operationId: credentials:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsPostResponse'
      tags:
        - credentials
      summary: Create credential
    head:
      parameters:
        - $ref: '#/components/parameters/credentials_user_id'
        - $ref: '#/components/parameters/credentials_type'
      description: |-
        List credentials.

        GET /v3/credentials
      operationId: credentials:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - credentials
  /v3/credentials/{credential_id}:
    parameters:
      - $ref: '#/components/parameters/credentials_credential_id'
    get:
      description: |-
        Shows details for a credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credential`
      operationId: credentials/credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialGetResponse'
      tags:
        - credentials
      summary: Show credential details
    delete:
      description: |-
        Deletes a credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credential`
      operationId: credentials/credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - credentials
      summary: Delete credential
    patch:
      description: |-
        Updates a credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credential`
      operationId: credentials/credential_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialPatchResponse'
      tags:
        - credentials
      summary: Update credential
    head:
      description: |-
        Retrieve existing credentials.

        GET /v3/credentials/{credential_id}
      operationId: credentials/credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - credentials
  /v3/domains:
    get:
      parameters:
        - $ref: '#/components/parameters/domains_enabled'
        - $ref: '#/components/parameters/domains_name'
        - $ref: '#/components/parameters/domains_marker'
        - $ref: '#/components/parameters/domains_limit'
      description: |-
        Lists all domains.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domains`
      operationId: domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsGetResponse'
      tags:
        - domains
      summary: List domains
    post:
      description: |-
        Creates a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domains`
      operationId: domains:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsPostResponse'
      tags:
        - domains
      summary: Create domain
    head:
      parameters:
        - $ref: '#/components/parameters/domains_enabled'
        - $ref: '#/components/parameters/domains_name'
        - $ref: '#/components/parameters/domains_marker'
        - $ref: '#/components/parameters/domains_limit'
      description: |-
        List domains.

        GET/HEAD /v3/domains
      operationId: domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
    get:
      description: |-
        Shows details for a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domains`
      operationId: domains/domain_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainGetResponse'
      tags:
        - domains
      summary: Show domain details
    delete:
      description: |-
        Deletes a domain.
        To minimize the risk of accidentally deleting a domain, you must
        first disable the domain by using the update domain method.

        When you delete a domain, this call also deletes all entities owned
        by it, such as users, groups, and projects, and any credentials and
        granted roles that relate to those entities.

        If you try to delete an enabled domain, this call returns the
        `Forbidden (403)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain`
      operationId: domains/domain_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
      summary: Delete domain
    patch:
      description: |-
        Updates a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain`
      operationId: domains/domain_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainPatchResponse'
      tags:
        - domains
      summary: Update domain
    head:
      description: |-
        Get domain

        GET/HEAD /v3/domains/{domain_id}
      operationId: domains/domain_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/config:
    parameters:
      - $ref: '#/components/parameters/domains_config_domain_id'
    get:
      description: |-
        Shows details for a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config`
      operationId: domains/domain_id/config:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
      summary: Show domain configuration
    delete:
      description: |-
        Deletes a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config`
      operationId: domains/domain_id/config:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domain-configuration
      summary: Delete domain configuration
    put:
      description: |-
        Creates a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config`
      operationId: domains/domain_id/config:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfig'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
      summary: Create domain configuration
    patch:
      description: |-
        Updates a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config`
      operationId: domains/domain_id/config:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfig'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
      summary: Update domain configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/{domain_id}/config/{group}:
    parameters:
      - $ref: '#/components/parameters/domains_config_domain_id'
      - $ref: '#/components/parameters/domains_config_group'
    get:
      description: |-
        Shows details for a domain group configuration.

        The API supports only the `identity` and `ldap` groups.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/domain_id/config/group:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroup'
      tags:
        - domain-configuration
      summary: Show domain group configuration
    delete:
      description: |-
        Deletes a domain group configuration.

        The API supports only the `identity` and `ldap` groups.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/domain_id/config/group:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domain-configuration
      summary: Delete domain group configuration
    patch:
      description: |-
        Updates a domain group configuration.

        The API supports only the `identity` and `ldap` groups. If you
        try to set configuration options for other groups, this call fails
        with the `Forbidden (403)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/domain_id/config/group:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfigGroup'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroup'
      tags:
        - domain-configuration
      summary: Update domain group configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/{domain_id}/config/{group}/{option}:
    parameters:
      - $ref: '#/components/parameters/domains_config_domain_id'
      - $ref: '#/components/parameters/domains_config_group'
      - $ref: '#/components/parameters/domains_config_option'
    get:
      description: |-
        Shows details for a domain group option configuration.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user_tree_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/domain_id/config/group/option:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroupOption'
      tags:
        - domain-configuration
      summary: Show domain group option configuration
    delete:
      description: |-
        Deletes a domain group option configuration.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user_tree_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/domain_id/config/group/option:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domain-configuration
      summary: Delete domain group option configuration
    patch:
      description: |-
        Updates a domain group option configuration.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user_tree_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/domain_id/config/group/option:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfigGroupOption'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroupOption'
      tags:
        - domain-configuration
      summary: Update domain group option configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group/option:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/config/default:
    get:
      description: |-
        The default configuration settings for the options that can be overridden
        can be retrieved.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/config/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfig'
      tags:
        - domain-configuration
      summary: Show default configuration settings
    head:
      description: |-
        Get default domain config.

        GET/HEAD /v3/domains/config/default
      operationId: domains/config/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/config/{group}/default:
    parameters:
      - $ref: '#/components/parameters/domains_config_default_group'
    get:
      description: |-
        Reads the default configuration settings for a specific group.

        The API supports only the `identity` and `ldap` groups.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/config/group/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroup'
      tags:
        - domain-configuration
      summary: Show default configuration for a group
    head:
      description: |-
        Get default domain group config.

        GET/HEAD /v3/domains/config/{group}/default
      operationId: domains/config/group/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/config/{group}/{option}/default:
    parameters:
      - $ref: '#/components/parameters/domains_config_default_group'
      - $ref: '#/components/parameters/domains_config_default_option'
    get:
      description: |-
        Reads the default configuration setting for an option within a group.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user_tree_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/domain_config_default`
      operationId: domains/config/group/option/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfigGroupOption'
      tags:
        - domain-configuration
      summary: Show default option for a group
    head:
      description: |-
        Get default domain group option config.

        GET/HEAD /v3/domains/config/{group}/{option}/default
      operationId: domains/config/group/option/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domain-configuration
  /v3/domains/{domain_id}/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/domains_users_roles_domain_id'
      - $ref: '#/components/parameters/domains_users_roles_user_id'
    get:
      description: |-
        Lists role assignments for a user on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_user_roles`
      operationId: domains/domain_id/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - roles
      summary: List role assignments for user on domain
    head:
      description: |-
        Get user grant.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles
      operationId: domains/domain_id/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/domains_users_roles_domain_id'
      - $ref: '#/components/parameters/domains_users_roles_user_id'
      - $ref: '#/components/parameters/domains_users_roles_role_id'
    get:
      description: |-
        Check if a user has a specific role on the domain.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
      operationId: domains/domain_id/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
    delete:
      description: |-
        Unassigns a role from a user on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_user_role`
      operationId: domains/domain_id/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
      summary: Unassigns role from user on domain
    put:
      description: |-
        Assigns a role to a user on a domain.

        Relationship: `https://developer.openstack.org/api-ref/identity/v3/index.html#assign-role-to-user-on-domain`
      operationId: domains/domain_id/users/user_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - roles
      summary: Assign role to user on domain
    head:
      description: |-
        Validates that a user has a role assignment on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_user_role`
      operationId: domains/domain_id/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
      summary: Check whether user has role assignment on domain
  /v3/domains/{domain_id}/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/domains_groups_roles_domain_id'
      - $ref: '#/components/parameters/domains_groups_roles_group_id'
    get:
      description: |-
        Lists role assignments for a group on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_group_roles`
      operationId: domains/domain_id/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - roles
      summary: List role assignments for group on domain
    head:
      description: |-
        List all domain grants for a specific group.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles
      operationId: domains/domain_id/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/domains_groups_roles_domain_id'
      - $ref: '#/components/parameters/domains_groups_roles_group_id'
      - $ref: '#/components/parameters/domains_groups_roles_role_id'
    get:
      description: |-
        Check if a group has a specific role on a domain.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
      operationId: domains/domain_id/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
    delete:
      description: |-
        Unassigns a role from a group on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_group_role`
      operationId: domains/domain_id/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
      summary: Unassign role from group on domain
    put:
      description: |-
        Assigns a role to a group on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_group_role`
      operationId: domains/domain_id/groups/group_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - roles
      summary: Assign role to group on domain
    head:
      description: |-
        Validates that a group has a role assignment on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain_group_role`
      operationId: domains/domain_id/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
      summary: Check whether group has role assignment on domain
  /v3/ec2tokens:
    get:
      description: |-
        GET operation on /v3/ec2tokens
      operationId: ec2tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2TokensGetResponse'
      tags:
        - ec2tokens
    post:
      description: |-
        Authenticate ec2 token.

        POST /v3/ec2tokens
      operationId: ec2tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ec2TokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2TokensPostResponse'
      tags:
        - ec2tokens
    head:
      description: |-
        HEAD operation on /v3/ec2tokens
      operationId: ec2tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - ec2tokens
  /v3/endpoints:
    get:
      parameters:
        - $ref: '#/components/parameters/endpoints_interface'
        - $ref: '#/components/parameters/endpoints_region_id'
        - $ref: '#/components/parameters/endpoints_service_id'
      description: |-
        Lists all available endpoints.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoints`
      operationId: endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsGetResponse'
      tags:
        - endpoints
      summary: List endpoints
    post:
      description: |-
        Creates an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoints`
      operationId: endpoints:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      tags:
        - endpoints
      summary: Create endpoint
    head:
      parameters:
        - $ref: '#/components/parameters/endpoints_interface'
        - $ref: '#/components/parameters/endpoints_region_id'
        - $ref: '#/components/parameters/endpoints_service_id'
      description: |-
        List all endpoints.

        GET /v3/endpoints
      operationId: endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/endpoints_endpoint_id'
    get:
      description: |-
        Shows details for an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoints`
      operationId: endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      tags:
        - endpoints
      summary: Show endpoint details
    delete:
      description: |-
        Deletes an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoint`
      operationId: endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - endpoints
      summary: Delete endpoint
    patch:
      description: |-
        Updates an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoint`
      operationId: endpoints/endpoint_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
      tags:
        - endpoints
      summary: Update endpoint
    head:
      description: |-
        Show endpoint details

        GET /v3/endpoints/{endpoint_id}
      operationId: endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy:
    parameters:
      - $ref: '#/components/parameters/endpoints_OS_ENDPOINT_POLICY_policy_endpoint_id'
    get:
      description: |-
        GET operation on /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
      operationId: endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsOs_Endpoint_PolicyPolicyGetResponse'
      tags:
        - endpoints
      deprecated: true
    head:
      description: |-
        HEAD operation on /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
      operationId: endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/groups:
    get:
      parameters:
        - $ref: '#/components/parameters/groups_domain_id'
        - $ref: '#/components/parameters/groups_name'
        - $ref: '#/components/parameters/groups_marker'
        - $ref: '#/components/parameters/groups_limit'
        - $ref: '#/components/parameters/groups_sort_key'
        - $ref: '#/components/parameters/groups_sort_dir'
      description: |-
        Lists groups.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/groups`
      operationId: groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetResponse'
      tags:
        - groups
      summary: List groups
    post:
      description: |-
        Creates a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/groups`
      operationId: groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      tags:
        - groups
      summary: Create group
    head:
      parameters:
        - $ref: '#/components/parameters/groups_domain_id'
        - $ref: '#/components/parameters/groups_name'
        - $ref: '#/components/parameters/groups_marker'
        - $ref: '#/components/parameters/groups_limit'
        - $ref: '#/components/parameters/groups_sort_key'
        - $ref: '#/components/parameters/groups_sort_dir'
      description: |-
        List groups.

        GET/HEAD /groups
      operationId: groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups/{group_id}:
    parameters:
      - $ref: '#/components/parameters/groups_group_id'
    get:
      description: |-
        Shows details for a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group`
      operationId: groups/group_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      tags:
        - groups
      summary: Show group details
    delete:
      description: |-
        Deletes a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group`
      operationId: groups/group_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - groups
      summary: Delete group
    patch:
      description: |-
        Updates a group.

        If the back-end driver does not support this functionality, the
        call returns the `Not Implemented (501)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group`
      operationId: groups/group_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      tags:
        - groups
      summary: Update group
    head:
      description: |-
        Get a group reference.

        GET/HEAD /groups/{group_id}
      operationId: groups/group_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups/{group_id}/users:
    parameters:
      - $ref: '#/components/parameters/groups_users_group_id'
    get:
      parameters:
        - $ref: '#/components/parameters/group_users_password_expires_at'
      description: |-
        Lists the users that belong to a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group_users`
      operationId: groups/group_id/users:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUsersGetResponse'
      tags:
        - groups
      summary: List users in group
    head:
      description: |-
        Get list of users in group.

        GET/HEAD /groups/{group_id}/users
      operationId: groups/group_id/users:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups/{group_id}/users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/groups_users_group_id'
      - $ref: '#/components/parameters/groups_users_user_id'
    get:
      description: |-
        Check if a user is in a group.

        GET/HEAD /groups/{group_id}/users/{user_id}
      operationId: groups/group_id/users/user_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
    delete:
      description: |-
        Removes a user from a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group_user`
      operationId: groups/group_id/users/user_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - groups
      summary: Remove user from group
    put:
      description: |-
        Adds a user to a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group_user`
      operationId: groups/group_id/users/user_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - groups
      summary: Add user to group
    head:
      description: |-
        Validates that a user belongs to a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group_user`
      operationId: groups/group_id/users/user_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
      summary: Check whether user belongs to group
  /v3/limits:
    get:
      parameters:
        - $ref: '#/components/parameters/limits_service_id'
        - $ref: '#/components/parameters/limits_region_id'
        - $ref: '#/components/parameters/limits_resource_name'
        - $ref: '#/components/parameters/limits_project_id'
        - $ref: '#/components/parameters/limits_domain_id'
      description: |-
        Lists Limits.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limits`
      operationId: limits:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsGetResponse'
      tags:
        - limits
      summary: List Limits
    post:
      description: |-
        Creates limits. It supports to create more than one limit in one request.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limits`
      operationId: limits:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsPostResponse'
      tags:
        - limits
      summary: Create Limits
    head:
      parameters:
        - $ref: '#/components/parameters/limits_service_id'
        - $ref: '#/components/parameters/limits_region_id'
        - $ref: '#/components/parameters/limits_resource_name'
        - $ref: '#/components/parameters/limits_project_id'
        - $ref: '#/components/parameters/limits_domain_id'
      description: |-
        List limits.

        GET /v3/limits
      operationId: limits:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/limits/{limit_id}:
    parameters:
      - $ref: '#/components/parameters/limits_limit_id'
    get:
      description: |-
        Shows details for a limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit`
      operationId: limits/limit_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitGetResponse'
      tags:
        - limits
      summary: Show Limit Details
    delete:
      description: |-
        Deletes a limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit`
      operationId: limits/limit_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - limits
      summary: Delete Limit
    patch:
      description: |-
        Updates the specified limit. It only supports to update `resource_limit` or
        `description` for the limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit`
      operationId: limits/limit_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitPatchResponse'
      tags:
        - limits
      summary: Update Limit
    head:
      description: |-
        Retrieve an existing limit.

        GET /v3/limits/{limit_id}
      operationId: limits/limit_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/limits/model:
    get:
      description: |-
        Return the configured limit enforcement model.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit_model`
      operationId: limits/model:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsModelGetResponse'
      tags:
        - limits
      summary: Get Enforcement Model
    head:
      description: |-
        Retrieve enforcement model.

        GET /v3/limits/model
      operationId: limits/model:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/OS-EP-FILTER/endpoint_groups:
    get:
      parameters:
        - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_name'
      description: |-
        List all endpoint groups.

        GET /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsGetResponse'
      tags:
        - OS-EP-FILTER
    post:
      description: |-
        Create new endpoint groups.

        POST /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsPostResponse'
      tags:
        - OS-EP-FILTER
    head:
      parameters:
        - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_name'
      description: |-
        List all endpoint groups.

        GET /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoint_group_id'
    get:
      description: |-
        Get Endpoint Group

        GET /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    patch:
      description: |-
        Update existing endpoint groups

        PATCH /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupPatchResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        Get Endpoint Group

        GET /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoints/{endpoint_id}/projects:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoints_projects_endpoint_id'
    get:
      description: |-
        Return a list of projects associated with the endpoint.
      operationId: OS-EP-FILTER/endpoints/endpoint_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpointsProjectsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        Return a list of projects associated with the endpoint.
      operationId: OS-EP-FILTER/endpoints/endpoint_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoints_project_id'
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    put:
      description: |-
        PUT operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointPutResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoints:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoints_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints
      operationId: OS-EP-FILTER/projects/project_id/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints
      operationId: OS-EP-FILTER/projects/project_id/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoint_groups_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups
      operationId: OS-EP-FILTER/projects/project_id/endpoint_groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpoint_GroupsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups
      operationId: OS-EP-FILTER/projects/project_id/endpoint_groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoints_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsEndpointsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_projects_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_projects_endpoint_group_id'
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_projects_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    put:
      description: |-
        PUT operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectPutResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-FEDERATION/saml2/metadata:
    get:
      description: |-
        Get SAML2 metadata.

        GET/HEAD /OS-FEDERATION/saml2/metadata
      operationId: OS-FEDERATION/saml2/metadata:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Os_FederationSaml2MetadataGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get SAML2 metadata.

        GET/HEAD /OS-FEDERATION/saml2/metadata
      operationId: OS-FEDERATION/saml2/metadata:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_auth_idp_id'
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_auth_protocol_id'
    get:
      description: |-
        Authenticate from dedicated uri endpoint.

        GET/HEAD /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthGetResponse'
      tags:
        - OS-FEDERATION
    post:
      description: |-
        Authenticate from dedicated uri endpoint.

        POST /OS-FEDERATION/identity_providers/
             {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthPostResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Authenticate from dedicated uri endpoint.

        GET/HEAD /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers:
    get:
      parameters:
        - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_id'
        - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_enabled'
      description: |-
        List all identity providers.

        GET/HEAD /OS-FEDERATION/identity_providers
      operationId: OS-FEDERATION/identity_providers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersGetResponse'
      tags:
        - OS-FEDERATION
    head:
      parameters:
        - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_id'
        - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_enabled'
      description: |-
        List all identity providers.

        GET/HEAD /OS-FEDERATION/identity_providers
      operationId: OS-FEDERATION/identity_providers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_idp_id'
    get:
      description: |-
        Get an IDP resource.

        GET/HEAD /OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        DELETE operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create an idp resource for federated authentication.

        PUT /OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProviderPut'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        PATCH operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProviderPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get an IDP resource.

        GET/HEAD /OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_idp_id'
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_protocol_id'
    get:
      description: |-
        Get protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a protocol from an IDP.

        DELETE /OS-FEDERATION/identity_providers/
               {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create protocol for an IDP.

        PUT /OS-Federation/identity_providers/{idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update protocol for an IDP.

        PATCH /OS-FEDERATION/identity_providers/
              {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_idp_id'
    get:
      description: |-
        List protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/{idp_id}/protocols
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        List protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/{idp_id}/protocols
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/mappings/{mapping_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_mappings_mapping_id'
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a mapping.

        DELETE /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create a mapping.

        PUT /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationMappingPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update an attribute mapping for identity federation.

        PATCH /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationMappingPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/mappings:
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/mappings
      operationId: OS-FEDERATION/mappings:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/mappings
      operationId: OS-FEDERATION/mappings:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/service_providers:
    get:
      parameters:
        - $ref: '#/components/parameters/OS_FEDERATION_service_providers_id'
        - $ref: '#/components/parameters/OS_FEDERATION_service_providers_enabled'
      description: |-
        List service providers.

        GET/HEAD /OS-FEDERATION/service_providers
      operationId: OS-FEDERATION/service_providers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProvidersGetResponse'
      tags:
        - OS-FEDERATION
    head:
      parameters:
        - $ref: '#/components/parameters/OS_FEDERATION_service_providers_id'
        - $ref: '#/components/parameters/OS_FEDERATION_service_providers_enabled'
      description: |-
        List service providers.

        GET/HEAD /OS-FEDERATION/service_providers
      operationId: OS-FEDERATION/service_providers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/service_providers/{service_provider_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_service_providers_service_provider_id'
    get:
      description: |-
        Get a service provider.

        GET/HEAD /OS-FEDERATION/service_providers/{service_provider_id}
      operationId: OS-FEDERATION/service_providers/service_provider_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a service provider.

        DELETE /OS-FEDERATION/service_providers/{service_provider_id}
      operationId: OS-FEDERATION/service_providers/service_provider_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create a service provider.

        PUT /OS-FEDERATION/service_providers/{service_provider_id}
      operationId: OS-FEDERATION/service_providers/service_provider_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationService_ProviderPut'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update a service provider.

        PATCH /OS-FEDERATION/service_providers/{service_provider_id}
      operationId: OS-FEDERATION/service_providers/service_provider_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationService_ProviderPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get a service provider.

        GET/HEAD /OS-FEDERATION/service_providers/{service_provider_id}
      operationId: OS-FEDERATION/service_providers/service_provider_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_group_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Revokes an inherited project role from a group in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_group_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from group on domain
    put:
      description: |-
        The inherited role is only applied to the owned projects (both existing and
        future projects), and will not appear as a role in a domain scoped token.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_group_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to group on projects owned by a domain
    head:
      description: |-
        Checks whether a group has an inherited project role in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_group_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if group has an inherited project role on domain
  /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_inherited_to_projects_group_id'
    get:
      description: |-
        The list only contains those role assignments to the domain that were specified
        as being inherited to projects within that domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_group_roles_inherited_to_projects`
      operationId: OS-INHERIT/domains/domain_id/groups/group_id/roles/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
      summary: List group’s inherited project roles on domain
    head:
      description: |-
        List roles (inherited) for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/groups/group_id/roles/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_user_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}/roles
                 /{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Revokes an inherited project role from a user in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_user_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from user on domain
    put:
      description: |-
        Assigns a role to a user in projects owned by a domain.

        The inherited role is only applied to the owned projects (both existing and
        future projects), and will not appear as a role in a domain scoped token.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_user_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to user on projects owned by domain
    head:
      description: |-
        Checks whether a user has an inherited project role in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_user_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if user has an inherited project role on domain
  /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_inherited_to_projects_user_id'
    get:
      description: |-
        The list only contains those role assignments to the domain that were specified
        as being inherited to projects within that domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain_user_roles_inherited_to_projects`
      operationId: OS-INHERIT/domains/domain_id/users/user_id/roles/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
      summary: List user’s inherited project roles on a domain
    head:
      description: |-
        List roles (inherited) for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/users/user_id/roles/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_roles_inherited_to_projects_project_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_roles_inherited_to_projects_user_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a user on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/users/{user_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project_user_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from user on project
    put:
      description: |-
        The inherited role assignment is anchored to a project and applied to its
        subtree in the projects hierarchy (both existing and future projects).

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project_user_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to user on projects in a subtree
    head:
      description: |-
        Checks whether a user has a role assignment with the `inherited_to_projects` flag in a project.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project_user_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if user has an inherited project role on project
  /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_roles_inherited_to_projects_project_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_roles_inherited_to_projects_group_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_roles_inherited_to_projects_role_id'
    get:
      description: |-
        Check for an inherited grant for a group on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |-
        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project_group_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from group on project
    put:
      description: |-
        The inherited role assignment is anchored to a project and applied to its
        subtree in the projects hierarchy (both existing and future projects).

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project_group_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to group on projects in a subtree
    head:
      description: |-
        Checks whether a group has a role assignment with the `inherited_to_projects` flag in a project.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project_group_role_inherited_to_projects`
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if group has an inherited project role on project
  /v3/OS-OAUTH1/consumers/{consumer_id}:
    parameters:
      - $ref: '#/components/parameters/OS_OAUTH1_consumers_consumer_id'
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumerGetResponse'
      tags:
        - OS-OAUTH1
    delete:
      description: |-
        DELETE operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-OAUTH1
    patch:
      description: |-
        PATCH operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1ConsumerPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumerPatchResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/consumers:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumersGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1ConsumersPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumersPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/request_token:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Request_TokenGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1Request_TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Request_TokenPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/access_token:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Access_TokenGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1Access_TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Access_TokenPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/authorize/{request_token_id}:
    parameters:
      - $ref: '#/components/parameters/OS_OAUTH1_authorize_request_token_id'
    put:
      description: |-
        PUT operation on /v3/OS-OAUTH1/authorize/{request_token_id}
      operationId: OS-OAUTH1/authorize/request_token_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1AuthorizePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1AuthorizePutResponse'
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH2/token:
    get:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenGetResponse'
      tags:
        - OS-OAUTH2
    post:
      description: |-
        Get an OAuth2.0 Access Token.

        POST /v3/OS-OAUTH2/token
      operationId: OS-OAUTH2/token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPostResponse'
      tags:
        - OS-OAUTH2
    delete:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-OAUTH2
    put:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPutResponse'
      tags:
        - OS-OAUTH2
    patch:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPatchResponse'
      tags:
        - OS-OAUTH2
    head:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH2
  /v3/OS-REVOKE/events:
    get:
      description: |-
        GET operation on /v3/OS-REVOKE/events
      operationId: OS-REVOKE/events:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_RevokeEventsGetResponse'
      tags:
        - OS-REVOKE
    head:
      description: |-
        HEAD operation on /v3/OS-REVOKE/events
      operationId: OS-REVOKE/events:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-REVOKE
  /v3/OS-SIMPLE-CERT/ca:
    get:
      description: |-
        GET operation on /v3/OS-SIMPLE-CERT/ca
      operationId: OS-SIMPLE-CERT/ca:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Simple_CertCaGetResponse'
      tags:
        - OS-SIMPLE-CERT
    head:
      description: |-
        HEAD operation on /v3/OS-SIMPLE-CERT/ca
      operationId: OS-SIMPLE-CERT/ca:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-SIMPLE-CERT
  /v3/OS-SIMPLE-CERT/certificates:
    get:
      description: |-
        GET operation on /v3/OS-SIMPLE-CERT/certificates
      operationId: OS-SIMPLE-CERT/certificates:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Simple_CertCertificatesGetResponse'
      tags:
        - OS-SIMPLE-CERT
    head:
      description: |-
        HEAD operation on /v3/OS-SIMPLE-CERT/certificates
      operationId: OS-SIMPLE-CERT/certificates:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-SIMPLE-CERT
  /v3/policies/{policy_id}:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
    get:
      description: |-
        Shows details for a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policy`
      operationId: policies/policy_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyGetResponse'
      tags:
        - policies
      summary: Show policy details
    delete:
      description: |-
        Deletes a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policy`
      operationId: policies/policy_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
      summary: Delete policy
    patch:
      description: |-
        Updates a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policy`
      operationId: policies/policy_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyPatchResponse'
      tags:
        - policies
      summary: Update policy
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}
      operationId: policies/policy_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies:
    get:
      description: |-
        Lists policies.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policies`
      operationId: policies:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesGetResponse'
      tags:
        - policies
      summary: List policies
    post:
      description: |-
        Creates a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policies`
      operationId: policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPostResponse'
      tags:
        - policies
      summary: Create policy
    head:
      description: |-
        HEAD operation on /v3/policies
      operationId: policies:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_endpoints_policy_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointsGetResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_endpoints_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointPutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_service_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServiceGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicePutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}:
    parameters:
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_regions_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_regions_service_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_regions_region_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: 
        policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionPutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/projects:
    get:
      parameters:
        - $ref: '#/components/parameters/projects_domain_id'
        - $ref: '#/components/parameters/projects_enabled'
        - $ref: '#/components/parameters/projects_name'
        - $ref: '#/components/parameters/projects_parent_id'
        - $ref: '#/components/parameters/projects_is_domain'
        - $ref: '#/components/parameters/projects_tags'
        - $ref: '#/components/parameters/projects_tags-any'
        - $ref: '#/components/parameters/projects_not-tags'
        - $ref: '#/components/parameters/projects_not-tags-any'
        - $ref: '#/components/parameters/projects_marker'
        - $ref: '#/components/parameters/projects_limit'
      description: |-
        Lists projects.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGetResponse'
      tags:
        - projects
      summary: List projects
    post:
      description: |-
        Creates a project, where the project may act as a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
      tags:
        - projects
      summary: Create project
    head:
      parameters:
        - $ref: '#/components/parameters/projects_domain_id'
        - $ref: '#/components/parameters/projects_enabled'
        - $ref: '#/components/parameters/projects_name'
        - $ref: '#/components/parameters/projects_parent_id'
        - $ref: '#/components/parameters/projects_is_domain'
        - $ref: '#/components/parameters/projects_tags'
        - $ref: '#/components/parameters/projects_tags-any'
        - $ref: '#/components/parameters/projects_not-tags'
        - $ref: '#/components/parameters/projects_not-tags-any'
        - $ref: '#/components/parameters/projects_marker'
        - $ref: '#/components/parameters/projects_limit'
      description: |-
        List projects.

        GET/HEAD /v3/projects
      operationId: projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
    get:
      description: |-
        Shows details for a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project`
      operationId: projects/project_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetResponse'
      tags:
        - projects
      summary: Show project details
    delete:
      description: |-
        Deletes a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project`
      operationId: projects/project_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Delete project
    patch:
      description: |-
        Updates a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project`
      operationId: projects/project_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPatchResponse'
      tags:
        - projects
      summary: Update project
    head:
      description: |-
        Get project.

        GET/HEAD /v3/projects/{project_id}
      operationId: projects/project_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/tags:
    parameters:
      - $ref: '#/components/parameters/projects_tags_project_id'
    get:
      description: |-
        Lists all tags within a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects/project_id/tags:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagsGetResponse'
      tags:
        - projects
      summary: List tags for a project
    delete:
      description: |-
        Remove all tags from a given project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects/project_id/tags:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Remove all tags from a project
    put:
      description: |-
        Modifies the tags for a project. Any existing tags not specified will
        be deleted.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects/project_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsTagsPut'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagsPutResponse'
      tags:
        - projects
      summary: Modify tag list for a project
    head:
      description: |-
        List tags associated with a given project.

        GET /v3/projects/{project_id}/tags
      operationId: projects/project_id/tags:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/tags/{value}:
    parameters:
      - $ref: '#/components/parameters/projects_tags_project_id'
      - $ref: '#/components/parameters/projects_tags_value'
    get:
      description: |-
        Checks if a project contains the specified tag.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects/project_id/tags/value:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Check if project contains tag
    delete:
      description: |-
        Remove a single tag from a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects/project_id/tags/value:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Delete single tag from project
    put:
      description: |-
        Creates the specified tag and adds it to the list of tags in the project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`
      operationId: projects/project_id/tags/value:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - projects
      summary: Add single tag to a project
    head:
      description: |-
        Get information for a single tag associated with a given project.

        GET /v3/projects/{project_id}/tags/{value}
      operationId: projects/project_id/tags/value:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/projects_users_roles_project_id'
      - $ref: '#/components/parameters/projects_users_roles_user_id'
      - $ref: '#/components/parameters/projects_users_roles_role_id'
    get:
      description: |-
        Check grant for project, user, role.

        GET/HEAD /v3/projects/{project_id/users/{user_id}/roles/{role_id}
      operationId: projects/project_id/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    delete:
      description: |-
        Unassigns a role from a user on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_user_role`
      operationId: projects/project_id/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Unassign role from user on project
    put:
      description: |-
        Assigns a role to a user on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_user_role`
      operationId: projects/project_id/users/user_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Assign role to user on project
    head:
      description: |-
        Validates that a user has a role on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_user_role`
      operationId: projects/project_id/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Check whether user has role assignment on project
  /v3/projects/{project_id}/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/projects_users_roles_project_id'
      - $ref: '#/components/parameters/projects_users_roles_user_id'
    get:
      description: |-
        Lists role assignments for a user on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_user_role`
      operationId: projects/project_id/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - projects
      summary: List role assignments for user on project
    head:
      description: |-
        List grants for user on project.

        GET/HEAD /v3/projects/{project_id}/users/{user_id}
      operationId: projects/project_id/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/projects_groups_roles_project_id'
      - $ref: '#/components/parameters/projects_groups_roles_group_id'
      - $ref: '#/components/parameters/projects_groups_roles_role_id'
    get:
      description: |-
        Check grant for project, group, role.

        GET/HEAD /v3/projects/{project_id/groups/{group_id}/roles/{role_id}
      operationId: projects/project_id/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
    delete:
      description: |-
        Unassigns a role from a group on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_group_role`
      operationId: projects/project_id/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Unassign role from group on project
    put:
      description: |-
        Assigns a role to a group on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_group_role`
      operationId: projects/project_id/groups/group_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - projects
      summary: Assign role to group on project
    head:
      description: |-
        Validates that a group has a role assignment on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_group_role`
      operationId: projects/project_id/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
      summary: Check whether group has role assignment on project
  /v3/projects/{project_id}/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/projects_groups_roles_project_id'
      - $ref: '#/components/parameters/projects_groups_roles_group_id'
    get:
      description: |-
        Lists role assignments for a group on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project_user_role`
      operationId: projects/project_id/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesInfos'
      tags:
        - projects
      summary: List role assignments for group on project
    head:
      description: |-
        List grants for group on project.

        GET/HEAD /v3/projects/{project_id}/groups/{group_id}
      operationId: projects/project_id/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/regions/{region_id}:
    parameters:
      - $ref: '#/components/parameters/regions_region_id'
    get:
      description: |-
        Shows details for a region, by ID.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/regions`
      operationId: regions/region_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      tags:
        - regions
      summary: Show region details
    delete:
      description: |-
        Deletes a region.

        The following error might occur:

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/region`
      operationId: regions/region_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - regions
      summary: Delete region
    put:
      description: |-
        PUT operation on /v3/regions/{region_id}
      operationId: regions/region_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionPutResponse'
      tags:
        - regions
    patch:
      description: |-
        Updates a region.

        You can update the description or parent region ID for a region.
        You cannot update the region ID.

        The following error might occur:

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/region`
      operationId: regions/region_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      tags:
        - regions
      summary: Update region
    head:
      description: |-
        HEAD operation on /v3/regions/{region_id}
      operationId: regions/region_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - regions
  /v3/regions:
    get:
      parameters:
        - $ref: '#/components/parameters/regions_parent_region_id'
      description: |-
        Lists regions.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/regions`
      operationId: regions:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsGetResponse'
      tags:
        - regions
      summary: List regions
    post:
      description: |-
        Creates a region.

        When you create the region, you can optionally specify a region ID.
        If you include characters in the region ID that are not allowed in
        a URI, you must URL-encode the ID. If you omit an ID, the API
        assigns an ID to the region.

        The following errors might occur:

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/regions`
      operationId: regions:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
      tags:
        - regions
      summary: Create region
    head:
      description: |-
        HEAD operation on /v3/regions
      operationId: regions:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - regions
  /v3/registered_limits:
    get:
      parameters:
        - $ref: '#/components/parameters/registered_limits_service_id'
        - $ref: '#/components/parameters/registered_limits_region_id'
        - $ref: '#/components/parameters/registered_limits_resource_name'
      description: |-
        Lists Registered Limits.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered_limits`
      operationId: registered_limits:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitsGetResponse'
      tags:
        - registered_limits
      summary: List Registered Limits
    post:
      description: |-
        Creates registered limits. It supports to create more than one registered limit
        in one request.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered_limits`
      operationId: registered_limits:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registered_LimitsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitsPostResponse'
      tags:
        - registered_limits
      summary: Create Registered Limits
    head:
      parameters:
        - $ref: '#/components/parameters/registered_limits_service_id'
        - $ref: '#/components/parameters/registered_limits_region_id'
        - $ref: '#/components/parameters/registered_limits_resource_name'
      description: |-
        List registered limits.

        GET /v3/registered_limits
      operationId: registered_limits:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - registered_limits
  /v3/registered_limits/{registered_limit_id}:
    parameters:
      - $ref: '#/components/parameters/registered_limits_registered_limit_id'
    get:
      description: |-
        Shows details for a registered limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered_limit`
      operationId: registered_limits/registered_limit_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitGetResponse'
      tags:
        - registered_limits
      summary: Show Registered Limit Details
    delete:
      description: |-
        Deletes a registered limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered_limit`
      operationId: registered_limits/registered_limit_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - registered_limits
      summary: Delete Registered Limit
    patch:
      description: |-
        Updates the specified registered limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered_limit`
      operationId: registered_limits/registered_limit_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registered_LimitPatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitPatchResponse'
      tags:
        - registered_limits
      summary: Update Registered Limit
    head:
      description: |-
        Retrieve an existing registered limit.

        GET /v3/registered_limits/{registered_limit_id}
      operationId: registered_limits/registered_limit_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - registered_limits
  /v3/role_assignments:
    get:
      parameters:
        - $ref: '#/components/parameters/role_assignments_effective'
        - $ref: '#/components/parameters/role_assignments_include_names'
        - $ref: '#/components/parameters/role_assignments_include_subtree'
        - $ref: '#/components/parameters/role_assignments_group.id'
        - $ref: '#/components/parameters/role_assignments_role.id'
        - $ref: '#/components/parameters/role_assignments_scope.system'
        - $ref: '#/components/parameters/role_assignments_scope.domain.id'
        - $ref: '#/components/parameters/role_assignments_scope.project.id'
        - $ref: '#/components/parameters/role_assignments_user.id'
        - $ref: '#/components/parameters/role_assignments_scope.OS-INHERIT_inherited_to'
      description: |-
        Get a list of role assignments.

        If no query parameters are specified, then this API will return a list of all
        role assignments.

        Since this list is likely to be very long, this API would typically always be
        used with one of more of the filter queries. Some typical examples are:

        `GET /v3/role_assignments?user.id={user_id}` would list all role assignments
        involving the specified user.

        `GET /v3/role_assignments?scope.project.id={project_id}` would list all role
        assignments involving the specified project.

        It is also possible to list all role assignments within
        a tree of projects:
        `GET /v3/role_assignments?scope.project.id={project_id}&include_subtree=true`
        would list all role assignments involving the specified project and all
        sub-projects. `include_subtree=true` can only be specified in conjunction
        with `scope.project.id`, specifying it without this will result in an
        HTTP 400 Bad Request being returned.

        Each role assignment entity in the collection contains a link to the assignment
        that gave rise to this entity.

        The scope section in the list response is extended to allow the representation
        of role assignments that are inherited to projects.

        The query filter `scope.OS-INHERIT:inherited_to` can be used to filter based
        on role assignments that are inherited. The only value of
        `scope.OS-INHERIT:inherited_to` that is currently supported is `projects`,
        indicating that this role is inherited to all projects of the owning domain or
        parent project.

        If the query parameter `effective` is specified, rather than simply returning
        a list of role assignments that have been made, the API returns a list of
        effective assignments at the user, project and domain level, having allowed for
        the effects of group membership, role inference rules as well as inheritance
        from the parent domain or project. Since the effects of group membership have
        already been allowed for, the group role assignment entities themselves will
        not be returned in the collection. Likewise, since the effects of inheritance
        have already been allowed for, the role assignment entities themselves that
        specify the inheritance will also not be returned in the collection. This
        represents the effective role assignments that would be included in a scoped
        token. The same set of query parameters can also be used in combination with
        the `effective` parameter.

        For example:

        `GET /v3/role_assignments?user.id={user_id}&effective` would, in other words,
        answer the question “what can this user actually do?”.

        `GET
        /v3/role_assignments?user.id={user_id}&scope.project.id={project_id}&effective`
        would return the equivalent set of role assignments that would be included in
        the token response of a project scoped token.

        An example response for an API call with the query parameter `effective`
        specified is given below:

        The entity `links` section of a response using the `effective` query
        parameter also contains, for entities that are included by virtue of group
        membership, a url that can be used to access the membership of the group.

        If the query parameter `include_names` is specified, rather than simply
        returning the entity IDs in the role assignments, the collection will
        additionally include the names of the entities. For example:

        `GET /v3/role_assignments?user.id={user_id}&effective&include_names=true`
        would return:

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/role_assignments`
      operationId: role_assignments:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role_AssignmentsGetResponse'
      tags:
        - role_assignments
      summary: List role assignments
    head:
      parameters:
        - $ref: '#/components/parameters/role_assignments_effective'
        - $ref: '#/components/parameters/role_assignments_include_names'
        - $ref: '#/components/parameters/role_assignments_include_subtree'
        - $ref: '#/components/parameters/role_assignments_group.id'
        - $ref: '#/components/parameters/role_assignments_role.id'
        - $ref: '#/components/parameters/role_assignments_scope.system'
        - $ref: '#/components/parameters/role_assignments_scope.domain.id'
        - $ref: '#/components/parameters/role_assignments_scope.project.id'
        - $ref: '#/components/parameters/role_assignments_user.id'
        - $ref: '#/components/parameters/role_assignments_scope.OS-INHERIT_inherited_to'
      description: |-
        List all role assignments.

        GET/HEAD /v3/role_assignments
      operationId: role_assignments:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - role_assignments
  /v3/role_inferences:
    get:
      description: |-
        Lists all role inference rules.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#list-all-role-inference-rules`
      operationId: role_inferences:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role_InferencesGetResponse'
      tags:
        - role_inferences
      summary: List all role inference rules
    head:
      description: |-
        List role inference rules.

        GET/HEAD /v3/role_inferences
      operationId: role_inferences:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - role_inferences
  /v3/roles:
    get:
      parameters:
        - $ref: '#/components/parameters/roles_name'
        - $ref: '#/components/parameters/roles_domain_id'
      description: |-
        Lists roles.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/roles`
      operationId: roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetResponse'
      tags:
        - roles
      summary: List roles
    post:
      description: |-
        Creates a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/roles`
      operationId: roles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      tags:
        - roles
      summary: Create role
    head:
      parameters:
        - $ref: '#/components/parameters/roles_name'
        - $ref: '#/components/parameters/roles_domain_id'
      description: |-
        List roles.

        GET/HEAD /v3/roles
      operationId: roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/roles_role_id'
    get:
      description: |-
        Shows details for a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/role`
      operationId: roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      tags:
        - roles
      summary: Show role details
    delete:
      description: |-
        Deletes a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/role`
      operationId: roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
      summary: Delete role
    patch:
      description: |-
        Updates a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/role`
      operationId: roles/role_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      tags:
        - roles
      summary: Update role
    head:
      description: |-
        Get role.

        GET/HEAD /v3/roles/{role_id}
      operationId: roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles/{prior_role_id}/implies:
    parameters:
      - $ref: '#/components/parameters/roles_implies_prior_role_id'
    get:
      description: |-
        Lists implied (inference) roles for a role.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#list-implied-roles-for-role`
      operationId: roles/prior_role_id/implies:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImpliesGetResponse'
      tags:
        - roles
      summary: List implied (inference) roles for role
    head:
      description: |-
        List Implied Roles.

        GET/HEAD /v3/roles/{prior_role_id}/implies
      operationId: roles/prior_role_id/implies:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles/{prior_role_id}/implies/{implied_role_id}:
    parameters:
      - $ref: '#/components/parameters/roles_implies_prior_role_id'
      - $ref: '#/components/parameters/roles_implies_implied_role_id'
    get:
      description: |-
        Gets a role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#get-role-inference-rule`
      operationId: roles/prior_role_id/implies/implied_role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImplyGetResponse'
      tags:
        - roles
      summary: Get role inference rule
    delete:
      description: |-
        Deletes a role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#delete-role-inference-rule`
      operationId: roles/prior_role_id/implies/implied_role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
      summary: Delete role inference rule
    put:
      description: |-
        Creates a role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#create-role-inference-rule`
      operationId: roles/prior_role_id/implies/implied_role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImplyPutResponse'
      tags:
        - roles
      summary: Create role inference rule
    head:
      description: |-
        Checks a role role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#confirm-role-inference-rule`
      operationId: roles/prior_role_id/implies/implied_role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
      summary: Confirm role inference rule
  /v3/s3tokens:
    get:
      description: |-
        GET operation on /v3/s3tokens
      operationId: s3tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3TokensGetResponse'
      tags:
        - s3tokens
    post:
      description: |-
        Authenticate s3token.

        POST /v3/s3tokens
      operationId: s3tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3TokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3TokensPostResponse'
      tags:
        - s3tokens
    head:
      description: |-
        HEAD operation on /v3/s3tokens
      operationId: s3tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - s3tokens
  /v3/services:
    get:
      parameters:
        - $ref: '#/components/parameters/services_type'
      description: |-
        Lists all services.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/services`
      operationId: services:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesGetResponse'
      tags:
        - services
      summary: List services
    post:
      description: |-
        Creates a service.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/services`
      operationId: services:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      tags:
        - services
      summary: Create service
    head:
      description: |-
        List all services.

        GET /v3/services
      operationId: services:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - services
  /v3/services/{service_id}:
    parameters:
      - $ref: '#/components/parameters/services_service_id'
    get:
      description: |-
        Shows details for a service.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/service`
      operationId: services/service_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      tags:
        - services
      summary: Show service details
    delete:
      description: |-
        Deletes a service.

        If you try to delete a service that still has associated endpoints,
        this call either deletes all associated endpoints or fails until
        all endpoints are deleted.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/service`
      operationId: services/service_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - services
      summary: Delete service
    patch:
      description: |-
        Updates a service.

        The request body is the same as the create service request body,
        except that you include only those attributes that you want to
        update.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/services`
      operationId: services/service_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePatch'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      tags:
        - services
      summary: Update service
    head:
      description: |-
        Show details for a service.

        GET /v3/services/{service_id}
      operationId: services/service_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - services
  /v3/system/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/system_users_roles_user_id'
    get:
      description: |-
        Lists all system role assignment a user has.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_user_roles`
      operationId: system/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUsersRolesGetResponse'
      tags:
        - system
      summary: List system role assignments for a user
    head:
      description: |-
        List all system grants for a specific user.

        GET/HEAD /system/users/{user_id}/roles
      operationId: system/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/system/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/system_users_roles_user_id'
      - $ref: '#/components/parameters/system_users_roles_role_id'
    get:
      description: |-
        Get a specific system role assignment for a user. This is the same API as
        `HEAD /v3/system/users/{user_id}/roles/{role_id}`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_user_role`
      operationId: system/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
      summary: Get system role assignment for a user
    delete:
      description: |-
        Remove a system role assignment from a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_user_role`
      operationId: system/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - system
      summary: Delete a system role assignment from a user
    put:
      description: |-
        Grant a user a role on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_user_role`
      operationId: system/users/user_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - system
      summary: Assign a system role to a user
    head:
      description: |-
        Check if a specific user has a role assignment on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_user_role`
      operationId: system/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
      summary: Check user for a system role assignment
  /v3/system/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/system_groups_roles_group_id'
    get:
      description: |-
        Lists all system role assignment a group has.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_group_roles`
      operationId: system/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroupsRolesGetResponse'
      tags:
        - system
      summary: List system role assignments for a group
    head:
      description: |-
        List all system grants for a specific group.

        GET/HEAD /system/groups/{group_id}/roles
      operationId: system/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/system/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/system_groups_roles_group_id'
      - $ref: '#/components/parameters/system_groups_roles_role_id'
    get:
      description: |-
        Get a specific system role assignment for a group. This is the same API as
        `HEAD /v3/system/groups/{group_id}/roles/{role_id}`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_group_role`
      operationId: system/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
      summary: Get system role assignment for a group
    delete:
      description: |-
        Remove a system role assignment from a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_group_role`
      operationId: system/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - system
      summary: Delete a system role assignment from a group
    put:
      description: |-
        Grant a group a role on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_group_role`
      operationId: system/groups/group_id/roles/role_id:put
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
      tags:
        - system
      summary: Assign a system role to a group
    head:
      description: |-
        Check if a specific group has a role assignment on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system_group_role`
      operationId: system/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
      summary: Check group for a system role assignment
  /v3/OS-TRUST/trusts:
    get:
      parameters:
        - $ref: '#/components/parameters/OS_TRUST_trusts_trustor_user_id'
        - $ref: '#/components/parameters/OS_TRUST_trusts_trustee_user_id'
      description: |-
        Dispatch for LIST trusts.

        GET /v3/OS-TRUST/trusts
      operationId: OS-TRUST/trusts:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsGetResponse'
      tags:
        - OS-TRUST
    post:
      description: |-
        Create a new trust.

        The User creating the trust must be the trustor.

        POST /v3/OS-TRUST/trusts
      operationId: OS-TRUST/trusts:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_TrustTrustsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsPostResponse'
      tags:
        - OS-TRUST
    head:
      parameters:
        - $ref: '#/components/parameters/OS_TRUST_trusts_trustor_user_id'
        - $ref: '#/components/parameters/OS_TRUST_trusts_trustee_user_id'
      description: |-
        Dispatch for LIST trusts.

        GET /v3/OS-TRUST/trusts
      operationId: OS-TRUST/trusts:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts/{trust_id}:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_trust_id'
    get:
      description: |-
        Get trust.

        GET /v3/OS-TRUST/trusts/{trust_id}
      operationId: OS-TRUST/trusts/trust_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustGetResponse'
      tags:
        - OS-TRUST
    delete:
      description: |-
        Delete trust.

        DELETE /v3/OS-TRUST/trusts/{trust_id}
      operationId: OS-TRUST/trusts/trust_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-TRUST
    head:
      description: |-
        Get trust.

        GET /v3/OS-TRUST/trusts/{trust_id}
      operationId: OS-TRUST/trusts/trust_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts/{trust_id}/roles:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_roles_trust_id'
    get:
      description: |-
        GET operation on /v3/OS-TRUST/trusts/{trust_id}/roles
      operationId: OS-TRUST/trusts/trust_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsRolesGetResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        HEAD operation on /v3/OS-TRUST/trusts/{trust_id}/roles
      operationId: OS-TRUST/trusts/trust_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_roles_trust_id'
      - $ref: '#/components/parameters/OS_TRUST_trusts_roles_role_id'
    get:
      description: |-
        Get a role that has been assigned to a trust.
      operationId: OS-TRUST/trusts/trust_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsRoleGetResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        Get a role that has been assigned to a trust.
      operationId: OS-TRUST/trusts/trust_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/users:
    get:
      parameters:
        - $ref: '#/components/parameters/users_domain_id'
        - $ref: '#/components/parameters/users_enabled'
        - $ref: '#/components/parameters/users_idp_id'
        - $ref: '#/components/parameters/users_name'
        - $ref: '#/components/parameters/users_password_expires_at'
        - $ref: '#/components/parameters/users_protocol_id'
        - $ref: '#/components/parameters/users_unique_id'
        - $ref: '#/components/parameters/users_marker'
        - $ref: '#/components/parameters/users_limit'
        - $ref: '#/components/parameters/users_sort_key'
        - $ref: '#/components/parameters/users_sort_dir'
      description: |-
        Lists users.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/users`
      operationId: users:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetResponse'
      tags:
        - users
      summary: List users
    post:
      description: |-
        Creates a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/users`
      operationId: users:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPostResponse'
      tags:
        - users
      summary: Create user
    head:
      parameters:
        - $ref: '#/components/parameters/users_domain_id'
        - $ref: '#/components/parameters/users_enabled'
        - $ref: '#/components/parameters/users_idp_id'
        - $ref: '#/components/parameters/users_name'
        - $ref: '#/components/parameters/users_password_expires_at'
        - $ref: '#/components/parameters/users_protocol_id'
        - $ref: '#/components/parameters/users_unique_id'
        - $ref: '#/components/parameters/users_marker'
        - $ref: '#/components/parameters/users_limit'
        - $ref: '#/components/parameters/users_sort_key'
        - $ref: '#/components/parameters/users_sort_dir'
      description: |-
        List users.

        GET/HEAD /v3/users
      operationId: users:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |-
        Shows details for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user`
      operationId: users/user_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
      tags:
        - users
      summary: Show user details
    delete:
      description: |-
        Deletes a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user`
      operationId: users/user_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
      summary: Delete user
    patch:
      description: |-
        Updates a user.

        If the back-end driver does not support this functionality, this
        call might return the HTTP `Not Implemented (501)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user`
      operationId: users/user_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPatchResponse'
      tags:
        - users
      summary: Update user
    head:
      description: |-
        Get a user resource.

        GET/HEAD /v3/users/{user_id}
      operationId: users/user_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/password:
    parameters:
      - $ref: '#/components/parameters/users_password_user_id'
    post:
      description: |-
        Changes the password for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user_change_password`
      operationId: users/user_id/password:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersPasswordPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
      summary: Change password for user
  /v3/users/{user_id}/groups:
    parameters:
      - $ref: '#/components/parameters/users_groups_user_id'
    get:
      description: |-
        Lists groups to which a user belongs.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user_groups`
      operationId: users/user_id/groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGroupsGetResponse'
      tags:
        - users
      summary: List groups to which a user belongs
    head:
      description: |-
        Get groups for a user.

        GET/HEAD /v3/users/{user_id}/groups
      operationId: users/user_id/groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/projects:
    parameters:
      - $ref: '#/components/parameters/users_projects_user_id'
    get:
      description: |-
        List projects to which the user has authorization to access.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user_projects`
      operationId: users/user_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersProjectsGetResponse'
      tags:
        - users
      summary: List projects for user
    head:
      description: |-
        HEAD operation on /v3/users/{user_id}/projects
      operationId: users/user_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/credentials/OS-EC2:
    parameters:
      - $ref: '#/components/parameters/users_credentials_OS_EC2_user_id'
    get:
      description: |-
        List EC2 Credentials for user.

        GET/HEAD /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2GetResponse'
      tags:
        - users
    post:
      description: |-
        Create EC2 Credential for user.

        POST /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersCredentialsOs_Ec2PostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2PostResponse'
      tags:
        - users
    head:
      description: |-
        List EC2 Credentials for user.

        GET/HEAD /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/credentials/OS-EC2/{credential_id}:
    parameters:
      - $ref: '#/components/parameters/users_credentials_OS_EC2_user_id'
      - $ref: '#/components/parameters/users_credentials_OS_EC2_credential_id'
    get:
      description: |-
        Get a specific EC2 credential.

        GET/HEAD /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2GetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete a specific EC2 credential.

        DELETE /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get a specific EC2 credential.

        GET/HEAD /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_user_id'
    get:
      description: |-
        List OAuth1 Access Tokens for user.

        GET /v3/users/{user_id}/OS-OAUTH1/access_tokens
      operationId: users/user_id/OS-OAUTH1/access_tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensGetResponse'
      tags:
        - users
    head:
      description: |-
        List OAuth1 Access Tokens for user.

        GET /v3/users/{user_id}/OS-OAUTH1/access_tokens
      operationId: users/user_id/OS-OAUTH1/access_tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_access_token_id'
    get:
      description: |-
        Get specific access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokenGetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete specific access token.

        DELETE /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get specific access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_access_token_id'
    get:
      description: |-
        List roles for a user access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensRolesGetResponse'
      tags:
        - users
    head:
      description: |-
        List roles for a user access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_access_token_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_role_id'
    get:
      description: |-
        Get role for access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles/{role_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensRoleGetResponse'
      tags:
        - users
    head:
      description: |-
        Get role for access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles/{role_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/application_credentials:
    parameters:
      - $ref: '#/components/parameters/users_application_credentials_user_id'
    get:
      parameters:
        - $ref: '#/components/parameters/users_application_credentials_name'
      description: |-
        List all application credentials for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application_credentials`
      operationId: users/user_id/application_credentials:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialsGetResponse'
      tags:
        - users
      summary: List application credentials
    post:
      description: |-
        Creates an application credential for a user on the project to which the
        current token is scoped.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application_credentials`
      operationId: users/user_id/application_credentials:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersApplication_CredentialsPost'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialsPostResponse'
      tags:
        - users
      summary: Create application credential
    head:
      parameters:
        - $ref: '#/components/parameters/users_application_credentials_name'
      description: |-
        List application credentials for user.

        GET/HEAD /v3/users/{user_id}/application_credentials
      operationId: users/user_id/application_credentials:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/application_credentials/{application_credential_id}:
    parameters:
      - $ref: '#/components/parameters/users_application_credentials_user_id'
      - $ref: '#/components/parameters/users_application_credentials_application_credential_id'
    get:
      description: |-
        Show details of an application credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application_credentials`
      operationId: users/user_id/application_credentials/application_credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialGetResponse'
      tags:
        - users
      summary: Show application credential details
    delete:
      description: |-
        Delete an application credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application_credentials`
      operationId: users/user_id/application_credentials/application_credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
      summary: Delete application credential
    head:
      description: |-
        Get application credential resource.

        GET/HEAD /v3/users/{user_id}/application_credentials/
                 {application_credential_id}
      operationId: users/user_id/application_credentials/application_credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/access_rules:
    parameters:
      - $ref: '#/components/parameters/users_access_rules_user_id'
    get:
      parameters:
        - $ref: '#/components/parameters/users_access_rules_service'
        - $ref: '#/components/parameters/users_access_rules_path'
        - $ref: '#/components/parameters/users_access_rules_method'
      description: |-
        List all access rules for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/access_rules`
      operationId: users/user_id/access_rules:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAccess_RulesGetResponse'
      tags:
        - users
      summary: List access rules
    head:
      parameters:
        - $ref: '#/components/parameters/users_access_rules_service'
        - $ref: '#/components/parameters/users_access_rules_path'
        - $ref: '#/components/parameters/users_access_rules_method'
      description: |-
        List access rules for user.

        GET/HEAD /v3/users/{user_id}/access_rules
      operationId: users/user_id/access_rules:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/access_rules/{access_rule_id}:
    parameters:
      - $ref: '#/components/parameters/users_access_rules_user_id'
      - $ref: '#/components/parameters/users_access_rules_access_rule_id'
    get:
      description: |-
        Show details of an access rule.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/access_rules`
      operationId: users/user_id/access_rules/access_rule_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAccess_RuleGetResponse'
      tags:
        - users
      summary: Show access rule details
    delete:
      description: |-
        Delete an access rule. An access rule that is still in use by an application
        credential cannot be deleted.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/access_rules`
      operationId: users/user_id/access_rules/access_rule_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
      summary: Delete access rule
    head:
      description: |-
        Get access rule resource.

        GET/HEAD /v3/users/{user_id}/access_rules/{access_rule_id}
      operationId: users/user_id/access_rules/access_rule_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
components:
  schemas:
    RootGetResponse:
      type: object
      description: Response of the versions:get operation
    AuthProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              domain_id:
                type: string
                format: uuid
                description: |-
                  The ID of the domain for the project.
              id:
                type: string
                format: uuid
                description: |-
                  The ID for the project.
              name:
                type: string
                description: |-
                  The name of the project.
              enabled:
                type: boolean
                description: |-
                  If set to `true`, project is enabled. If set to
                  `false`, project is disabled.
              links:
                type: array
                description: |-
                  The links for the `project` resource.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    Os_FederationProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              domain_id:
                type: string
                format: uuid
                description: |-
                  The ID of the domain for the project.
              id:
                type: string
                format: uuid
                description: |-
                  The ID for the project.
              name:
                type: string
                description: |-
                  The name of the project.
              enabled:
                type: boolean
                description: |-
                  If set to `true`, project is enabled. If set to
                  `false`, project is disabled.
              links:
                type: array
                description: |-
                  The links for the `project` resource.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    AuthDomainsGetResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the domain.
              name:
                type: string
                description: |-
                  The name of the domain.
              description:
                type: string
                description: |-
                  The description of the domain.
              enabled:
                type: boolean
                description: |-
                  If set to `true`, domain is enabled. If set to
                  `false`, domain is disabled.
              links:
                type: array
                description: |-
                  The links to the `domain` resource.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    Os_FederationDomainsGetResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the domain.
              name:
                type: string
                description: |-
                  The name of the domain.
              description:
                type: string
                description: |-
                  The description of the domain.
              enabled:
                type: boolean
                description: |-
                  If set to `true`, domain is enabled. If set to
                  `false`, domain is disabled.
              links:
                type: array
                description: |-
                  The links to the `domain` resource.
                items:
                  type: object
                  description: Links to the resources in question. See [API Guide
                    / Links and 
                    References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
                    for more info.
                  properties:
                    href:
                      type: string
                      format: uri
                    rel:
                      type: string
        links:
          type: array
          description: Links to the resources in question. See [API Guide / Links
            and 
            References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
            for more info.
          items:
            type: object
            description: Links to the resources in question. See [API Guide / Links
              and 
              References](https://docs.openstack.org/api-guide/compute/links_and_references.html)
              for more info.
            properties:
              href:
                type: string
                format: uri
              rel:
                type: string
    AuthSystemGetResponse:
      type: object
      properties:
        system:
          type: array
          description: |-
            A list of systems to access based on role assignments.
          items:
            type: object
            additionalProperties:
              type: boolean
    AuthCatalogGetResponse:
      type: object
      properties:
        catalog:
          type: array
          items:
            type: object
            properties:
              endpoints:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: |-
                        The UUID of the service to which the endpoint
                        belongs.
                    interface:
                      type: string
                      enum:
                        - public
                        - internal
                        - admin
                    region:
                      type: string
                      description: Region name of the endpoint
                    url:
                      type: string
                      format: uri
                      description: The endpoint url
                description: |-
                  A list of `endpoint` objects.
              id:
                type: string
                format: uuid
                description: The UUID of the service to which the endpoint belongs.
              type:
                type: string
                description: |-
                  The service type, which describes the API
                  implemented by the service. Value is `compute`, `ec2`,
                  `identity`, `image`, `network`, or `volume`.
              name:
                type: string
                description: |-
                  The service name.
    AuthTokensOs_PkiRevokedGetResponse:
      type: object
      description: Response of the auth/tokens/OS-PKI/revoked:get operation
    AuthTokensGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: |-
                A list of one or two audit IDs. An audit ID is a
                unique, randomly generated, URL-safe string that you can use to
                track a token. The first audit ID is the current audit ID for the
                token. The second audit ID is present for only re-scoped tokens
                and is the audit ID from the token before it was re-scoped. A re-
                scoped token is one that was exchanged for another token of the
                same or different scope. You can use these audit IDs to track the
                use of a token or chain of tokens across multiple requests and
                endpoints without exposing the token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: |-
                A `catalog` object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The ID of the user. Required if you do not
                            specify the user name.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: |-
                      The user name. Required if you do not specify
                      the ID of the user. If you specify the user name, you must also
                      specify the domain, by ID or name.
            expires_at:
              type: string
              format: date-time
              description: |-
                The date and time when the token expires.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss.sssZ

                ```

                For example, `2015-08-27T09:49:58.000000Z`.

                A `null` value indicates that the token never expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: |-
                The authentication methods, which are commonly `password`,
                `token`, or other methods. Indicates the accumulated set of
                authentication methods that were used to obtain the token. For
                example, if the token was obtained by password authentication, it
                contains `password`. Later, if the token is exchanged by using
                the token authentication method one or more times, the
                subsequently created tokens contain both `password` and
                `token` in their `methods` attribute. Unlike multi-factor
                authentication, the `methods` attribute merely indicates the
                methods that were used to authenticate the user in exchange for a
                token. The client is responsible for determining the total number
                of authentication factors.
              items:
                type: string
            user:
              type: object
              description: |-
                A `user` object.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                  description: |-
                    A `domain` object including the `id` and `name` representing the
                    domain the token is scoped to. This is only included in tokens that are
                    scoped to a domain.
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
            is_domain:
              type: boolean
            domain:
              type: object
              description: A domain object including the id and name representing
                the domain the token is scoped to. This is only included in tokens
                that are scoped to a domain.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A domain UUID
                name:
                  type: string
                  description: A domain name
            project:
              type: object
              description: |-
                A `project` object including the `id`, `name` and `domain` object
                representing the project the token is scoped to. This is only included in
                tokens that are scoped to a project.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user domain UUID
                name:
                  type: string
                  description: A user domain name
            roles:
              type: array
              description: |-
                A list of `role` objects
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: A role UUID
                  name:
                    type: string
                    description: A role name
            system:
              type: object
              description: |-
                A `system` object containing information about which parts of the system
                the token is scoped to. If the token is scoped to the entire deployment
                system, the `system` object will consist of `{"all": true}`. This is
                only included in tokens that are scoped to the system.
              additionalProperties:
                type: boolean
          description: |-
            A `token` object.
    AuthTokensPostRequest:
      type: object
      properties:
        auth:
          type: object
          description: |-
            An `auth` object.
          properties:
            identity:
              type: object
              description: |-
                An `identity` object.
              properties:
                methods:
                  type: array
                  description: |-
                    The authentication method. For password
                    authentication, specify `password`.
                  items:
                    type: string
                    enum:
                      - password
                      - token
                      - totp
                      - application_credential
                password:
                  type: object
                  description: |-
                    The `password` object, contains the authentication information.
                  properties:
                    user:
                      type: object
                      description: |-
                        A `user` object.
                      properties:
                        id:
                          type: string
                          description: |-
                            The ID of the user. Required if you do not
                            specify the user name.
                        name:
                          type: string
                          description: |-
                            The user name. Required if you do not specify
                            the ID of the user. If you specify the user name, you must also
                            specify the domain, by ID or name.
                        password:
                          type: string
                          format: password
                          description: User Password
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                token:
                  type: object
                  description: A `token` object
                  properties:
                    id:
                      type: string
                      format: password
                      description: Authorization Token value
                  required:
                    - id
                totp:
                  type: object
                  description: Multi Factor Authentication information
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                        passcode:
                          type: string
                          format: password
                          description: MFA passcode
                      required:
                        - passcode
                  required:
                    - user
                application_credential:
                  type: object
                  description: An application credential object.
                  properties:
                    id:
                      type: string
                      description: The ID of the application credential used for authentication.
                        If not provided, the application credential must be identified
                        by its name and its owning user.
                    name:
                      type: string
                      description: The name of the application credential used for
                        authentication. If provided, must be accompanied by a user
                        object.
                    secret:
                      type: string
                      format: password
                      description: The secret for authenticating the application credential.
                    user:
                      type: object
                      description: A user object, required if an application credential
                        is identified by name and not ID.
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                  required:
                    - secret
              required:
                - methods
            scope:
              type: object
              description: The authorization scope, including the system (Since v3.10),
                a project, or a domain (Since v3.4). If multiple scopes are specified
                in the same request (e.g. project and domain or domain and system)
                an HTTP 400 Bad Request will be returned, as a token cannot be simultaneously
                scoped to multiple authorization targets. An ID is sufficient to uniquely
                identify a project but if a project is specified by name, then the
                domain of the project must also be specified in order to uniquely
                identify the project by name. A domain scope may be specified by either
                the domain’s ID or name with equivalent results.
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Project Name
                    id:
                      type: string
                      description: Project Id
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Project domain Id
                        name:
                          type: string
                          description: Project domain Name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Domain id
                    name:
                      type: string
                      description: Domain name
                OS-TRUST:trust:
                  type: object
                  properties:
                    id:
                      type: string
                system:
                  type: object
                  properties:
                    all:
                      type: boolean
          required:
            - identity
      definitions:
        user_domain:
          type: object
          description: |-
            A `domain` object
          properties:
            id:
              type: string
              description: User Domain ID
            name:
              type: string
              description: User Domain Name
    AuthTokensPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: |-
                A list of one or two audit IDs. An audit ID is a
                unique, randomly generated, URL-safe string that you can use to
                track a token. The first audit ID is the current audit ID for the
                token. The second audit ID is present for only re-scoped tokens
                and is the audit ID from the token before it was re-scoped. A re-
                scoped token is one that was exchanged for another token of the
                same or different scope. You can use these audit IDs to track the
                use of a token or chain of tokens across multiple requests and
                endpoints without exposing the token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: |-
                A `catalog` object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The ID of the user. Required if you do not
                            specify the user name.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: The service type, which describes the API implemented
                      by the service
                  name:
                    type: string
                    description: |-
                      The user name. Required if you do not specify
                      the ID of the user. If you specify the user name, you must also
                      specify the domain, by ID or name.
            expires_at:
              type: string
              format: date-time
              description: |-
                The date and time when the token expires.

                The date and time stamp format is [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601):

                ```
                CCYY-MM-DDThh:mm:ss.sssZ

                ```

                For example, `2015-08-27T09:49:58.000000Z`.

                A `null` value indicates that the token never expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: |-
                The authentication methods, which are commonly `password`,
                `token`, or other methods. Indicates the accumulated set of
                authentication methods that were used to obtain the token. For
                example, if the token was obtained by password authentication, it
                contains `password`. Later, if the token is exchanged by using
                the token authentication method one or more times, the
                subsequently created tokens contain both `password` and
                `token` in their `methods` attribute. Unlike multi-factor
                authentication, the `methods` attribute merely indicates the
                methods that were used to authenticate the user in exchange for a
                token. The client is responsible for determining the total number
                of authentication factors.
              items:
                type: string
            user:
              type: object
              description: |-
                A `user` object.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                  description: |-
                    A `domain` object including the `id` and `name` representing the
                    domain the token is scoped to. This is only included in tokens that are
                    scoped to a domain.
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
            is_domain:
              type: boolean
            domain:
              type: object
              description: A domain object including the id and name representing
                the domain the token is scoped to. This is only included in tokens
                that are scoped to a domain.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A domain UUID
                name:
                  type: string
                  description: A domain name
            project:
              type: object
              description: |-
                A `project` object including the `id`, `name` and `domain` object
                representing the project the token is scoped to. This is only included in
                tokens that are scoped to a project.
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user domain UUID
                name:
                  type: string
                  description: A user domain name
            roles:
              type: array
              description: |-
                A list of `role` objects
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: A role UUID
                  name:
                    type: string
                    description: A role name
            system:
              type: object
              description: |-
                A `system` object containing information about which parts of the system
                the token is scoped to. If the token is scoped to the entire deployment
                system, the `system` object will consist of `{"all": true}`. This is
                only included in tokens that are scoped to the system.
              additionalProperties:
                type: boolean
          description: |-
            A `token` object.
    AuthReceiptSchema:
      type: object
      properties:
        receipt:
          type: object
          properties:
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
        required_auth_methods:
          type: array
          items:
            type: string
          description: A list of authentication rules that may be used with the auth
            receipt to complete the authentication process.
    AuthOs_FederationSaml2PostRequest:
      type: object
      properties:
        auth:
          type: object
          description: |-
            An `auth` object.
          properties:
            identity:
              type: object
              description: |-
                An `identity` object.
              properties:
                methods:
                  type: array
                  description: |-
                    The authentication method. For password
                    authentication, specify `password`.
                  items:
                    type: string
                    enum:
                      - password
                      - token
                      - totp
                      - application_credential
                password:
                  type: object
                  description: |-
                    The `password` object, contains the authentication information.
                  properties:
                    user:
                      type: object
                      description: |-
                        A `user` object.
                      properties:
                        id:
                          type: string
                          description: |-
                            The ID of the user. Required if you do not
                            specify the user name.
                        name:
                          type: string
                          description: |-
                            The user name. Required if you do not specify
                            the ID of the user. If you specify the user name, you must also
                            specify the domain, by ID or name.
                        password:
                          type: string
                          format: password
                          description: User Password
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                token:
                  type: object
                  description: A `token` object
                  properties:
                    id:
                      type: string
                      format: password
                      description: Authorization Token value
                  required:
                    - id
                totp:
                  type: object
                  description: Multi Factor Authentication information
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                        passcode:
                          type: string
                          format: password
                          description: MFA passcode
                      required:
                        - passcode
                  required:
                    - user
                application_credential:
                  type: object
                  description: An application credential object.
                  properties:
                    id:
                      type: string
                      description: The ID of the application credential used for authentication.
                        If not provided, the application credential must be identified
                        by its name and its owning user.
                    name:
                      type: string
                      description: The name of the application credential used for
                        authentication. If provided, must be accompanied by a user
                        object.
                    secret:
                      type: string
                      format: password
                      description: The secret for authenticating the application credential.
                    user:
                      type: object
                      description: A user object, required if an application credential
                        is identified by name and not ID.
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                  required:
                    - secret
              required:
                - methods
            scope:
              type: object
              description: The authorization scope, including the system (Since v3.10),
                a project, or a domain (Since v3.4). If multiple scopes are specified
                in the same request (e.g. project and domain or domain and system)
                an HTTP 400 Bad Request will be returned, as a token cannot be simultaneously
                scoped to multiple authorization targets. An ID is sufficient to uniquely
                identify a project but if a project is specified by name, then the
                domain of the project must also be specified in order to uniquely
                identify the project by name. A domain scope may be specified by either
                the domain’s ID or name with equivalent results.
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Project Name
                    id:
                      type: string
                      description: Project Id
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Project domain Id
                        name:
                          type: string
                          description: Project domain Name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Domain id
                    name:
                      type: string
                      description: Domain name
                OS-TRUST:trust:
                  type: object
                  properties:
                    id:
                      type: string
                system:
                  type: object
                  properties:
                    all:
                      type: boolean
          required:
            - identity
      definitions:
        user_domain:
          type: object
          description: |-
            A `domain` object
          properties:
            id:
              type: string
              description: User Domain ID
            name:
              type: string
              description: User Domain Name
    AuthOs_FederationSaml2PostResponse:
      type: string
      format: xml
      description: SAML assertion in XML format
    AuthOs_FederationSaml2GetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2:get operation
    AuthOs_FederationSaml2EcpPostRequest:
      type: object
      properties:
        auth:
          type: object
          description: |-
            An `auth` object.
          properties:
            identity:
              type: object
              description: |-
                An `identity` object.
              properties:
                methods:
                  type: array
                  description: |-
                    The authentication method. For password
                    authentication, specify `password`.
                  items:
                    type: string
                    enum:
                      - password
                      - token
                      - totp
                      - application_credential
                password:
                  type: object
                  description: |-
                    The `password` object, contains the authentication information.
                  properties:
                    user:
                      type: object
                      description: |-
                        A `user` object.
                      properties:
                        id:
                          type: string
                          description: |-
                            The ID of the user. Required if you do not
                            specify the user name.
                        name:
                          type: string
                          description: |-
                            The user name. Required if you do not specify
                            the ID of the user. If you specify the user name, you must also
                            specify the domain, by ID or name.
                        password:
                          type: string
                          format: password
                          description: User Password
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                token:
                  type: object
                  description: A `token` object
                  properties:
                    id:
                      type: string
                      format: password
                      description: Authorization Token value
                  required:
                    - id
                totp:
                  type: object
                  description: Multi Factor Authentication information
                  properties:
                    user:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                        passcode:
                          type: string
                          format: password
                          description: MFA passcode
                      required:
                        - passcode
                  required:
                    - user
                application_credential:
                  type: object
                  description: An application credential object.
                  properties:
                    id:
                      type: string
                      description: The ID of the application credential used for authentication.
                        If not provided, the application credential must be identified
                        by its name and its owning user.
                    name:
                      type: string
                      description: The name of the application credential used for
                        authentication. If provided, must be accompanied by a user
                        object.
                    secret:
                      type: string
                      format: password
                      description: The secret for authenticating the application credential.
                    user:
                      type: object
                      description: A user object, required if an application credential
                        is identified by name and not ID.
                      properties:
                        id:
                          type: string
                          description: The user ID
                        name:
                          type: string
                          description: The user name
                        domain:
                          type: object
                          description: |-
                            A `domain` object
                          properties:
                            id:
                              type: string
                              description: User Domain ID
                            name:
                              type: string
                              description: User Domain Name
                  required:
                    - secret
              required:
                - methods
            scope:
              type: object
              description: The authorization scope, including the system (Since v3.10),
                a project, or a domain (Since v3.4). If multiple scopes are specified
                in the same request (e.g. project and domain or domain and system)
                an HTTP 400 Bad Request will be returned, as a token cannot be simultaneously
                scoped to multiple authorization targets. An ID is sufficient to uniquely
                identify a project but if a project is specified by name, then the
                domain of the project must also be specified in order to uniquely
                identify the project by name. A domain scope may be specified by either
                the domain’s ID or name with equivalent results.
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Project Name
                    id:
                      type: string
                      description: Project Id
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Project domain Id
                        name:
                          type: string
                          description: Project domain Name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Domain id
                    name:
                      type: string
                      description: Domain name
                OS-TRUST:trust:
                  type: object
                  properties:
                    id:
                      type: string
                system:
                  type: object
                  properties:
                    all:
                      type: boolean
          required:
            - identity
      definitions:
        user_domain:
          type: object
          description: |-
            A `domain` object
          properties:
            id:
              type: string
              description: User Domain ID
            name:
              type: string
              description: User Domain Name
    AuthOs_FederationSaml2EcpPostResponse:
      type: string
      format: xml
      description: SAML assertion in XML format
    AuthOs_FederationSaml2EcpGetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2/ecp:get operation
    AuthOs_FederationWebssoPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The UUID of the service to which the endpoint
                            belongs.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                    description: |-
                      A list of `endpoint` objects.
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: |-
                      The service type, which describes the API
                      implemented by the service. Value is `compute`, `ec2`,
                      `identity`, `image`, `network`, or `volume`.
                  name:
                    type: string
                    description: |-
                      The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    AuthOs_FederationWebssoGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The UUID of the service to which the endpoint
                            belongs.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                    description: |-
                      A list of `endpoint` objects.
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: |-
                      The service type, which describes the API
                      implemented by the service. Value is `compute`, `ec2`,
                      `identity`, `image`, `network`, or `volume`.
                  name:
                    type: string
                    description: |-
                      The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The UUID of the service to which the endpoint
                            belongs.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                    description: |-
                      A list of `endpoint` objects.
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: |-
                      The service type, which describes the API
                      implemented by the service. Value is `compute`, `ec2`,
                      `identity`, `image`, `network`, or `volume`.
                  name:
                    type: string
                    description: |-
                      The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    AuthOs_FederationIdentity_ProvidersProtocolsWebssoGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The UUID of the service to which the endpoint
                            belongs.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                    description: |-
                      A list of `endpoint` objects.
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: |-
                      The service type, which describes the API
                      implemented by the service. Value is `compute`, `ec2`,
                      `identity`, `image`, `network`, or `volume`.
                  name:
                    type: string
                    description: |-
                      The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    CredentialsPost:
      type: object
      description: A credential object.
      properties:
        credential:
          type: object
          description: |-
            A `credential` object.
          properties:
            id:
              type: string
              description: The UUID for the credential.
            blob:
              type: string
              description: |-
                The credential itself, as a serialized blob.
            project_id:
              type:
                - string
                - 'null'
              description: |-
                The ID for the project.
            type:
              type: string
              description: |-
                The credential type, such as `ec2` or `cert`.
                The implementation determines the list of supported types.
            user_id:
              type: string
              format: uuid
              description: |-
                The ID of the user who owns the credential.
          additionalProperties: true
          required:
            - blob
            - type
            - user_id
          if:
            properties:
              type:
                const: ec2
          then:
            title: ec2 credential requires project_id
            required:
              - blob
              - type
              - user_id
              - project_id
      required:
        - credential
    CredentialsPostResponse:
      type: object
      description: A credential object.
      properties:
        credential:
          type: object
          description: |-
            A `credential` object.
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The UUID for the credential.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            blob:
              type: string
              description: |-
                The credential itself, as a serialized blob.
            project_id:
              type:
                - string
                - 'null'
              description: |-
                The ID for the project.
            type:
              type: string
              description: |-
                The credential type, such as `ec2` or `cert`.
                The implementation determines the list of supported types.
            user_id:
              type: string
              format: uuid
              description: |-
                The ID of the user who owns the credential.
          additionalProperties: true
      additionalProperties: false
    CredentialsGetResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            type: object
            description: |-
              A `credential` object.
            properties:
              id:
                type: string
                readOnly: true
                description: |-
                  The UUID for the credential.
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              blob:
                type: string
                description: |-
                  The credential itself, as a serialized blob.
              project_id:
                type:
                  - string
                  - 'null'
                description: |-
                  The ID for the project.
              type:
                type: string
                description: |-
                  The credential type, such as `ec2` or `cert`.
                  The implementation determines the list of supported types.
              user_id:
                type: string
                format: uuid
                description: |-
                  The ID of the user who owns the credential.
            additionalProperties: true
          description: |-
            A list of `credential` objects.
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    CredentialGetResponse:
      type: object
      description: A credential object.
      properties:
        credential:
          type: object
          description: |-
            A `credential` object.
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The UUID for the credential.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            blob:
              type: string
              description: |-
                The credential itself, as a serialized blob.
            project_id:
              type:
                - string
                - 'null'
              description: |-
                The ID for the project.
            type:
              type: string
              description: |-
                The credential type, such as `ec2` or `cert`.
                The implementation determines the list of supported types.
            user_id:
              type: string
              format: uuid
              description: |-
                The ID of the user who owns the credential.
          additionalProperties: true
      additionalProperties: false
    CredentialPatch:
      type: object
      description: A credential object.
      properties:
        credential:
          type: object
          description: |-
            A `credential` object.
          properties:
            blob:
              type: string
              description: |-
                The credential itself, as a serialized blob.
            project_id:
              type:
                - string
                - 'null'
              description: |-
                The ID for the project.
            type:
              type: string
              description: |-
                The credential type, such as `ec2` or `cert`.
                The implementation determines the list of supported types.
            user_id:
              type: string
              format: uuid
              description: |-
                The ID of the user who owns the credential.
          additionalProperties: true
          minProperties: 1
      required:
        - credential
    CredentialPatchResponse:
      type: object
      description: A credential object.
      properties:
        credential:
          type: object
          description: |-
            A `credential` object.
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The UUID for the credential.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            blob:
              type: string
              description: |-
                The credential itself, as a serialized blob.
            project_id:
              type:
                - string
                - 'null'
              description: |-
                The ID for the project.
            type:
              type: string
              description: |-
                The credential type, such as `ec2` or `cert`.
                The implementation determines the list of supported types.
            user_id:
              type: string
              format: uuid
              description: |-
                The ID of the user who owns the credential.
          additionalProperties: true
      additionalProperties: false
    DomainsPost:
      type: object
      properties:
        domain:
          type: object
          description: |-
            A `domain` object
          properties:
            explicit_domain_id:
              description: |-
                The ID of the domain. A domain created this way will not use an
                auto-generated ID, but will use the ID passed in instead. Identifiers passed
                in this way must conform to the existing ID generation scheme: UUID4 without
                dashes.
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the domain.
            enabled:
              description: |-
                If set to `true`, domain is created enabled. If set to
                `false`, domain is created disabled. The default is `true`.

                Users can only authorize against an enabled domain (and any of its
                projects). In addition, users can only authenticate if the domain that owns
                them is also enabled. Disabling a domain prevents both of these things.
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
            name:
              type: string
              description: |-
                The name of the domain.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            options:
              type: object
              description: |-
                The resource options for the domain. Available resource options are
                `immutable`.
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
          required:
            - name
      additionalProperties: false
      required:
        - domain
    DomainsPostResponse:
      type: object
      properties:
        domain:
          type: object
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The ID of the domain.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the domain.
            enabled:
              description: |-
                If set to `true`, domain is enabled. If set to
                `false`, domain is disabled.
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
            name:
              type: string
              description: |-
                The name of the project.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the role. Available resource options are
                `immutable`.
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
          additionalProperties: false
          description: |-
            A `domain` object
      additionalProperties: false
      required:
        - domain
    DomainsGetResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                readOnly: true
                description: |-
                  The ID of the domain.
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The description of the domain.
              enabled:
                description: |-
                  If set to `true`, domain is enabled. If set to
                  `false`, domain is disabled.
                type:
                  - boolean
                  - string
                  - 'null'
                enum:
                  - true
                  - 'True'
                  - 'TRUE'
                  - 'true'
                  - false
                  - 'False'
                  - 'FALSE'
                  - 'false'
                  - ''
                  - '1'
                  - '0'
                  - y
                  - Y
                  - n
                  - N
                  - on
                  - ON
                  - off
                  - OFF
                  - yes
                  - no
              name:
                type: string
                description: |-
                  The name of the project.
                minLength: 1
                maxLength: 64
                pattern: '[\S]+'
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
                description: |-
                  The resource options for the role. Available resource options are
                  `immutable`.
              tags:
                type: array
                items:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: ^[^,/]*$
                required: []
                maxItems: 80
                uniqueItems: true
                description: |-
                  A list of simple strings assigned to a project.
            additionalProperties: false
            description: |-
              A `domain` object
          description: |-
            A list of `domain` objects
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    DomainGetResponse:
      type: object
      properties:
        domain:
          type: object
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The ID of the domain.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the domain.
            enabled:
              description: |-
                If set to `true`, domain is enabled. If set to
                `false`, domain is disabled.
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
            name:
              type: string
              description: |-
                The name of the project.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the role. Available resource options are
                `immutable`.
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
          additionalProperties: false
          description: |-
            A `domain` object
      additionalProperties: false
      required:
        - domain
    DomainPatch:
      type: object
      properties:
        domain:
          type: object
          description: |-
            A `domain` object
          properties:
            description:
              type:
                - string
                - 'null'
              description: |-
                The new description of the domain.
            enabled:
              description: |-
                If set to `true`, domain is enabled. If set to
                `false`, domain is disabled. The default is `true`.

                Users can only authorize against an enabled domain (and any of its
                projects). In addition, users can only authenticate if the domain that owns
                them is also enabled. Disabling a domain prevents both of these things.
                When you disable a domain, all tokens that are authorized for that domain
                become invalid. However, if you reenable the domain, these tokens become
                valid again, providing that they haven’t expired.
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
            name:
              type: string
              description: |-
                The new name of the domain.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            options:
              type: object
              description: |-
                The resource options for the domain. Available resource options are
                `immutable`.
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
          minProperties: 1
      additionalProperties: false
      required:
        - domain
    DomainPatchResponse:
      type: object
      properties:
        domain:
          type: object
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The ID of the domain.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the domain.
            enabled:
              description: |-
                If set to `true`, domain is enabled. If set to
                `false`, domain is disabled.
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
            name:
              type: string
              description: |-
                The name of the project.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the role. Available resource options are
                `immutable`.
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
          additionalProperties: false
          description: |-
            A `domain` object
      additionalProperties: false
      required:
        - domain
    DomainConfig:
      type: object
      properties:
        config:
          type: object
          description: |-
            A `config` object.
          additionalProperties:
            type: object
            additionalProperties: true
    DomainConfigGroup:
      type: object
      properties:
        config:
          type: object
          description: |-
            A `config` object.
          additionalProperties:
            type: object
            additionalProperties: true
          maxProperties: 1
    DomainConfigGroupOption:
      type: object
      properties:
        config:
          type: object
          additionalProperties: true
          maxProperties: 1
          description: |-
            A `config` object.
    RolesInfos:
      type: object
      description: List of roles assigned to the resource
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The role ID.
              name:
                type: string
                description: |-
                  The role name.
              description:
                type: string
                description: The role description.
              links:
                type: object
                properties:
                  self:
                    type: string
                    format: uri
                    description: The link to the resource in question.
                description: |-
                  The link to the resources in question.
            description: |-
              A prior role object.
          description: |-
            A list of `role` objects
        links:
          type: object
          additionalProperties:
            type:
              - string
              - 'null'
            format: uri
    Ec2TokensPostRequest:
      type: object
      description: Request of the ec2tokens:post operation
      x-openstack:
        action-name: POST
    Ec2TokensPostResponse:
      type: object
      description: Response of the ec2tokens:post operation
    Ec2TokensGetResponse:
      type: object
      description: Response of the ec2tokens:get operation
    EndpointsPost:
      type: object
      description: An endpoint object
      properties:
        endpoint:
          type: object
          description: |-
            An `endpoint` object.
          properties:
            id:
              type: string
              description: The endpoint ID.
            enabled:
              type: boolean
              description: |-
                Defines whether the endpoint appears in the
                service catalog: - `false`. The endpoint does not appear in the
                service catalog. - `true`. The endpoint appears in the service
                catalog. Default is `true`.
            interface:
              type: string
              enum:
                - admin
                - internal
                - public
              description: |-
                The interface type, which describes the
                visibility of the endpoint. Value is: - `public`. Visible by
                end users on a publicly available network interface. -
                `internal`. Visible by end users on an unmetered internal
                network interface. - `admin`. Visible by administrative users
                on a secure network interface.
            region_id:
              type:
                - string
                - 'null'
              description: |-
                (Since v3.2) The ID of the region that contains
                the service endpoint.
              x-openstack:
                min-ver: 3.2
            region:
              type:
                - string
                - 'null'
              description: (Deprecated in v3.2) The geographic location of the service
                endpoint.
              x-openstack:
                max-ver: 3.2
            service_id:
              type: string
              description: |-
                The UUID of the service to which the endpoint
                belongs.
            url:
              type: string
              description: |-
                The endpoint URL.
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
            name:
              type: string
              description: The name of the endpoint.
            description:
              type:
                - string
                - 'null'
              description: A description of the endpoint.
          additionalProperties: true
          required:
            - interface
            - service_id
            - url
      additionalProperties: false
    Endpoint:
      type: object
      properties:
        endpoint:
          type: object
          properties:
            enabled:
              type: boolean
              description: |-
                Indicates whether the endpoint appears in the
                service catalog: - `false`. The endpoint does not appear in the
                service catalog. - `true`. The endpoint appears in the service
                catalog.
            id:
              type: string
              format: uuid
              description: |-
                The endpoint ID.
              readOnly: true
            interface:
              type: string
              enum:
                - internal
                - admin
                - public
              description: |-
                The interface type, which describes the
                visibility of the endpoint. Value is: - `public`. Visible by
                end users on a publicly available network interface. -
                `internal`. Visible by end users on an unmetered internal
                network interface. - `admin`. Visible by administrative users
                on a secure network interface.
            region:
              type: string
              description: |-
                (Deprecated in v3.2) The geographic location of
                the service endpoint.
              x-openstack:
                max-ver: '3.2'
            region_id:
              type: string
              format: uuid
              description: |-
                (Since v3.2) The ID of the region that contains
                the service endpoint.
              x-openstack:
                min-ver: '3.2'
            service_id:
              type: string
              format: uuid
              description: |-
                The UUID of the service to which the endpoint
                belongs.
            url:
              type: string
              format: uri
              description: |-
                The endpoint URL.
          description: |-
            An `endpoint` object.
    EndpointsGetResponse:
      type: object
      properties:
        endpoints:
          type: array
          items:
            type: object
            properties:
              enabled:
                type: boolean
                description: |-
                  Indicates whether the endpoint appears in the
                  service catalog: - `false`. The endpoint does not appear in the
                  service catalog. - `true`. The endpoint appears in the service
                  catalog.
              id:
                type: string
                format: uuid
                description: |-
                  The endpoint ID.
                readOnly: true
              interface:
                type: string
                enum:
                  - internal
                  - admin
                  - public
                description: |-
                  The interface type, which describes the
                  visibility of the endpoint. Value is: - `public`. Visible by
                  end users on a publicly available network interface. -
                  `internal`. Visible by end users on an unmetered internal
                  network interface. - `admin`. Visible by administrative users
                  on a secure network interface.
              region:
                type: string
                description: |-
                  (Deprecated in v3.2) The geographic location of
                  the service endpoint.
                x-openstack:
                  max-ver: '3.2'
              region_id:
                type: string
                format: uuid
                description: |-
                  (Since v3.2) The ID of the region that contains
                  the service endpoint.
                x-openstack:
                  min-ver: '3.2'
              service_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the endpoint
                  belongs.
              url:
                type: string
                format: uri
                description: |-
                  The endpoint URL.
            description: |-
              An `endpoint` object.
          description: |-
            A list of `endpoint` objects.
    EndpointPatch:
      type: object
      description: An endpoint object
      properties:
        endpoint:
          type: object
          description: |-
            An `endpoint` object.
          properties:
            enabled:
              type: boolean
              description: Indicates whether the endpoint appears in the service catalog
                -false. The endpoint does not appear in the service catalog. -true.
                The endpoint appears in the service catalog.
            interface:
              type: string
              enum:
                - admin
                - internal
                - public
              description: |-
                The interface type, which describes the
                visibility of the endpoint. Value is: - `public`. Visible by
                end users on a publicly available network interface. -
                `internal`. Visible by end users on an unmetered internal
                network interface. - `admin`. Visible by administrative users
                on a secure network interface.
            region_id:
              type:
                - string
                - 'null'
              description: (Since v3.2) The ID of the region that contains the service
                endpoint.
              x-openstack:
                min-ver: 3.2
            region:
              type:
                - string
                - 'null'
              description: |-
                (Deprecated in v3.2) The geographic location of
                the service endpoint.
              x-openstack:
                max-ver: 3.2
            service_id:
              type: string
              description: |-
                The UUID of the service to which the endpoint
                belongs.
            url:
              type: string
              description: |-
                The endpoint URL.
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
            name:
              type: string
              description: The name of the endpoint.
            description:
              type:
                - string
                - 'null'
              description: A description of the endpoint.
          additionalProperties: true
          minProperties: 1
      additionalProperties: false
      required:
        - endpoint
    EndpointsOs_Endpoint_PolicyPolicyGetResponse:
      type: object
      description: Response of the endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:get
        operation
    GroupsPost:
      type: object
      properties:
        group:
          type: object
          description: |-
            A `group` object
          properties:
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the group.
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain of the group. If the domain ID is not
                provided in the request, the Identity service will attempt to
                pull the domain ID from the token used in the request. Note that
                this requires the use of a domain-scoped token.
            id:
              type: string
              description: The user ID.
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The name of the group.
          additionalProperties: true
          required:
            - name
      additionalProperties: false
      required:
        - group
    GroupsPostRequest:
      oneOf:
        - $ref: '#/components/schemas/GroupsPost'
        - $ref: '#/components/schemas/GroupsPost'
      x-openstack:
        discriminator: microversion
    Group:
      type: object
      properties:
        group:
          type: object
          properties:
            id:
              type: string
              description: |-
                The ID of the group.
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the group.
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The user name. Must be unique within the owning domain.
          description: |-
            A `group` object
    GroupsGetResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  The ID of the group.
                readOnly: true
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The description of the group.
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The user name. Must be unique within the owning domain.
            description: |-
              A `group` object
          description: |-
            A list of `group` objects
    GroupPatch:
      type: object
      properties:
        group:
          type: object
          description: |-
            A `group` object
          properties:
            description:
              type:
                - string
                - 'null'
              description: |-
                The new description of the group.
            id:
              type: string
              description: The user ID.
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The new name of the group.
          additionalProperties: true
          minProperties: 1
      additionalProperties: false
      required:
        - group
    GroupPatchRequest:
      oneOf:
        - $ref: '#/components/schemas/GroupPatch'
        - $ref: '#/components/schemas/GroupPatch'
      x-openstack:
        discriminator: microversion
    GroupsUsersGetResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  The user ID.
                readOnly: true
              default_project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the default project for the user.
              description:
                type:
                  - string
                  - 'null'
                description: The resource description.
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              enabled:
                type:
                  - boolean
                  - string
                  - 'null'
                enum:
                  - true
                  - 'True'
                  - 'TRUE'
                  - 'true'
                  - false
                  - 'False'
                  - 'FALSE'
                  - 'false'
                  - ''
                  - '1'
                  - '0'
                  - y
                  - Y
                  - n
                  - N
                  - on
                  - ON
                  - off
                  - OFF
                  - yes
                  - no
                description: |-
                  If the user is enabled, this value is `true`.
                  If the user is disabled, this value is `false`.
              federated:
                type: array
                items:
                  type: object
                  properties:
                    idp_id:
                      type: string
                    protocols:
                      type: array
                      items:
                        type: object
                        properties:
                          protocol_id:
                            type: string
                          unique_id:
                            type: string
                        required:
                          - protocol_id
                          - unique_id
                      minItems: 1
                  required:
                    - idp_id
                    - protocols
                description: |-
                  List of federated objects associated with a user. Each object in the list
                  contains the `idp_id` and `protocols`. `protocols` is a list of
                  objects, each of which contains `protocol_id` and `unique_id` of
                  the protocol and user respectively. For example:

                  ```
                  "federated": [
                    {
                      "idp_id": "efbab5a6acad4d108fec6c63d9609d83",
                      "protocols": [
                        {"protocol_id": "mapped", "unique_id": "test@example.com"}
                      ]
                    }
                  ]

                  ```
              links:
                type: object
                description: |-
                  The links for the `user` resource.
                properties:
                  next:
                    type:
                      - string
                      - 'null'
                    format: uri
                  previous:
                    type:
                      - string
                      - 'null'
                    format: uri
                  self:
                    type: string
                    format: uri
                required:
                  - self
                additionalProperties: false
                readOnly: true
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The user name. Must be unique within the owning domain.
              password_expires_at:
                type:
                  - string
                  - 'null'
                format: date-time
                description: |-
                  The date and time when the password expires. The time zone
                  is UTC.

                  This is a response object attribute; not valid for requests.
                  A `null` value indicates that the password never expires.

                  **New in version 3.7**
                readOnly: true
              options:
                type: object
                properties:
                  ignore_change_password_upon_first_use:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_password_expiry:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_lockout_failure_attempts:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  lock_password:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_user_inactivity:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  multi_factor_auth_rules:
                    type:
                      - array
                      - 'null'
                    items:
                      type: array
                      items:
                        type: string
                      minItems: 1
                      uniqueItems: true
                    uniqueItems: true
                  multi_factor_auth_enabled:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
                description: |-
                  The resource options for the user. Available resource options are
                  `ignore_change_password_upon_first_use`, `ignore_password_expiry`,
                  `ignore_lockout_failure_attempts`, `lock_password`,
                  `multi_factor_auth_enabled`, and `multi_factor_auth_rules`
                  `ignore_user_inactivity`.
            description: |-
              A `user` object
          description: |-
            A list of `user` objects
    LimitsPost:
      type: object
      properties:
        limits:
          type: array
          items:
            type: object
            properties:
              project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID for the project.
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The name of the domain.
              resource_name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              region_id:
                description: |-
                  The ID of the region that contains the service endpoint.
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 255
              service_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the limit belongs.
              resource_limit:
                description: |-
                  The override limit.
                type: integer
                minimum: -1
                maximum: 2147483647
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The limit description.
            required:
              - service_id
              - resource_name
              - resource_limit
            oneOf:
              - required:
                  - service_id
                  - resource_name
                  - resource_limit
                  - domain_id
              - required:
                  - service_id
                  - resource_name
                  - resource_limit
                  - project_id
            additionalProperties: false
          minItems: 1
          description: |-
            A list of `limits` objects
      additionalProperties: false
      required:
        - limits
    LimitsPostResponse:
      type: object
      properties:
        limits:
          type: array
          items:
            type: object
            description: |-
              A `limit` object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The limit ID.
                readOnly: true
              project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID for the project.
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              resource_name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              region_id:
                description: |-
                  The ID of the region that contains the service endpoint.
                  The value can be None.
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 255
              service_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the limit belongs.
              resource_limit:
                description: |-
                  The override limit.
                type: integer
                minimum: -1
                maximum: 2147483647
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The limit description.
            additionalProperties: false
          description: |-
            A list of `limits` objects
      additionalProperties: false
    LimitsGetResponse:
      type: object
      properties:
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        limits:
          type: array
          items:
            type: object
            description: |-
              A `limit` object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The limit ID.
                readOnly: true
              project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID for the project.
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              resource_name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              region_id:
                description: |-
                  The ID of the region that contains the service endpoint.
                  The value can be None.
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 255
              service_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the limit belongs.
              resource_limit:
                description: |-
                  The override limit.
                type: integer
                minimum: -1
                maximum: 2147483647
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The limit description.
            additionalProperties: false
          description: |-
            A list of `limits` objects
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    LimitGetResponse:
      type: object
      properties:
        limit:
          type: object
          description: |-
            A `limit` object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The limit ID.
              readOnly: true
            project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID for the project.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            resource_name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The resource name.
            region_id:
              description: |-
                The ID of the region that contains the service endpoint.
                The value can be None.
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
            service_id:
              type: string
              format: uuid
              description: |-
                The UUID of the service to which the limit belongs.
            resource_limit:
              description: |-
                The override limit.
              type: integer
              minimum: -1
              maximum: 2147483647
            description:
              type:
                - string
                - 'null'
              description: |-
                The limit description.
          additionalProperties: false
      additionalProperties: false
    LimitPatch:
      type: object
      properties:
        limit:
          type: object
          description: |-
            A `limit` object
          properties:
            resource_limit:
              description: |-
                The override limit.
              type: integer
              minimum: -1
              maximum: 2147483647
            description:
              type:
                - string
                - 'null'
              description: |-
                The limit description.
          additionalProperties: false
      additionalProperties: false
      required:
        - limit
    LimitPatchResponse:
      type: object
      properties:
        limit:
          type: object
          description: |-
            A `limit` object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The limit ID.
              readOnly: true
            project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID for the project.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            resource_name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The resource name.
            region_id:
              description: |-
                The ID of the region that contains the service endpoint.
                The value can be None.
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
            service_id:
              type: string
              format: uuid
              description: |-
                The UUID of the service to which the limit belongs.
            resource_limit:
              description: |-
                The override limit.
              type: integer
              minimum: -1
              maximum: 2147483647
            description:
              type:
                - string
                - 'null'
              description: |-
                The limit description.
          additionalProperties: false
      additionalProperties: false
    LimitsModelGetResponse:
      type: object
      properties:
        model:
          type: object
          description: |-
            A model object describing the configured enforcement model used by the deployment.
          properties:
            description:
              type: string
              description: |-
                A short description of the enforcement model used
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The name of the enforcement model
        additionalProperties: false
      additionalProperties: false
    Os_Ep_FilterEndpoint_GroupsPost:
      type: object
      description: An endpoint group object
      properties:
        endpoint_group:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              description: The endpoint group description.
            filters:
              type: object
              description: Describes the filtering performed by the endpoint group.
                The filter used must be an endpoint property, such as interface, service_id,
                region, and enabled. Note that if using interface as a filter, the
                only available values are public, internal, and admin.
              properties:
                interface:
                  type: string
                  enum:
                    - admin
                    - internal
                    - public
                  description: 'The interface type, which describes the visibility
                    of the endpoint. Value is: -public. Visible by end users on a
                    publicly available network interface. -internal. Visible by end
                    users on an unmetered internal network interface. -admin. Visible
                    by administrative users on a secure network interface.'
                service_id:
                  type: string
                  description: The UUID of the service to which the endpoint belongs
                region_id:
                  type:
                    - string
                    - 'null'
                  description: (Since v3.2) The ID of the region that contains the
                    service endpoint.
                  x-openstack:
                    min-ver: 3.2
                enabled:
                  type: boolean
                  description: Indicates whether the endpoint appears in the service
                    catalog -false. The endpoint does not appear in the service catalog.
                    -true. The endpoint appears in the service catalog.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: The name of the endpoint group.
          additionalProperties: false
          required:
            - name
            - filters
      additionalProperties: false
    Os_Ep_FilterEndpoint_GroupsPostResponse:
      type: object
      description: An endpoint group object
      properties:
        endpoint_group:
          type: object
          description: An endpoint group object.
          properties:
            id:
              type: string
              readOnly: true
              description: The endpoint group ID
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: The endpoint group description.
            filters:
              type: object
              description: Describes the filtering performed by the endpoint group.
                The filter used must be an endpoint property, such as interface, service_id,
                region, and enabled. Note that if using interface as a filter, the
                only available values are public, internal, and admin.
              properties:
                interface:
                  type: string
                  enum:
                    - admin
                    - internal
                    - public
                  description: 'The interface type, which describes the visibility
                    of the endpoint. Value is: -public. Visible by end users on a
                    publicly available network interface. -internal. Visible by end
                    users on an unmetered internal network interface. -admin. Visible
                    by administrative users on a secure network interface.'
                service_id:
                  type: string
                  description: The UUID of the service to which the endpoint belongs
                region_id:
                  type:
                    - string
                    - 'null'
                  description: (Since v3.2) The ID of the region that contains the
                    service endpoint.
                  x-openstack:
                    min-ver: 3.2
                enabled:
                  type: boolean
                  description: Indicates whether the endpoint appears in the service
                    catalog -false. The endpoint does not appear in the service catalog.
                    -true. The endpoint appears in the service catalog.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: The name of the endpoint group.
          additionalProperties: false
      additionalProperties: false
    Os_Ep_FilterEndpoint_GroupsGetResponse:
      type: object
      properties:
        endpoint_groups:
          type: array
          items:
            type: object
            description: An endpoint group object.
            properties:
              id:
                type: string
                readOnly: true
                description: The endpoint group ID
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              description:
                type:
                  - string
                  - 'null'
                description: The endpoint group description.
              filters:
                type: object
                description: Describes the filtering performed by the endpoint group.
                  The filter used must be an endpoint property, such as interface,
                  service_id, region, and enabled. Note that if using interface as
                  a filter, the only available values are public, internal, and admin.
                properties:
                  interface:
                    type: string
                    enum:
                      - admin
                      - internal
                      - public
                    description: 'The interface type, which describes the visibility
                      of the endpoint. Value is: -public. Visible by end users on
                      a publicly available network interface. -internal. Visible by
                      end users on an unmetered internal network interface. -admin.
                      Visible by administrative users on a secure network interface.'
                  service_id:
                    type: string
                    description: The UUID of the service to which the endpoint belongs
                  region_id:
                    type:
                      - string
                      - 'null'
                    description: (Since v3.2) The ID of the region that contains the
                      service endpoint.
                    x-openstack:
                      min-ver: 3.2
                  enabled:
                    type: boolean
                    description: Indicates whether the endpoint appears in the service
                      catalog -false. The endpoint does not appear in the service
                      catalog. -true. The endpoint appears in the service catalog.
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: The name of the endpoint group.
            additionalProperties: false
          description: A list of endpoint group objects
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    Os_Ep_FilterEndpoint_GroupGetResponse:
      type: object
      description: An endpoint group object
      properties:
        endpoint_group:
          type: object
          description: An endpoint group object.
          properties:
            id:
              type: string
              readOnly: true
              description: The endpoint group ID
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: The endpoint group description.
            filters:
              type: object
              description: Describes the filtering performed by the endpoint group.
                The filter used must be an endpoint property, such as interface, service_id,
                region, and enabled. Note that if using interface as a filter, the
                only available values are public, internal, and admin.
              properties:
                interface:
                  type: string
                  enum:
                    - admin
                    - internal
                    - public
                  description: 'The interface type, which describes the visibility
                    of the endpoint. Value is: -public. Visible by end users on a
                    publicly available network interface. -internal. Visible by end
                    users on an unmetered internal network interface. -admin. Visible
                    by administrative users on a secure network interface.'
                service_id:
                  type: string
                  description: The UUID of the service to which the endpoint belongs
                region_id:
                  type:
                    - string
                    - 'null'
                  description: (Since v3.2) The ID of the region that contains the
                    service endpoint.
                  x-openstack:
                    min-ver: 3.2
                enabled:
                  type: boolean
                  description: Indicates whether the endpoint appears in the service
                    catalog -false. The endpoint does not appear in the service catalog.
                    -true. The endpoint appears in the service catalog.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: The name of the endpoint group.
          additionalProperties: false
      additionalProperties: false
    Os_Ep_FilterEndpoint_GroupPatch:
      type: object
      description: An endpoint group object
      properties:
        endpoint_group:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              description: The endpoint group description.
            filters:
              type: object
              description: Describes the filtering performed by the endpoint group.
                The filter used must be an endpoint property, such as interface, service_id,
                region, and enabled. Note that if using interface as a filter, the
                only available values are public, internal, and admin.
              properties:
                interface:
                  type: string
                  enum:
                    - admin
                    - internal
                    - public
                  description: 'The interface type, which describes the visibility
                    of the endpoint. Value is: -public. Visible by end users on a
                    publicly available network interface. -internal. Visible by end
                    users on an unmetered internal network interface. -admin. Visible
                    by administrative users on a secure network interface.'
                service_id:
                  type: string
                  description: The UUID of the service to which the endpoint belongs
                region_id:
                  type:
                    - string
                    - 'null'
                  description: (Since v3.2) The ID of the region that contains the
                    service endpoint.
                  x-openstack:
                    min-ver: 3.2
                enabled:
                  type: boolean
                  description: Indicates whether the endpoint appears in the service
                    catalog -false. The endpoint does not appear in the service catalog.
                    -true. The endpoint appears in the service catalog.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: The name of the endpoint group.
          additionalProperties: false
          minProperties: 1
      additionalProperties: false
      required:
        - endpoint_group
    Os_Ep_FilterEndpoint_GroupPatchResponse:
      type: object
      description: An endpoint group object
      properties:
        endpoint_group:
          type: object
          description: An endpoint group object.
          properties:
            id:
              type: string
              readOnly: true
              description: The endpoint group ID
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: The endpoint group description.
            filters:
              type: object
              description: Describes the filtering performed by the endpoint group.
                The filter used must be an endpoint property, such as interface, service_id,
                region, and enabled. Note that if using interface as a filter, the
                only available values are public, internal, and admin.
              properties:
                interface:
                  type: string
                  enum:
                    - admin
                    - internal
                    - public
                  description: 'The interface type, which describes the visibility
                    of the endpoint. Value is: -public. Visible by end users on a
                    publicly available network interface. -internal. Visible by end
                    users on an unmetered internal network interface. -admin. Visible
                    by administrative users on a secure network interface.'
                service_id:
                  type: string
                  description: The UUID of the service to which the endpoint belongs
                region_id:
                  type:
                    - string
                    - 'null'
                  description: (Since v3.2) The ID of the region that contains the
                    service endpoint.
                  x-openstack:
                    min-ver: 3.2
                enabled:
                  type: boolean
                  description: Indicates whether the endpoint appears in the service
                    catalog -false. The endpoint does not appear in the service catalog.
                    -true. The endpoint appears in the service catalog.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: The name of the endpoint group.
          additionalProperties: false
      additionalProperties: false
    Os_Ep_FilterEndpointsProjectsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoints/endpoint_id/projects:get
        operation
    Os_Ep_FilterProjectsEndpointGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:get
        operation
    Os_Ep_FilterProjectsEndpointPutRequest:
      type: object
      description: Request of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
        operation
      x-openstack:
        action-name: PUT
    Os_Ep_FilterProjectsEndpointPutResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
        operation
    Os_Ep_FilterProjectsEndpointsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints:get
        operation
    Os_Ep_FilterProjectsEndpoint_GroupsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoint_groups:get
        operation
    Os_Ep_FilterEndpoint_GroupsEndpointsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectPutRequest:
      type: object
      description: Request of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
        operation
      x-openstack:
        action-name: PUT
    Os_Ep_FilterEndpoint_GroupsProjectPutResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
        operation
    Os_FederationSaml2MetadataGetResponse:
      type: string
      format: xml
      description: Identity Provider metadata information in XML format
    Os_FederationIdentity_ProvidersProtocolsAuthPostRequest:
      type: object
      description: Request of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:post
        operation
      x-openstack:
        action-name: POST
    Os_FederationIdentity_ProvidersProtocolsAuthPostResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The UUID of the service to which the endpoint
                            belongs.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                    description: |-
                      A list of `endpoint` objects.
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: |-
                      The service type, which describes the API
                      implemented by the service. Value is `compute`, `ec2`,
                      `identity`, `image`, `network`, or `volume`.
                  name:
                    type: string
                    description: |-
                      The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    Os_FederationIdentity_ProvidersProtocolsAuthGetResponse:
      type: object
      properties:
        token:
          type: object
          properties:
            audit_ids:
              type: array
              description: A list of one or two audit IDs. An audit ID is a unique,
                randomly generated, URL-safe string that you can use to track a token.
                The first audit ID is the current audit ID for the token. The second
                audit ID is present for only re-scoped tokens and is the audit ID
                from the token before it was re-scoped. A re- scoped token is one
                that was exchanged for another token of the same or different scope.
                You can use these audit IDs to track the use of a token or chain of
                tokens across multiple requests and endpoints without exposing the
                token ID to non-privileged users.
              items:
                type: string
            catalog:
              description: A catalog object.
              type: array
              items:
                type: object
                properties:
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: |-
                            The UUID of the service to which the endpoint
                            belongs.
                        interface:
                          type: string
                          enum:
                            - public
                            - internal
                            - admin
                        region:
                          type: string
                          description: Region name of the endpoint
                        url:
                          type: string
                          format: uri
                          description: The endpoint url
                    description: |-
                      A list of `endpoint` objects.
                  id:
                    type: string
                    format: uuid
                    description: The UUID of the service to which the endpoint belongs.
                  type:
                    type: string
                    description: |-
                      The service type, which describes the API
                      implemented by the service. Value is `compute`, `ec2`,
                      `identity`, `image`, `network`, or `volume`.
                  name:
                    type: string
                    description: |-
                      The service name.
            expires_at:
              type: string
              format: date-time
              description: The date and time when the token expires.
            issues_at:
              type: string
              format: date-time
              description: The date and time when the token was issued.
            methods:
              type: array
              description: The authentication methods, which are commonly password,
                token, or other methods. Indicates the accumulated set of authentication
                methods that were used to obtain the token. For example, if the token
                was obtained by password authentication, it contains password. Later,
                if the token is exchanged by using the token authentication method
                one or more times, the subsequently created tokens contain both password
                and token in their methods attribute. Unlike multi-factor authentication,
                the methods attribute merely indicates the methods that were used
                to authenticate the user in exchange for a token. The client is responsible
                for determining the total number of authentication factors.
              items:
                type: string
            user:
              type: object
              description: A user object
              properties:
                id:
                  type: string
                  format: uuid
                  description: A user UUID
                name:
                  type: string
                  description: A user name
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: A user domain UUID
                    name:
                      type: string
                      description: A user domain name
                password_expires_at:
                  type: string
                  format: date-time
                  description: DateTime of the user password expiration
                OS-FEDERATION:
                  type: object
    Os_FederationIdentity_ProvidersGetResponse:
      type: object
      properties:
        identity_providers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The Identity Provider unique ID
              description:
                type: string
                description: The Identity Provider description
              domain_id:
                type: string
                format: uuid
                description: The ID of a domain that is associated with the Identity
                  Provider.
              authorization_ttl:
                type: integer
                description: The length of validity in minutes for group memberships
                  carried over through mapping and persisted in the database.
              enabled:
                type: boolean
                description: Whether the Identity Provider is enabled or not
              remote_ids:
                type: array
                description: List of the unique Identity Provider’s remote IDs
                items:
                  type: string
    Os_FederationIdentity_ProviderGetResponse:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            id:
              type: string
              description: The Identity Provider unique ID
            description:
              type: string
              description: The Identity Provider description
            domain_id:
              type: string
              format: uuid
              description: The ID of a domain that is associated with the Identity
                Provider.
            authorization_ttl:
              type: integer
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database.
            enabled:
              type: boolean
              description: Whether the Identity Provider is enabled or not
            remote_ids:
              type: array
              description: List of the unique Identity Provider’s remote IDs
              items:
                type: string
    Os_FederationIdentity_ProviderPatch:
      type: object
      description: An identity provider object
      properties:
        identity_provider:
          type: object
          properties:
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: Whether the identity provider is enabled or not
            description:
              type:
                - string
                - 'null'
              description: The identity provider description
            authorization_ttl:
              type:
                - integer
                - 'null'
              minimum: 0
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database. If left
                unset, the default value configured in keystone will be used, if enabled.
            remote_ids:
              type:
                - array
                - 'null'
              description: List of the unique identity provider's remote IDs
              items:
                type: string
              uniqueItems: true
          additionalProperties: false
          minProperties: 1
      required:
        - identity_provider
    Os_FederationIdentity_ProviderPatchResponse:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            id:
              type: string
              description: The Identity Provider unique ID
            description:
              type: string
              description: The Identity Provider description
            domain_id:
              type: string
              format: uuid
              description: The ID of a domain that is associated with the Identity
                Provider.
            authorization_ttl:
              type: integer
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database.
            enabled:
              type: boolean
              description: Whether the Identity Provider is enabled or not
            remote_ids:
              type: array
              description: List of the unique Identity Provider’s remote IDs
              items:
                type: string
    Os_FederationIdentity_ProviderPut:
      type: object
      description: An identity provider object
      properties:
        identity_provider:
          type: object
          properties:
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: Whether the identity provider is enabled or not
            description:
              type:
                - string
                - 'null'
              description: The identity provider description
            authorization_ttl:
              type:
                - integer
                - 'null'
              minimum: 0
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database. If left
                unset, the default value configured in keystone will be used, if enabled.
            remote_ids:
              type:
                - array
                - 'null'
              description: List of the unique identity provider's remote IDs
              items:
                type: string
              uniqueItems: true
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: The ID of a domain that is associated with the identity
                provider. Federated users that authenticate with the identity provider
                will be created under the domain specified.
          additionalProperties: false
      additionalProperties: false
    Os_FederationIdentity_ProviderPutResponse:
      type: object
      properties:
        identity_provider:
          type: object
          properties:
            id:
              type: string
              description: The Identity Provider unique ID
            description:
              type: string
              description: The Identity Provider description
            domain_id:
              type: string
              format: uuid
              description: The ID of a domain that is associated with the Identity
                Provider.
            authorization_ttl:
              type: integer
              description: The length of validity in minutes for group memberships
                carried over through mapping and persisted in the database.
            enabled:
              type: boolean
              description: Whether the Identity Provider is enabled or not
            remote_ids:
              type: array
              description: List of the unique Identity Provider’s remote IDs
              items:
                type: string
    Os_FederationIdentity_ProvidersProtocolGetResponse:
      type: object
      properties:
        protocol:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The federation protocol ID
            mapping_id:
              type: string
            remote_id_attribute:
              type: string
              maxLength: 64
    Os_FederationIdentity_ProvidersProtocolPatchRequest:
      type: object
      properties:
        protocol:
          type: object
          properties:
            mapping_id:
              type: string
              minLength: 1
              maxLength: 64
            remote_id_attribute:
              type:
                - string
                - 'null'
              maxLength: 64
          additionalProperties: false
          required:
            - mapping_id
      additionalProperties: false
      required:
        - protocol
    Os_FederationIdentity_ProvidersProtocolPatchResponse:
      type: object
      properties:
        protocol:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The federation protocol ID
            mapping_id:
              type: string
            remote_id_attribute:
              type: string
              maxLength: 64
    Os_FederationIdentity_ProvidersProtocolPutRequest:
      type: object
      properties:
        protocol:
          type: object
          properties:
            mapping_id:
              type: string
              minLength: 1
              maxLength: 64
            remote_id_attribute:
              type:
                - string
                - 'null'
              maxLength: 64
          additionalProperties: false
          required:
            - mapping_id
      additionalProperties: false
      required:
        - protocol
    Os_FederationIdentity_ProvidersProtocolPutResponse:
      type: object
      properties:
        protocol:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: The federation protocol ID
            mapping_id:
              type: string
            remote_id_attribute:
              type: string
              maxLength: 64
    Os_FederationIdentity_ProvidersProtocolsGetResponse:
      type: object
      properties:
        protocols:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: The federation protocol ID
              mapping_id:
                type: string
              remote_id_attribute:
                type: string
                maxLength: 64
    Os_FederationMappingGetResponse:
      type: object
      properties:
        mapping:
          type: object
          properties:
            id:
              type: string
              description: The Federation Mapping unique ID
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPatchRequest:
      type: object
      properties:
        mapping:
          type: object
          required:
            - rules
          properties:
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPatchResponse:
      type: object
      properties:
        mapping:
          type: object
          properties:
            id:
              type: string
              description: The Federation Mapping unique ID
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPutRequest:
      type: object
      properties:
        mapping:
          type: object
          required:
            - rules
          properties:
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingPutResponse:
      type: object
      properties:
        mapping:
          type: object
          properties:
            id:
              type: string
              description: The Federation Mapping unique ID
            rules:
              minItems: 1
              type: array
              items:
                type: object
                required:
                  - local
                  - remote
                additionalProperties: false
                properties:
                  local:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            email:
                              type: string
                            domain:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                              additionalProperties: false
                            type:
                              type: string
                              enum:
                                - ephemeral
                                - local
                          additionalProperties: false
                        projects:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - roles
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                              roles:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      type: string
                                  additionalProperties: false
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                        group:
                          type: object
                          oneOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                              additionalProperties: false
                              required:
                                - id
                            - type: object
                              properties:
                                name:
                                  type: string
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                              additionalProperties: false
                              required:
                                - name
                                - domain
                        groups:
                          type: string
                        group_ids:
                          type: string
                        domain:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          additionalProperties: false
                  remote:
                    minItems: 1
                    type: array
                    items:
                      type: object
                      oneOf:
                        - type: object
                          required:
                            - type
                          properties:
                            type:
                              type: string
                          additionalProperties: false
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - any_one_of
                          properties:
                            type:
                              type: string
                            any_one_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - not_any_of
                          properties:
                            type:
                              type: string
                            not_any_of:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - blacklist
                          properties:
                            type:
                              type: string
                            blacklist:
                              type: array
                            regex:
                              type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - type
                            - whitelist
                          properties:
                            type:
                              type: string
                            whitelist:
                              type: array
                            regex:
                              type: boolean
            schema_version:
              type: string
              description: Mapping schema version
    Os_FederationMappingsGetResponse:
      type: object
      properties:
        mappings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The Federation Mapping unique ID
              rules:
                minItems: 1
                type: array
                items:
                  type: object
                  required:
                    - local
                    - remote
                  additionalProperties: false
                  properties:
                    local:
                      type: array
                      items:
                        type: object
                        additionalProperties: false
                        properties:
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              email:
                                type: string
                              domain:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  name:
                                    type: string
                                additionalProperties: false
                              type:
                                type: string
                                enum:
                                  - ephemeral
                                  - local
                            additionalProperties: false
                          projects:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - roles
                              additionalProperties: false
                              properties:
                                name:
                                  type: string
                                roles:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - name
                                    properties:
                                      name:
                                        type: string
                                    additionalProperties: false
                                domain:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                  additionalProperties: false
                          group:
                            type: object
                            oneOf:
                              - type: object
                                properties:
                                  id:
                                    type: string
                                additionalProperties: false
                                required:
                                  - id
                              - type: object
                                properties:
                                  name:
                                    type: string
                                  domain:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                      name:
                                        type: string
                                    additionalProperties: false
                                additionalProperties: false
                                required:
                                  - name
                                  - domain
                          groups:
                            type: string
                          group_ids:
                            type: string
                          domain:
                            type: object
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                            additionalProperties: false
                    remote:
                      minItems: 1
                      type: array
                      items:
                        type: object
                        oneOf:
                          - type: object
                            required:
                              - type
                            properties:
                              type:
                                type: string
                            additionalProperties: false
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - any_one_of
                            properties:
                              type:
                                type: string
                              any_one_of:
                                type: array
                              regex:
                                type: boolean
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - not_any_of
                            properties:
                              type:
                                type: string
                              not_any_of:
                                type: array
                              regex:
                                type: boolean
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - blacklist
                            properties:
                              type:
                                type: string
                              blacklist:
                                type: array
                              regex:
                                type: boolean
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - whitelist
                            properties:
                              type:
                                type: string
                              whitelist:
                                type: array
                              regex:
                                type: boolean
              schema_version:
                type: string
                description: Mapping schema version
    Os_FederationService_ProvidersGetResponse:
      type: object
      properties:
        service_providers:
          type: array
          items:
            type: object
            description: A service provider object
            properties:
              id:
                type: string
                readOnly: true
                description: The service provider ID
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              auth_url:
                type: string
                minLength: 0
                maxLength: 225
                pattern: ^[a-zA-Z0-9+.-]+:.+
                description: The URL to authenticate against
              sp_url:
                type: string
                minLength: 0
                maxLength: 225
                pattern: ^[a-zA-Z0-9+.-]+:.+
                description: The service provider's URL
              description:
                type:
                  - string
                  - 'null'
                description: The description of the service provider
              enabled:
                type:
                  - boolean
                  - string
                  - 'null'
                enum:
                  - true
                  - 'True'
                  - 'TRUE'
                  - 'true'
                  - false
                  - 'False'
                  - 'FALSE'
                  - 'false'
                  - ''
                  - '1'
                  - '0'
                  - y
                  - Y
                  - n
                  - N
                  - on
                  - ON
                  - off
                  - OFF
                  - yes
                  - no
                description: Whether the service provider is enabled or not
              relay_state_prefix:
                type:
                  - string
                  - 'null'
                description: The prefix of the RelayState SAML attribute
            additionalProperties: true
          description: A list of service provider objects
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    Os_FederationService_ProviderGetResponse:
      type: object
      description: A service provider object
      properties:
        service_provider:
          type: object
          description: A service provider object
          properties:
            id:
              type: string
              readOnly: true
              description: The service provider ID
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            auth_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The URL to authenticate against
            sp_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The service provider's URL
            description:
              type:
                - string
                - 'null'
              description: The description of the service provider
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: Whether the service provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
          additionalProperties: true
      additionalProperties: false
    Os_FederationService_ProviderPatch:
      type: object
      description: A service provider object
      properties:
        service_provider:
          type: object
          properties:
            auth_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The URL to authenticate against
            sp_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The service provider's URL
            description:
              type:
                - string
                - 'null'
              description: The description of the service provider
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: Whether the service provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
          additionalProperties: false
          minProperties: 1
      additionalProperties: false
      required:
        - service_provider
    Os_FederationService_ProviderPatchResponse:
      type: object
      description: A service provider object
      properties:
        service_provider:
          type: object
          description: A service provider object
          properties:
            id:
              type: string
              readOnly: true
              description: The service provider ID
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            auth_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The URL to authenticate against
            sp_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The service provider's URL
            description:
              type:
                - string
                - 'null'
              description: The description of the service provider
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: Whether the service provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
          additionalProperties: true
      additionalProperties: false
    Os_FederationService_ProviderPut:
      type: object
      description: A service provider object
      properties:
        service_provider:
          type: object
          properties:
            auth_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The URL to authenticate against
            sp_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The service provider's URL
            description:
              type:
                - string
                - 'null'
              description: The description of the service provider
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: Whether the service provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
          additionalProperties: false
          required:
            - auth_url
            - sp_url
      additionalProperties: false
      required:
        - service_provider
    Os_FederationService_ProviderPutResponse:
      type: object
      description: A service provider object
      properties:
        service_provider:
          type: object
          description: A service provider object
          properties:
            id:
              type: string
              readOnly: true
              description: The service provider ID
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            auth_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The URL to authenticate against
            sp_url:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^[a-zA-Z0-9+.-]+:.+
              description: The service provider's URL
            description:
              type:
                - string
                - 'null'
              description: The description of the service provider
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: Whether the service provider is enabled or not
            relay_state_prefix:
              type:
                - string
                - 'null'
              description: The prefix of the RelayState SAML attribute
          additionalProperties: true
      additionalProperties: false
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritDomainsUsersRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritDomainsUsersRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsUsersRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritProjectsUsersRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritProjectsUsersRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
      x-openstack:
        action-name: PUT
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_Oauth1ConsumerGetResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers/consumer_id:get operation
    Os_Oauth1ConsumerPatchRequest:
      type: object
      description: Request of the OS-OAUTH1/consumers/consumer_id:patch operation
      x-openstack:
        action-name: PATCH
    Os_Oauth1ConsumerPatchResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers/consumer_id:patch operation
    Os_Oauth1ConsumersGetResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers:get operation
    Os_Oauth1ConsumersPostRequest:
      type: object
      description: Request of the OS-OAUTH1/consumers:post operation
      x-openstack:
        action-name: POST
    Os_Oauth1ConsumersPostResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers:post operation
    Os_Oauth1Request_TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH1/request_token:post operation
      x-openstack:
        action-name: POST
    Os_Oauth1Request_TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH1/request_token:post operation
    Os_Oauth1Request_TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH1/request_token:get operation
    Os_Oauth1Access_TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH1/access_token:post operation
      x-openstack:
        action-name: POST
    Os_Oauth1Access_TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH1/access_token:post operation
    Os_Oauth1Access_TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH1/access_token:get operation
    Os_Oauth1AuthorizePutRequest:
      type: object
      description: Request of the OS-OAUTH1/authorize/request_token_id:put operation
      x-openstack:
        action-name: PUT
    Os_Oauth1AuthorizePutResponse:
      type: object
      description: Response of the OS-OAUTH1/authorize/request_token_id:put operation
    Os_Oauth2TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH2/token:get operation
    Os_Oauth2TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH2/token:post operation
      x-openstack:
        action-name: POST
    Os_Oauth2TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH2/token:post operation
    Os_Oauth2TokenPatchRequest:
      type: object
      description: Request of the OS-OAUTH2/token:patch operation
      x-openstack:
        action-name: PATCH
    Os_Oauth2TokenPatchResponse:
      type: object
      description: Response of the OS-OAUTH2/token:patch operation
    Os_Oauth2TokenPutRequest:
      type: object
      description: Request of the OS-OAUTH2/token:put operation
      x-openstack:
        action-name: PUT
    Os_Oauth2TokenPutResponse:
      type: object
      description: Response of the OS-OAUTH2/token:put operation
    Os_RevokeEventsGetResponse:
      type: object
      description: Response of the OS-REVOKE/events:get operation
    Os_Simple_CertCaGetResponse:
      type: object
      description: Response of the OS-SIMPLE-CERT/ca:get operation
    Os_Simple_CertCertificatesGetResponse:
      type: object
      description: Response of the OS-SIMPLE-CERT/certificates:get operation
    PolicyGetResponse:
      type: object
      description: Response of the policies/policy_id:get operation
    PolicyPatchRequest:
      type: object
      description: Request of the policies/policy_id:patch operation
      x-openstack:
        action-name: PATCH
    PolicyPatchResponse:
      type: object
      description: Response of the policies/policy_id:patch operation
    PoliciesGetResponse:
      type: object
      description: Response of the policies:get operation
    PoliciesPostRequest:
      type: object
      description: Request of the policies:post operation
      x-openstack:
        action-name: POST
    PoliciesPostResponse:
      type: object
      description: Response of the policies:post operation
    PoliciesOs_Endpoint_PolicyEndpointsGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints:get
        operation
    PoliciesOs_Endpoint_PolicyEndpointGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:get
        operation
    PoliciesOs_Endpoint_PolicyEndpointPutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
        operation
      x-openstack:
        action-name: PUT
    PoliciesOs_Endpoint_PolicyEndpointPutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
        operation
    PoliciesOs_Endpoint_PolicyServiceGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:get
        operation
    PoliciesOs_Endpoint_PolicyServicePutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
        operation
      x-openstack:
        action-name: PUT
    PoliciesOs_Endpoint_PolicyServicePutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
        operation
    PoliciesOs_Endpoint_PolicyServicesRegionGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:get
        operation
    PoliciesOs_Endpoint_PolicyServicesRegionPutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
        operation
      x-openstack:
        action-name: PUT
    PoliciesOs_Endpoint_PolicyServicesRegionPutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
        operation
    ProjectsPost:
      type: object
      properties:
        project:
          type: object
          description: |-
            A `project` object
          properties:
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the project.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain for the project.

                For projects acting as a domain, the `domain_id` must not be specified,
                it will be generated by the Identity service implementation.

                For regular projects (i.e. those not acing as a domain), if `domain_id`
                is not specified, but `parent_id` is specified, then the domain ID of the
                parent will be used. If neither `domain_id` or `parent_id` is
                specified, the Identity service implementation will default to the domain
                to which the client’s token is scoped. If both `domain_id` and
                `parent_id` are specified, and they do not indicate the same domain, an
                `Bad Request (400)` will be returned.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If set to `true`, project is enabled. If set to
                `false`, project is disabled. The default is `true`.
            is_domain:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If set to `true`, project is enabled. If set to
                `false`, project is disabled. The default is `true`.
            parent_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the parent of the project.

                If specified on project creation, this places the project within a
                hierarchy and implicitly defines the owning domain, which will be the
                same domain as the parent specified. If `parent_id` is
                not specified and `is_domain` is `false`, then the project will use its
                owning domain as its parent. If `is_domain` is `true` (i.e. the project
                is acting as a domain), then `parent_id` must not specified (or if it is,
                it must be `null`) since domains have no parents.

                `parent_id` is immutable, and can’t be updated after the project is
                created - hence a project cannot be moved within the hierarchy.

                **New in version 3.4**
            name:
              type: string
              description: |-
                The name of the project, which must be unique within the
                owning domain. A project can have the same name as its domain.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
                Tags can be used to classify projects into groups.
            options:
              type: object
              description: |-
                The resource options for the project. Available resource options are
                `immutable`.
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          required:
            - name
      additionalProperties: false
    ProjectsPostResponse:
      type: object
      properties:
        project:
          type: object
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The ID for the project.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the project.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain for the project.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            is_domain:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            parent_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the parent for the project.

                **New in version 3.4**
            name:
              type: string
              description: |-
                The name of the project.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the project. Available resource options are
                `immutable`.
          additionalProperties: true
          description: |-
            A `project` object
      additionalProperties: false
    ProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                readOnly: true
                description: |-
                  The ID for the project.
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The description of the project.
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain for the project.
              enabled:
                type:
                  - boolean
                  - string
                  - 'null'
                enum:
                  - true
                  - 'True'
                  - 'TRUE'
                  - 'true'
                  - false
                  - 'False'
                  - 'FALSE'
                  - 'false'
                  - ''
                  - '1'
                  - '0'
                  - y
                  - Y
                  - n
                  - N
                  - on
                  - ON
                  - off
                  - OFF
                  - yes
                  - no
                description: |-
                  If the user is enabled, this value is `true`.
                  If the user is disabled, this value is `false`.
              is_domain:
                type:
                  - boolean
                  - string
                  - 'null'
                enum:
                  - true
                  - 'True'
                  - 'TRUE'
                  - 'true'
                  - false
                  - 'False'
                  - 'FALSE'
                  - 'false'
                  - ''
                  - '1'
                  - '0'
                  - y
                  - Y
                  - n
                  - N
                  - on
                  - ON
                  - off
                  - OFF
                  - yes
                  - no
                description: |-
                  If the user is enabled, this value is `true`.
                  If the user is disabled, this value is `false`.
              parent_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the parent for the project.

                  **New in version 3.4**
              name:
                type: string
                description: |-
                  The name of the project.
                minLength: 1
                maxLength: 64
                pattern: '[\S]+'
              tags:
                type: array
                items:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: ^[^,/]*$
                required: []
                maxItems: 80
                uniqueItems: true
                description: |-
                  A list of simple strings assigned to a project.
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
                description: |-
                  The resource options for the project. Available resource options are
                  `immutable`.
            additionalProperties: true
            description: |-
              A `project` object
          description: |-
            A list of `project` objects
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    ProjectGetResponse:
      type: object
      properties:
        project:
          type: object
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The ID for the project.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the project.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain for the project.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            is_domain:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            parent_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the parent for the project.

                **New in version 3.4**
            name:
              type: string
              description: |-
                The name of the project.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the project. Available resource options are
                `immutable`.
          additionalProperties: true
          description: |-
            A `project` object
      additionalProperties: false
    ProjectPatch:
      type: object
      properties:
        project:
          type: object
          description: |-
            A `project` object
          properties:
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the project.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If set to `true`, project is enabled. If set to
                `false`, project is disabled.
            name:
              type: string
              description: |-
                The name of the project, which must be unique within the
                owning domain. A project can have the same name as its domain.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            options:
              type: object
              description: |-
                The resource options for the project. Available resource options are
                `immutable`.
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
                Tags can be used to classify projects into groups.
      additionalProperties: false
    ProjectPatchResponse:
      type: object
      properties:
        project:
          type: object
          properties:
            id:
              type: string
              readOnly: true
              description: |-
                The ID for the project.
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            description:
              type:
                - string
                - 'null'
              description: |-
                The description of the project.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain for the project.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            is_domain:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            parent_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the parent for the project.

                **New in version 3.4**
            name:
              type: string
              description: |-
                The name of the project.
              minLength: 1
              maxLength: 64
              pattern: '[\S]+'
            tags:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
              required: []
              maxItems: 80
              uniqueItems: true
              description: |-
                A list of simple strings assigned to a project.
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the project. Available resource options are
                `immutable`.
          additionalProperties: true
          description: |-
            A `project` object
      additionalProperties: false
    ProjectsTagsGetResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          description: |-
            A list of simple strings assigned to a project.
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
      additionalProperties: false
    ProjectsTagsPut:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          description: |-
            A list of simple strings assigned to a project.
      additionalProperties: false
    ProjectsTagsPutResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          description: |-
            A list of simple strings assigned to a project.
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
      additionalProperties: false
    Region:
      type: object
      properties:
        region:
          type: object
          properties:
            description:
              type: string
              description: |-
                The region description.
            id:
              type: string
              format: uuid
              description: |-
                The ID for the region.
              readOnly: true
            parent_id:
              type: string
              format: uuid
              description: To make this region a child of another region, set this
                parameter to the ID of the parent region.
          description: |-
            A `region` object
    RegionPutRequest:
      type: object
      description: Request of the regions/region_id:put operation
      x-openstack:
        action-name: PUT
    RegionPutResponse:
      type: object
      description: Response of the regions/region_id:put operation
    RegionsGetResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: |-
                  The region description.
              id:
                type: string
                format: uuid
                description: |-
                  The ID for the region.
                readOnly: true
              parent_id:
                type: string
                format: uuid
                description: To make this region a child of another region, set this
                  parameter to the ID of the parent region.
            description: |-
              A `region` object
          description: |-
            A list of `region` object
    Registered_LimitsPost:
      type: object
      properties:
        registered_limits:
          type: array
          items:
            type: object
            properties:
              service_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the registered limit
                  belongs.
              region_id:
                description: |-
                  The ID of the region that contains the service endpoint.
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 255
              resource_name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              default_limit:
                description: |-
                  The default limit for the registered limit.
                type: integer
                minimum: -1
                maximum: 2147483647
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The registered limit description.
            additionalProperties: false
            required:
              - service_id
              - resource_name
              - default_limit
          minItems: 1
          description: |-
            A list of `registered_limits` objects
      additionalProperties: false
      required:
        - registered_limits
    Registered_LimitsPostResponse:
      type: object
      properties:
        registered_limits:
          type: array
          items:
            type: object
            description: |-
              A `registered_limit` objects
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The registered limit ID.
                readOnly: true
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              service_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the registered limit
                  belongs.
              region_id:
                description: |-
                  The ID of the region that contains the service endpoint.
                  The value can be None.
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 255
              resource_name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              default_limit:
                description: |-
                  The default limit for the registered limit.
                type: integer
                minimum: -1
                maximum: 2147483647
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The registered limit description.
            additionalProperties: false
          description: |-
            A list of `registered_limits` objects
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    Registered_LimitsGetResponse:
      type: object
      properties:
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        registered_limits:
          type: array
          items:
            type: object
            description: |-
              A `registered_limit` objects
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The registered limit ID.
                readOnly: true
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              service_id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the registered limit
                  belongs.
              region_id:
                description: |-
                  The ID of the region that contains the service endpoint.
                  The value can be None.
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 255
              resource_name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              default_limit:
                description: |-
                  The default limit for the registered limit.
                type: integer
                minimum: -1
                maximum: 2147483647
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The registered limit description.
            additionalProperties: false
          description: |-
            A list of `registered_limits` objects
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    Registered_LimitGetResponse:
      type: object
      properties:
        registered_limit:
          type: object
          description: |-
            A `registered_limit` objects
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The registered limit ID.
              readOnly: true
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            service_id:
              type: string
              format: uuid
              description: |-
                The UUID of the service to which the registered limit
                belongs.
            region_id:
              description: |-
                The ID of the region that contains the service endpoint.
                The value can be None.
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
            resource_name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The resource name.
            default_limit:
              description: |-
                The default limit for the registered limit.
              type: integer
              minimum: -1
              maximum: 2147483647
            description:
              type:
                - string
                - 'null'
              description: |-
                The registered limit description.
          additionalProperties: false
      additionalProperties: false
    Registered_LimitPatch:
      type: object
      properties:
        registered_limit:
          type: object
          description: |-
            A `registered_limit` objects
          properties:
            service_id:
              type: string
              format: uuid
              description: |-
                The UUID of the service to update to which the registered
                limit belongs. Either service_id, resource_name, or region_id
                must be different than existing value otherwise it will
                raise 409.
            region_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
              description: |-
                The ID of the region that contains the service endpoint.
                Either service_id, resource_name, or region_id must be
                different than existing value otherwise it will raise 409.
            resource_name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The resource name. Either service_id, resource_name or
                region_id must be different than existing value otherwise
                it will raise 409.
            default_limit:
              type: integer
              minimum: -1
              maximum: 2147483647
              description: |-
                The default limit for the registered limit.
            description:
              type:
                - string
                - 'null'
              description: |-
                The registered limit description.
          additionalProperties: false
      additionalProperties: false
      required:
        - registered_limit
    Registered_LimitPatchResponse:
      type: object
      properties:
        registered_limit:
          type: object
          description: |-
            A `registered_limit` objects
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The registered limit ID.
              readOnly: true
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            service_id:
              type: string
              format: uuid
              description: |-
                The UUID of the service to which the registered limit
                belongs.
            region_id:
              description: |-
                The ID of the region that contains the service endpoint.
                The value can be None.
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 255
            resource_name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The resource name.
            default_limit:
              description: |-
                The default limit for the registered limit.
              type: integer
              minimum: -1
              maximum: 2147483647
            description:
              type:
                - string
                - 'null'
              description: |-
                The registered limit description.
          additionalProperties: false
      additionalProperties: false
    Role_AssignmentsGetResponse:
      type: object
      properties:
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        role_assignments:
          type: array
          items:
            type: object
            description: A role assignment object.
            properties:
              links:
                type: object
                properties:
                  assignment:
                    type: string
                    format: uri
                  membership:
                    type: string
                    format: uri
                  prior_role:
                    type: string
                    format: uri
                required:
                  - assignment
                additionalProperties: false
              role:
                type: object
                properties:
                  domain:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                        maxLength: 64
                        pattern: ^[a-zA-Z0-9-]+$
                        description: |-
                          The ID of the domain.
                      name:
                        type: string
                        minLength: 1
                        maxLength: 255
                        pattern: '[\S]+'
                        description: |-
                          The resource name.
                    required:
                      - id
                    additionalProperties: false
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: |-
                      The ID of the domain.
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                    description: |-
                      The resource name.
                required:
                  - id
                additionalProperties: false
              scope:
                properties:
                  project:
                    type: object
                    properties:
                      domain:
                        type: object
                        properties:
                          id:
                            type: string
                            minLength: 1
                            maxLength: 64
                            pattern: ^[a-zA-Z0-9-]+$
                            description: |-
                              The ID of the domain.
                          name:
                            type: string
                            minLength: 1
                            maxLength: 255
                            pattern: '[\S]+'
                            description: |-
                              The resource name.
                        required:
                          - id
                        additionalProperties: false
                      id:
                        type: string
                        minLength: 1
                        maxLength: 64
                        pattern: ^[a-zA-Z0-9-]+$
                        description: |-
                          The ID of the domain.
                      name:
                        type: string
                        minLength: 1
                        maxLength: 255
                        pattern: '[\S]+'
                        description: |-
                          The resource name.
                    required:
                      - id
                    additionalProperties: false
                  OS-INHERIT:inherited_to:
                    const: projects
                  domain:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                        maxLength: 64
                        pattern: ^[a-zA-Z0-9-]+$
                        description: |-
                          The ID of the domain.
                      name:
                        type: string
                        minLength: 1
                        maxLength: 255
                        pattern: '[\S]+'
                        description: |-
                          The resource name.
                    required:
                      - id
                  system:
                    type: object
                    properties:
                      all:
                        const: true
                    required:
                      - all
                oneOf:
                  - required:
                      - project
                  - required:
                      - domain
                  - required:
                      - system
                additionalProperties: false
              user:
                type: object
                properties:
                  domain:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                        maxLength: 64
                        pattern: ^[a-zA-Z0-9-]+$
                        description: |-
                          The ID of the domain.
                      name:
                        type: string
                        minLength: 1
                        maxLength: 255
                        pattern: '[\S]+'
                        description: |-
                          The resource name.
                    required:
                      - id
                    additionalProperties: false
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: |-
                      The ID of the domain.
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                    description: |-
                      The resource name.
                required:
                  - id
                additionalProperties: false
              group:
                type: object
                properties:
                  domain:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                        maxLength: 64
                        pattern: ^[a-zA-Z0-9-]+$
                        description: |-
                          The ID of the domain.
                      name:
                        type: string
                        minLength: 1
                        maxLength: 255
                        pattern: '[\S]+'
                        description: |-
                          The resource name.
                    required:
                      - id
                    additionalProperties: false
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: |-
                      The ID of the domain.
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                    description: |-
                      The resource name.
                required:
                  - id
                additionalProperties: false
            required:
              - role
              - links
              - scope
            oneOf:
              - required:
                  - user
              - required:
                  - group
            additionalProperties: false
          description: A list of role assignment objects.
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    Role_InferencesGetResponse:
      type: object
      properties:
        role_inferences:
          type: array
          items:
            type: object
            properties:
              prior_role:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: |-
                      The role ID.
                  name:
                    type: string
                    description: |-
                      The role name.
                  description:
                    type: string
                    description: The role description.
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The link to the resource in question.
                    description: |-
                      The link to the resources in question.
                description: |-
                  A prior role object.
              implies:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: |-
                        The role ID.
                    name:
                      type: string
                      description: |-
                        The role name.
                    description:
                      type: string
                      description: The role description.
                    links:
                      type: object
                      properties:
                        self:
                          type: string
                          format: uri
                          description: The link to the resource in question.
                      description: |-
                        The link to the resources in question.
                  description: |-
                    A prior role object.
                description: |-
                  An implied role object.
          description: |-
            An array of `role_inference` object.
    RolesPost:
      type: object
      properties:
        role:
          type: object
          description: |-
            A `role` object
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The role name.
            description:
              type:
                - string
                - 'null'
              description: |-
                Add description about the role.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain of the role.
            options:
              type: object
              description: |-
                The resource options for the role. Available resource options are
                `immutable`.
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          additionalProperties: true
          required:
            - name
      additionalProperties: false
      required:
        - role
    Role:
      type: object
      properties:
        role:
          type: object
          description: |-
            A `role` object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The role ID.
              readOnly: true
            links:
              type: object
              additionalProperties:
                type:
                  - string
                  - 'null'
                format: uri
              readOnly: true
              description: |-
                The link to the resources in question.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The resource name.
            description:
              type:
                - string
                - 'null'
              description: |-
                The role description.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain.
            options:
              type: object
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the role. Available resource options are
                `immutable`.
    RolesGetResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: object
            description: |-
              A `role` object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The role ID.
                readOnly: true
              links:
                type: object
                additionalProperties:
                  type:
                    - string
                    - 'null'
                  format: uri
                readOnly: true
                description: |-
                  The link to the resources in question.
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The role description.
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
                description: |-
                  The resource options for the role. Available resource options are
                  `immutable`.
          description: |-
            A list of `role` objects
        links:
          type: object
          additionalProperties:
            type:
              - string
              - 'null'
            format: uri
    RolePatch:
      type: object
      properties:
        role:
          type: object
          description: |-
            A `role` object
          properties:
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The new role name.
            description:
              type:
                - string
                - 'null'
              description: |-
                The new role description.
            domain_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: The ID of the domain.
            options:
              type: object
              description: |-
                The resource options for the role. Available resource options are
                `immutable`.
              properties:
                immutable:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          additionalProperties: true
          minProperties: 1
      additionalProperties: false
      required:
        - role
    RolesImpliesGetResponse:
      type: object
      properties:
        role_inference:
          type: object
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: |-
                    The role ID.
                name:
                  type: string
                  description: |-
                    The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
                  description: |-
                    The link to the resources in question.
              description: |-
                A prior role object.
            implies:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: |-
                      The role ID.
                  name:
                    type: string
                    description: |-
                      The role name.
                  description:
                    type: string
                    description: The role description.
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The link to the resource in question.
                    description: |-
                      The link to the resources in question.
                description: |-
                  A prior role object.
              description: |-
                An array of implied role objects.
          description: |-
            Role inference object that contains `prior_role` object
            and `implies` object.
    RolesImplyGetResponse:
      type: object
      properties:
        role_inference:
          type: object
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: |-
                    The role ID.
                name:
                  type: string
                  description: |-
                    The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
                  description: |-
                    The link to the resources in question.
              description: |-
                A prior role object.
            implies:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: |-
                    The role ID.
                name:
                  type: string
                  description: |-
                    The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
                  description: |-
                    The link to the resources in question.
              description: |-
                A prior role object.
          description: |-
            Role inference object that contains `prior_role` object
            and `implies` object.
    RolesImplyPutResponse:
      type: object
      properties:
        role_inference:
          type: object
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: |-
                    The role ID.
                name:
                  type: string
                  description: |-
                    The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
                  description: |-
                    The link to the resources in question.
              description: |-
                A prior role object.
            implies:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: |-
                    The role ID.
                name:
                  type: string
                  description: |-
                    The role name.
                description:
                  type: string
                  description: The role description.
                links:
                  type: object
                  properties:
                    self:
                      type: string
                      format: uri
                      description: The link to the resource in question.
                  description: |-
                    The link to the resources in question.
              description: |-
                A prior role object.
          description: |-
            Role inference object that contains `prior_role` object
            and `implies` object.
    S3TokensPostRequest:
      type: object
      description: Request of the s3tokens:post operation
      x-openstack:
        action-name: POST
    S3TokensPostResponse:
      type: object
      description: Response of the s3tokens:post operation
    S3TokensGetResponse:
      type: object
      description: Response of the s3tokens:get operation
    ServicesPost:
      type: object
      description: A service object.
      properties:
        service:
          type: object
          description: |-
            A `service` object.
          properties:
            enabled:
              type: boolean
              description: |-
                Defines whether the service and its endpoints
                appear in the service catalog: - `false`. The service and its
                endpoints do not appear in the service catalog. - `true`. The
                service and its endpoints appear in the service catalog.
            type:
              type: string
              description: |-
                The service type, which describes the API
                implemented by the service. Value is `compute`, `ec2`,
                `identity`, `image`, `network`, or `volume`.
              minLength: 1
              maxLength: 255
            name:
              type: string
              description: |-
                The service name.
              minLength: 1
              maxLength: 255
          additionalProperties: true
          required:
            - type
    Service:
      type: object
      properties:
        service:
          type: object
          properties:
            description:
              type: string
              description: |-
                The service description.
            enabled:
              type: boolean
              description: |-
                Defines whether the service and its endpoints
                appear in the service catalog: - `false`. The service and its
                endpoints do not appear in the service catalog. - `true`. The
                service and its endpoints appear in the service catalog.
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the service to which the endpoint
                belongs.
              readOnly: true
            name:
              type: string
              description: |-
                The service name.
            type:
              type: string
              description: |-
                The service type, which describes the API
                implemented by the service. Value is `compute`, `ec2`,
                `identity`, `image`, `network`, or `volume`.
          description: |-
            A `service` object.
    ServicesGetResponse:
      type: object
      properties:
        services:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: |-
                  The service description.
              enabled:
                type: boolean
                description: |-
                  Defines whether the service and its endpoints
                  appear in the service catalog: - `false`. The service and its
                  endpoints do not appear in the service catalog. - `true`. The
                  service and its endpoints appear in the service catalog.
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service to which the endpoint
                  belongs.
                readOnly: true
              name:
                type: string
                description: |-
                  The service name.
              type:
                type: string
                description: |-
                  The service type, which describes the API
                  implemented by the service. Value is `compute`, `ec2`,
                  `identity`, `image`, `network`, or `volume`.
            description: |-
              A `service` object.
          description: |-
            A list of `service` object.
    ServicePatch:
      type: object
      description: A service object.
      properties:
        service:
          type: object
          description: |-
            A `service` object.
          properties:
            enabled:
              type: boolean
              description: |-
                Defines whether the service and its endpoints
                appear in the service catalog: - `false`. The service and its
                endpoints do not appear in the service catalog. - `true`. The
                service and its endpoints appear in the service catalog.
                Default is `true`.
            type:
              type: string
              description: |-
                The service type, which describes the API
                implemented by the service. Value is `compute`, `ec2`,
                `identity`, `image`, `network`, or `volume`.
              minLength: 1
              maxLength: 255
            name:
              type: string
              description: |-
                The service name.
              minLength: 1
              maxLength: 255
          additionalProperties: true
          minProperties: 1
      required:
        - service
    SystemUsersRolesGetResponse:
      type: object
      properties:
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        roles:
          type: array
          items:
            type: object
            description: A role object.
            properties:
              id:
                type: string
                format: uuid
                description: The role ID.
                readOnly: true
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The role description.
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
                description: |-
                  The resource options for the role. Available resource options are
                  `immutable`.
            additionalProperties: false
          description: |-
            A list of `role` objects containing `domain_id`, `id`, `links`,
            and `name` attributes.
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    SystemGroupsRolesGetResponse:
      type: object
      properties:
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        roles:
          type: array
          items:
            type: object
            description: A role object.
            properties:
              id:
                type: string
                format: uuid
                description: The role ID.
                readOnly: true
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The resource name.
              description:
                type:
                  - string
                  - 'null'
                description: |-
                  The role description.
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
                description: |-
                  The resource options for the role. Available resource options are
                  `immutable`.
            additionalProperties: false
          description: |-
            A list of `role` objects containing `domain_id`, `id`, `links`,
            and `name` attributes.
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    Os_TrustTrustsPost:
      type: object
      description: A trust object
      properties:
        trust:
          type: object
          properties:
            trustor_user_id:
              type: string
              description: Represents the user who created the trust, and who's authorization
                is being delegated.
            trustee_user_id:
              type: string
              description: Represents the user who is capable of consuming the trust.
            impersonation:
              type: boolean
              description: If set to true, then the user attribute of tokens generated
                based on the trust will represent that of the trustor rather than
                the trustee, thus allowing the trustee to impersonate the trustor.
                If impersonation if set to false, then the token's user attribute
                will represent that of the trustee.
            project_id:
              type:
                - string
                - 'null'
              format: uuid
              description: Identifies the project upon which the trustor is delegating
                authorization.
            remaining_uses:
              type:
                - integer
                - 'null'
              minimum: 1
              description: Specifies how many times the trust can be used to obtain
                a token. This value is decreased each time a token is issued through
                the trust. Once it reaches 0, no further tokens will be issued through
                the trust. The default value is null, meaning there is no limit on
                the number of tokens issued through the trust. If redelegation is
                enabled it must not be set.
            expires_at:
              type:
                - 'null'
                - string
              description: Specifies the expiration time of the trust. A trust may
                be revoked ahead of expiration. If the value represents a time in
                the past, the trust is deactivated. In the redelegation case it must
                not exceed the value of the corresponding expires_at field of the
                redelegated trust or it may be omitted, then the expires_at value
                is copied from the redelegated trust.
            allow_redelegation:
              type:
                - boolean
                - 'null'
              description: If set to true then a trust between a trustor and any third-party
                user may be issued by the trustee just like a regular trust. If set
                to false, stops further redelegation. False by default.
            redelegation_count:
              type:
                - integer
                - 'null'
              minimum: 0
              description: Specifies the maximum remaining depth of the redelegated
                trust chain. Each subsequent trust has this field decremented by 1
                automatically. The initial trustor issuing new trust that can be redelegated,
                must set allow_redelegation to true and may set redelegation_count
                to an integer value less than or equal to max_redelegation_count configuration
                parameter in order to limit the possible length of derived trust
                chains. The trust issued by the trustor using a project-scoped token
                (not redelegating), in which allow_redelegation is set to true (the
                new trust is redelegatable), will be populated with the value specified
                in the max_redelegation_count configuration parameter if redelegation_count
                is not set or set to null. If allow_redelegation is set to false then
                redelegation_count will be set to 0 in the trust. If the trust is
                being issued by the trustee of a redelegatable trust-scoped token
                (redelegation case) then redelegation_count should not be set, as
                it will automatically be set to the value in the redelegatable trust-scoped
                token decremented by 1. Note, if the resulting value is 0, this means
                that the new trust will not be redelegatable, regardless of the value
                of allow_redelegation.
            redelegated_trust_id:
              type:
                - string
                - 'null'
              description:
                - Returned with redelegated trust provides information about the predecessor
                  in the trust chain.
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                    description: The resource name.
                minProperties: 1
                maxProperties: 1
                additionalProperties: false
          additionalProperties: true
          required:
            - trustor_user_id
            - trustee_user_id
            - impersonation
      additionalProperties: false
      required:
        - trust
    Os_TrustTrustsPostResponse:
      type: object
      description: A trust object
      properties:
        trust:
          type: object
          description: A trust object.
          properties:
            deleted_at:
              type:
                - string
                - 'null'
            id:
              type: string
              readOnly: true
              description: The ID of the trust.
            links:
              type: object
              description: |-
                The links for the `user` resource.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              required:
                - self
              additionalProperties: false
              readOnly: true
            roles:
              type: array
              items:
                type: object
                properties:
                  description:
                    type:
                      - string
                      - 'null'
                    description: The resource description.
                  domain_id:
                    type:
                      - string
                      - 'null'
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: The ID of the domain.
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: |-
                      The ID of the domain.
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                    description: |-
                      The resource name.
                  options:
                    type: object
                    properties:
                      immutable:
                        type:
                          - boolean
                          - 'null'
                        enum:
                          - true
                          - false
                          - 
                    additionalProperties: false
                  links:
                    type: object
                    description: |-
                      The links for the `user` resource.
                    properties:
                      next:
                        type:
                          - string
                          - 'null'
                        format: uri
                      previous:
                        type:
                          - string
                          - 'null'
                        format: uri
                      self:
                        type: string
                        format: uri
                    required:
                      - self
                    additionalProperties: false
                    readOnly: true
                additionalProperties: false
            roles_links:
              type: object
              description: |-
                The links for the `user` resource.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              required:
                - self
              additionalProperties: false
              readOnly: true
            trustor_user_id:
              type: string
              description: Represents the user who created the trust, and who's authorization
                is being delegated.
            trustee_user_id:
              type: string
              description: Represents the user who is capable of consuming the trust.
            impersonation:
              type: boolean
              description: If set to true, then the user attribute of tokens generated
                based on the trust will represent that of the trustor rather than
                the trustee, thus allowing the trustee to impersonate the trustor.
                If impersonation if set to false, then the token's user attribute
                will represent that of the trustee.
            project_id:
              type:
                - string
                - 'null'
              format: uuid
              description: Identifies the project upon which the trustor is delegating
                authorization.
            remaining_uses:
              type:
                - integer
                - 'null'
              minimum: 1
              description: Specifies how many times the trust can be used to obtain
                a token. This value is decreased each time a token is issued through
                the trust. Once it reaches 0, no further tokens will be issued through
                the trust. The default value is null, meaning there is no limit on
                the number of tokens issued through the trust. If redelegation is
                enabled it must not be set.
            expires_at:
              type:
                - 'null'
                - string
              description: Specifies the expiration time of the trust. A trust may
                be revoked ahead of expiration. If the value represents a time in
                the past, the trust is deactivated. In the redelegation case it must
                not exceed the value of the corresponding expires_at field of the
                redelegated trust or it may be omitted, then the expires_at value
                is copied from the redelegated trust.
            allow_redelegation:
              type:
                - boolean
                - 'null'
              description: If set to true then a trust between a trustor and any third-party
                user may be issued by the trustee just like a regular trust. If set
                to false, stops further redelegation. False by default.
            redelegation_count:
              type:
                - integer
                - 'null'
              minimum: 0
              description: Specifies the maximum remaining depth of the redelegated
                trust chain. Each subsequent trust has this field decremented by 1
                automatically. The initial trustor issuing new trust that can be redelegated,
                must set allow_redelegation to true and may set redelegation_count
                to an integer value less than or equal to max_redelegation_count configuration
                parameter in order to limit the possible length of derived trust
                chains. The trust issued by the trustor using a project-scoped token
                (not redelegating), in which allow_redelegation is set to true (the
                new trust is redelegatable), will be populated with the value specified
                in the max_redelegation_count configuration parameter if redelegation_count
                is not set or set to null. If allow_redelegation is set to false then
                redelegation_count will be set to 0 in the trust. If the trust is
                being issued by the trustee of a redelegatable trust-scoped token
                (redelegation case) then redelegation_count should not be set, as
                it will automatically be set to the value in the redelegatable trust-scoped
                token decremented by 1. Note, if the resulting value is 0, this means
                that the new trust will not be redelegatable, regardless of the value
                of allow_redelegation.
            redelegated_trust_id:
              type:
                - string
                - 'null'
              description:
                - Returned with redelegated trust provides information about the predecessor
                  in the trust chain.
          additionalProperties: false
      additionalProperties: false
    Os_TrustTrustsGetResponse:
      type: object
      properties:
        trusts:
          type: array
          items:
            type: object
            description: A trust object.
            properties:
              deleted_at:
                type:
                  - string
                  - 'null'
              id:
                type: string
                readOnly: true
                description: The ID of the trust.
              links:
                type: object
                description: |-
                  The links for the `user` resource.
                properties:
                  next:
                    type:
                      - string
                      - 'null'
                    format: uri
                  previous:
                    type:
                      - string
                      - 'null'
                    format: uri
                  self:
                    type: string
                    format: uri
                required:
                  - self
                additionalProperties: false
                readOnly: true
              roles:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type:
                        - string
                        - 'null'
                      description: The resource description.
                    domain_id:
                      type:
                        - string
                        - 'null'
                      minLength: 1
                      maxLength: 64
                      pattern: ^[a-zA-Z0-9-]+$
                      description: The ID of the domain.
                    id:
                      type: string
                      minLength: 1
                      maxLength: 64
                      pattern: ^[a-zA-Z0-9-]+$
                      description: |-
                        The ID of the domain.
                    name:
                      type: string
                      minLength: 1
                      maxLength: 255
                      pattern: '[\S]+'
                      description: |-
                        The resource name.
                    options:
                      type: object
                      properties:
                        immutable:
                          type:
                            - boolean
                            - 'null'
                          enum:
                            - true
                            - false
                            - 
                      additionalProperties: false
                    links:
                      type: object
                      description: |-
                        The links for the `user` resource.
                      properties:
                        next:
                          type:
                            - string
                            - 'null'
                          format: uri
                        previous:
                          type:
                            - string
                            - 'null'
                          format: uri
                        self:
                          type: string
                          format: uri
                      required:
                        - self
                      additionalProperties: false
                      readOnly: true
                  additionalProperties: false
              roles_links:
                type: object
                description: |-
                  The links for the `user` resource.
                properties:
                  next:
                    type:
                      - string
                      - 'null'
                    format: uri
                  previous:
                    type:
                      - string
                      - 'null'
                    format: uri
                  self:
                    type: string
                    format: uri
                required:
                  - self
                additionalProperties: false
                readOnly: true
              trustor_user_id:
                type: string
                description: Represents the user who created the trust, and who's
                  authorization is being delegated.
              trustee_user_id:
                type: string
                description: Represents the user who is capable of consuming the trust.
              impersonation:
                type: boolean
                description: If set to true, then the user attribute of tokens generated
                  based on the trust will represent that of the trustor rather than
                  the trustee, thus allowing the trustee to impersonate the trustor.
                  If impersonation if set to false, then the token's user attribute
                  will represent that of the trustee.
              project_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: Identifies the project upon which the trustor is delegating
                  authorization.
              remaining_uses:
                type:
                  - integer
                  - 'null'
                minimum: 1
                description: Specifies how many times the trust can be used to obtain
                  a token. This value is decreased each time a token is issued through
                  the trust. Once it reaches 0, no further tokens will be issued through
                  the trust. The default value is null, meaning there is no limit
                  on the number of tokens issued through the trust. If redelegation
                  is enabled it must not be set.
              expires_at:
                type:
                  - 'null'
                  - string
                description: Specifies the expiration time of the trust. A trust may
                  be revoked ahead of expiration. If the value represents a time in
                  the past, the trust is deactivated. In the redelegation case it
                  must not exceed the value of the corresponding expires_at field
                  of the redelegated trust or it may be omitted, then the expires_at
                  value is copied from the redelegated trust.
              allow_redelegation:
                type:
                  - boolean
                  - 'null'
                description: If set to true then a trust between a trustor and any
                  third-party user may be issued by the trustee just like a regular
                  trust. If set to false, stops further redelegation. False by default.
              redelegation_count:
                type:
                  - integer
                  - 'null'
                minimum: 0
                description: Specifies the maximum remaining depth of the redelegated
                  trust chain. Each subsequent trust has this field decremented by
                  1 automatically. The initial trustor issuing new trust that can
                  be redelegated, must set allow_redelegation to true and may set
                  redelegation_count to an integer value less than or equal to max_redelegation_count
                  configuration parameter in order to limit the possible length of
                  derived trust chains. The trust issued by the trustor using a
                  project-scoped token (not redelegating), in which allow_redelegation
                  is set to true (the new trust is redelegatable), will be populated
                  with the value specified in the max_redelegation_count configuration
                  parameter if redelegation_count is not set or set to null. If allow_redelegation
                  is set to false then redelegation_count will be set to 0 in the
                  trust. If the trust is being issued by the trustee of a redelegatable
                  trust-scoped token (redelegation case) then redelegation_count should
                  not be set, as it will automatically be set to the value in the
                  redelegatable trust-scoped token decremented by 1. Note, if the
                  resulting value is 0, this means that the new trust will not be
                  redelegatable, regardless of the value of allow_redelegation.
              redelegated_trust_id:
                type:
                  - string
                  - 'null'
                description:
                  - Returned with redelegated trust provides information about the
                    predecessor in the trust chain.
            additionalProperties: false
          description: A list of trust objects.
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
        truncated:
          type: boolean
          description: Flag indicating that the amount of entities exceeds global
            response limit
      additionalProperties: false
    Os_TrustTrustGetResponse:
      type: object
      description: A trust object
      properties:
        trust:
          type: object
          description: A trust object.
          properties:
            deleted_at:
              type:
                - string
                - 'null'
            id:
              type: string
              readOnly: true
              description: The ID of the trust.
            links:
              type: object
              description: |-
                The links for the `user` resource.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              required:
                - self
              additionalProperties: false
              readOnly: true
            roles:
              type: array
              items:
                type: object
                properties:
                  description:
                    type:
                      - string
                      - 'null'
                    description: The resource description.
                  domain_id:
                    type:
                      - string
                      - 'null'
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: The ID of the domain.
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: |-
                      The ID of the domain.
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                    description: |-
                      The resource name.
                  options:
                    type: object
                    properties:
                      immutable:
                        type:
                          - boolean
                          - 'null'
                        enum:
                          - true
                          - false
                          - 
                    additionalProperties: false
                  links:
                    type: object
                    description: |-
                      The links for the `user` resource.
                    properties:
                      next:
                        type:
                          - string
                          - 'null'
                        format: uri
                      previous:
                        type:
                          - string
                          - 'null'
                        format: uri
                      self:
                        type: string
                        format: uri
                    required:
                      - self
                    additionalProperties: false
                    readOnly: true
                additionalProperties: false
            roles_links:
              type: object
              description: |-
                The links for the `user` resource.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              required:
                - self
              additionalProperties: false
              readOnly: true
            trustor_user_id:
              type: string
              description: Represents the user who created the trust, and who's authorization
                is being delegated.
            trustee_user_id:
              type: string
              description: Represents the user who is capable of consuming the trust.
            impersonation:
              type: boolean
              description: If set to true, then the user attribute of tokens generated
                based on the trust will represent that of the trustor rather than
                the trustee, thus allowing the trustee to impersonate the trustor.
                If impersonation if set to false, then the token's user attribute
                will represent that of the trustee.
            project_id:
              type:
                - string
                - 'null'
              format: uuid
              description: Identifies the project upon which the trustor is delegating
                authorization.
            remaining_uses:
              type:
                - integer
                - 'null'
              minimum: 1
              description: Specifies how many times the trust can be used to obtain
                a token. This value is decreased each time a token is issued through
                the trust. Once it reaches 0, no further tokens will be issued through
                the trust. The default value is null, meaning there is no limit on
                the number of tokens issued through the trust. If redelegation is
                enabled it must not be set.
            expires_at:
              type:
                - 'null'
                - string
              description: Specifies the expiration time of the trust. A trust may
                be revoked ahead of expiration. If the value represents a time in
                the past, the trust is deactivated. In the redelegation case it must
                not exceed the value of the corresponding expires_at field of the
                redelegated trust or it may be omitted, then the expires_at value
                is copied from the redelegated trust.
            allow_redelegation:
              type:
                - boolean
                - 'null'
              description: If set to true then a trust between a trustor and any third-party
                user may be issued by the trustee just like a regular trust. If set
                to false, stops further redelegation. False by default.
            redelegation_count:
              type:
                - integer
                - 'null'
              minimum: 0
              description: Specifies the maximum remaining depth of the redelegated
                trust chain. Each subsequent trust has this field decremented by 1
                automatically. The initial trustor issuing new trust that can be redelegated,
                must set allow_redelegation to true and may set redelegation_count
                to an integer value less than or equal to max_redelegation_count configuration
                parameter in order to limit the possible length of derived trust
                chains. The trust issued by the trustor using a project-scoped token
                (not redelegating), in which allow_redelegation is set to true (the
                new trust is redelegatable), will be populated with the value specified
                in the max_redelegation_count configuration parameter if redelegation_count
                is not set or set to null. If allow_redelegation is set to false then
                redelegation_count will be set to 0 in the trust. If the trust is
                being issued by the trustee of a redelegatable trust-scoped token
                (redelegation case) then redelegation_count should not be set, as
                it will automatically be set to the value in the redelegatable trust-scoped
                token decremented by 1. Note, if the resulting value is 0, this means
                that the new trust will not be redelegatable, regardless of the value
                of allow_redelegation.
            redelegated_trust_id:
              type:
                - string
                - 'null'
              description:
                - Returned with redelegated trust provides information about the predecessor
                  in the trust chain.
          additionalProperties: false
      additionalProperties: false
    Os_TrustTrustsRolesGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id/roles:get operation
    Os_TrustTrustsRoleGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id/roles/role_id:get operation
    UsersPost:
      type: object
      properties:
        user:
          type: object
          description: |-
            A `user` object
          properties:
            password:
              type:
                - string
                - 'null'
              description: |-
                The password for the user.
            id:
              type: string
              description: The user ID.
              readOnly: true
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the default project for the user.
                A user’s default project must not be a domain. Setting this
                attribute does not grant any actual authorization on the project,
                and is merely provided for convenience. Therefore, the referenced
                project does not need to exist within the user domain. (Since v3.1)
                If the user does not have authorization to their default project,
                the default project is ignored at token creation. (Since v3.1)
                Additionally, if your default project is not valid, a token is
                issued without an explicit scope of authorization.
            description:
              type:
                - string
                - 'null'
              description: The resource description.
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain of the user. If the domain ID is not
                provided in the request, the Identity service will attempt to
                pull the domain ID from the token used in the request. Note that
                this requires the use of a domain-scoped token.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
              description: |-
                List of federated objects associated with a user. Each object in the list
                contains the `idp_id` and `protocols`. `protocols` is a list of
                objects, each of which contains `protocol_id` and `unique_id` of
                the protocol and user respectively. For example:

                ```
                "federated": [
                  {
                    "idp_id": "efbab5a6acad4d108fec6c63d9609d83",
                    "protocols": [
                      {"protocol_id": mapped, "unique_id": "test@example.com"}
                    ]
                  }
                ]

                ```
            links:
              type: object
              description: Links for the collection of resources.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              additionalProperties: false
              required:
                - self
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The user name. Must be unique within the owning domain.
            password_expires_at:
              type:
                - string
                - 'null'
              format: date-time
              description: The date and time when the password expires. The time zone
                is UTC. This is a response object attribute; not valid for requests.
                A null value indicates that the password never expires.
              readOnly: true
            options:
              type: object
              description: |-
                The resource options for the user. Available resource options are
                `ignore_change_password_upon_first_use`, `ignore_password_expiry`,
                `ignore_lockout_failure_attempts`, `lock_password`,
                `multi_factor_auth_enabled`, and `multi_factor_auth_rules`
                `ignore_user_inactivity`.
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          additionalProperties: true
          required:
            - name
      additionalProperties: false
      required:
        - user
    UsersPostRequest:
      oneOf:
        - $ref: '#/components/schemas/UsersPost'
        - $ref: '#/components/schemas/UsersPost'
      x-openstack:
        discriminator: microversion
    UsersPostResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            password:
              type:
                - string
                - 'null'
            id:
              type: string
              description: |-
                The user ID.
              readOnly: true
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the default project for the user.
            description:
              type:
                - string
                - 'null'
              description: The resource description.
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
              description: |-
                List of federated objects associated with a user. Each object in the list
                contains the `idp_id` and `protocols`. `protocols` is a list of
                objects, each of which contains `protocol_id` and `unique_id` of
                the protocol and user respectively. For example:

                ```
                "federated": [
                  {
                    "idp_id": "efbab5a6acad4d108fec6c63d9609d83",
                    "protocols": [
                      {"protocol_id": "mapped", "unique_id": "test@example.com"}
                    ]
                  }
                ]

                ```
            links:
              type: object
              description: |-
                The links for the `user` resource.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              required:
                - self
              additionalProperties: false
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The user name. Must be unique within the owning domain.
            password_expires_at:
              type:
                - string
                - 'null'
              format: date-time
              description: |-
                The date and time when the password expires. The time zone
                is UTC.

                This is a response object attribute; not valid for requests.
                A `null` value indicates that the password never expires.

                **New in version 3.7**
              readOnly: true
            options:
              type: object
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the user. Available resource options are
                `ignore_change_password_upon_first_use`, `ignore_password_expiry`,
                `ignore_lockout_failure_attempts`, `lock_password`,
                `multi_factor_auth_enabled`, and `multi_factor_auth_rules`
                `ignore_user_inactivity`.
          required:
            - name
          additionalProperties: true
          description: |-
            A `user` object
      additionalProperties: false
      required:
        - user
    UsersGetResponse:
      type: object
      properties:
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  The user ID.
                readOnly: true
              default_project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the default project for the user.
              description:
                type:
                  - string
                  - 'null'
                description: The resource description.
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: |-
                  The ID of the domain.
              enabled:
                type:
                  - boolean
                  - string
                  - 'null'
                enum:
                  - true
                  - 'True'
                  - 'TRUE'
                  - 'true'
                  - false
                  - 'False'
                  - 'FALSE'
                  - 'false'
                  - ''
                  - '1'
                  - '0'
                  - y
                  - Y
                  - n
                  - N
                  - on
                  - ON
                  - off
                  - OFF
                  - yes
                  - no
                description: |-
                  If the user is enabled, this value is `true`.
                  If the user is disabled, this value is `false`.
              federated:
                type: array
                items:
                  type: object
                  properties:
                    idp_id:
                      type: string
                    protocols:
                      type: array
                      items:
                        type: object
                        properties:
                          protocol_id:
                            type: string
                          unique_id:
                            type: string
                        required:
                          - protocol_id
                          - unique_id
                      minItems: 1
                  required:
                    - idp_id
                    - protocols
                description: |-
                  List of federated objects associated with a user. Each object in the list
                  contains the `idp_id` and `protocols`. `protocols` is a list of
                  objects, each of which contains `protocol_id` and `unique_id` of
                  the protocol and user respectively. For example:

                  ```
                  "federated": [
                    {
                      "idp_id": "efbab5a6acad4d108fec6c63d9609d83",
                      "protocols": [
                        {"protocol_id": "mapped", "unique_id": "test@example.com"}
                      ]
                    }
                  ]

                  ```
              links:
                type: object
                description: |-
                  The links for the `user` resource.
                properties:
                  next:
                    type:
                      - string
                      - 'null'
                    format: uri
                  previous:
                    type:
                      - string
                      - 'null'
                    format: uri
                  self:
                    type: string
                    format: uri
                required:
                  - self
                additionalProperties: false
                readOnly: true
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
                description: |-
                  The user name. Must be unique within the owning domain.
              password_expires_at:
                type:
                  - string
                  - 'null'
                format: date-time
                description: |-
                  The date and time when the password expires. The time zone
                  is UTC.

                  This is a response object attribute; not valid for requests.
                  A `null` value indicates that the password never expires.

                  **New in version 3.7**
                readOnly: true
              options:
                type: object
                properties:
                  ignore_change_password_upon_first_use:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_password_expiry:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_lockout_failure_attempts:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  lock_password:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_user_inactivity:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  multi_factor_auth_rules:
                    type:
                      - array
                      - 'null'
                    items:
                      type: array
                      items:
                        type: string
                      minItems: 1
                      uniqueItems: true
                    uniqueItems: true
                  multi_factor_auth_enabled:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
                description: |-
                  The resource options for the user. Available resource options are
                  `ignore_change_password_upon_first_use`, `ignore_password_expiry`,
                  `ignore_lockout_failure_attempts`, `lock_password`,
                  `multi_factor_auth_enabled`, and `multi_factor_auth_rules`
                  `ignore_user_inactivity`.
            description: |-
              A `user` object
          description: |-
            A list of `user` objects
    UserGetResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              description: |-
                The user ID.
              readOnly: true
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the default project for the user.
            description:
              type:
                - string
                - 'null'
              description: The resource description.
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
              description: |-
                List of federated objects associated with a user. Each object in the list
                contains the `idp_id` and `protocols`. `protocols` is a list of
                objects, each of which contains `protocol_id` and `unique_id` of
                the protocol and user respectively. For example:

                ```
                "federated": [
                  {
                    "idp_id": "efbab5a6acad4d108fec6c63d9609d83",
                    "protocols": [
                      {"protocol_id": "mapped", "unique_id": "test@example.com"}
                    ]
                  }
                ]

                ```
            links:
              type: object
              description: |-
                The links for the `user` resource.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              required:
                - self
              additionalProperties: false
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The user name. Must be unique within the owning domain.
            password_expires_at:
              type:
                - string
                - 'null'
              format: date-time
              description: |-
                The date and time when the password expires. The time zone
                is UTC.

                This is a response object attribute; not valid for requests.
                A `null` value indicates that the password never expires.

                **New in version 3.7**
              readOnly: true
            options:
              type: object
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the user. Available resource options are
                `ignore_change_password_upon_first_use`, `ignore_password_expiry`,
                `ignore_lockout_failure_attempts`, `lock_password`,
                `multi_factor_auth_enabled`, and `multi_factor_auth_rules`
                `ignore_user_inactivity`.
          description: |-
            A `user` object
    UserPatch:
      type: object
      properties:
        user:
          type: object
          description: |-
            A `user` object
          properties:
            password:
              type:
                - string
                - 'null'
              description: |-
                The new password for the user.
            id:
              type: string
              description: The user ID.
              readOnly: true
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The new ID of the default project for the user.
            description:
              type:
                - string
                - 'null'
              description: The resource description.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                Enables or disables the user. An enabled user
                can authenticate and receive authorization. A disabled user
                cannot authenticate or receive authorization. Additionally, all
                tokens that the user holds become no longer valid. If you reenable
                this user, pre-existing tokens do not become valid. To enable the
                user, set to `true`. To disable the user, set to `false`.
                Default is `true`.
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
              description: |-
                List of federated objects associated with a user. Each object in the list
                contains the `idp_id` and `protocols`. `protocols` is a list of
                objects, each of which contains `protocol_id` and `unique_id` of
                the protocol and user respectively. For example:

                ```
                "federated": [
                  {
                    "idp_id": "efbab5a6acad4d108fec6c63d9609d83",
                    "protocols": [
                      {"protocol_id": mapped, "unique_id": "test@example.com"}
                    ]
                  }
                ]

                ```
            links:
              type: object
              description: Links for the collection of resources.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              additionalProperties: false
              required:
                - self
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The new name for the user. Must be unique within the owning domain.
            password_expires_at:
              type:
                - string
                - 'null'
              format: date-time
              description: The date and time when the password expires. The time zone
                is UTC. This is a response object attribute; not valid for requests.
                A null value indicates that the password never expires.
              readOnly: true
            options:
              type: object
              description: |-
                The resource options for the user. Available resource options are
                `ignore_change_password_upon_first_use`, `ignore_password_expiry`,
                `ignore_lockout_failure_attempts`, `lock_password`,
                `multi_factor_auth_enabled`, and `multi_factor_auth_rules`
                `ignore_user_inactivity`.
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
          additionalProperties: true
          minProperties: 1
      additionalProperties: false
      required:
        - user
    UserPatchRequest:
      oneOf:
        - $ref: '#/components/schemas/UserPatch'
        - $ref: '#/components/schemas/UserPatch'
      x-openstack:
        discriminator: microversion
    UserPatchResponse:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              description: |-
                The user ID.
              readOnly: true
            default_project_id:
              type:
                - string
                - 'null'
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the default project for the user.
            description:
              type:
                - string
                - 'null'
              description: The resource description.
            domain_id:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: |-
                The ID of the domain.
            enabled:
              type:
                - boolean
                - string
                - 'null'
              enum:
                - true
                - 'True'
                - 'TRUE'
                - 'true'
                - false
                - 'False'
                - 'FALSE'
                - 'false'
                - ''
                - '1'
                - '0'
                - y
                - Y
                - n
                - N
                - on
                - ON
                - off
                - OFF
                - yes
                - no
              description: |-
                If the user is enabled, this value is `true`.
                If the user is disabled, this value is `false`.
            federated:
              type: array
              items:
                type: object
                properties:
                  idp_id:
                    type: string
                  protocols:
                    type: array
                    items:
                      type: object
                      properties:
                        protocol_id:
                          type: string
                        unique_id:
                          type: string
                      required:
                        - protocol_id
                        - unique_id
                    minItems: 1
                required:
                  - idp_id
                  - protocols
              description: |-
                List of federated objects associated with a user. Each object in the list
                contains the `idp_id` and `protocols`. `protocols` is a list of
                objects, each of which contains `protocol_id` and `unique_id` of
                the protocol and user respectively. For example:

                ```
                "federated": [
                  {
                    "idp_id": "efbab5a6acad4d108fec6c63d9609d83",
                    "protocols": [
                      {"protocol_id": "mapped", "unique_id": "test@example.com"}
                    ]
                  }
                ]

                ```
            links:
              type: object
              description: |-
                The links for the `user` resource.
              properties:
                next:
                  type:
                    - string
                    - 'null'
                  format: uri
                previous:
                  type:
                    - string
                    - 'null'
                  format: uri
                self:
                  type: string
                  format: uri
              required:
                - self
              additionalProperties: false
              readOnly: true
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The user name. Must be unique within the owning domain.
            password_expires_at:
              type:
                - string
                - 'null'
              format: date-time
              description: |-
                The date and time when the password expires. The time zone
                is UTC.

                This is a response object attribute; not valid for requests.
                A `null` value indicates that the password never expires.

                **New in version 3.7**
              readOnly: true
            options:
              type: object
              properties:
                ignore_change_password_upon_first_use:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_password_expiry:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_lockout_failure_attempts:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                lock_password:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                ignore_user_inactivity:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
                multi_factor_auth_rules:
                  type:
                    - array
                    - 'null'
                  items:
                    type: array
                    items:
                      type: string
                    minItems: 1
                    uniqueItems: true
                  uniqueItems: true
                multi_factor_auth_enabled:
                  type:
                    - boolean
                    - 'null'
                  enum:
                    - true
                    - false
                    - 
              additionalProperties: false
              description: |-
                The resource options for the user. Available resource options are
                `ignore_change_password_upon_first_use`, `ignore_password_expiry`,
                `ignore_lockout_failure_attempts`, `lock_password`,
                `multi_factor_auth_enabled`, and `multi_factor_auth_rules`
                `ignore_user_inactivity`.
          description: |-
            A `user` object
    UsersPasswordPostRequest:
      type: object
      properties:
        user:
          type: object
          properties:
            original_password:
              type: string
              format: password
              description: |-
                The original password for the user.
            password:
              type: string
              format: password
              description: |-
                The new password for the user.
          required:
            - original_password
            - password
          additionalProperties: false
          description: |-
            A `user` object
    UsersGroupsGetResponse:
      type: object
      properties:
        groups:
          type: array
          description: |-
            A list of `group` objects
          items:
            type: object
            properties:
              description:
                type: string
                description: |-
                  The description of the group.
              domain_id:
                type: string
                format: uuid
                description: |-
                  The ID of the domain of the group.
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the group.
              name:
                type: string
                description: |-
                  The name of the group.
              membership_expires_at:
                type: string
                format: date-time
                description: |-
                  The date and time when the group membership expires.
                  A `null` value indicates that the membership never expires.

                  **New in version 3.14**
                x-openstack:
                  min-ver: '3.14'
    UsersProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          description: A list of project objects
          items:
            type: object
            properties:
              description:
                type: string
                description: The description of the project.
              domain_id:
                type: string
                format: uuid
                description: The ID of the domain of the project.
              id:
                type: string
                format: uuid
                description: The ID of the project.
              parent_id:
                type: string
                format: uuid
                description: The parent id of the project.
              name:
                type: string
                description: The name of the project.
    UsersCredentialsOs_Ec2PostRequest:
      type: object
      description: Request of the users/user_id/credentials/OS-EC2:post operation
      x-openstack:
        action-name: POST
    UsersCredentialsOs_Ec2PostResponse:
      type: object
      description: Response of the users/user_id/credentials/OS-EC2:post operation
    UsersCredentialsOs_Ec2GetResponse:
      type: object
      description: Response of the users/user_id/credentials/OS-EC2:get operation
    UsersOs_Oauth1Access_TokensGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens:get operation
    UsersOs_Oauth1Access_TokenGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id:get
        operation
    UsersOs_Oauth1Access_TokensRolesGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:get
        operation
    UsersOs_Oauth1Access_TokensRoleGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:get
        operation
    UsersApplication_CredentialsPost:
      type: object
      description: An application credential object.
      properties:
        application_credential:
          type: object
          description: |-
            An application credential object.
          properties:
            id:
              type: string
              description: The UUID for the credential.
            secret:
              type:
                - string
                - 'null'
              description: |-
                The secret that the application credential will be created with. If not
                provided, one will be generated.
            name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: '[\S]+'
              description: |-
                The name of the application credential. Must be unique to a user.
            description:
              type:
                - string
                - 'null'
              description: |-
                A description of the application credential’s purpose.
            expires_at:
              type:
                - string
                - 'null'
              description: |-
                An optional expiry time for the application credential. If unset, the
                application credential does not expire.
            project_id:
              type: string
              description: The ID of the project the application credential was created
                for and that authentication requests using this application credential
                will be scoped to.
            access_rules:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  path:
                    type: string
                    minLength: 0
                    maxLength: 225
                    pattern: ^/\.*
                    description: The API path that the application credential is permitted
                      to access.
                  service:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                    description: The service type identifier for the service that
                      the application credential is permitted to access. Must be a
                      service type that is listed in the service catalog and not a
                      code name for a service.
                  method:
                    type: string
                    enum:
                      - DELETE
                      - GET
                      - HEAD
                      - PATCH
                      - POST
                      - PUT
                    description: The request method that the application credential
                      is permitted to use for a given API endpoint.
              description: |-
                A list of `access_rules` objects
            unrestricted:
              type:
                - boolean
                - 'null'
              description: |-
                An optional flag to restrict whether the application credential may be
                used for the creation or destruction of other application credentials or
                trusts. Defaults to false.
            system:
              type:
                - string
                - 'null'
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    minLength: 1
                    maxLength: 64
                    pattern: ^[a-zA-Z0-9-]+$
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                    description: The resource name.
                minProperties: 1
                maxProperties: 1
                additionalProperties: false
              description: |-
                An optional list of role objects, identified by ID or name. The list
                may only contain roles that the user has assigned on the project.
                If not provided, the roles assigned to the application credential will
                be the same as the roles in the current token.
          additionalProperties: false
          required:
            - name
      additionalProperties: false
      required:
        - application_credential
    UsersApplication_CredentialsPostResponse:
      type: object
      properties:
        application_credential:
          type: object
          properties:
            secret:
              type: string
              description: The secret for the application credential, either generated
                by the server or provided by the user. This is only ever shown once
                in the response to a create request. It is not stored nor ever shown
                again. If the secret is lost, a new application credential must be
                created.
            id:
              type: string
              format: uuid
              readOnly: true
              description: The ID of the application credential.
            project_id:
              type: string
              format: uuid
              description: The ID of the project the application credential was created
                for and that authentication requests using this application credential
                will be scoped to.
            name:
              type: string
              description: The name of the application credential. Must be unique
                to a user.
            description:
              type:
                - string
                - 'null'
              description: A description of the application credential's purpose.
            expires_at:
              type:
                - 'null'
                - string
            roles:
              type: array
              description: An optional list of role objects, identified by ID or name.
                The list may only contain roles that the user has assigned on the
                project. If not provided, the roles assigned to the application credential
                will be the same as the roles in the current token.
              items:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
            unrestricted:
              type: boolean
              description: An optional flag to restrict whether the application credential
                may be used for the creation or destruction of other application credentials
                or trusts. Defaults to false.
            access_rules:
              type: array
              description: A list of access_rules objects
              items:
                type: object
                properties:
                  id:
                    type: string
                  path:
                    type: string
                  method:
                    type: string
                  service:
                    type: string
      additionalProperties: false
      required:
        - application_credential
    UsersApplication_CredentialsGetResponse:
      type: object
      properties:
        application_credentials:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                readOnly: true
                description: The ID of the application credential.
              project_id:
                type: string
                format: uuid
                description: The ID of the project the application credential was
                  created for and that authentication requests using this application
                  credential will be scoped to.
              name:
                type: string
                description: The name of the application credential. Must be unique
                  to a user.
              description:
                type:
                  - string
                  - 'null'
                description: A description of the application credential's purpose.
              expires_at:
                type:
                  - 'null'
                  - string
              roles:
                type: array
                description: An optional list of role objects, identified by ID or
                  name. The list may only contain roles that the user has assigned
                  on the project. If not provided, the roles assigned to the application
                  credential will be the same as the roles in the current token.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    id:
                      type: string
              unrestricted:
                type: boolean
                description: An optional flag to restrict whether the application
                  credential may be used for the creation or destruction of other
                  application credentials or trusts. Defaults to false.
              access_rules:
                type: array
                description: A list of access_rules objects
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    path:
                      type: string
                    method:
                      type: string
                    service:
                      type: string
      required:
        - application_credentials
    UsersApplication_CredentialGet:
      type: object
      properties:
        id:
          type: string
          description: The UUID of the application credential
      additionalProperties: false
    UsersApplication_CredentialGetResponse:
      type: object
      properties:
        application_credential:
          type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
              description: The ID of the application credential.
            project_id:
              type: string
              format: uuid
              description: The ID of the project the application credential was created
                for and that authentication requests using this application credential
                will be scoped to.
            name:
              type: string
              description: The name of the application credential. Must be unique
                to a user.
            description:
              type:
                - string
                - 'null'
              description: A description of the application credential's purpose.
            expires_at:
              type:
                - 'null'
                - string
            roles:
              type: array
              description: An optional list of role objects, identified by ID or name.
                The list may only contain roles that the user has assigned on the
                project. If not provided, the roles assigned to the application credential
                will be the same as the roles in the current token.
              items:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
            unrestricted:
              type: boolean
              description: An optional flag to restrict whether the application credential
                may be used for the creation or destruction of other application credentials
                or trusts. Defaults to false.
            access_rules:
              type: array
              description: A list of access_rules objects
              items:
                type: object
                properties:
                  id:
                    type: string
                  path:
                    type: string
                  method:
                    type: string
                  service:
                    type: string
      additionalProperties: false
      required:
        - application_credential
    UsersAccess_RulesGetResponse:
      type: object
      properties:
        access_rules:
          type: array
          items:
            type: object
            description: An access rule object.
            properties:
              id:
                type: string
                readOnly: true
                description: The UUID of the access rule
              links:
                type: object
                description: |-
                  The link to the resources in question.
                properties:
                  self:
                    type: string
                    format: uri
                additionalProperties: false
                readOnly: true
              path:
                type: string
                minLength: 0
                maxLength: 225
                pattern: ^/\.*
                description: The API path that the application credential is permitted
                  to access.
              service:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
                description: The service type identifier for the service that the
                  application credential is permitted to access. Must be a service
                  type that is listed in the service catalog and not a code name for
                  a service.
              method:
                type: string
                enum:
                  - DELETE
                  - GET
                  - HEAD
                  - PATCH
                  - POST
                  - PUT
                description: The request method that the application credential is
                  permitted to use for a given API endpoint.
            additionalProperties: false
          description: A list of access_rule objects.
        links:
          type: object
          description: |-
            The links for the `user` resource.
          properties:
            next:
              type:
                - string
                - 'null'
              format: uri
            previous:
              type:
                - string
                - 'null'
              format: uri
            self:
              type: string
              format: uri
          required:
            - self
          additionalProperties: false
          readOnly: true
      additionalProperties: false
    UsersAccess_RuleGetResponse:
      type: object
      description: An access rule object.
      properties:
        access_rule:
          type: object
          description: An access rule object.
          properties:
            id:
              type: string
              readOnly: true
              description: The UUID of the access rule
            links:
              type: object
              description: |-
                The link to the resources in question.
              properties:
                self:
                  type: string
                  format: uri
              additionalProperties: false
              readOnly: true
            path:
              type: string
              minLength: 0
              maxLength: 225
              pattern: ^/\.*
              description: The API path that the application credential is permitted
                to access.
            service:
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9-]+$
              description: The service type identifier for the service that the application
                credential is permitted to access. Must be a service type that is
                listed in the service catalog and not a code name for a service.
            method:
              type: string
              enum:
                - DELETE
                - GET
                - HEAD
                - PATCH
                - POST
                - PUT
              description: The request method that the application credential is permitted
                to use for a given API endpoint.
          additionalProperties: false
      additionalProperties: false
  parameters:
    X-Auth-Token:
      in: header
      name: X-Auth-Token
      description: A valid authentication token
      schema:
        type: string
        format: secret
    X-Subject-Token:
      in: header
      name: X-Subject-Token
      description: |-
        The authentication token. An authentication
        response returns the token ID in this header rather than in the
        response body.
      schema:
        type: string
        format: secret
      required: true
    auth_OS_FEDERATION_websso_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/auth/OS-FEDERATION/websso/{protocol_id} API
      schema:
        type: string
      required: true
    auth_OS_FEDERATION_identity_providers_protocols_websso_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso API
      schema:
        type: string
      required: true
    auth_OS_FEDERATION_identity_providers_protocols_websso_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso API
      schema:
        type: string
      required: true
    credentials_user_id:
      in: query
      name: user_id
      description: Filters the response by a user ID.
      schema:
        type: string
        format: uuid
        description: Filters the response by a user ID.
      x-openstack:
        resource_link: identity/v3/user.id
    credentials_type:
      in: query
      name: type
      description: The credential type, such as ec2 or cert. The implementation determines
        the list of supported types.
      schema:
        type: string
        description: The credential type, such as ec2 or cert. The implementation
          determines the list of supported types.
    credentials_credential_id:
      in: path
      name: credential_id
      description: |-
        credential_id parameter for /v3/credentials/{credential_id} API
      schema:
        type: string
      required: true
    domains_enabled:
      in: query
      name: enabled
      description: If set to true, then only domains that are enabled will be returned,
        if set to false only that are disabled will be returned. Any value other than
        0, including no value, will be interpreted as true.
      schema:
        type:
          - boolean
          - string
          - 'null'
        description: If set to true, then only domains that are enabled will be returned,
          if set to false only that are disabled will be returned. Any value other
          than 0, including no value, will be interpreted as true.
        enum:
          - true
          - 'True'
          - 'TRUE'
          - 'true'
          - false
          - 'False'
          - 'FALSE'
          - 'false'
          - ''
          - '1'
          - '0'
          - y
          - Y
          - n
          - N
          - on
          - ON
          - off
          - OFF
          - yes
          - no
    domains_name:
      in: query
      name: name
      description: The resource name.
      schema:
        type: string
        description: The resource name.
        pattern: '[\S]+'
        maxLength: 64
        minLength: 1
    domains_marker:
      in: query
      name: marker
      description: ID of the last fetched entry
      schema:
        type: string
        description: ID of the last fetched entry
    domains_limit:
      in: query
      name: limit
      schema:
        type:
          - integer
          - string
    domains_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id} API
      schema:
        type: string
      required: true
    domains_config_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id}/config/{group}/{option} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    domains_config_group:
      in: path
      name: group
      description: |-
        group parameter for /v3/domains/{domain_id}/config/{group}/{option} API
      schema:
        type: string
      required: true
    domains_config_option:
      in: path
      name: option
      description: |-
        option parameter for /v3/domains/{domain_id}/config/{group}/{option} API
      schema:
        type: string
      required: true
    domains_config_default_group:
      in: path
      name: group
      description: |-
        group parameter for /v3/domains/config/{group}/{option}/default API
      schema:
        type: string
      required: true
    domains_config_default_option:
      in: path
      name: option
      description: |-
        option parameter for /v3/domains/config/{group}/{option}/default API
      schema:
        type: string
      required: true
    domains_users_roles_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    domains_users_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    domains_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_groups_roles_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    domains_groups_roles_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    endpoints_interface:
      in: query
      name: interface
      description: 'The interface type, which describes the visibility of the endpoint.
        Value is: -public. Visible by end users on a publicly available network interface.
        -internal. Visible by end users on an unmetered internal network interface.-admin.
        Visible by administrative users on a secure network interface.'
      schema:
        type: string
        description: 'The interface type, which describes the visibility of the endpoint.
          Value is: -public. Visible by end users on a publicly available network
          interface. -internal. Visible by end users on an unmetered internal network
          interface.-admin. Visible by administrative users on a secure network interface.'
        enum:
          - admin
          - internal
          - public
    endpoints_region_id:
      in: query
      name: region_id
      description: (Since v3.2) The ID of the region that contains the service endpoint.
      schema:
        type:
          - string
          - 'null'
        description: (Since v3.2) The ID of the region that contains the service endpoint.
        x-openstack:
          min-ver: 3.2
    endpoints_service_id:
      in: query
      name: service_id
      description: The UUID of the service to which the endpoint belongs
      schema:
        type: string
        description: The UUID of the service to which the endpoint belongs
    endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    endpoints_OS_ENDPOINT_POLICY_policy_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy API
      schema:
        type: string
      required: true
    groups_domain_id:
      in: query
      name: domain_id
      description: The ID of the domain.
      schema:
        type: string
        description: The ID of the domain.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
      x-openstack:
        resource_link: identity/v3/domain.id
    groups_name:
      in: query
      name: name
      description: The resource name.
      schema:
        type: string
        description: The resource name.
        pattern: '[\S]+'
        maxLength: 255
        minLength: 1
    groups_marker:
      in: query
      name: marker
      description: ID of the last fetched entry
      schema:
        type: string
        description: ID of the last fetched entry
    groups_limit:
      in: query
      name: limit
      schema:
        type:
          - integer
          - string
    groups_sort_key:
      in: query
      name: sort_key
      description: Sorts resources by attribute.
      schema:
        type: string
        description: Sorts resources by attribute.
    groups_sort_dir:
      in: query
      name: sort_dir
      description: Sort direction. A valid value is asc (ascending) or desc (descending).
      schema:
        type: string
        description: Sort direction. A valid value is asc (ascending) or desc (descending).
        enum:
          - asc
          - desc
    groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/groups/{group_id} API
      schema:
        type: string
      required: true
    groups_users_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/groups/{group_id}/users/{user_id} API
      schema:
        type: string
      required: true
    group_users_password_expires_at:
      in: query
      name: password_expires_at
      description: "Filter results based on which user passwords have expired. The
        query should include an operator and a timestamp with a colon (:) separating
        the two, for example: `password_expires_at={operator}:{timestamp}`.\nValid
        operators are: `lt`, `lte`, `gt`, `gte`, `eq`, and `neq`.\nValid timestamps
        are of the form: YYYY-MM-DDTHH:mm:ssZ."
      schema:
        type: string
        format: date-time
    groups_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/groups/{group_id}/users/{user_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    limits_service_id:
      in: query
      name: service_id
      description: Filters the response by a service ID.
      schema:
        type: string
        format: uuid
        description: Filters the response by a service ID.
    limits_region_id:
      in: query
      name: region_id
      description: The ID of the region.
      schema:
        type:
          - string
          - 'null'
        description: The ID of the region.
        maxLength: 255
        minLength: 1
    limits_resource_name:
      in: query
      name: resource_name
      description: The resource name.
      schema:
        type: string
        description: The resource name.
        pattern: '[\S]+'
        maxLength: 255
        minLength: 1
    limits_project_id:
      in: query
      name: project_id
      description: The ID of the project.
      schema:
        type: string
        description: The ID of the project.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
      x-openstack:
        resource_link: identity/v3/project.id
    limits_domain_id:
      in: query
      name: domain_id
      description: The ID of the domain.
      schema:
        type: string
        description: The ID of the domain.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
      x-openstack:
        resource_link: identity/v3/domain.id
    limits_limit_id:
      in: path
      name: limit_id
      description: |-
        limit_id parameter for /v3/limits/{limit_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_name:
      in: query
      name: name
      description: The name of the endpoint group.
      schema:
        type: string
        description: The name of the endpoint group.
        pattern: '[\S]+'
        maxLength: 255
        minLength: 1
    OS_EP_FILTER_endpoint_groups_endpoint_group_id:
      in: path
      name: endpoint_group_id
      description: |-
        endpoint_group_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoints_projects_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/OS-EP-FILTER/endpoints/{endpoint_id}/projects API
      schema:
        type: string
      required: true
    OS_EP_FILTER_projects_endpoints_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoints API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    OS_EP_FILTER_projects_endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_projects_endpoint_groups_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    OS_EP_FILTER_endpoint_groups_endpoints_endpoint_group_id:
      in: path
      name: endpoint_group_id
      description: |-
        endpoint_group_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_projects_endpoint_group_id:
      in: path
      name: endpoint_group_id
      description: |-
        endpoint_group_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    OS_FEDERATION_identity_providers_protocols_auth_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_protocols_auth_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_id:
      in: query
      name: id
      description: The identity provider ID
      schema:
        type: string
        description: The identity provider ID
    OS_FEDERATION_identity_providers_enabled:
      in: query
      name: enabled
      description: Whether the identity provider is enabled or not
      schema:
        type:
          - boolean
          - string
          - 'null'
        description: Whether the identity provider is enabled or not
        enum:
          - true
          - 'True'
          - 'TRUE'
          - 'true'
          - false
          - 'False'
          - 'FALSE'
          - 'false'
          - ''
          - '1'
          - '0'
          - y
          - Y
          - n
          - N
          - on
          - ON
          - off
          - OFF
          - yes
          - no
    OS_FEDERATION_identity_providers_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_protocols_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_protocols_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_mappings_mapping_id:
      in: path
      name: mapping_id
      description: |-
        mapping_id parameter for /v3/OS-FEDERATION/mappings/{mapping_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_service_providers_id:
      in: query
      name: id
      description: The service provider ID
      schema:
        type: string
        description: The service provider ID
    OS_FEDERATION_service_providers_enabled:
      in: query
      name: enabled
      description: Whether the service provider is enabled or not
      schema:
        type:
          - boolean
          - string
          - 'null'
        description: Whether the service provider is enabled or not
        enum:
          - true
          - 'True'
          - 'TRUE'
          - 'true'
          - false
          - 'False'
          - 'FALSE'
          - 'false'
          - ''
          - '1'
          - '0'
          - y
          - Y
          - n
          - N
          - on
          - ON
          - off
          - OFF
          - yes
          - no
    OS_FEDERATION_service_providers_service_provider_id:
      in: path
      name: service_provider_id
      description: |-
        service_provider_id parameter for /v3/OS-FEDERATION/service_providers/{service_provider_id} API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_groups_roles_inherited_to_projects_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    OS_INHERIT_domains_groups_roles_inherited_to_projects_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_groups_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_users_roles_inherited_to_projects_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/domain.id
    OS_INHERIT_domains_users_roles_inherited_to_projects_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    OS_INHERIT_domains_users_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_users_roles_inherited_to_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    OS_INHERIT_projects_users_roles_inherited_to_projects_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    OS_INHERIT_projects_users_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_groups_roles_inherited_to_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    OS_INHERIT_projects_groups_roles_inherited_to_projects_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_groups_roles_inherited_to_projects_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_OAUTH1_consumers_consumer_id:
      in: path
      name: consumer_id
      description: |-
        consumer_id parameter for /v3/OS-OAUTH1/consumers/{consumer_id} API
      schema:
        type: string
      required: true
    OS_OAUTH1_authorize_request_token_id:
      in: path
      name: request_token_id
      description: |-
        request_token_id parameter for /v3/OS-OAUTH1/authorize/{request_token_id} API
      schema:
        type: string
      required: true
    policies_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_endpoints_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_regions_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_regions_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_regions_region_id:
      in: path
      name: region_id
      description: |-
        region_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    projects_domain_id:
      in: query
      name: domain_id
      description: The ID of the domain.
      schema:
        type: string
        description: The ID of the domain.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
      x-openstack:
        resource_link: identity/v3/domain.id
    projects_enabled:
      in: query
      name: enabled
      schema:
        type:
          - boolean
          - string
          - 'null'
        enum:
          - true
          - 'True'
          - 'TRUE'
          - 'true'
          - false
          - 'False'
          - 'FALSE'
          - 'false'
          - ''
          - '1'
          - '0'
          - y
          - Y
          - n
          - N
          - on
          - ON
          - off
          - OFF
          - yes
          - no
    projects_name:
      in: query
      name: name
      description: The resource name.
      schema:
        type: string
        description: The resource name.
        pattern: '[\S]+'
        maxLength: 64
        minLength: 1
    projects_parent_id:
      in: query
      name: parent_id
      schema:
        type: string
        format: uuid
    projects_is_domain:
      in: query
      name: is_domain
      schema:
        type:
          - boolean
          - string
          - 'null'
        enum:
          - true
          - 'True'
          - 'TRUE'
          - 'true'
          - false
          - 'False'
          - 'FALSE'
          - 'false'
          - ''
          - '1'
          - '0'
          - y
          - Y
          - n
          - N
          - on
          - ON
          - off
          - OFF
          - yes
          - no
    projects_tags:
      in: query
      name: tags
      schema:
        type: string
        x-openstack:
          openapi:
            schema:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
            style: form
            explode: false
    projects_tags-any:
      in: query
      name: tags-any
      schema:
        type: string
        x-openstack:
          openapi:
            schema:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
            style: form
            explode: false
    projects_not-tags:
      in: query
      name: not-tags
      schema:
        type: string
        x-openstack:
          openapi:
            schema:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
            style: form
            explode: false
    projects_not-tags-any:
      in: query
      name: not-tags-any
      schema:
        type: string
        x-openstack:
          openapi:
            schema:
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^[^,/]*$
            style: form
            explode: false
    projects_marker:
      in: query
      name: marker
      description: ID of the last fetched entry
      schema:
        type: string
        description: ID of the last fetched entry
    projects_limit:
      in: query
      name: limit
      schema:
        type:
          - integer
          - string
    projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id} API
      schema:
        type: string
      required: true
    projects_tags_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id}/tags/{value} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    projects_tags_value:
      in: path
      name: value
      description: |-
        value parameter for /v3/projects/{project_id}/tags/{value} API
      schema:
        type: string
      required: true
    projects_users_roles_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id}/users/{user_id}/roles API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    projects_users_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/projects/{project_id}/users/{user_id}/roles API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    projects_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/projects/{project_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    projects_groups_roles_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/project.id
    projects_groups_roles_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles API
      schema:
        type: string
      required: true
    projects_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    regions_region_id:
      in: path
      name: region_id
      description: |-
        region_id parameter for /v3/regions/{region_id} API
      schema:
        type: string
      required: true
    regions_parent_region_id:
      in: query
      name: parent_region_id
      description: Filters the response by a parent region, by ID.
      schema:
        type: string
        format: uuid
    registered_limits_service_id:
      in: query
      name: service_id
      description: Filters the response by a service ID.
      schema:
        type: string
        format: uuid
        description: Filters the response by a service ID.
    registered_limits_region_id:
      in: query
      name: region_id
      description: The ID of the region.
      schema:
        type:
          - string
          - 'null'
        description: The ID of the region.
        maxLength: 255
        minLength: 1
    registered_limits_resource_name:
      in: query
      name: resource_name
      description: The resource name.
      schema:
        type: string
        description: The resource name.
        pattern: '[\S]+'
        maxLength: 255
        minLength: 1
    registered_limits_registered_limit_id:
      in: path
      name: registered_limit_id
      description: |-
        registered_limit_id parameter for /v3/registered_limits/{registered_limit_id} API
      schema:
        type: string
      required: true
    role_assignments_effective:
      in: query
      name: effective
      schema:
        type: string
    role_assignments_include_names:
      in: query
      name: include_names
      schema:
        type: string
    role_assignments_include_subtree:
      in: query
      name: include_subtree
      schema:
        type: string
    role_assignments_group.id:
      in: query
      name: group.id
      schema:
        type: string
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
    role_assignments_role.id:
      in: query
      name: role.id
      schema:
        type: string
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
    role_assignments_scope.system:
      in: query
      name: scope.system
      schema:
        type: string
    role_assignments_scope.domain.id:
      in: query
      name: scope.domain.id
      description: The ID of the domain.
      schema:
        type: string
        description: The ID of the domain.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
    role_assignments_scope.project.id:
      in: query
      name: scope.project.id
      description: The ID of the project.
      schema:
        type: string
        description: The ID of the project.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
    role_assignments_user.id:
      in: query
      name: user.id
      schema:
        type: string
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
    role_assignments_scope.OS-INHERIT_inherited_to:
      in: query
      name: scope.OS-INHERIT:inherited_to
      schema:
        type: string
    roles_name:
      in: query
      name: name
      description: The resource name.
      schema:
        type: string
        description: The resource name.
        pattern: '[\S]+'
        maxLength: 255
        minLength: 1
    roles_domain_id:
      in: query
      name: domain_id
      description: The ID of the domain.
      schema:
        type: string
        description: The ID of the domain.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
      x-openstack:
        resource_link: identity/v3/domain.id
    roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/roles/{role_id} API
      schema:
        type: string
      required: true
    roles_implies_prior_role_id:
      in: path
      name: prior_role_id
      description: |-
        prior_role_id parameter for /v3/roles/{prior_role_id}/implies/{implied_role_id} API
      schema:
        type: string
      required: true
    roles_implies_implied_role_id:
      in: path
      name: implied_role_id
      description: |-
        implied_role_id parameter for /v3/roles/{prior_role_id}/implies/{implied_role_id} API
      schema:
        type: string
      required: true
    services_type:
      in: query
      name: service
      description: Filters the response by a domain ID.
      schema:
        type: string
    services_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/services/{service_id} API
      schema:
        type: string
      required: true
    system_users_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/system/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    system_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/system/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    system_groups_roles_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/system/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    system_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/system/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_trustor_user_id:
      in: query
      name: trustor_user_id
      description: Represents the user who created the trust, and who's authorization
        is being delegated.
      schema:
        type: string
        description: Represents the user who created the trust, and who's authorization
          is being delegated.
    OS_TRUST_trusts_trustee_user_id:
      in: query
      name: trustee_user_id
      description: Represents the user who is capable of consuming the trust.
      schema:
        type: string
        description: Represents the user who is capable of consuming the trust.
    OS_TRUST_trusts_trust_id:
      in: path
      name: trust_id
      description: |-
        trust_id parameter for /v3/OS-TRUST/trusts/{trust_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_roles_trust_id:
      in: path
      name: trust_id
      description: |-
        trust_id parameter for /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_domain_id:
      in: query
      name: domain_id
      description: The ID of the domain.
      schema:
        type: string
        description: The ID of the domain.
        pattern: ^[a-zA-Z0-9-]+$
        maxLength: 64
        minLength: 1
      x-openstack:
        resource_link: identity/v3/domain.id
    users_enabled:
      in: query
      name: enabled
      description: Whether the identity provider is enabled or not
      schema:
        type:
          - boolean
          - string
          - 'null'
        description: Whether the identity provider is enabled or not
        enum:
          - true
          - 'True'
          - 'TRUE'
          - 'true'
          - false
          - 'False'
          - 'FALSE'
          - 'false'
          - ''
          - '1'
          - '0'
          - y
          - Y
          - n
          - N
          - on
          - ON
          - off
          - OFF
          - yes
          - no
    users_idp_id:
      in: query
      name: idp_id
      description: Filters the response by an identity provider ID.
      schema:
        type: string
        description: Filters the response by an identity provider ID.
    users_name:
      in: query
      name: name
      description: The resource name.
      schema:
        type: string
        description: The resource name.
        pattern: '[\S]+'
        maxLength: 255
        minLength: 1
    users_password_expires_at:
      in: query
      name: password_expires_at
      description: "Filter results based on which user passwords have expired. The
        query should include an operator and a timestamp with a colon (:) separating
        the two, for example: `password_expires_at={operator}:{timestamp}`\nValid
        operators are: lt, lte, gt, gte, eq, and neq\n  - lt: expiration time lower
        than the timestamp\n  - lte: expiration time lower than or equal to the timestamp\n\
        \  - gt: expiration time higher than the timestamp\n  - gte: expiration time
        higher than or equal to the timestamp\n  - eq: expiration time equal to the
        timestamp\n  - neq: expiration time not equal to the timestamp\n\nValid timestamps
        are of the form: `YYYY-MM-DDTHH:mm:ssZ`.For example:`/v3/users?password_expires_at=lt:2016-12-08T22:02:00Z`\n
        The example would return a list of users whose password expired before the
        timestamp `(2016-12-08T22:02:00Z).`"
      schema:
        type: string
        description: "Filter results based on which user passwords have expired. The
          query should include an operator and a timestamp with a colon (:) separating
          the two, for example: `password_expires_at={operator}:{timestamp}`\nValid
          operators are: lt, lte, gt, gte, eq, and neq\n  - lt: expiration time lower
          than the timestamp\n  - lte: expiration time lower than or equal to the
          timestamp\n  - gt: expiration time higher than the timestamp\n  - gte: expiration
          time higher than or equal to the timestamp\n  - eq: expiration time equal
          to the timestamp\n  - neq: expiration time not equal to the timestamp\n\n
          Valid timestamps are of the form: `YYYY-MM-DDTHH:mm:ssZ`.For example:`/v3/users?password_expires_at=lt:2016-12-08T22:02:00Z`\n
          The example would return a list of users whose password expired before the
          timestamp `(2016-12-08T22:02:00Z).`"
    users_protocol_id:
      in: query
      name: protocol_id
      description: Filters the response by a protocol ID.
      schema:
        type: string
        description: Filters the response by a protocol ID.
    users_unique_id:
      in: query
      name: unique_id
      description: Filters the response by a unique ID.
      schema:
        type: string
        description: Filters the response by a unique ID.
    users_marker:
      in: query
      name: marker
      description: ID of the last fetched entry
      schema:
        type: string
        description: ID of the last fetched entry
    users_limit:
      in: query
      name: limit
      schema:
        type:
          - integer
          - string
    users_sort_key:
      in: query
      name: sort_key
      description: Sorts resources by attribute.
      schema:
        type: string
        description: Sorts resources by attribute.
    users_sort_dir:
      in: query
      name: sort_dir
      description: Sort direction. A valid value is asc (ascending) or desc (descending).
      schema:
        type: string
        description: Sort direction. A valid value is asc (ascending) or desc (descending).
        enum:
          - asc
          - desc
    users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id} API
      schema:
        type: string
      required: true
    users_password_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/password API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_groups_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/groups API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_projects_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/projects API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_credentials_OS_EC2_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/credentials/OS-EC2/{credential_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_credentials_OS_EC2_credential_id:
      in: path
      name: credential_id
      description: |-
        credential_id parameter for /v3/users/{user_id}/credentials/OS-EC2/{credential_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_OS_OAUTH1_access_tokens_access_token_id:
      in: path
      name: access_token_id
      description: |-
        access_token_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_roles_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_OS_OAUTH1_access_tokens_roles_access_token_id:
      in: path
      name: access_token_id
      description: |-
        access_token_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_application_credentials_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/application_credentials/{application_credential_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_application_credentials_name:
      in: query
      name: name
      description: The name of the application credential. Must be unique to a user.
      schema:
        type: string
        description: The name of the application credential. Must be unique to a user.
    users_application_credentials_application_credential_id:
      in: path
      name: application_credential_id
      description: |-
        application_credential_id parameter for /v3/users/{user_id}/application_credentials/{application_credential_id} API
      schema:
        type: string
      required: true
    users_access_rules_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/access_rules/{access_rule_id} API
      schema:
        type: string
      required: true
      x-openstack:
        resource_link: identity/v3/user.id
    users_access_rules_service:
      in: query
      name: service
      description: The service type identifier for the service that the application
        is permitted to access.
      schema:
        type: string
        description: The service type identifier for the service that the application
          is permitted to access.
    users_access_rules_path:
      in: query
      name: path
      description: The API path that the application credential is permitted to access.
      schema:
        type: string
        description: The API path that the application credential is permitted to
          access.
    users_access_rules_method:
      in: query
      name: method
      description: The request method that the application credential is permitted
        to use for a given API endpoint.
      schema:
        type: string
        description: The request method that the application credential is permitted
          to use for a given API endpoint.
    users_access_rules_access_rule_id:
      in: path
      name: access_rule_id
      description: |-
        access_rule_id parameter for /v3/users/{user_id}/access_rules/{access_rule_id} API
      schema:
        type: string
      required: true
  headers:
    X-Auth-Token:
      description: A valid authentication token
      schema:
        type: string
        format: secret
    X-Subject-Token:
      description: API Authorization token
      schema:
        type: string
    Openstack-Auth-Receipt:
      description: The auth receipt. A partially successful authentication response
        returns the auth receipt ID in this header rather than in the response body.
      schema:
        type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
tags:
  - name: version
  - name: v3
  - name: auth
  - name: OS-FEDERATION
  - name: credentials
  - name: domains
  - name: domain-configuration
  - name: roles
  - name: ec2tokens
  - name: endpoints
  - name: groups
  - name: limits
  - name: OS-EP-FILTER
  - name: OS-INHERIT
  - name: OS-OAUTH1
  - name: OS-OAUTH2
  - name: OS-REVOKE
  - name: OS-SIMPLE-CERT
  - name: policies
  - name: projects
  - name: regions
  - name: registered_limits
  - name: role_assignments
  - name: role_inferences
  - name: s3tokens
  - name: services
  - name: system
  - name: OS-TRUST
  - name: users
security:
  - ApiKeyAuth: []
