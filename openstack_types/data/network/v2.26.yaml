openapi: 3.1.0
info:
  title: OpenStack Network API
  description: |-
    None
  version: '2.26'
paths:
  /v2.0/extensions:
    get:
      description: |-
        Lists available extensions.

        Lists available Networking API v2.0 extensions.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: extensions:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionsIndexResponse'
      tags:
        - extensions
      summary: List extensions
  /v2.0/extensions/{id}:
    parameters:
      - $ref: '#/components/parameters/extensions_id'
    get:
      description: |-
        Shows details for an extension, by alias.
        The response shows the extension name and its alias. To show
        details for an extension, you specify the alias.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: extensions/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionShowResponse'
      tags:
        - extensions
      summary: Show extension details
  /v2.0/address-groups:
    get:
      parameters:
        - $ref: '#/components/parameters/address_groups_id'
        - $ref: '#/components/parameters/address_groups_name'
        - $ref: '#/components/parameters/address_groups_description'
        - $ref: '#/components/parameters/address_groups_project_id'
        - $ref: '#/components/parameters/address_groups_revision_number'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists address groups that the project has access to.

        Default policy settings return only the address groups owned by
        the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: address-groups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupsIndexResponse'
      tags:
        - address-groups
      summary: List address groups
    post:
      description: |-
        Creates an address group.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: address-groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupsCreateResponse'
      tags:
        - address-groups
      summary: Create address group
  /v2.0/address-groups/{id}/add_addresses:
    parameters:
      - $ref: '#/components/parameters/address_groups_address_group_id'
    put:
      operationId: address-groups/id/add_addresses:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupsAdd_AddressesAdd_AddressesRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupShowResponse'
      tags:
        - address-groups
  /v2.0/address-groups/{id}/remove_addresses:
    parameters:
      - $ref: '#/components/parameters/address_groups_address_group_id'
    put:
      operationId: address-groups/id/remove_addresses:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupsRemove_AddressesRemove_AddressesRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupShowResponse'
      tags:
        - address-groups
  /v2.0/address-groups/{id}:
    parameters:
      - $ref: '#/components/parameters/address_groups_address_group_id'
    get:
      description: |-
        Shows information for an address group.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: address-groups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupShowResponse'
      tags:
        - address-groups
      summary: Show address group
    delete:
      description: |-
        Deletes an address group.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: address-groups/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - address-groups
      summary: Delete an address group
    put:
      description: |-
        Updates an address group.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: address-groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupUpdateResponse'
      tags:
        - address-groups
      summary: Update an address group
  /v2.0/address-scopes:
    get:
      parameters:
        - $ref: '#/components/parameters/address_scopes_id'
        - $ref: '#/components/parameters/address_scopes_name'
        - $ref: '#/components/parameters/address_scopes_tenant_id'
        - $ref: '#/components/parameters/address_scopes_shared'
        - $ref: '#/components/parameters/address_scopes_ip_version'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists address scopes that the project has access to.

        Default policy settings return only the address scopes owned by
        the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: address-scopes:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopesIndexResponse'
      tags:
        - address-scopes
      summary: List address scopes
    post:
      description: |-
        Creates an address scope.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: address-scopes:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_ScopesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopesCreateResponse'
      tags:
        - address-scopes
      summary: Create address scope
  /v2.0/address-scopes/{id}:
    parameters:
      - $ref: '#/components/parameters/address_scopes_address_scope_id'
    get:
      description: |-
        Shows information for an address scope.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: address-scopes/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopeShowResponse'
      tags:
        - address-scopes
      summary: Show address scope
    delete:
      description: |-
        Deletes an address scope.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: address-scopes/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - address-scopes
      summary: Delete an address scope
    put:
      description: |-
        Updates an address scope.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: address-scopes/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_ScopeUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopeUpdateResponse'
      tags:
        - address-scopes
      summary: Update an address scope
  /v2.0/agents:
    get:
      parameters:
        - $ref: '#/components/parameters/agents_id'
        - $ref: '#/components/parameters/agents_agent_type'
        - $ref: '#/components/parameters/agents_binary'
        - $ref: '#/components/parameters/agents_topic'
        - $ref: '#/components/parameters/agents_host'
        - $ref: '#/components/parameters/agents_admin_state_up'
        - $ref: '#/components/parameters/agents_alive'
        - $ref: '#/components/parameters/agents_description'
        - $ref: '#/components/parameters/agents_availability_zone'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all agents.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: agents:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsIndexResponse'
      tags:
        - networking-agents
      summary: List all agents
    post:
      operationId: agents:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsCreateResponse'
      tags:
        - networking-agents
  /v2.0/agents/{id}:
    parameters:
      - $ref: '#/components/parameters/agents_agent_id'
    get:
      description: |-
        Shows details for an agent.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: agents/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentShowResponse'
      tags:
        - networking-agents
      summary: Show agent details
    delete:
      description: |-
        Agents that won’t be used anymore can be removed. Before deleting agents via
        API, the agent should be stopped/disabled.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: agents/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - networking-agents
      summary: Delete agent
    put:
      description: |-
        Updates an agent.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: agents/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentUpdateResponse'
      tags:
        - networking-agents
      summary: Update agent
  /v2.0/auto-allocated-topology:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: auto-allocated-topology:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyIndexResponse'
      tags:
        - auto-allocated-topology
    post:
      operationId: auto-allocated-topology:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auto_Allocated_TopologyCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyCreateResponse'
      tags:
        - auto-allocated-topology
  /v2.0/auto-allocated-topology/{id}:
    parameters:
      - $ref: '#/components/parameters/auto_allocated_topologies_auto_allocated_topology_id'
    get:
      description: |-
        Shows details for an auto allocated topology.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: auto-allocated-topology/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyShowResponse'
      tags:
        - auto-allocated-topology
      summary: Show auto allocated topology details
    delete:
      description: |-
        Deletes the auto allocated topology.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: auto-allocated-topology/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - auto-allocated-topology
      summary: Delete the auto allocated topology
    put:
      operationId: auto-allocated-topology/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auto_Allocated_TopologyUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyUpdateResponse'
      tags:
        - auto-allocated-topology
  /v2.0/availability_zones:
    get:
      parameters:
        - $ref: '#/components/parameters/availability_zones_name'
        - $ref: '#/components/parameters/availability_zones_resource'
        - $ref: '#/components/parameters/availability_zones_state'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all availability zones.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: availability_zones:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Availability_ZonesIndexResponse'
      tags:
        - availability_zones
      summary: List all availability zones
  /v2.0/agents/{agent_id}/dhcp-networks:
    parameters:
      - $ref: '#/components/parameters/agents_dhcp-networks_agent_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists networks that a DHCP agent hosts.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: agents/agent_id/dhcp-networks:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworksIndexResponse'
      tags:
        - dhcp-agent-scheduler
      summary: List networks hosted by a DHCP agent
    post:
      description: |-
        Add a network to a DHCP agent

        Normal response codes: 201

        Error response codes: 400, 403, 409, 404
      operationId: agents/agent_id/dhcp-networks:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsDhcp_NetworksCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworksCreateResponse'
      tags:
        - dhcp-agent-scheduler
      summary: Schedule a network to a DHCP agent
  /v2.0/agents/{agent_id}/dhcp-networks/{id}:
    parameters:
      - $ref: '#/components/parameters/agents_dhcp-networks_agent_id'
      - $ref: '#/components/parameters/agents_dhcp-networks_id'
    get:
      operationId: agents/agent_id/dhcp-networks/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworkShowResponse'
      tags:
        - dhcp-agent-scheduler
    delete:
      description: |-
        Removes a network from a dhcp agent.

        Normal response codes: 204

        Error response codes: 401, 403, 404, 409
      operationId: agents/agent_id/dhcp-networks/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - dhcp-agent-scheduler
      summary: Remove network from a DHCP agent
    put:
      operationId: agents/agent_id/dhcp-networks/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsDhcp_NetworkUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworkUpdateResponse'
      tags:
        - dhcp-agent-scheduler
  /v2.0/networks/{network_id}/dhcp-agents:
    parameters:
      - $ref: '#/components/parameters/networks_dhcp-agents_network_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists DHCP agents hosting a network.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: networks/network_id/dhcp-agents:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentsIndexResponse'
      tags:
        - networks
      summary: List DHCP agents hosting a network
    post:
      operationId: networks/network_id/dhcp-agents:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksDhcp_AgentsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentsCreateResponse'
      tags:
        - networks
  /v2.0/networks/{network_id}/dhcp-agents/{id}:
    parameters:
      - $ref: '#/components/parameters/networks_dhcp-agents_network_id'
      - $ref: '#/components/parameters/networks_dhcp-agents_id'
    get:
      operationId: networks/network_id/dhcp-agents/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentShowResponse'
      tags:
        - networks
    delete:
      operationId: networks/network_id/dhcp-agents/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - networks
    put:
      operationId: networks/network_id/dhcp-agents/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksDhcp_AgentUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentUpdateResponse'
      tags:
        - networks
  /v2.0/routers:
    get:
      parameters:
        - $ref: '#/components/parameters/routers_id'
        - $ref: '#/components/parameters/routers_name'
        - $ref: '#/components/parameters/routers_admin_state_up'
        - $ref: '#/components/parameters/routers_tenant_id'
        - $ref: '#/components/parameters/routers_enable_ndp_proxy'
        - $ref: '#/components/parameters/routers_revision_number'
        - $ref: '#/components/parameters/routers_tags'
        - $ref: '#/components/parameters/routers_tags-any'
        - $ref: '#/components/parameters/routers_not-tags'
        - $ref: '#/components/parameters/routers_not-tags-any'
        - $ref: '#/components/parameters/routers_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists logical routers that the project who submits the request can access.

        Default policy settings return only those routers that the project
        who submits the request owns, unless an administrative user submits
        the request.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: routers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersIndexResponse'
      tags:
        - routers
      summary: List routers
    post:
      description: |-
        Creates a logical router.

        This operation creates a logical router. The logical router does
        not have any internal interface and it is not associated with any
        subnet. You can optionally specify an external gateway for a router
        at create time. The external gateway for the router must be plugged
        into an external network. An external network has its
        `router:external` extended field set to `true`. To specify an
        external gateway, the ID of the external network must be passed
        in the `network_id` parameter of the `external_gateway_info`
        attribute in the request body.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: routers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersCreateResponse'
      tags:
        - routers
      summary: Create router
  /v2.0/routers/{id}/add_router_interface:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Adds an internal interface to a logical router.
        This means a specified subnet is attached to a router
        as an internal router interface.

        Specify the ID of a subnet or port in the request body:

        When you specify an IPv6 subnet, this operation adds the subnet to
        an existing internal port with same network ID, on the router. If
        a port with the same network ID does not exist, this operation
        creates a port on the router for that subnet.

        The limitation of one IPv4 subnet per router port remains, though a
        port can contain any number of IPv6 subnets that belong to the same
        network ID.

        When you use the `port-create` command to add a port and then
        call `router-interface-add` with this port ID, this operation
        adds the port to the router if the following conditions are met:

        If you specify both subnet ID and port ID,
        this operation returns the `Bad Request (400)` response code.

        If the port is already in use, this operation returns the
        `Conflict (409)` response code.

        This operation returns a port ID that is either:

        After you run this operation, the operation sets:

        Normal response codes: 200

        Error response codes: 400, 401, 404, 409
      operationId: routers/id/add_router_interface:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersAdd_Router_InterfaceAdd_Router_InterfaceRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersAdd_Router_InterfaceAdd_Router_InterfaceResponse'
      tags:
        - routers
      summary: Add interface to router
  /v2.0/routers/{id}/remove_router_interface:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Deletes an internal interface from a logical router.

        This operation deletes an internal router interface, which detaches
        a subnet from the router. If this subnet ID is the last subnet on
        the port, this operation deletes the port itself. You must specify
        either a subnet ID or port ID in the request body; the
        operation uses this value to identify which router interface to
        deletes.

        You can also specify both a subnet ID and port ID. If you
        specify both IDs, the subnet ID must correspond to the subnet
        ID of the first IP address on the port. Otherwise, this operation
        returns the `Conflict (409)` response code with information about
        the affected router and interface.

        If you try to delete the router interface for subnets that are used
        by one or more `routes`, this operation returns the `Conflict (409)`
        response. In this case, you first need to delete such routes from
        the router.

        If the router or the subnet and port do not exist or are not
        visible to you, this operation returns the `Not Found (404)`
        response code. As a consequence of this operation, the operation
        removes the port connecting the router with the subnet from the
        subnet for the network.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 409
      operationId: routers/id/remove_router_interface:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersRemove_Router_InterfaceRemove_Router_InterfaceRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersRemove_Router_InterfaceRemove_Router_InterfaceResponse'
      tags:
        - routers
      summary: Remove interface from router
  /v2.0/routers/{id}/add_extraroutes:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Atomically adds a set of extra routes to the router’s already existing
        extra routes.

        This operation is a variation on updating the router’s `routes`
        parameter. In all ways it works the same, except the extra routes sent
        in the request body do not replace the existing set of extra routes.
        Instead the extra routes sent are added to the existing set of
        extra routes.

        The use of the add_extraroutes/remove_extraroutes member actions
        is preferred to updating the `routes` attribute in all cases when
        concurrent updates to the set of extra routes are possible.

        The addition’s corner cases behave the following way:

        The format of the request body is the same as the format of a PUT
        request to the router changing the `routes` parameter only.

        The response codes and response body are the same as to the update of
        the `routes` parameter. That is the whole router object is returned
        including the `routes` parameter which represents the result of the
        addition.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/add_extraroutes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersAdd_ExtraroutesAdd_ExtraroutesRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersAdd_ExtraroutesAdd_ExtraroutesResponse'
      tags:
        - routers
      summary: Add extra routes to router
  /v2.0/routers/{id}/remove_extraroutes:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Atomically removes a set of extra routes from the router’s already
        existing extra routes.

        This operation is a variation on updating the router’s `routes`
        parameter. In all ways it works the same, except the extra routes sent
        in the request body do not replace the existing set of extra routes.
        Instead the the extra routes sent are removed from the existing set of
        extra routes.

        The use of the add_extraroutes/remove_extraroutes member actions
        is preferred to updating the `routes` attribute in all cases when
        concurrent updates to the set of extra routes are possible.

        The removal’s corner cases behave the following way:

        The format of the request body is the same as the format of a PUT
        request to the router changing the `routes` parameter only. However
        the routes sent are not meant to overwrite the whole `routes`
        parameter, but they are meant to be removed from the existing set.

        The response codes and response body are the same as to the update of
        the `routes` parameter. That is the whole router object is returned
        including the `routes` parameter which represents the result of the
        removal.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/remove_extraroutes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersRemove_ExtraroutesRemove_ExtraroutesRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersRemove_ExtraroutesRemove_ExtraroutesResponse'
      tags:
        - routers
      summary: Remove extra routes from router
  /v2.0/routers/{id}/add_external_gateways:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Add external gateways to a router in addition to the ones it already
        has.

        Multiple gateways attached to the same network can be added to the
        same router.

        The add/update/remove external gateways operations extend the use of
        `router.external_gateway_info` to manage multiple external gateways.
        The full set of external gateways is exposed in the read-only
        `router.external_gateways` parameter. `router.external_gateways`
        contains a list of `external_gateway_info` structures like:

        The first item (index 0) of the `external_gateways` list is special if a
        router does not have any gateway ports yet:

        The order of the the rest of the list (indexes 1, 2, …) is irrelevant
        and ignored.

        The first external gateway can be managed in two
        ways: via `router.external_gateway_info` or via
        `add/update/remove_external_gateways`. The other external gateways
        can only be managed via `add/update/remove_external_gateways`.

        The format of the request body is the same as the format of the read-only
        `router.external_gateways` parameter, but wrapped as follows:

        The response codes and response body are the same as to the update of
        the router. That is the whole router object is returned including the
        `external_gateway_info` and `external_gateways` parameters which
        represents the result of the operation.

        Changes in `router.external_gateway_info` are reflected
        in `router.external_gateways` and vice versa. Updating
        `external_gateway_info` also updates the first element of
        `external_gateways` and it leaves the rest of `external_gateways`
        unchanged. Setting `external_gateway_info` to an empty value removes
        a single gateway and one of the extra gateways takes its place instead.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/add_external_gateways:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersAdd_External_GatewaysAdd_External_GatewaysRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
      tags:
        - routers
      summary: Add external gateways to router
  /v2.0/routers/{id}/update_external_gateways:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Update some external gateways of router.

        For general information on the add/update/remove external gateways
        operations see `add_external_gateways` above.

        The external gateways to be updated are identified by the `network_ids`
        found in the PUT request. The `external_fixed_ips`, `enable_snat`,
        fields can be updated. The `network_id` field cannot be updated - any
        changes will cause a gateway port to be removed and recreated.

        The format of the request body is the same as the format of the read-only
        `router.external_gateways` parameter, but wrapped as follows:

        The `enable_snat` field does not have any effect for extra gateways except
        for the first external gateway in the list.

        The `network_id` field is used to identify a particular gateway port along
        with the `external_fixed_ips` field. Specifying just the `network_id` field
        is ambiguous: Neutron will attempt to find the matching gateway port but if
        there are multiple matches it will return an error response code.

        The `enable_snat` field can be omitted from the request. Specifying
        `external_fixed_ips` will result in matching ports based on those
        fixed IPs. If a gateway port has a subset of the specified fixed IPs,
        then the set of IPs will be updated to match the ones in the request.
        Alternatively, if a gateway port has a superset of fixed IPs from the
        request the IPs will be removed from the gateway port.

        The response codes and response body are the same as to the update of
        the router. That is the whole router object is returned including the
        `external_gateway_info` and `external_gateways` parameters which
        represents the result of the operation.

        Please note that updating `external_gateway_info` also updates
        the first element of `external_gateways` and it leaves the rest of
        `external_gateways` unchanged.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/update_external_gateways:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersUpdate_External_GatewaysUpdate_External_GatewaysRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
      tags:
        - routers
      summary: Update external gateways of router
  /v2.0/routers/{id}/remove_external_gateways:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Remove some external gateways from router.

        For general information on the add/update/remove external gateways
        operations see `add_external_gateways` above.

        The format of the request body is the same as the format of the read-only
        `router.external_gateways` parameter, but wrapped as follows:

        However the request body can be partial. Only the `network_id`
        and `external_fixed_ips` fields from the `external_gateway_info`
        structure is used in order to match the specific gateway ports.
        The `enable_snat` key can be present but its value is ignored.

        Please note that setting `external_gateway_info` to an empty value
        also resets `external_gateways` to the empty list.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/remove_external_gateways:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersRemove_External_GatewaysRemove_External_GatewaysRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
      tags:
        - routers
      summary: Remove external gateways from router
  /v2.0/routers/{id}:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    get:
      description: |-
        Shows details for a router.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: routers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
      tags:
        - routers
      summary: Show router details
    delete:
      description: |-
        Deletes a logical router and, if present, its external gateway interface.

        This operation fails if the router has attached interfaces.
        Use the remove router interface operation to remove all router
        interfaces before you delete the router.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: routers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers
      summary: Delete router
    put:
      description: |-
        Updates a logical router.

        This operation does not enable the update of router interfaces.
        To update a router interface, use the add router interface and
        remove router interface operations.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouterUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterUpdateResponse'
      tags:
        - routers
      summary: Update router
  /v2.0/flavors:
    get:
      parameters:
        - $ref: '#/components/parameters/flavors_id'
        - $ref: '#/components/parameters/flavors_name'
        - $ref: '#/components/parameters/flavors_description'
        - $ref: '#/components/parameters/flavors_service_type'
        - $ref: '#/components/parameters/flavors_enabled'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all flavors visible to the project.

        The list can be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: flavors:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsIndexResponse'
      tags:
        - flavors
      summary: List flavors
    post:
      description: |-
        Creates a flavor.

        This operation establishes a new flavor.

        The service_type to which the flavor applies is a required
        parameter. The corresponding service plugin must have been
        activated as part of the configuration.
        Check [Service providers](#list-service-providers) for how to see
        currently loaded service types. Additionally the service plugin
        needs to support the use of flavors.

        Creation currently limited to administrators. Other users will
        receive a `Forbidden 403` response code with a response body
        NeutronError message expressing that creation is disallowed by
        policy.

        Until one or more service profiles are associated with the flavor
        by the operator, attempts to use the flavor during resource
        creations will currently return a `Not Found 404` with a response
        body that indicates no service profile could be found.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: flavors:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsCreateResponse'
      tags:
        - flavors
      summary: Create flavor
  /v2.0/flavors/{id}:
    parameters:
      - $ref: '#/components/parameters/flavors_flavor_id'
    get:
      description: |-
        Shows details for a flavor.

        This operation returns a flavor object by ID. If you are not an
        administrative user and the flavor object is not visible to your
        project account, the service returns the HTTP `Forbidden (403)`
        response code.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: flavors/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorShowResponse'
      tags:
        - flavors
      summary: Show flavor details
    delete:
      description: |-
        Deletes a flavor.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: flavors/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavors
      summary: Delete flavor
    put:
      description: |-
        Updates a flavor.

        The service_type cannot be updated as there may be associated
        service profiles and consumers depending on the value.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: flavors/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorUpdateResponse'
      tags:
        - flavors
      summary: Update flavor
  /v2.0/service_profiles:
    get:
      parameters:
        - $ref: '#/components/parameters/service_profiles_id'
        - $ref: '#/components/parameters/service_profiles_description'
        - $ref: '#/components/parameters/service_profiles_driver'
        - $ref: '#/components/parameters/service_profiles_enabled'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all service profiles visible for the tenant account.

        The list can be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: service_profiles:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfilesIndexResponse'
      tags:
        - service_profiles
      summary: List service profiles
    post:
      description: |-
        Creates a service profile.

        This operation establishes a new service profile that can be
        associated with one or more flavors.

        Either metadata or a driver is required.

        If a driver is specified but does not exist, call will return a
        `Not found 404` error with the response body explaining that the
        driver could not be found.

        Creation currently limited to administrators. Other users will
        receive a `Forbidden 403` response code with a response body
        NeutronError message expressing that creation is disallowed by
        policy.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: service_profiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProfilesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfilesCreateResponse'
      tags:
        - service_profiles
      summary: Create service profile
  /v2.0/service_profiles/{id}:
    parameters:
      - $ref: '#/components/parameters/service_profiles_service_profile_id'
    get:
      description: |-
        Shows details for a service profile.

        This operation returns a service profile object by ID. If you are
        not an administrative user and the object is not visible to your
        tenant account, the service returns the HTTP `Forbidden (403)`
        response code.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: service_profiles/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfileShowResponse'
      tags:
        - service_profiles
      summary: Show service profile details
    delete:
      description: |-
        Deletes a service profile.

        Attempting to delete a service profile that is currently associated
        with a flavor will return a `Conflict 409` with a response body
        containing an in use message.

        Either metadata or a driver is required.

        Normal response codes: 204

        Error response codes: 401, 403, 404, 409
      operationId: service_profiles/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - service_profiles
      summary: Delete service profile
    put:
      description: |-
        Updates a service profile.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: service_profiles/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProfileUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfileUpdateResponse'
      tags:
        - service_profiles
      summary: Update service profile
  /v2.0/flavors/{flavor_id}/next_providers:
    parameters:
      - $ref: '#/components/parameters/next_providers_next_provider_flavor_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: flavors/flavor_id/next_providers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProvidersIndexResponse'
      tags:
        - flavors
    post:
      operationId: flavors/flavor_id/next_providers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsNext_ProvidersCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProvidersCreateResponse'
      tags:
        - flavors
  /v2.0/flavors/{flavor_id}/next_providers/{id}:
    parameters:
      - $ref: '#/components/parameters/next_providers_next_provider_flavor_id'
      - $ref: '#/components/parameters/next_providers_next_provider_id'
    get:
      operationId: flavors/flavor_id/next_providers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProviderShowResponse'
      tags:
        - flavors
    delete:
      operationId: flavors/flavor_id/next_providers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavors
    put:
      operationId: flavors/flavor_id/next_providers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsNext_ProviderUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProviderUpdateResponse'
      tags:
        - flavors
  /v2.0/flavors/{flavor_id}/service_profiles:
    parameters:
      - $ref: '#/components/parameters/service_profiles_service_profile_flavor_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: flavors/flavor_id/service_profiles:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfilesIndexResponse'
      tags:
        - flavors
    post:
      description: |-
        Associate a flavor with a service profile.

        A flavor can be associated with more than one profile.

        Will return `409 Conflict` if association already exists.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404, 409
      operationId: flavors/flavor_id/service_profiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsService_ProfilesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfilesCreateResponse'
      tags:
        - flavors
      summary: Associate flavor with a service profile
  /v2.0/flavors/{flavor_id}/service_profiles/{id}:
    parameters:
      - $ref: '#/components/parameters/service_profiles_service_profile_flavor_id'
      - $ref: '#/components/parameters/service_profiles_service_profile_id'
    get:
      operationId: flavors/flavor_id/service_profiles/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfileShowResponse'
      tags:
        - flavors
    delete:
      description: |-
        Disassociate a flavor from a service profile.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: flavors/flavor_id/service_profiles/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavors
      summary: Disassociate a flavor.
    put:
      operationId: flavors/flavor_id/service_profiles/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsService_ProfileUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfileUpdateResponse'
      tags:
        - flavors
  /v2.0/floatingips/{floatingip_id}/port_forwardings:
    parameters:
      - $ref: '#/components/parameters/port_forwardings_port_forwarding_floatingip_id'
    get:
      parameters:
        - $ref: '#/components/parameters/port_forwardings_id'
        - $ref: '#/components/parameters/port_forwardings_external_port'
        - $ref: '#/components/parameters/port_forwardings_protocol'
        - $ref: '#/components/parameters/port_forwardings_internal_port_id'
        - $ref: '#/components/parameters/port_forwardings_description'
        - $ref: '#/components/parameters/port_forwardings_external_port_range'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists floating IP port forwardings that the project has access to.

        Default policy settings return only the port forwardings associated to floating
        IPs owned by the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingsIndexResponse'
      tags:
        - floatingips
      summary: List floating IP port forwardings
    post:
      description: |-
        Creates a floating IP port forwarding.

        Normal response codes: 201

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsPort_ForwardingsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingsCreateResponse'
      tags:
        - floatingips
      summary: Create port forwarding
  /v2.0/floatingips/{floatingip_id}/port_forwardings/{id}:
    parameters:
      - $ref: '#/components/parameters/port_forwardings_port_forwarding_floatingip_id'
      - $ref: '#/components/parameters/port_forwardings_port_forwarding_id'
    get:
      description: |-
        Shows information for a floating IP port forwarding.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingShowResponse'
      tags:
        - floatingips-port-forwardings
      summary: Show port forwarding
    delete:
      description: |-
        Deletes a floating IP port forwarding.

        Normal response codes: 204

        Error response codes: 404
      operationId: floatingips/floatingip_id/port_forwardings/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingips-port-forwardings
      summary: Delete a floating IP port forwarding
    put:
      description: |-
        Updates a floating IP port forwarding.

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsPort_ForwardingUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingUpdateResponse'
      tags:
        - floatingips-port-forwardings
      summary: Update a port forwarding
  /v2.0/floatingip-pools:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: floatingip-pools:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolsIndexResponse'
      tags:
        - floatingip-pools
    post:
      operationId: floatingip-pools:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Floatingip_PoolsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolsCreateResponse'
      tags:
        - floatingip-pools
  /v2.0/floatingip-pools/{id}:
    parameters:
      - $ref: '#/components/parameters/floatingip_pools_floatingip_pool_id'
    get:
      operationId: floatingip-pools/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolShowResponse'
      tags:
        - floatingip-pools
    delete:
      operationId: floatingip-pools/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingip-pools
    put:
      operationId: floatingip-pools/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Floatingip_PoolUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolUpdateResponse'
      tags:
        - floatingip-pools
  /v2.0/floatingips:
    get:
      parameters:
        - $ref: '#/components/parameters/floatingips_id'
        - $ref: '#/components/parameters/floatingips_floating_ip_address'
        - $ref: '#/components/parameters/floatingips_floating_network_id'
        - $ref: '#/components/parameters/floatingips_router_id'
        - $ref: '#/components/parameters/floatingips_port_id'
        - $ref: '#/components/parameters/floatingips_fixed_ip_address'
        - $ref: '#/components/parameters/floatingips_tenant_id'
        - $ref: '#/components/parameters/floatingips_status'
        - $ref: '#/components/parameters/floatingips_revision_number'
        - $ref: '#/components/parameters/floatingips_tags'
        - $ref: '#/components/parameters/floatingips_tags-any'
        - $ref: '#/components/parameters/floatingips_not-tags'
        - $ref: '#/components/parameters/floatingips_not-tags-any'
        - $ref: '#/components/parameters/floatingips_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists floating IPs visible to the user.

        Default policy settings return only the floating IPs owned by the user’s
        project, unless the user has admin role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        This example request lists floating IPs in JSON format:

        Normal response codes: 200

        Error response codes: 401
      operationId: floatingips:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsIndexResponse'
      tags:
        - floatingips
      summary: List floating IPs
    post:
      description: |-
        Creates a floating IP, and, if you specify port information, associates the floating IP with an internal port.

        To associate the floating IP with an internal port, specify the
        port ID attribute in the request body. If you do not specify a
        port ID in the request, you can issue a PUT request instead of a
        POST request.

        Default policy settings enable only administrative users to set
        floating IP addresses and some non-administrative users might
        require a floating IP address. If you do not specify a floating IP
        address in the request, the operation automatically allocates one.

        By default, this operation associates the floating IP address with
        a single fixed IP address that is configured on an OpenStack
        Networking port. If a port has multiple IP addresses, you must
        specify the `fixed_ip_address` attribute in the request body to
        associate a fixed IP address with the floating IP address.

        You can create floating IPs on only external networks. When you
        create a floating IP, you must specify the ID of the network on
        which you want to create the floating IP. Alternatively, you can
        create a floating IP on a subnet in the external network, based on
        the costs and quality of that subnet.

        You must configure an IP address with the internal OpenStack
        Networking port that is associated with the floating IP address.

        The operation returns the `Bad Request (400)` response code for one of
        reasons:

        If the port ID is not valid, this operation returns `404` response code.

        The operation returns the `Conflict (409)` response code for one of
        reasons:

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: floatingips:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsCreateResponse'
      tags:
        - floatingips
      summary: Create floating IP
  /v2.0/floatingips/{id}:
    parameters:
      - $ref: '#/components/parameters/floatingips_floatingip_id'
    get:
      description: |-
        Shows details for a floating IP.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        This example request shows details for a floating IP in JSON
        format. This example also filters the result by the
        `fixed_ip_address` and `floating_ip_address` fields.

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: floatingips/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipShowResponse'
      tags:
        - floatingips
      summary: Show floating IP details
    delete:
      description: |-
        Deletes a floating IP and, if present, its associated port.

        This example deletes a floating IP:

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: floatingips/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingips
      summary: Delete floating IP
    put:
      description: |-
        Updates a floating IP and its association with an internal port.

        The association process is the same as the process for the create
        floating IP operation.

        To disassociate a floating IP from a port, set the `port_id`
        attribute to null or omit it from the request body.

        This example updates a floating IP:

        Depending on the request body that you submit, this request
        associates a port with or disassociates a port from a floating IP.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 409, 412
      operationId: floatingips/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipUpdateResponse'
      tags:
        - floatingips
      summary: Update floating IP
  /v2.0/routers/{router_id}/conntrack_helpers:
    parameters:
      - $ref: '#/components/parameters/conntrack_helpers_conntrack_helper_router_id'
    get:
      parameters:
        - $ref: '#/components/parameters/conntrack_helpers_id'
        - $ref: '#/components/parameters/conntrack_helpers_protocol'
        - $ref: '#/components/parameters/conntrack_helpers_port'
        - $ref: '#/components/parameters/conntrack_helpers_helper'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists router conntrack helpers associated with a router.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelpersIndexResponse'
      tags:
        - routers-conntrack-helper
      summary: List router conntrack helpers
    post:
      description: |-
        Creates a router conntrack helper.

        Normal response codes: 201

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersConntrack_HelpersCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelpersCreateResponse'
      tags:
        - routers-conntrack-helper
      summary: Create conntrack helper
  /v2.0/routers/{router_id}/conntrack_helpers/{id}:
    parameters:
      - $ref: '#/components/parameters/conntrack_helpers_conntrack_helper_router_id'
      - $ref: '#/components/parameters/conntrack_helpers_conntrack_helper_id'
    get:
      description: |-
        Shows information for a router conntrack helper.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelperShowResponse'
      tags:
        - routers-conntrack-helper
      summary: Show conntrack helper
    delete:
      description: |-
        Deletes a router conntrack helper.

        Normal response codes: 204

        Error response codes: 404
      operationId: routers/router_id/conntrack_helpers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers-conntrack-helper
      summary: Delete a conntrack helper
    put:
      description: |-
        Updates a router conntrack helper.

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersConntrack_HelperUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelperUpdateResponse'
      tags:
        - routers-conntrack-helper
      summary: Update a conntrack helper
  /v2.0/ndp-proxies:
    get:
      parameters:
        - $ref: '#/components/parameters/ndp_proxies_name'
        - $ref: '#/components/parameters/ndp_proxies_description'
        - $ref: '#/components/parameters/ndp_proxies_revision_number'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: ndp-proxies:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxiesIndexResponse'
      tags:
        - ndp-proxies
    post:
      operationId: ndp-proxies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ndp_ProxiesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxiesCreateResponse'
      tags:
        - ndp-proxies
  /v2.0/ndp-proxies/{id}:
    parameters:
      - $ref: '#/components/parameters/ndp_proxies_ndp_proxy_id'
    get:
      operationId: ndp-proxies/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxyShowResponse'
      tags:
        - ndp-proxies
    delete:
      operationId: ndp-proxies/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - ndp-proxies
    put:
      operationId: ndp-proxies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ndp_ProxyUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxyUpdateResponse'
      tags:
        - ndp-proxies
  /v2.0/agents/{agent_id}/l3-routers:
    parameters:
      - $ref: '#/components/parameters/agents_l3-routers_agent_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists routers that an l3 agent hosts.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: agents/agent_id/l3-routers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsL3_RoutersIndexResponse'
      tags:
        - l3-agent-scheduler
      summary: List routers hosted by an L3 agent
    post:
      description: |-
        Add a router to an l3 agent.

        Normal response codes: 201

        Error response codes: 400, 401, 404
      operationId: agents/agent_id/l3-routers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsL3_RoutersCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsL3_RoutersCreateResponse'
      tags:
        - l3-agent-scheduler
      summary: Schedule router to an l3 agent
  /v2.0/agents/{agent_id}/l3-routers/{id}:
    parameters:
      - $ref: '#/components/parameters/agents_l3-routers_agent_id'
      - $ref: '#/components/parameters/agents_l3-routers_id'
    get:
      operationId: agents/agent_id/l3-routers/id:get
      responses:
        '200':
          description: Ok
      tags:
        - l3-agent-scheduler
    delete:
      description: |-
        Removes a router from an l3 agent.

        Normal response codes: 204

        Error response codes: 401, 404
      operationId: agents/agent_id/l3-routers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - l3-agent-scheduler
      summary: Remove l3 router from an l3 agent
    put:
      operationId: agents/agent_id/l3-routers/id:put
      responses:
        '200':
          description: Ok
      tags:
        - l3-agent-scheduler
  /v2.0/routers/{router_id}/l3-agents:
    parameters:
      - $ref: '#/components/parameters/routers_l3-agents_router_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists l3 agents hosting a specific router.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: routers/router_id/l3-agents:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersL3_AgentsIndexResponse'
      tags:
        - routers
      summary: List L3 agents hosting a router
    post:
      operationId: routers/router_id/l3-agents:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersL3_AgentsCreateRequest'
      responses:
        '201':
          description: Ok
      tags:
        - routers
  /v2.0/routers/{router_id}/l3-agents/{id}:
    parameters:
      - $ref: '#/components/parameters/routers_l3-agents_router_id'
      - $ref: '#/components/parameters/routers_l3-agents_id'
    get:
      operationId: routers/router_id/l3-agents/id:get
      responses:
        '200':
          description: Ok
      tags:
        - routers
    delete:
      operationId: routers/router_id/l3-agents/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers
    put:
      operationId: routers/router_id/l3-agents/id:put
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersL3_AgentUpdateResponse'
      tags:
        - routers
  /v2.0/local-ips:
    get:
      parameters:
        - $ref: '#/components/parameters/local_ips_id'
        - $ref: '#/components/parameters/local_ips_name'
        - $ref: '#/components/parameters/local_ips_description'
        - $ref: '#/components/parameters/local_ips_project_id'
        - $ref: '#/components/parameters/local_ips_local_port_id'
        - $ref: '#/components/parameters/local_ips_network_id'
        - $ref: '#/components/parameters/local_ips_local_ip_address'
        - $ref: '#/components/parameters/local_ips_ip_mode'
        - $ref: '#/components/parameters/local_ips_revision_number'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: local-ips:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsIndexResponse'
      tags:
        - local-ips
    post:
      operationId: local-ips:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsCreateResponse'
      tags:
        - local-ips
  /v2.0/local-ips/{id}:
    parameters:
      - $ref: '#/components/parameters/local_ips_local_ip_id'
    get:
      operationId: local-ips/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpShowResponse'
      tags:
        - local-ips
    delete:
      operationId: local-ips/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - local-ips
    put:
      operationId: local-ips/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpUpdateResponse'
      tags:
        - local-ips
  /v2.0/local_ips/{local_ip_id}/port_associations:
    parameters:
      - $ref: '#/components/parameters/port_associations_port_association_local_ip_id'
    get:
      parameters:
        - $ref: '#/components/parameters/port_associations_local_ip_address'
        - $ref: '#/components/parameters/port_associations_fixed_port_id'
        - $ref: '#/components/parameters/port_associations_fixed_ip'
        - $ref: '#/components/parameters/port_associations_host'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists Associations for the given Local IP.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: local_ips/local_ip_id/port_associations:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationsIndexResponse'
      tags:
        - local_ips
      summary: List Local IP Associations
    post:
      description: |-
        Creates a Local IP association with a given Port.
        If a Port has multiple fixed IPs user must specify which IP to use
        for association.

        The operation returns the `Conflict (409)` response code for one of
        reasons:

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: local_ips/local_ip_id/port_associations:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpsPort_AssociationsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationsCreateResponse'
      tags:
        - local_ips
      summary: Create Local IP Association
  /v2.0/local_ips/{local_ip_id}/port_associations/{id}:
    parameters:
      - $ref: '#/components/parameters/port_associations_port_association_local_ip_id'
      - $ref: '#/components/parameters/port_associations_port_association_id'
    get:
      operationId: local_ips/local_ip_id/port_associations/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationShowResponse'
      tags:
        - local_ips
    delete:
      description: |-
        Deletes a Local IP association.

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404
      operationId: local_ips/local_ip_id/port_associations/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - local_ips
      summary: Delete Local IP Association
    put:
      operationId: local_ips/local_ip_id/port_associations/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpsPort_AssociationUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationUpdateResponse'
      tags:
        - local_ips
  /v2.0/log/logs:
    get:
      parameters:
        - $ref: '#/components/parameters/logs_id'
        - $ref: '#/components/parameters/logs_project_id'
        - $ref: '#/components/parameters/logs_name'
        - $ref: '#/components/parameters/logs_resource_type'
        - $ref: '#/components/parameters/logs_resource_id'
        - $ref: '#/components/parameters/logs_event'
        - $ref: '#/components/parameters/logs_target_id'
        - $ref: '#/components/parameters/logs_enabled'
        - $ref: '#/components/parameters/logs_revision_number'
        - $ref: '#/components/parameters/logs_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all log resources associated with your project.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        The list might be empty.

        Normal response codes: 200

        Error response codes: 401
      operationId: log/logs:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogsIndexResponse'
      tags:
        - log
      summary: List logs
    post:
      description: |-
        Creates a log resource.

        Creates a log resource by using the configuration that you define in
        the request object. A response object is returned. The object
        contains a unique ID.

        If the caller is not an administrative user, this call returns the
        HTTP `Forbidden (403)` response code.

        Users with an administrative role can create policies on behalf of
        other projects by specifying a project ID that is different than
        their own.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 409
      operationId: log/logs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLogsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogsCreateResponse'
      tags:
        - log
      summary: Create log
  /v2.0/log/logs/{id}:
    parameters:
      - $ref: '#/components/parameters/logs_log_id'
    get:
      description: |-
        Shows details log resource.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: log/logs/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogShowResponse'
      tags:
        - log
      summary: Show log
    delete:
      description: |-
        Deletes a log resource.

        Normal response codes: 204

        Error response codes: 400, 401, 404, 412
      operationId: log/logs/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - log
      summary: Delete log
    put:
      description: |-
        Updates a log resource.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: log/logs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLogUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogUpdateResponse'
      tags:
        - log
      summary: Update log
  /v2.0/log/loggable-resources:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all resource log types are supporting.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: log/loggable-resources:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourcesIndexResponse'
      tags:
        - log
      summary: List loggable resources
    post:
      operationId: log/loggable-resources:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLoggable_ResourcesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourcesCreateResponse'
      tags:
        - log
  /v2.0/log/loggable-resources/{id}:
    parameters:
      - $ref: '#/components/parameters/loggable_resources_loggable_resource_id'
    get:
      operationId: log/loggable-resources/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourceShowResponse'
      tags:
        - log
    delete:
      operationId: log/loggable-resources/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - log
    put:
      operationId: log/loggable-resources/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLoggable_ResourceUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourceUpdateResponse'
      tags:
        - log
  /v2.0/metering/metering-labels:
    get:
      parameters:
        - $ref: '#/components/parameters/metering_labels_id'
        - $ref: '#/components/parameters/metering_labels_name'
        - $ref: '#/components/parameters/metering_labels_description'
        - $ref: '#/components/parameters/metering_labels_tenant_id'
        - $ref: '#/components/parameters/metering_labels_shared'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all L3 metering labels that belong to the project.

        The list shows the ID for each metering label.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: metering/metering-labels:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelsIndexResponse'
      tags:
        - metering
      summary: List metering labels
    post:
      description: |-
        Creates an L3 metering label.

        Normal response codes: 201

        Error response codes: 400, 401, 403
      operationId: metering/metering-labels:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_LabelsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelsCreateResponse'
      tags:
        - metering
      summary: Create metering label
  /v2.0/metering/metering-labels/{id}:
    parameters:
      - $ref: '#/components/parameters/metering_labels_metering_label_id'
    get:
      description: |-
        Shows details for a metering label.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: metering/metering-labels/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelShowResponse'
      tags:
        - metering
      summary: Show metering label details
    delete:
      description: |-
        Deletes an L3 metering label.

        Normal response codes: 204

        Error response codes: 401, 404
      operationId: metering/metering-labels/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - metering
      summary: Delete metering label
    put:
      operationId: metering/metering-labels/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_LabelUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelUpdateResponse'
      tags:
        - metering
  /v2.0/metering/metering-label-rules:
    get:
      parameters:
        - $ref: '#/components/parameters/metering_label_rules_id'
        - $ref: '#/components/parameters/metering_label_rules_metering_label_id'
        - $ref: '#/components/parameters/metering_label_rules_direction'
        - $ref: '#/components/parameters/metering_label_rules_excluded'
        - $ref: '#/components/parameters/metering_label_rules_remote_ip_prefix'
        - $ref: '#/components/parameters/metering_label_rules_source_ip_prefix'
        - $ref: '#/components/parameters/metering_label_rules_destination_ip_prefix'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists a summary of all L3 metering label rules that belong to the project.

        The list shows the ID for each metering label rule.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: metering/metering-label-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RulesIndexResponse'
      tags:
        - metering
      summary: List metering label rules
    post:
      description: |-
        Creates an L3 metering label rule.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404, 409
      operationId: metering/metering-label-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_Label_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RulesCreateResponse'
      tags:
        - metering
      summary: Create metering label rule
  /v2.0/metering/metering-label-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/metering_label_rules_metering_label_rule_id'
    get:
      description: |-
        Shows details for a metering label rule.

        The response body shows this information for each metering label rule:

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: metering/metering-label-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RuleShowResponse'
      tags:
        - metering
      summary: Show metering label rule details
    delete:
      description: |-
        Deletes an L3 metering label rule.

        Normal response codes: 204

        Error response codes: 401, 404
      operationId: metering/metering-label-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - metering
      summary: Delete metering label rule
    put:
      operationId: metering/metering-label-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_Label_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RuleUpdateResponse'
      tags:
        - metering
  /v2.0/network-ip-availabilities:
    get:
      parameters:
        - $ref: '#/components/parameters/network_ip_availabilities_network_id'
        - $ref: '#/components/parameters/network_ip_availabilities_network_name'
        - $ref: '#/components/parameters/network_ip_availabilities_tenant_id'
        - $ref: '#/components/parameters/network_ip_availabilities_ip_version'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists network IP availability of all networks.

        By default policy configuration, only administrative users can retrieve
        IP availabilities. Otherwise, an empty list will be returned.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: network-ip-availabilities:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilitiesIndexResponse'
      tags:
        - network-ip-availabilities
      summary: List Network IP Availability
    post:
      operationId: network-ip-availabilities:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Ip_AvailabilitiesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilitiesCreateResponse'
      tags:
        - network-ip-availabilities
  /v2.0/network-ip-availabilities/{id}:
    parameters:
      - $ref: '#/components/parameters/network_ip_availabilities_network_ip_availability_id'
    get:
      description: |-
        Shows network IP availability details for a network.

        By default policy configuration, only administrative users can retrieve
        IP availability. Otherwise, `Not Found (404)` will be returned.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: network-ip-availabilities/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilityShowResponse'
      tags:
        - network-ip-availabilities
      summary: Show Network IP Availability
    delete:
      operationId: network-ip-availabilities/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - network-ip-availabilities
    put:
      operationId: network-ip-availabilities/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Ip_AvailabilityUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilityUpdateResponse'
      tags:
        - network-ip-availabilities
  /v2.0/network-segment-ranges:
    get:
      parameters:
        - $ref: '#/components/parameters/network_segment_ranges_id'
        - $ref: '#/components/parameters/network_segment_ranges_name'
        - $ref: '#/components/parameters/network_segment_ranges_project_id'
        - $ref: '#/components/parameters/network_segment_ranges_network_type'
        - $ref: '#/components/parameters/network_segment_ranges_physical_network'
        - $ref: '#/components/parameters/network_segment_ranges_revision_number'
        - $ref: '#/components/parameters/network_segment_ranges_tags'
        - $ref: '#/components/parameters/network_segment_ranges_tags-any'
        - $ref: '#/components/parameters/network_segment_ranges_not-tags'
        - $ref: '#/components/parameters/network_segment_ranges_not-tags-any'
        - $ref: '#/components/parameters/network_segment_ranges_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: network-segment-ranges:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesIndexResponse'
      tags:
        - network-segment-ranges
    post:
      operationId: network-segment-ranges:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Segment_RangesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesCreateResponse'
      tags:
        - network-segment-ranges
  /v2.0/network-segment-ranges/{id}:
    parameters:
      - $ref: '#/components/parameters/network_segment_ranges_network_segment_range_id'
    get:
      operationId: network-segment-ranges/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangeShowResponse'
      tags:
        - network-segment-ranges
    delete:
      operationId: network-segment-ranges/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - network-segment-ranges
    put:
      operationId: network-segment-ranges/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Segment_RangeUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangeUpdateResponse'
      tags:
        - network-segment-ranges
  /v2.0/ports/{port_id}/bindings:
    parameters:
      - $ref: '#/components/parameters/bindings_binding_port_id'
    get:
      parameters:
        - $ref: '#/components/parameters/bindings_host'
        - $ref: '#/components/parameters/bindings_vif_type'
        - $ref: '#/components/parameters/bindings_vnic_type'
        - $ref: '#/components/parameters/bindings_status'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: ports/port_id/bindings:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingsIndexResponse'
      tags:
        - port-bindings
      summary: Show Port Binding of a Port
    post:
      operationId: ports/port_id/bindings:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsBindingsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingsCreateResponse'
      tags:
        - port-bindings
  /v2.0/ports/{port_id}/bindings/{id}/activate:
    parameters:
      - $ref: '#/components/parameters/bindings_binding_port_id'
      - $ref: '#/components/parameters/bindings_binding_id'
    put:
      description: |-
        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: ports/port_id/bindings/id/activate:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsBindingsActivateActivateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingShowResponse'
      tags:
        - port-bindings
      summary: Activate Port binding
  /v2.0/ports/{port_id}/bindings/{id}:
    parameters:
      - $ref: '#/components/parameters/bindings_binding_port_id'
      - $ref: '#/components/parameters/bindings_binding_id'
    get:
      operationId: ports/port_id/bindings/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingShowResponse'
      tags:
        - port-bindings
    delete:
      description: |-
        Normal response codes: 204

        Error response codes: 401, 403, 404, 412
      operationId: ports/port_id/bindings/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - port-bindings
      summary: Delete Port Binding
    put:
      operationId: ports/port_id/bindings/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsBindingUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingUpdateResponse'
      tags:
        - port-bindings
  /v2.0/qos/policies:
    get:
      parameters:
        - $ref: '#/components/parameters/policies_id'
        - $ref: '#/components/parameters/policies_name'
        - $ref: '#/components/parameters/policies_shared'
        - $ref: '#/components/parameters/policies_tenant_id'
        - $ref: '#/components/parameters/policies_is_default'
        - $ref: '#/components/parameters/policies_revision_number'
        - $ref: '#/components/parameters/policies_tags'
        - $ref: '#/components/parameters/policies_tags-any'
        - $ref: '#/components/parameters/policies_not-tags'
        - $ref: '#/components/parameters/policies_not-tags-any'
        - $ref: '#/components/parameters/policies_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all QoS policies associated with your project. One policy can contain
        more than one rule type.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: qos/policies:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesIndexResponse'
      tags:
        - qos
      summary: List QoS policies
    post:
      description: |-
        Creates a QoS policy.

        Creates a QoS policy by using the configuration that you define in
        the request object.
        A response object is returned. The object contains a unique ID.

        By the default policy configuration, if the caller is not an administrative
        user, this call returns the HTTP `Forbidden (403)` response code.

        Users with an administrative role can create policies on behalf of
        other projects by specifying a project ID that is different than
        their own.

        Normal response codes: 201

        Error response codes: 401, 403, 404, 409
      operationId: qos/policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesCreateResponse'
      tags:
        - qos
      summary: Create QoS policy
  /v2.0/qos/policies/{id}:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
    get:
      description: |-
        Shows details for a QoS policy. One policy can contain more than one rule type.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPolicyShowResponse'
      tags:
        - qos
      summary: Show QoS policy details
    delete:
      description: |-
        Deletes a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404, 412
      operationId: qos/policies/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
      summary: Delete QoS policy
    put:
      description: |-
        Updates a QoS policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: qos/policies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPolicyUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPolicyUpdateResponse'
      tags:
        - qos
      summary: Update QoS policy
  /v2.0/qos/rule-types:
    get:
      parameters:
        - $ref: '#/components/parameters/rule_types_all_rules'
        - $ref: '#/components/parameters/rule_types_all_supported'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists available qos rule types.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: qos/rule-types:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypesIndexResponse'
      tags:
        - qos
      summary: List QoS rule types
    post:
      operationId: qos/rule-types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosRule_TypesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypesCreateResponse'
      tags:
        - qos
  /v2.0/qos/rule-types/{id}:
    parameters:
      - $ref: '#/components/parameters/rule_types_rule_type_id'
    get:
      description: |-
        Shows details for an available QoS rule type.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/rule-types/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypeShowResponse'
      tags:
        - qos
      summary: Show QoS rule type details
    delete:
      operationId: qos/rule-types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    put:
      operationId: qos/rule-types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosRule_TypeUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypeUpdateResponse'
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules:
    parameters:
      - $ref: '#/components/parameters/bandwidth_limit_rules_bandwidth_limit_rule_policy_id'
    get:
      parameters:
        - $ref: '#/components/parameters/bandwidth_limit_rules_id'
        - $ref: '#/components/parameters/bandwidth_limit_rules_max_kbps'
        - $ref: '#/components/parameters/bandwidth_limit_rules_max_burst_kbps'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all bandwidth limit rules for a QoS policy.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RulesIndexResponse'
      tags:
        - qos
      summary: List bandwidth limit rules for QoS policy
    post:
      description: |-
        Creates a bandwidth limit rule for a QoS policy.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: qos/policies/policy_id/bandwidth_limit_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RulesCreateResponse'
      tags:
        - qos
      summary: Create bandwidth limit rule
  /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id}:
    parameters:
      - $ref: '#/components/parameters/bandwidth_limit_rules_bandwidth_limit_rule_policy_id'
      - $ref: '#/components/parameters/bandwidth_limit_rules_bandwidth_limit_rule_id'
    get:
      description: |-
        Shows details for a bandwidth limit rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RuleShowResponse'
      tags:
        - qos
      summary: Show bandwidth limit rule details
    delete:
      description: |-
        Deletes a bandwidth limit rule for a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
      summary: Delete bandwidth limit rule
    put:
      description: |-
        Updates a bandwidth limit rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RuleUpdateResponse'
      tags:
        - qos
      summary: Update bandwidth limit rule
  /v2.0/qos/policies/{policy_id}/dscp_marking_rules:
    parameters:
      - $ref: '#/components/parameters/dscp_marking_rules_dscp_marking_rule_policy_id'
    get:
      parameters:
        - $ref: '#/components/parameters/dscp_marking_rules_id'
        - $ref: '#/components/parameters/dscp_marking_rules_dscp_mark'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all DSCP marking rules for a QoS policy.

        The list may be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RulesIndexResponse'
      tags:
        - qos
      summary: List DSCP marking rules for QoS policy
    post:
      description: |-
        Creates a DSCP marking rule for a QoS policy.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: qos/policies/policy_id/dscp_marking_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesDscp_Marking_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RulesCreateResponse'
      tags:
        - qos
      summary: Create DSCP marking rule
  /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id}:
    parameters:
      - $ref: '#/components/parameters/dscp_marking_rules_dscp_marking_rule_policy_id'
      - $ref: '#/components/parameters/dscp_marking_rules_dscp_marking_rule_id'
    get:
      description: |-
        Shows details for a DSCP marking rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RuleShowResponse'
      tags:
        - qos
      summary: Show DSCP marking rule details
    delete:
      description: |-
        Deletes a DSCP marking rule for a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
      summary: Delete DSCP marking rule
    put:
      description: |-
        Updates a DSCP marking rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesDscp_Marking_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RuleUpdateResponse'
      tags:
        - qos
      summary: Update DSCP marking rule
  /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules:
    parameters:
      - $ref: '#/components/parameters/minimum_bandwidth_rules_minimum_bandwidth_rule_policy_id'
    get:
      parameters:
        - $ref: '#/components/parameters/minimum_bandwidth_rules_id'
        - $ref: '#/components/parameters/minimum_bandwidth_rules_min_kbps'
        - $ref: '#/components/parameters/minimum_bandwidth_rules_direction'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all minimum bandwidth rules for a QoS policy.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/minimum_bandwidth_rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RulesIndexResponse'
      tags:
        - qos
      summary: List minimum bandwidth rules for QoS policy
    post:
      description: |-
        Creates a minimum bandwidth rule for a QoS policy.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: qos/policies/policy_id/minimum_bandwidth_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RulesCreateResponse'
      tags:
        - qos
      summary: Create minimum bandwidth rule
  /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id}:
    parameters:
      - $ref: '#/components/parameters/minimum_bandwidth_rules_minimum_bandwidth_rule_policy_id'
      - $ref: '#/components/parameters/minimum_bandwidth_rules_minimum_bandwidth_rule_id'
    get:
      description: |-
        Shows details for a minimum bandwidth rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/minimum_bandwidth_rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RuleShowResponse'
      tags:
        - qos
      summary: Show minimum bandwidth rule details
    delete:
      description: |-
        Deletes a minimum bandwidth rule for a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/minimum_bandwidth_rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
      summary: Delete minimum bandwidth rule
    put:
      description: |-
        Updates a minimum bandwidth rule for a QoS policy.

        Note that the rule cannot be updated, and the update is rejected with error
        code 501, if there is any bound port referring to the rule via the qos policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 501
      operationId: qos/policies/policy_id/minimum_bandwidth_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RuleUpdateResponse'
      tags:
        - qos
      summary: Update minimum bandwidth rule
  /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules:
    parameters:
      - $ref: '#/components/parameters/minimum_packet_rate_rules_minimum_packet_rate_rule_policy_id'
    get:
      parameters:
        - $ref: '#/components/parameters/minimum_packet_rate_rules_id'
        - $ref: '#/components/parameters/minimum_packet_rate_rules_min_kpps'
        - $ref: '#/components/parameters/minimum_packet_rate_rules_direction'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: qos/policies/policy_id/minimum-packet-rate-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RulesIndexResponse'
      tags:
        - qos
    post:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RulesCreateResponse'
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/minimum_packet_rate_rules_minimum_packet_rate_rule_policy_id'
      - $ref: '#/components/parameters/minimum_packet_rate_rules_minimum_packet_rate_rule_id'
    get:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RuleShowResponse'
      tags:
        - qos
    delete:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    put:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RuleUpdateResponse'
      tags:
        - qos
  /v2.0/qos/alias-minimum-packet-rate-rules:
    get:
      parameters:
        - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_id'
        - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_min_kpps'
        - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_direction'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: qos/alias-minimum-packet-rate-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RulesIndexResponse'
      tags:
        - qos
    post:
      operationId: qos/alias-minimum-packet-rate-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RulesCreateResponse'
      tags:
        - qos
  /v2.0/qos/alias-minimum-packet-rate-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_alias_minimum_packet_rate_rule_id'
    get:
      operationId: qos/alias-minimum-packet-rate-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RuleShowResponse'
      tags:
        - qos
    delete:
      operationId: qos/alias-minimum-packet-rate-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    put:
      operationId: qos/alias-minimum-packet-rate-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RuleUpdateResponse'
      tags:
        - qos
  /v2.0/policies/{policy_id}/packet_rate_limit_rules:
    parameters:
      - $ref: '#/components/parameters/packet_rate_limit_rules_packet_rate_limit_rule_policy_id'
    get:
      parameters:
        - $ref: '#/components/parameters/packet_rate_limit_rules_id'
        - $ref: '#/components/parameters/packet_rate_limit_rules_max_kpps'
        - $ref: '#/components/parameters/packet_rate_limit_rules_max_burst_kpps'
        - $ref: '#/components/parameters/packet_rate_limit_rules_direction'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: policies/policy_id/packet_rate_limit_rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RulesIndexResponse'
      tags:
        - policies
    post:
      operationId: policies/policy_id/packet_rate_limit_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RulesCreateResponse'
      tags:
        - policies
  /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id}:
    parameters:
      - $ref: '#/components/parameters/packet_rate_limit_rules_packet_rate_limit_rule_policy_id'
      - $ref: '#/components/parameters/packet_rate_limit_rules_packet_rate_limit_rule_id'
    get:
      operationId: policies/policy_id/packet_rate_limit_rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RuleShowResponse'
      tags:
        - policies
    delete:
      operationId: policies/policy_id/packet_rate_limit_rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - policies
    put:
      operationId: policies/policy_id/packet_rate_limit_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RuleUpdateResponse'
      tags:
        - policies
  /v2.0/qos/alias-bandwidth-limit-rules:
    get:
      parameters:
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_id'
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_max_kbps'
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_direction'
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_max_burst_kbps'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: qos/alias-bandwidth-limit-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RulesIndexResponse'
      tags:
        - qos
    post:
      operationId: qos/alias-bandwidth-limit-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RulesCreateResponse'
      tags:
        - qos
  /v2.0/qos/alias-bandwidth-limit-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/alias_bandwidth_limit_rules_alias_bandwidth_limit_rule_id'
    get:
      operationId: qos/alias-bandwidth-limit-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RuleShowResponse'
      tags:
        - qos
    delete:
      operationId: qos/alias-bandwidth-limit-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    put:
      operationId: qos/alias-bandwidth-limit-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RuleUpdateResponse'
      tags:
        - qos
  /v2.0/qos/alias-dscp-marking-rules:
    get:
      parameters:
        - $ref: '#/components/parameters/alias_dscp_marking_rules_id'
        - $ref: '#/components/parameters/alias_dscp_marking_rules_dscp_mark'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: qos/alias-dscp-marking-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RulesIndexResponse'
      tags:
        - qos
    post:
      operationId: qos/alias-dscp-marking-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Dscp_Marking_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RulesCreateResponse'
      tags:
        - qos
  /v2.0/qos/alias-dscp-marking-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/alias_dscp_marking_rules_alias_dscp_marking_rule_id'
    get:
      operationId: qos/alias-dscp-marking-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RuleShowResponse'
      tags:
        - qos
    delete:
      operationId: qos/alias-dscp-marking-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    put:
      operationId: qos/alias-dscp-marking-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Dscp_Marking_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RuleUpdateResponse'
      tags:
        - qos
  /v2.0/qos/alias-minimum-bandwidth-rules:
    get:
      parameters:
        - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_id'
        - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_min_kbps'
        - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_direction'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: qos/alias-minimum-bandwidth-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RulesIndexResponse'
      tags:
        - qos
    post:
      operationId: qos/alias-minimum-bandwidth-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RulesCreateResponse'
      tags:
        - qos
  /v2.0/qos/alias-minimum-bandwidth-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_alias_minimum_bandwidth_rule_id'
    get:
      operationId: qos/alias-minimum-bandwidth-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RuleShowResponse'
      tags:
        - qos
    delete:
      operationId: qos/alias-minimum-bandwidth-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    put:
      operationId: qos/alias-minimum-bandwidth-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RuleUpdateResponse'
      tags:
        - qos
  /v2.0/quotas:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists quotas for projects with non-default quota values.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasIndexResponse'
      tags:
        - quotas
      summary: List quotas for projects with non-default quota values
  /v2.0/quotas/{id}/default:
    parameters:
      - $ref: '#/components/parameters/quotas_default_id'
    get:
      description: |-
        Lists default quotas for a project.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas/id/default:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasDefaultDefaultResponse'
      tags:
        - quotas
      summary: List default quotas for a project
  /v2.0/quotas/{id}:
    parameters:
      - $ref: '#/components/parameters/quotas_id'
    get:
      description: |-
        Lists quotas for a project.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaShowResponse'
      tags:
        - quotas
      summary: List quotas for a project
    delete:
      description: |-
        Resets quotas to default values for a project.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: quotas/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - quotas
      summary: Reset quota for a project
    put:
      description: |-
        Updates quotas for a project. Use when non-default quotas are desired.

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaUpdateResponse'
      tags:
        - quotas
      summary: Update quota for a project
  /v2.0/quotas/{id}/details:
    parameters:
      - $ref: '#/components/parameters/quotas_details_id'
    get:
      operationId: quotas/id/details:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasDetailsDetailsResponse'
      tags:
        - quotas
  /v2.0/rbac-policies:
    get:
      parameters:
        - $ref: '#/components/parameters/rbac_policies_id'
        - $ref: '#/components/parameters/rbac_policies_object_type'
        - $ref: '#/components/parameters/rbac_policies_object_id'
        - $ref: '#/components/parameters/rbac_policies_target_tenant'
        - $ref: '#/components/parameters/rbac_policies_tenant_id'
        - $ref: '#/components/parameters/rbac_policies_action'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        List RBAC policies that belong to a given tenant.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: rbac-policies:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PoliciesIndexResponse'
      tags:
        - rbac-policies
      summary: List RBAC policies
    post:
      description: |-
        Create RBAC policy for given tenant.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: rbac-policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rbac_PoliciesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PoliciesCreateResponse'
      tags:
        - rbac-policies
      summary: Create RBAC policy
  /v2.0/rbac-policies/{id}:
    parameters:
      - $ref: '#/components/parameters/rbac_policies_rbac_policy_id'
    get:
      description: |-
        Show details for a given RBAC policy.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: rbac-policies/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PolicyShowResponse'
      tags:
        - rbac-policies
      summary: Show RBAC policy details
    delete:
      description: |-
        Delete an RBAC policy.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: rbac-policies/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - rbac-policies
      summary: Delete RBAC policy
    put:
      description: |-
        Update RBAC policy for given tenant.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: rbac-policies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rbac_PolicyUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PolicyUpdateResponse'
      tags:
        - rbac-policies
      summary: Update RBAC policy
  /v2.0/default-security-group-rules:
    get:
      parameters:
        - $ref: '#/components/parameters/default_security_group_rules_id'
        - $ref: '#/components/parameters/default_security_group_rules_description'
        - $ref: '#/components/parameters/default_security_group_rules_remote_group_id'
        - $ref: '#/components/parameters/default_security_group_rules_remote_address_group_id'
        - $ref: '#/components/parameters/default_security_group_rules_direction'
        - $ref: '#/components/parameters/default_security_group_rules_protocol'
        - $ref: '#/components/parameters/default_security_group_rules_port_range_min'
        - $ref: '#/components/parameters/default_security_group_rules_port_range_max'
        - $ref: '#/components/parameters/default_security_group_rules_ethertype'
        - $ref: '#/components/parameters/default_security_group_rules_remote_ip_prefix'
        - $ref: '#/components/parameters/default_security_group_rules_used_in_default_sg'
        - $ref: '#/components/parameters/default_security_group_rules_used_in_non_default_sg'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists a summary of all OpenStack Networking security group rules that are used
        for every newly created Security Group.

        The list provides the ID for each security group default rule.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: default-security-group-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RulesIndexResponse'
      tags:
        - default-security-group-rules
      summary: List security group default rules
    post:
      description: |-
        Creates an Openstack Networking security group rule template.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: default-security-group-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default_Security_Group_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RulesCreateResponse'
      tags:
        - default-security-group-rules
      summary: Create security group default rule
  /v2.0/default-security-group-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/default_security_group_rules_default_security_group_rule_id'
    get:
      description: |-
        Shows detailed information for a security group default rule.

        The response body contains the following information about the
        security group rule:

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: default-security-group-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RuleShowResponse'
      tags:
        - default-security-group-rules
      summary: Show security group default rule
    delete:
      description: |-
        Deletes an OpenStack Networking security group rule template.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: default-security-group-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - default-security-group-rules
      summary: Delete security group default rule
    put:
      operationId: default-security-group-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default_Security_Group_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RuleUpdateResponse'
      tags:
        - default-security-group-rules
  /v2.0/security-groups:
    get:
      parameters:
        - $ref: '#/components/parameters/security_groups_id'
        - $ref: '#/components/parameters/security_groups_name'
        - $ref: '#/components/parameters/security_groups_tenant_id'
        - $ref: '#/components/parameters/security_groups_revision_number'
        - $ref: '#/components/parameters/security_groups_tags'
        - $ref: '#/components/parameters/security_groups_tags-any'
        - $ref: '#/components/parameters/security_groups_not-tags'
        - $ref: '#/components/parameters/security_groups_not-tags-any'
        - $ref: '#/components/parameters/security_groups_description'
        - $ref: '#/components/parameters/security_groups_shared'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists OpenStack Networking security groups to which the project has access.

        The response is an array of `security_group` objects which contains a list of
        `security_group_rules` objects.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: security-groups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsIndexResponse'
      tags:
        - security-groups
      summary: List security groups
    post:
      description: |-
        Creates an OpenStack Networking security group.

        This operation creates a security group with default security group
        rules for the IPv4 and IPv6 ether types.

        Normal response codes: 201

        Error response codes: 400, 401, 409
      operationId: security-groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_GroupsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsCreateResponse'
      tags:
        - security-groups
      summary: Create security group
  /v2.0/security-groups/{id}:
    parameters:
      - $ref: '#/components/parameters/security_groups_security_group_id'
    get:
      description: |-
        Shows details for a security group.

        The associated security group rules are contained in the response.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: security-groups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupShowResponse'
      tags:
        - security-groups
      summary: Show security group
    delete:
      description: |-
        Deletes an OpenStack Networking security group.

        This operation deletes an OpenStack Networking security group and
        its associated security group rules, provided that a port is not
        associated with the security group. If a port is associated with the security
        group 409 (Conflict) is returned.

        This operation does not require a request body. This operation does
        not return a response body.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: security-groups/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - security-groups
      summary: Delete security group
    put:
      description: |-
        Updates a security group.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: security-groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_GroupUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupUpdateResponse'
      tags:
        - security-groups
      summary: Update security group
  /v2.0/security-group-rules:
    get:
      parameters:
        - $ref: '#/components/parameters/security_group_rules_id'
        - $ref: '#/components/parameters/security_group_rules_security_group_id'
        - $ref: '#/components/parameters/security_group_rules_remote_group_id'
        - $ref: '#/components/parameters/security_group_rules_direction'
        - $ref: '#/components/parameters/security_group_rules_protocol'
        - $ref: '#/components/parameters/security_group_rules_port_range_min'
        - $ref: '#/components/parameters/security_group_rules_port_range_max'
        - $ref: '#/components/parameters/security_group_rules_ethertype'
        - $ref: '#/components/parameters/security_group_rules_remote_ip_prefix'
        - $ref: '#/components/parameters/security_group_rules_tenant_id'
        - $ref: '#/components/parameters/security_group_rules_revision_number'
        - $ref: '#/components/parameters/security_group_rules_description'
        - $ref: '#/components/parameters/security_group_rules_normalized_cidr'
        - $ref: '#/components/parameters/security_group_rules_remote_address_group_id'
        - $ref: '#/components/parameters/security_group_rules_belongs_to_default_sg'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists a summary of all OpenStack Networking security group rules that the project can access.

        The list provides the ID for each security group rule.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: security-group-rules:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RulesIndexResponse'
      tags:
        - security-group-rules
      summary: List security group rules
    post:
      description: |-
        Creates an OpenStack Networking security group rule.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: security-group-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_Group_RulesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RulesCreateResponse'
      tags:
        - security-group-rules
      summary: Create security group rule
  /v2.0/security-group-rules/{id}:
    parameters:
      - $ref: '#/components/parameters/security_group_rules_security_group_rule_id'
    get:
      description: |-
        Shows detailed information for a security group rule.

        The response body contains the following information about the
        security group rule:

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: security-group-rules/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RuleShowResponse'
      tags:
        - security-group-rules
      summary: Show security group rule
    delete:
      description: |-
        Deletes a rule from an OpenStack Networking security group.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: security-group-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - security-group-rules
      summary: Delete security group rule
    put:
      operationId: security-group-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_Group_RuleUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RuleUpdateResponse'
      tags:
        - security-group-rules
  /v2.0/segments:
    get:
      parameters:
        - $ref: '#/components/parameters/segments_id'
        - $ref: '#/components/parameters/segments_network_id'
        - $ref: '#/components/parameters/segments_physical_network'
        - $ref: '#/components/parameters/segments_network_type'
        - $ref: '#/components/parameters/segments_name'
        - $ref: '#/components/parameters/segments_revision_number'
        - $ref: '#/components/parameters/segments_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists segments to which the project has access.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: segments:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsIndexResponse'
      tags:
        - segments
      summary: List segments
    post:
      description: |-
        Creates a segment.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: segments:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsCreateResponse'
      tags:
        - segments
      summary: Create segment
  /v2.0/segments/{id}:
    parameters:
      - $ref: '#/components/parameters/segments_segment_id'
    get:
      description: |-
        Shows details for a segment.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: segments/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentShowResponse'
      tags:
        - segments
      summary: Show segment details
    delete:
      description: |-
        Deletes a segment and its associated resources.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: segments/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - segments
      summary: Delete segment
    put:
      description: |-
        Updates a segment.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: segments/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentUpdateResponse'
      tags:
        - segments
      summary: Update segment
  /v2.0/service-providers:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists service providers and their associated service types.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: service-providers:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProvidersIndexResponse'
      tags:
        - service-providers
      summary: List service providers
    post:
      operationId: service-providers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProvidersCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProvidersCreateResponse'
      tags:
        - service-providers
  /v2.0/service-providers/{id}:
    parameters:
      - $ref: '#/components/parameters/service_providers_service_provider_id'
    get:
      operationId: service-providers/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProviderShowResponse'
      tags:
        - service-providers
    delete:
      operationId: service-providers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - service-providers
    put:
      operationId: service-providers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProviderUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProviderUpdateResponse'
      tags:
        - service-providers
  /v2.0/subnetpools:
    get:
      parameters:
        - $ref: '#/components/parameters/subnetpools_id'
        - $ref: '#/components/parameters/subnetpools_name'
        - $ref: '#/components/parameters/subnetpools_tenant_id'
        - $ref: '#/components/parameters/subnetpools_default_quota'
        - $ref: '#/components/parameters/subnetpools_ip_version'
        - $ref: '#/components/parameters/subnetpools_default_prefixlen'
        - $ref: '#/components/parameters/subnetpools_min_prefixlen'
        - $ref: '#/components/parameters/subnetpools_max_prefixlen'
        - $ref: '#/components/parameters/subnetpools_is_default'
        - $ref: '#/components/parameters/subnetpools_shared'
        - $ref: '#/components/parameters/subnetpools_address_scope_id'
        - $ref: '#/components/parameters/subnetpools_revision_number'
        - $ref: '#/components/parameters/subnetpools_tags'
        - $ref: '#/components/parameters/subnetpools_tags-any'
        - $ref: '#/components/parameters/subnetpools_not-tags'
        - $ref: '#/components/parameters/subnetpools_not-tags-any'
        - $ref: '#/components/parameters/subnetpools_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists subnet pools that the project has access to.

        Default policy settings return only the subnet pools owned by
        the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: subnetpools:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsIndexResponse'
      tags:
        - subnetpools
      summary: List subnet pools
    post:
      description: |-
        Creates a subnet pool.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: subnetpools:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsCreateResponse'
      tags:
        - subnetpools
      summary: Create subnet pool
  /v2.0/subnetpools/{id}/onboard_network_subnets:
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    put:
      description: |-
        Onboard network subnets to a subnet pool.

        Normal response codes: 200

        Error response codes: 400
      operationId: subnetpools/id/onboard_network_subnets:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsResponse'
      tags:
        - subnetpools
      summary: Onboard subnets
  /v2.0/subnetpools/{id}:
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    get:
      description: |-
        Shows information for a subnet pool.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: subnetpools/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolShowResponse'
      tags:
        - subnetpools
      summary: Show subnet pool
    delete:
      description: |-
        Deletes a subnet pool.

        The operation fails if any subnets allocated from the subnet pool
        are still in use.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: subnetpools/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnetpools
      summary: Delete subnet pool
    put:
      description: |-
        Updates a subnet pool.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: subnetpools/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolUpdateResponse'
      tags:
        - subnetpools
      summary: Update subnet pool
  /v2.0/subnetpools/{id}/add_prefixes:
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    put:
      description: |-
        Adds prefixes to a subnet pool.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 412
      operationId: subnetpools/id/add_prefixes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsAdd_PrefixesAdd_PrefixesRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsAdd_PrefixesAdd_PrefixesResponse'
      tags:
        - subnetpools
      summary: Add prefixes
  /v2.0/subnetpools/{id}/remove_prefixes:
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    put:
      description: |-
        Remove prefixes from a subnet pool.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 412
      operationId: subnetpools/id/remove_prefixes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsRemove_PrefixesRemove_PrefixesRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsRemove_PrefixesRemove_PrefixesResponse'
      tags:
        - subnetpools
      summary: Remove prefixes
  /v2.0/ports/{port_id}/tags:
    parameters:
      - $ref: '#/components/parameters/ports_tags_port_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: ports/port_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsTagsIndexResponse'
      tags:
        - ports
    delete:
      operationId: ports/port_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - ports
    put:
      operationId: ports/port_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsTagsUpdate_AllResponse'
      tags:
        - ports
  /v2.0/ports/{port_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/ports_tags_port_id'
      - $ref: '#/components/parameters/ports_tags_id'
    get:
      operationId: ports/port_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - ports
    delete:
      operationId: ports/port_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - ports
    put:
      operationId: ports/port_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - ports
  /v2.0/subnets/{subnet_id}/tags:
    parameters:
      - $ref: '#/components/parameters/subnets_tags_subnet_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: subnets/subnet_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsTagsIndexResponse'
      tags:
        - subnets
    delete:
      operationId: subnets/subnet_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnets
    put:
      operationId: subnets/subnet_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetsTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsTagsUpdate_AllResponse'
      tags:
        - subnets
  /v2.0/subnets/{subnet_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/subnets_tags_subnet_id'
      - $ref: '#/components/parameters/subnets_tags_id'
    get:
      operationId: subnets/subnet_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - subnets
    delete:
      operationId: subnets/subnet_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnets
    put:
      operationId: subnets/subnet_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - subnets
  /v2.0/subnetpools/{subnetpool_id}/tags:
    parameters:
      - $ref: '#/components/parameters/subnetpools_tags_subnetpool_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: subnetpools/subnetpool_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsTagsIndexResponse'
      tags:
        - subnetpools
    delete:
      operationId: subnetpools/subnetpool_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnetpools
    put:
      operationId: subnetpools/subnetpool_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsTagsUpdate_AllResponse'
      tags:
        - subnetpools
  /v2.0/subnetpools/{subnetpool_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/subnetpools_tags_subnetpool_id'
      - $ref: '#/components/parameters/subnetpools_tags_id'
    get:
      operationId: subnetpools/subnetpool_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - subnetpools
    delete:
      operationId: subnetpools/subnetpool_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnetpools
    put:
      operationId: subnetpools/subnetpool_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - subnetpools
  /v2.0/networks/{network_id}/tags:
    parameters:
      - $ref: '#/components/parameters/networks_tags_network_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: networks/network_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksTagsIndexResponse'
      tags:
        - networks
    delete:
      operationId: networks/network_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - networks
    put:
      operationId: networks/network_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksTagsUpdate_AllResponse'
      tags:
        - networks
  /v2.0/networks/{network_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/networks_tags_network_id'
      - $ref: '#/components/parameters/networks_tags_id'
    get:
      operationId: networks/network_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - networks
    delete:
      operationId: networks/network_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - networks
    put:
      operationId: networks/network_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - networks
  /v2.0/routers/{router_id}/tags:
    parameters:
      - $ref: '#/components/parameters/routers_tags_router_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: routers/router_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersTagsIndexResponse'
      tags:
        - routers
    delete:
      operationId: routers/router_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers
    put:
      operationId: routers/router_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersTagsUpdate_AllResponse'
      tags:
        - routers
  /v2.0/routers/{router_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/routers_tags_router_id'
      - $ref: '#/components/parameters/routers_tags_id'
    get:
      operationId: routers/router_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - routers
    delete:
      operationId: routers/router_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers
    put:
      operationId: routers/router_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - routers
  /v2.0/floatingips/{floatingip_id}/tags:
    parameters:
      - $ref: '#/components/parameters/floatingips_tags_floatingip_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: floatingips/floatingip_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsTagsIndexResponse'
      tags:
        - floatingips
    delete:
      operationId: floatingips/floatingip_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingips
    put:
      operationId: floatingips/floatingip_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsTagsUpdate_AllResponse'
      tags:
        - floatingips
  /v2.0/floatingips/{floatingip_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/floatingips_tags_floatingip_id'
      - $ref: '#/components/parameters/floatingips_tags_id'
    get:
      operationId: floatingips/floatingip_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - floatingips
    delete:
      operationId: floatingips/floatingip_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingips
    put:
      operationId: floatingips/floatingip_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - floatingips
  /v2.0/policies/{policy_id}/tags:
    parameters:
      - $ref: '#/components/parameters/policies_tags_policy_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: policies/policy_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesTagsIndexResponse'
      tags:
        - policies
    delete:
      operationId: policies/policy_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - policies
    put:
      operationId: policies/policy_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesTagsUpdate_AllResponse'
      tags:
        - policies
  /v2.0/policies/{policy_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/policies_tags_policy_id'
      - $ref: '#/components/parameters/policies_tags_id'
    get:
      operationId: policies/policy_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - policies
    delete:
      operationId: policies/policy_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - policies
    put:
      operationId: policies/policy_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - policies
  /v2.0/security-groups/{security_group_id}/tags:
    parameters:
      - $ref: '#/components/parameters/security-groups_tags_security_group_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: security-groups/security_group_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsTagsIndexResponse'
      tags:
        - security-groups
    delete:
      operationId: security-groups/security_group_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - security-groups
    put:
      operationId: security-groups/security_group_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_GroupsTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsTagsUpdate_AllResponse'
      tags:
        - security-groups
  /v2.0/security-groups/{security_group_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/security-groups_tags_security_group_id'
      - $ref: '#/components/parameters/security-groups_tags_id'
    get:
      operationId: security-groups/security_group_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - security-groups
    delete:
      operationId: security-groups/security_group_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - security-groups
    put:
      operationId: security-groups/security_group_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - security-groups
  /v2.0/trunks/{trunk_id}/tags:
    parameters:
      - $ref: '#/components/parameters/trunks_tags_trunk_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: trunks/trunk_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksTagsIndexResponse'
      tags:
        - trunks
    delete:
      operationId: trunks/trunk_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - trunks
    put:
      operationId: trunks/trunk_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrunksTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksTagsUpdate_AllResponse'
      tags:
        - trunks
  /v2.0/trunks/{trunk_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/trunks_tags_trunk_id'
      - $ref: '#/components/parameters/trunks_tags_id'
    get:
      operationId: trunks/trunk_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - trunks
    delete:
      operationId: trunks/trunk_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - trunks
    put:
      operationId: trunks/trunk_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - trunks
  /v2.0/network_segment_ranges/{network_segment_range_id}/tags:
    parameters:
      - $ref: '#/components/parameters/network_segment_ranges_tags_network_segment_range_id'
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      operationId: network_segment_ranges/network_segment_range_id/tags:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesTagsIndexResponse'
      tags:
        - network_segment_ranges
    delete:
      operationId: network_segment_ranges/network_segment_range_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - network_segment_ranges
    put:
      operationId: network_segment_ranges/network_segment_range_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Segment_RangesTagsUpdate_AllRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesTagsUpdate_AllResponse'
      tags:
        - network_segment_ranges
  /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id}:
    parameters:
      - $ref: '#/components/parameters/network_segment_ranges_tags_network_segment_range_id'
      - $ref: '#/components/parameters/network_segment_ranges_tags_id'
    get:
      operationId: network_segment_ranges/network_segment_range_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - network_segment_ranges
    delete:
      operationId: network_segment_ranges/network_segment_range_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - network_segment_ranges
    put:
      operationId: network_segment_ranges/network_segment_range_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - network_segment_ranges
  /v2.0/networks:
    get:
      parameters:
        - $ref: '#/components/parameters/networks_id'
        - $ref: '#/components/parameters/networks_name'
        - $ref: '#/components/parameters/networks_admin_state_up'
        - $ref: '#/components/parameters/networks_status'
        - $ref: '#/components/parameters/networks_tenant_id'
        - $ref: '#/components/parameters/networks_shared'
        - $ref: '#/components/parameters/networks_router_external'
        - $ref: '#/components/parameters/networks_mtu'
        - $ref: '#/components/parameters/networks_provider_network_type'
        - $ref: '#/components/parameters/networks_provider_physical_network'
        - $ref: '#/components/parameters/networks_provider_segmentation_id'
        - $ref: '#/components/parameters/networks_revision_number'
        - $ref: '#/components/parameters/networks_tags'
        - $ref: '#/components/parameters/networks_tags-any'
        - $ref: '#/components/parameters/networks_not-tags'
        - $ref: '#/components/parameters/networks_not-tags-any'
        - $ref: '#/components/parameters/networks_is_default'
        - $ref: '#/components/parameters/networks_description'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists networks to which the project has access.

        Default policy settings return only networks that the project who submits the
        request owns, unless an administrative user submits the request. In addition,
        networks shared with the project who submits the request are also returned.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        You can also use the `tags`, `tags-any`, `not-tags`, `not-tags-any`
        query parameter to filter the response with tags. For information,
        see [REST API Impact](http://specs.openstack.org/openstack/neutron-specs/specs/mitaka/add-tags-to-core-resources.html#rest-api-impact).

        Normal response codes: 200

        Error response codes: 401
      operationId: networks:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksIndexResponse'
      tags:
        - networks
      summary: List networks
    post:
      description: |-
        Creates a network.

        A request body is optional. An administrative user can specify
        another project ID, which is the project that owns the network, in
        the request body.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: networks:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksCreateResponse'
      tags:
        - networks
      summary: Create network
  /v2.0/subnets:
    get:
      parameters:
        - $ref: '#/components/parameters/subnets_id'
        - $ref: '#/components/parameters/subnets_name'
        - $ref: '#/components/parameters/subnets_ip_version'
        - $ref: '#/components/parameters/subnets_network_id'
        - $ref: '#/components/parameters/subnets_subnetpool_id'
        - $ref: '#/components/parameters/subnets_cidr'
        - $ref: '#/components/parameters/subnets_gateway_ip'
        - $ref: '#/components/parameters/subnets_tenant_id'
        - $ref: '#/components/parameters/subnets_enable_dhcp'
        - $ref: '#/components/parameters/subnets_ipv6_ra_mode'
        - $ref: '#/components/parameters/subnets_ipv6_address_mode'
        - $ref: '#/components/parameters/subnets_shared'
        - $ref: '#/components/parameters/subnets_revision_number'
        - $ref: '#/components/parameters/subnets_router_external'
        - $ref: '#/components/parameters/subnets_tags'
        - $ref: '#/components/parameters/subnets_tags-any'
        - $ref: '#/components/parameters/subnets_not-tags'
        - $ref: '#/components/parameters/subnets_not-tags-any'
        - $ref: '#/components/parameters/subnets_description'
        - $ref: '#/components/parameters/subnets_segment_id'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists subnets that the project has access to.

        Default policy settings return only subnets owned by the
        project of the user submitting the request, unless the
        user has administrative role. You can control which attributes
        are returned by using the fields query parameter. You can filter
        results by using query string parameters.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: subnets:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsIndexResponse'
      tags:
        - subnets
      summary: List subnets
    post:
      description: |-
        Creates a subnet on a network.

        OpenStack Networking does not try to derive the correct IP version
        from the CIDR. If you do not specify the `gateway_ip` attribute,
        OpenStack Networking allocates an address from the CIDR for the
        gateway for the subnet.

        To specify a subnet without a gateway, set the `gateway_ip`
        attribute to `null` in the request body. If you do not specify
        the `allocation_pools` attribute, OpenStack Networking
        automatically allocates pools for covering all IP addresses in the
        CIDR, excluding the address reserved for the subnet gateway.
        Otherwise, you can explicitly specify allocation pools as shown in
        the following example.

        When you specify both the `allocation_pools` and `gateway_ip`
        attributes, you must ensure that the gateway IP does not overlap
        with the allocation pools; otherwise, the call returns the
        `Conflict (409)` response code.

        A subnet can have one or more name servers and host routes. Hosts
        in this subnet use the name servers. Devices with IP addresses from
        this subnet, not including the local subnet route, use the host
        routes.

        Specify the `ipv6_ra_mode` and `ipv6_address_mode` attributes
        to create subnets that support IPv6 configurations, such as
        stateless address autoconfiguration (SLAAC), DHCPv6 stateful, and
        DHCPv6 stateless configurations.

        A subnet can optionally be associated with a network segment when
        it is created by specifying the `segment_id` of a valid segment
        on the specified network. A network with subnets associated in this
        way is called a routed network. On any given network, all of the
        subnets must be associated with segments or none of them can be.
        Neutron enforces this invariant. Currently, routed networks are
        only supported for provider networks.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404, 409
      operationId: subnets:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsCreateResponse'
      tags:
        - subnets
      summary: Create subnet
  /v2.0/ports:
    get:
      parameters:
        - $ref: '#/components/parameters/ports_id'
        - $ref: '#/components/parameters/ports_name'
        - $ref: '#/components/parameters/ports_network_id'
        - $ref: '#/components/parameters/ports_admin_state_up'
        - $ref: '#/components/parameters/ports_mac_address'
        - $ref: '#/components/parameters/ports_fixed_ips'
        - $ref: '#/components/parameters/ports_device_id'
        - $ref: '#/components/parameters/ports_device_owner'
        - $ref: '#/components/parameters/ports_tenant_id'
        - $ref: '#/components/parameters/ports_status'
        - $ref: '#/components/parameters/ports_ip_allocation'
        - $ref: '#/components/parameters/ports_binding_host_id'
        - $ref: '#/components/parameters/ports_revision_number'
        - $ref: '#/components/parameters/ports_tags'
        - $ref: '#/components/parameters/ports_tags-any'
        - $ref: '#/components/parameters/ports_not-tags'
        - $ref: '#/components/parameters/ports_not-tags-any'
        - $ref: '#/components/parameters/ports_description'
        - $ref: '#/components/parameters/ports_security_groups'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists ports to which the user has access.

        Default policy settings return only those ports that are owned by
        the project of the user who submits the request, unless the request is submitted
        by a user with administrative rights.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        If the `ip-substring-filtering` extension is enabled, the Neutron API
        supports IP address substring filtering on the `fixed_ips` attribute.
        If you specify an IP address substring (`ip_address_substr`) in
        an entry of the `fixed_ips` attribute, the Neutron API will list all
        ports that have an IP address matching the substring.

        Normal response codes: 200

        Error response codes: 401
      operationId: ports:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsIndexResponse'
      tags:
        - ports
      summary: List ports
    post:
      description: |-
        Creates a port on a network.

        To define the network in which to create the port, specify the
        `network_id` attribute in the request body.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: ports:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsCreateResponse'
      tags:
        - ports
      summary: Create port
  /v2.0/networks/{network_id}:
    parameters:
      - $ref: '#/components/parameters/networks_network_network_id'
    get:
      description: |-
        Shows details for a network.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: networks/network_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkShowResponse'
      tags:
        - networks
      summary: Show network details
    delete:
      description: |-
        Deletes a network and its associated resources.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: networks/network_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - networks
      summary: Delete network
    put:
      description: |-
        Updates a network.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: networks/network_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkUpdateResponse'
      tags:
        - networks
      summary: Update network
  /v2.0/subnets/{subnet_id}:
    parameters:
      - $ref: '#/components/parameters/subnets_subnet_subnet_id'
    get:
      description: |-
        Shows details for a subnet.

        Use the fields query parameter to filter the results.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: subnets/subnet_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetShowResponse'
      tags:
        - subnets
      summary: Show subnet details
    delete:
      description: |-
        Deletes a subnet.

        The operation fails if subnet IP addresses are still allocated.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: subnets/subnet_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnets
      summary: Delete subnet
    put:
      description: |-
        Updates a subnet.

        Some attributes, such as IP version (ip_version), CIDR (cidr), and
        segment (segment_id) cannot be updated. Attempting to update these
        attributes results in a `400 Bad Request` error.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: subnets/subnet_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetUpdateResponse'
      tags:
        - subnets
      summary: Update subnet
  /v2.0/ports/{port_id}:
    parameters:
      - $ref: '#/components/parameters/ports_port_port_id'
    get:
      description: |-
        Shows details for a port.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: ports/port_id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortShowResponse'
      tags:
        - ports
      summary: Show port details
    delete:
      description: |-
        Deletes a port.

        Any IP addresses that are associated with the port are returned to
        the respective subnets allocation pools.

        Normal response codes: 204

        Error response codes: 401, 403, 404, 412
      operationId: ports/port_id:delete
      responses:
        '204':
          description: Ok
      tags:
        - ports
      summary: Delete port
    put:
      description: |-
        Updates a port.

        You can update information for a port, such as its symbolic name
        and associated IPs. When you update IPs for a port, any previously
        associated IPs are removed, returned to the respective subnet
        allocation pools, and replaced by the IPs in the request body.
        Therefore, this operation replaces the `fixed_ip` attribute when
        you specify it in the request body. If the updated IP addresses are
        not valid or are already in use, the operation fails and the
        existing IP addresses are not removed from the port.

        When you update security groups for a port and the operation
        succeeds, any associated security groups are removed and replaced
        by the security groups in the request body. Therefore, this
        operation replaces the `security_groups` attribute when you
        specify it in the request body. If the security groups are not
        valid, the operation fails and the existing security groups are not
        removed from the port.

        When you update `binding:profile` of a port with null it is treated as {}
        in the response.

        The `binding:vnic_type` attribute can be updated on unbound ports only.
        If the port is already bound, the update operation of the attribute returns
        the `Conflict (409)` response code.

        Only admins and users with a specific role can update the data plane status
        (default role: `data_plane_integrator`).

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 412
      operationId: ports/port_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortUpdateResponse'
      tags:
        - ports
      summary: Update port
  /v2.0/ports/{port_id}/add_allowed_address_pairs:
    parameters:
      - $ref: '#/components/parameters/ports_port_port_id'
    put:
      description: |-
        Atomically adds a set of allowed_address_pairs to the port’s already
        existing allowed_address_pairs.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: ports/port_id/add_allowed_address_pairs:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsResponse'
      tags:
        - ports
      summary: Add allowed_address_pairs to port
  /v2.0/vpn/ikepolicies:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists IKE policies.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/ikepolicies:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepoliciesIndexResponse'
      tags:
        - vpn
      summary: List IKE policies
    post:
      description: |-
        Creates an IKE policy.

        The IKE policy is used for phases one and two negotiation of the
        VPN connection. You can specify both the authentication and
        encryption algorithms for connections.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/ikepolicies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIkepoliciesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepoliciesCreateResponse'
      tags:
        - vpn
      summary: Create IKE policy
  /v2.0/vpn/ikepolicies/{id}:
    parameters:
      - $ref: '#/components/parameters/ikepolicies_ikepolicy_id'
    get:
      description: |-
        Shows details for an IKE policy.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/ikepolicies/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepolicyShowResponse'
      tags:
        - vpn
      summary: Show IKE policy details
    delete:
      description: |-
        Removes an IKE policy.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/ikepolicies/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - vpn
      summary: Remove IKE policy
    put:
      description: |-
        Updates policy settings in an IKE policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/ikepolicies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIkepolicyUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepolicyUpdateResponse'
      tags:
        - vpn
      summary: Update IKE policy
  /v2.0/vpn/ipsecpolicies:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all IPsec policies.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/ipsecpolicies:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpoliciesIndexResponse'
      tags:
        - vpn
      summary: List IPsec policies
    post:
      description: |-
        Creates an IP security (IPsec) policy.

        The IPsec policy specifies the authentication and encryption
        algorithms and encapsulation mode to use for the established VPN
        connection.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/ipsecpolicies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsecpoliciesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpoliciesCreateResponse'
      tags:
        - vpn
      summary: Create IPsec policy
  /v2.0/vpn/ipsecpolicies/{id}:
    parameters:
      - $ref: '#/components/parameters/ipsecpolicies_ipsecpolicy_id'
    get:
      description: |-
        Shows details for an IPsec policy.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/ipsecpolicies/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpolicyShowResponse'
      tags:
        - vpn
      summary: Show IPsec policy
    delete:
      description: |-
        Removes an IPsec policy.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/ipsecpolicies/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - vpn
      summary: Remove IPsec policy
    put:
      description: |-
        Updates policy settings in an IPsec policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/ipsecpolicies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsecpolicyUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpolicyUpdateResponse'
      tags:
        - vpn
      summary: Update IPsec policy
  /v2.0/vpn/endpoint-groups:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists VPN endpoint groups.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/endpoint-groups:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupsIndexResponse'
      tags:
        - vpn
      summary: List VPN endpoint groups
    post:
      description: |-
        Creates a VPN endpoint group.

        The endpoint group contains one or more endpoints of a specific
        type that you can use to create a VPN connections.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/endpoint-groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnEndpoint_GroupsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupsCreateResponse'
      tags:
        - vpn
      summary: Create VPN endpoint group
  /v2.0/vpn/endpoint-groups/{id}:
    parameters:
      - $ref: '#/components/parameters/endpoint_groups_endpoint_group_id'
    get:
      description: |-
        Shows details for a VPN endpoint group.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/endpoint-groups/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupShowResponse'
      tags:
        - vpn
      summary: Show VPN endpoint group
    delete:
      description: |-
        Removes a VPN endpoint group.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/endpoint-groups/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - vpn
      summary: Remove VPN endpoint group
    put:
      description: |-
        Updates settings for a VPN endpoint group.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/endpoint-groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnEndpoint_GroupUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupUpdateResponse'
      tags:
        - vpn
      summary: Update VPN endpoint group
  /v2.0/vpn/vpnservices:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all VPN services.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/vpnservices:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnservicesIndexResponse'
      tags:
        - vpn
      summary: List VPN services
    post:
      description: |-
        Creates a VPN service.

        The service is associated with a router. After you create the
        service, it can contain multiple VPN connections.

        An optional `flavor_id` attribute can be passed to enable dynamic
        selection of an appropriate provider if configured by the operator.
        It is only available when `vpn-flavors` extension is enabled.
        The basic selection algorithm chooses the provider in the first
        service profile currently associated with flavor. This option can
        only be set in `POST` operation.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/vpnservices:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnVpnservicesCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnservicesCreateResponse'
      tags:
        - vpn
      summary: Create VPN service
  /v2.0/vpn/vpnservices/{id}:
    parameters:
      - $ref: '#/components/parameters/vpnservices_vpnservice_id'
    get:
      description: |-
        Shows details for a VPN service.

        If the user is not an administrative user and the VPN service
        object does not belong to the tenant account for the user, the
        operation returns the `Forbidden (403)` response code.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/vpnservices/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnserviceShowResponse'
      tags:
        - vpn
      summary: Show VPN service details
    delete:
      description: |-
        Removes a VPN service.

        If the service has connections, the request is rejected.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/vpnservices/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - vpn
      summary: Remove VPN service
    put:
      description: |-
        Updates a VPN service.

        Updates the attributes of a VPN service. You cannot update a
        service with a `PENDING_*` status.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/vpnservices/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnVpnserviceUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnserviceUpdateResponse'
      tags:
        - vpn
      summary: Update VPN service
  /v2.0/vpn/ipsec-site-connections:
    get:
      parameters:
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
      description: |-
        Lists all IPsec connections.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/ipsec-site-connections:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionsIndexResponse'
      tags:
        - vpn
      summary: List IPsec connections
    post:
      description: |-
        Creates a site-to-site IPsec connection for a service.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/ipsec-site-connections:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsec_Site_ConnectionsCreateRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionsCreateResponse'
      tags:
        - vpn
      summary: Create IPsec connection
  /v2.0/vpn/ipsec-site-connections/{id}:
    parameters:
      - $ref: '#/components/parameters/ipsec_site_connections_ipsec_site_connection_id'
    get:
      description: |-
        Shows details for an IPsec connection.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/ipsec-site-connections/id:get
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionShowResponse'
      tags:
        - vpn
      summary: Show IPsec connection
    delete:
      description: |-
        Removes an IPsec connection.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/ipsec-site-connections/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - vpn
      summary: Remove IPsec connection
    put:
      description: |-
        Updates connection settings for an IPsec connection.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/ipsec-site-connections/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsec_Site_ConnectionUpdateRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionUpdateResponse'
      tags:
        - vpn
      summary: Update IPsec connection
components:
  schemas:
    ExtensionsIndexResponse:
      type: object
      description: Response of the extensions:get operation
      properties:
        extensions:
          type: array
          items:
            type: object
            properties:
              alias:
                type: string
                description: |-
                  The alias for the extension. For example “quotas” or
                  “security-group”.
              description:
                type: string
                description: |-
                  The human-readable description for the resource.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              namespace:
                type: string
                description: A URL pointing to the namespace for this extension.
              updated:
                type: string
                format: date-time
                description: |-
                  The date and timestamp when the extension was
                  last updated.
          description: |-
            A list of `extension` objects.
    ExtensionShowResponse:
      type: object
      description: Response of the extensions/id:get operation
      properties:
        extension:
          type: object
          properties:
            alias:
              type: string
              description: |-
                The alias for the extension. For example “quotas” or
                “security-group”.
            description:
              type: string
              description: |-
                The human-readable description for the resource.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            namespace:
              type: string
              description: A URL pointing to the namespace for this extension.
            updated:
              type: string
              format: date-time
              description: |-
                The date and timestamp when the extension was
                last updated.
          description: |-
            An `extension` object.
    Address_GroupsCreateRequest:
      type: object
      description: Request of the address-groups:post operation
      properties:
        address_group:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            project_id:
              type: string
              maxLength: 255
            addresses:
              type: array
              items:
                type: string
              description: |-
                A list of IP addresses.
          description: |-
            An `address group` object.
    Address_GroupsCreateResponse:
      type: object
      description: Response of the address-groups:post operation
      properties:
        address_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the address group.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            project_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            addresses:
              type: array
              items:
                type: string
              description: |-
                A list of IP addresses.
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
          description: |-
            An `address group` object.
    Address_GroupsIndexResponse:
      type: object
      description: Response of the address-groups:get operation
      properties:
        address_groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the address group.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              description:
                type: string
                maxLength: 1024
              project_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              addresses:
                type: array
                items:
                  type: string
                description: |-
                  A list of IP addresses.
              revision_number:
                type: integer
              created_at:
                type: string
              updated_at:
                type: string
          description: |-
            A list of `address group` objects.
    Address_GroupsAdd_AddressesAdd_AddressesRequest:
      type: object
      properties:
        address_group:
          type: object
          properties:
            addresses:
              type: array
              description: A list of IP addresses.
              items:
                type: string
    Address_GroupsRemove_AddressesRemove_AddressesRequest:
      type: object
      properties:
        address_group:
          type: object
          properties:
            addresses:
              type: array
              description: A list of IP addresses.
              items:
                type: string
    Address_GroupUpdateRequest:
      type: object
      description: Request of the address-groups/id:put operation
      properties:
        address_group:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
          description: |-
            An `address group` object.
    Address_GroupUpdateResponse:
      type: object
      description: Response of the address-groups/id:put operation
      properties:
        address_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the address group.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            project_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            addresses:
              type: array
              items:
                type: string
              description: |-
                A list of IP addresses.
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
          description: |-
            An `address group` object.
    Address_GroupShowResponse:
      type: object
      description: Response of the address-groups/id:get operation
      properties:
        address_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the address group.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            project_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            addresses:
              type: array
              items:
                type: string
              description: |-
                A list of IP addresses.
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
          description: |-
            An `address group` object.
    Address_ScopesCreateRequest:
      type: object
      description: Request of the address-scopes:post operation
      properties:
        address_scope:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Valid value is `4` or `6`.
          description: |-
            An `address scope` object.
    Address_ScopesCreateResponse:
      type: object
      description: Response of the address-scopes:post operation
      properties:
        address_scope:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the address scope.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
          description: |-
            An `address scope` object.
    Address_ScopesIndexResponse:
      type: object
      description: Response of the address-scopes:get operation
      properties:
        address_scopes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the address scope.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              shared:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether this resource is shared across all projects.
              ip_version:
                type:
                  - string
                  - integer
                enum:
                  - 4
                  - 6
                description: |-
                  The IP protocol version. Valid value is `4` or
                  `6`. Default is `4`.
          description: |-
            A list of `address scope` objects.
    Address_ScopeUpdateRequest:
      type: object
      description: Request of the address-scopes/id:put operation
      properties:
        address_scope:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
          description: |-
            An `address scope` object.
    Address_ScopeUpdateResponse:
      type: object
      description: Response of the address-scopes/id:put operation
      properties:
        address_scope:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the address scope.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
          description: |-
            An `address scope` object.
    Address_ScopeShowResponse:
      type: object
      description: Response of the address-scopes/id:get operation
      properties:
        address_scope:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the address scope.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
          description: |-
            An `address scope` object.
    AgentsCreateRequest:
      type: object
      description: Request of the agents:post operation
      properties:
        agent:
          type: object
          properties: {}
    AgentsCreateResponse:
      type: object
      description: Response of the agents:post operation
      properties:
        agent:
          type: object
          properties:
            id:
              type: string
              format: uuid
            agent_type:
              type: string
            binary:
              type: string
            topic:
              type: string
            host:
              type: string
            admin_state_up:
              type:
                - string
                - boolean
            created_at:
              type: string
            started_at:
              type: string
            heartbeat_timestamp:
              type: string
            alive:
              type: boolean
            configurations:
              type: object
            description:
              type:
                - string
                - 'null'
              maxLength: 255
            resources_synced:
              type: string
            availability_zone:
              type: string
    AgentsIndexResponse:
      type: object
      description: Response of the agents:get operation
      properties:
        agents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the resource.
              agent_type:
                type: string
                description: |-
                  The type of agent such as `Open vSwitch agent` or `DHCP agent`.
              binary:
                type: string
                description: |-
                  The executable command used to start the agent such as
                  `neutron-openvswitch-agent` or `neutron-dhcp-agent`.
              topic:
                type: string
                description: |-
                  The name of AMQP topic the agent is listening on such as
                  `dhcp_agent`. A special value of `N/A` is used when the
                  agent doesn’t use an AMQP topic.
              host:
                type: string
                description: |-
                  The hostname of the system the agent is running on.
              admin_state_up:
                type:
                  - string
                  - boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              started_at:
                type: string
                description: |-
                  Time at which the agent was started.
              heartbeat_timestamp:
                type: string
                description: |-
                  Time at which the last heartbeat was received.
              alive:
                type: boolean
                description: |-
                  Indicates the agent is alive and running.
              configurations:
                type: object
                description: |-
                  An object containing configuration specific key/value pairs; the semantics
                  of which are determined by the binary name and type.
              description:
                type:
                  - string
                  - 'null'
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
              resources_synced:
                type: string
                description: |-
                  The value `null` means no resource view synchronization to Placement
                  was attempted. `true` / `false` values signify the success of
                  the last synchronization attempt. Therefore the relevant resources
                  in Placement can only be considered up to date if this attribute is
                  `true`. This attribute is read-only, it is only supposed to be
                  updated internally, but it is readable for debugging purposes. Not all
                  agent types track resources via Placement, therefore the value `null`
                  does not necessarily means there is an error in the system.
              availability_zone:
                type: string
                description: |-
                  The availability zone of the agent.
          description: |-
            A list of `agent` objects.
    AgentUpdateRequest:
      type: object
      description: Request of the agents/id:put operation
      properties:
        agent:
          type: object
          properties:
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
            description:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
    AgentUpdateResponse:
      type: object
      description: Response of the agents/id:put operation
      properties:
        agent:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the resource.
            agent_type:
              type: string
              description: |-
                The type of agent such as `Open vSwitch agent` or `DHCP agent`.
            binary:
              type: string
              description: |-
                The executable command used to start the agent such as
                `neutron-openvswitch-agent` or `neutron-dhcp-agent`.
            topic:
              type: string
              description: |-
                The name of AMQP topic the agent is listening on such as
                `dhcp_agent`. A special value of `N/A` is used when the
                agent doesn’t use an AMQP topic.
            host:
              type: string
              description: |-
                The hostname of the system the agent is running on.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            started_at:
              type: string
              description: |-
                Time at which the agent was started.
            heartbeat_timestamp:
              type: string
              description: |-
                Time at which the last heartbeat was received.
            alive:
              type: boolean
              description: |-
                Indicates the agent is alive and running.
            configurations:
              type: object
              description: |-
                An object containing configuration specific key/value pairs; the semantics
                of which are determined by the binary name and type.
            description:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            resources_synced:
              type: string
              description: |-
                The value `null` means no resource view synchronization to Placement
                was attempted. `true` / `false` values signify the success of
                the last synchronization attempt. Therefore the relevant resources
                in Placement can only be considered up to date if this attribute is
                `true`. This attribute is read-only, it is only supposed to be
                updated internally, but it is readable for debugging purposes. Not all
                agent types track resources via Placement, therefore the value `null`
                does not necessarily means there is an error in the system.
            availability_zone:
              type: string
              description: |-
                The availability zone of the agent.
          description: |-
            An `agent` object.
    AgentShowResponse:
      type: object
      description: Response of the agents/id:get operation
      properties:
        agent:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the resource.
            agent_type:
              type: string
              description: |-
                The type of agent such as `Open vSwitch agent` or `DHCP agent`.
            binary:
              type: string
              description: |-
                The executable command used to start the agent such as
                `neutron-openvswitch-agent` or `neutron-dhcp-agent`.
            topic:
              type: string
              description: |-
                The name of AMQP topic the agent is listening on such as
                `dhcp_agent`. A special value of `N/A` is used when the
                agent doesn’t use an AMQP topic.
            host:
              type: string
              description: |-
                The hostname of the system the agent is running on.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            started_at:
              type: string
              description: |-
                Time at which the agent was started.
            heartbeat_timestamp:
              type: string
              description: |-
                Time at which the last heartbeat was received.
            alive:
              type: boolean
              description: |-
                Indicates the agent is alive and running.
            configurations:
              type: object
              description: |-
                An object containing configuration specific key/value pairs; the semantics
                of which are determined by the binary name and type.
            description:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            resources_synced:
              type: string
              description: |-
                The value `null` means no resource view synchronization to Placement
                was attempted. `true` / `false` values signify the success of
                the last synchronization attempt. Therefore the relevant resources
                in Placement can only be considered up to date if this attribute is
                `true`. This attribute is read-only, it is only supposed to be
                updated internally, but it is readable for debugging purposes. Not all
                agent types track resources via Placement, therefore the value `null`
                does not necessarily means there is an error in the system.
            availability_zone:
              type: string
              description: |-
                The availability zone of the agent.
          description: |-
            An `agent` object.
    Auto_Allocated_TopologyCreateRequest:
      type: object
      description: Request of the auto-allocated-topology:post operation
      properties:
        auto_allocated_topology:
          type: object
          properties: {}
    Auto_Allocated_TopologyCreateResponse:
      type: object
      description: Response of the auto-allocated-topology:post operation
      properties:
        auto_allocated_topology:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
              format: uuid
    Auto_Allocated_TopologyIndexResponse:
      type: object
      description: Response of the auto-allocated-topology:get operation
      properties:
        auto_allocated_topologies:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              tenant_id:
                type: string
                format: uuid
    Auto_Allocated_TopologyUpdateRequest:
      type: object
      description: Request of the auto-allocated-topology/id:put operation
      properties:
        auto_allocated_topology:
          type: object
          properties: {}
    Auto_Allocated_TopologyUpdateResponse:
      type: object
      description: Response of the auto-allocated-topology/id:put operation
      properties:
        auto_allocated_topology:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
              format: uuid
    Auto_Allocated_TopologyShowResponse:
      type: object
      description: Response of the auto-allocated-topology/id:get operation
      properties:
        auto_allocated_topology:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the network for the auto allocated topology.
            tenant_id:
              type: string
              format: uuid
              description: |-
                The ID of the project owning the auto allocated topology.
    Availability_ZonesIndexResponse:
      type: object
      description: Response of the availability_zones:get operation
      properties:
        availability_zones:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              resource:
                type: string
                description: |-
                  The resource type of the availability zone. The supported resource types
                  are `network` and `router`.
              state:
                type: string
                description: |-
                  The state of the availability zone, which is either `available` or
                  `unavailable`.
          description: |-
            A list of `availability zone` objects.
    AgentsDhcp_NetworksCreateRequest:
      type: object
      description: Request of the agents/agent_id/dhcp-networks:post operation
    AgentsDhcp_NetworksCreateResponse:
      type: object
      description: Response of the agents/agent_id/dhcp-networks:post operation
    AgentsDhcp_NetworksIndexResponse:
      type: object
      description: Response of the agents/agent_id/dhcp-networks:get operation
    AgentsDhcp_NetworkUpdateRequest:
      type: object
      description: Request of the agents/agent_id/dhcp-networks/id:put operation
    AgentsDhcp_NetworkUpdateResponse:
      type: object
      description: Response of the agents/agent_id/dhcp-networks/id:put operation
    AgentsDhcp_NetworkShowResponse:
      type: object
      description: Response of the agents/agent_id/dhcp-networks/id:get operation
    NetworksDhcp_AgentsCreateRequest:
      type: object
      description: Request of the networks/network_id/dhcp-agents:post operation
    NetworksDhcp_AgentsCreateResponse:
      type: object
      description: Response of the networks/network_id/dhcp-agents:post operation
    NetworksDhcp_AgentsIndexResponse:
      type: object
      description: Response of the networks/network_id/dhcp-agents:get operation
    NetworksDhcp_AgentUpdateRequest:
      type: object
      description: Request of the networks/network_id/dhcp-agents/id:put operation
    NetworksDhcp_AgentUpdateResponse:
      type: object
      description: Response of the networks/network_id/dhcp-agents/id:put operation
    NetworksDhcp_AgentShowResponse:
      type: object
      description: Response of the networks/network_id/dhcp-agents/id:get operation
    RoutersCreateRequest:
      type: object
      description: Request of the routers:post operation
      properties:
        router:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            external_gateway_info:
              type:
                - object
                - 'null'
              properties:
                network_id:
                  type: string
                  format: uuid
                external_fixed_ips:
                  type: array
                  items:
                    type: object
                    properties:
                      ip_address:
                        type: string
                        description: IP Address
                      subnet_id:
                        type: string
                        description: The subnet ID from which the IP address is assigned
                enable_snat:
                  type:
                    - string
                    - boolean
                qos_policy_id:
                  type:
                    - string
                    - 'null'
                  format: uuid
              required:
                - network_id
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips` and
                `qos_policy_id`.
                Otherwise, this would be `null`.
            ha:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
            enable_ndp_proxy:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Enable NDP proxy attribute. Default is `false`, To persist this attribute
                value, set the `enable_ndp_proxy_by_default` option in the
                `neutron.conf` file. It is available when `router-extend-ndp-proxy`
                extension is enabled.
            flavor_id:
              type: string
              description: |-
                The ID of the flavor associated with the router.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
            distributed:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `router` object.
    RoutersCreateResponse:
      type: object
      description: Response of the routers:post operation
      properties:
        router:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the router.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                The router status.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            external_gateway_info:
              type:
                - object
                - 'null'
              properties:
                network_id:
                  type: string
                  format: uuid
                external_fixed_ips:
                  type: array
                  items:
                    type: object
                    properties:
                      ip_address:
                        type: string
                        description: IP Address
                      subnet_id:
                        type: string
                        description: The subnet ID from which the IP address is assigned
                enable_snat:
                  type:
                    - string
                    - boolean
                qos_policy_id:
                  type:
                    - string
                    - 'null'
                  format: uuid
              required:
                - network_id
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips`,
                `qos_policy_id`, `enable_default_route_ecmp` and
                `enable_default_route_bfd`.
                Otherwise, this would be `null`.
            ha:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
            enable_ndp_proxy:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                router, the IPv6 address of internal subnets attached to the router can be
                published to external by create `ndp_proxy`. `false` means NDP proxy is
                disabled, the IPv6 address of internal subnets attached to the router can
                not be published to external by `ndp_proxy`. It is available when
                `router-extend-ndp-proxy` extension is enabled.
            flavor_id:
              type: string
              description: |-
                The ID of the flavor associated with the router.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            availability_zones:
              type: array
              items:
                type: string
              description: |-
                The availability zone(s) for the router.
                It is available when `router_availability_zone` extension is enabled.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            distributed:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
            conntrack_helpers:
              type: string
              description: |-
                The associated conntrack helper resources for the roter. If the
                router has multiple conntrack helper resources, this field has
                multiple entries. Each entry consists of netfilter conntrack helper
                (`helper`), the network protocol (`protocol`), the network port
                (`port`).
            routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                    description: |-
                      The destination CIDR.
                  nexthop:
                    type: string
                    description: |-
                      The IP address of the next hop for the corresponding destination.
                      The next hop IP address must be a part of one of the subnets to
                      which the router interfaces are connected.
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `router` object.
    RoutersIndexResponse:
      type: object
      description: Response of the routers:get operation
      properties:
        routers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the router.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              admin_state_up:
                type:
                  - string
                  - boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              status:
                type: string
                description: |-
                  The router status.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              external_gateway_info:
                type:
                  - object
                  - 'null'
                properties:
                  network_id:
                    type: string
                    format: uuid
                  external_fixed_ips:
                    type: array
                    items:
                      type: object
                      properties:
                        ip_address:
                          type: string
                          description: IP Address
                        subnet_id:
                          type: string
                          description: The subnet ID from which the IP address is
                            assigned
                  enable_snat:
                    type:
                      - string
                      - boolean
                  qos_policy_id:
                    type:
                      - string
                      - 'null'
                    format: uuid
                required:
                  - network_id
                description: |-
                  The external gateway information of the router.
                  If the router has an external gateway, this would be a dict with
                  `network_id`, `enable_snat`, `external_fixed_ips`,
                  `qos_policy_id`, `enable_default_route_ecmp` and
                  `enable_default_route_bfd`.
                  Otherwise, this would be `null`.
              ha:
                type:
                  - string
                  - boolean
                  - 'null'
                description: |-
                  `true` indicates a highly-available router.
                  It is available when `l3-ha` extension is enabled.
              enable_ndp_proxy:
                type:
                  - string
                  - boolean
                  - 'null'
                description: |-
                  Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                  router, the IPv6 address of internal subnets attached to the router can be
                  published to external by create `ndp_proxy`. `false` means NDP proxy is
                  disabled, the IPv6 address of internal subnets attached to the router can
                  not be published to external by `ndp_proxy`. It is available when
                  `router-extend-ndp-proxy` extension is enabled.
              flavor_id:
                type: string
                description: |-
                  The ID of the flavor associated with the router.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              availability_zones:
                type: array
                items:
                  type: string
                description: |-
                  The availability zone(s) for the router.
                  It is available when `router_availability_zone` extension is enabled.
              availability_zone_hints:
                type: array
                items:
                  type: string
                description: |-
                  The availability zone candidates for the router.
                  It is available when `router_availability_zone` extension is enabled.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              distributed:
                type:
                  - string
                  - boolean
                  - 'null'
                description: |-
                  `true` indicates a distributed router.
                  It is available when `dvr` extension is enabled.
              conntrack_helpers:
                type: string
                description: |-
                  The associated conntrack helper resources for the roter. If the
                  router has multiple conntrack helper resources, this field has
                  multiple entries. Each entry consists of netfilter conntrack helper
                  (`helper`), the network protocol (`protocol`), the network port
                  (`port`).
              routes:
                type: array
                items:
                  type: object
                  properties:
                    destination:
                      type: string
                      description: |-
                        The destination CIDR.
                    nexthop:
                      type: string
                      description: |-
                        The IP address of the next hop for the corresponding destination.
                        The next hop IP address must be a part of one of the subnets to
                        which the router interfaces are connected.
                description: |-
                  The extra routes configuration for L3 router.
                  A list of dictionaries with `destination` and `nexthop` parameters.
                  It is available when `extraroute` extension is enabled.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
          description: |-
            A list of `router` objects.
    RoutersAdd_Router_InterfaceAdd_Router_InterfaceRequest:
      type: object
      description: Request body
      properties:
        subnet_id:
          type: string
          format: uuid
          description: The ID of the subnet. One of subnet_id or port_id must be specified.
        port_id:
          type: string
          format: uuid
          description: The ID of the port. One of subnet_id or port_id must be specified.
      oneOf:
        - required:
            - subnet_id
        - required:
            - port_id
    RoutersAdd_Router_InterfaceAdd_Router_InterfaceResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |-
            The ID of the router.
        subnet_id:
          type: string
          format: uuid
          description: |-
            The ID of the subnet which the router interface belongs to.
        subnet_ids:
          type: array
          description: |-
            A list of the ID of the subnet which the router interface belongs to.
            The list contains only one member.
          items:
            type: string
            format: uuid
          minItems: 1
          maxItems: 1
        tenant_id:
          type: string
          format: uuid
          description: |-
            The ID of the project who owns the router interface.
        project_id:
          type: string
          format: uuid
          description: |-
            The ID of the project who owns the router interface.
        port_id:
          type: string
          format: uuid
          description: |-
            The ID of the port which represents the router interface.
        network_id:
          type: string
          format: uuid
          description: |-
            Network ID which the router interface is connected to.
        tags:
          type: array
          items:
            type: string
          description: |-
            The list of tags on the resource.
    RoutersRemove_Router_InterfaceRemove_Router_InterfaceRequest:
      type: object
      description: Request body
      properties:
        subnet_id:
          type: string
          format: uuid
          description: The ID of the subnet. One of subnet_id or port_id must be specified.
        port_id:
          type: string
          format: uuid
          description: The ID of the port. One of subnet_id or port_id must be specified.
      oneOf:
        - required:
            - subnet_id
        - required:
            - port_id
    RoutersRemove_Router_InterfaceRemove_Router_InterfaceResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |-
            The ID of the router.
        subnet_id:
          type: string
          format: uuid
          description: |-
            The ID of the subnet which the router interface belongs to.
        subnet_ids:
          type: array
          description: |-
            A list of the ID of the subnet which the router interface belongs to.
            The list contains only one member.
          items:
            type: string
            format: uuid
          minItems: 1
          maxItems: 1
        tenant_id:
          type: string
          format: uuid
          description: |-
            The ID of the project who owns the router interface.
        project_id:
          type: string
          format: uuid
          description: |-
            The ID of the project who owns the router interface.
        port_id:
          type: string
          format: uuid
          description: |-
            The ID of the port which represents the router interface.
        network_id:
          type: string
          format: uuid
          description: |-
            Network ID which the router interface is connected to.
        tags:
          type: array
          items:
            type: string
          description: |-
            The list of tags on the resource.
    RoutersAdd_ExtraroutesAdd_ExtraroutesRequest:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            routes:
              type: array
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                    oneOf:
                      - format: ipv4
                      - format: ipv6
    RoutersAdd_ExtraroutesAdd_ExtraroutesResponse:
      type: object
      properties:
        router:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the router.
            name:
              type: string
              format: uuid
              description: The name of the router.
            routes:
              type: array
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                    oneOf:
                      - format: ipv4
                      - format: ipv6
    RoutersRemove_ExtraroutesRemove_ExtraroutesRequest:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            routes:
              type: array
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                    oneOf:
                      - format: ipv4
                      - format: ipv6
    RoutersRemove_ExtraroutesRemove_ExtraroutesResponse:
      type: object
      properties:
        router:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the router.
            name:
              type: string
              format: uuid
              description: The name of the router.
            routes:
              type: array
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                    oneOf:
                      - format: ipv4
                      - format: ipv6
    RoutersAdd_External_GatewaysAdd_External_GatewaysRequest:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            external_gateways:
              type: array
              description: The list of external gateways of the router.
              items:
                type: object
                properties:
                  enable_snat:
                    type: boolean
                  external_fixed_ips:
                    type: array
                    items:
                      type: object
                      properties:
                        ip_address:
                          type: string
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                        subnet_id:
                          type: string
                          format: uuid
                  network_id:
                    type: string
                    format: uuid
    RoutersAdd_External_GatewaysAdd_External_GatewaysResponse:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            routes:
              type: array
              description: The extra routes configuration for L3 router. A list of
                dictionaries with destination and nexthop parameters. It is available
                when extraroute extension is enabled.
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                    oneOf:
                      - format: ipv4
                      - format: ipv6
    RoutersUpdate_External_GatewaysUpdate_External_GatewaysRequest:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            external_gateways:
              type: array
              description: The list of external gateways of the router.
              items:
                type: object
                properties:
                  enable_snat:
                    type: boolean
                  external_fixed_ips:
                    type: array
                    items:
                      type: object
                      properties:
                        ip_address:
                          type: string
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                        subnet_id:
                          type: string
                          format: uuid
                  network_id:
                    type: string
                    format: uuid
                    readOnly: true
    RoutersUpdate_External_GatewaysUpdate_External_GatewaysResponse:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            routes:
              type: array
              description: The extra routes configuration for L3 router. A list of
                dictionaries with destination and nexthop parameters. It is available
                when extraroute extension is enabled.
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                    oneOf:
                      - format: ipv4
                      - format: ipv6
    RoutersRemove_External_GatewaysRemove_External_GatewaysRequest:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            external_gateways:
              type: array
              description: The list of external gateways of the router.
              items:
                type: object
                properties:
                  external_fixed_ips:
                    type: array
                    items:
                      type: object
                      properties:
                        ip_address:
                          type: string
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                        subnet_id:
                          type: string
                          format: uuid
                  network_id:
                    type: string
                    format: uuid
    RoutersRemove_External_GatewaysRemove_External_GatewaysResponse:
      type: object
      description: Request body
      properties:
        router:
          type: object
          properties:
            routes:
              type: array
              description: The extra routes configuration for L3 router. A list of
                dictionaries with destination and nexthop parameters. It is available
                when extraroute extension is enabled.
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                    oneOf:
                      - format: ipv4
                      - format: ipv6
    RouterUpdateRequest:
      type: object
      description: Request of the routers/id:put operation
      properties:
        router:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            external_gateway_info:
              type:
                - object
                - 'null'
              properties:
                network_id:
                  type: string
                  format: uuid
                external_fixed_ips:
                  type: array
                  items:
                    type: object
                    properties:
                      ip_address:
                        type: string
                        description: IP Address
                      subnet_id:
                        type: string
                        description: The subnet ID from which the IP address is assigned
                enable_snat:
                  type:
                    - string
                    - boolean
                qos_policy_id:
                  type:
                    - string
                    - 'null'
                  format: uuid
              required:
                - network_id
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips` and
                `qos_policy_id`.
                Otherwise, this would be `null`.
            ha:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
            enable_ndp_proxy:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Enable NDP proxy attribute. Default is `false`, To persist this attribute
                value, set the `enable_ndp_proxy_by_default` option in the
                `neutron.conf` file. It is available when `router-extend-ndp-proxy`
                extension is enabled.
            distributed:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
            routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
                Default is an empty list (`[]`).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `router` object.
    RouterUpdateResponse:
      type: object
      description: Response of the routers/id:put operation
      properties:
        router:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the router.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                The router status.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            external_gateway_info:
              type:
                - object
                - 'null'
              properties:
                network_id:
                  type: string
                  format: uuid
                external_fixed_ips:
                  type: array
                  items:
                    type: object
                    properties:
                      ip_address:
                        type: string
                        description: IP Address
                      subnet_id:
                        type: string
                        description: The subnet ID from which the IP address is assigned
                enable_snat:
                  type:
                    - string
                    - boolean
                qos_policy_id:
                  type:
                    - string
                    - 'null'
                  format: uuid
              required:
                - network_id
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips`,
                `qos_policy_id`, `enable_default_route_ecmp` and
                `enable_default_route_bfd`.
                Otherwise, this would be `null`.
            ha:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
            enable_ndp_proxy:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                router, the IPv6 address of internal subnets attached to the router can be
                published to external by create `ndp_proxy`. `false` means NDP proxy is
                disabled, the IPv6 address of internal subnets attached to the router can
                not be published to external by `ndp_proxy`. It is available when
                `router-extend-ndp-proxy` extension is enabled.
            flavor_id:
              type: string
              description: |-
                The ID of the flavor associated with the router.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            availability_zones:
              type: array
              items:
                type: string
              description: |-
                The availability zone(s) for the router.
                It is available when `router_availability_zone` extension is enabled.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            distributed:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
            conntrack_helpers:
              type: string
              description: |-
                The associated conntrack helper resources for the roter. If the
                router has multiple conntrack helper resources, this field has
                multiple entries. Each entry consists of netfilter conntrack helper
                (`helper`), the network protocol (`protocol`), the network port
                (`port`).
            routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                    description: |-
                      The destination CIDR.
                  nexthop:
                    type: string
                    description: |-
                      The IP address of the next hop for the corresponding destination.
                      The next hop IP address must be a part of one of the subnets to
                      which the router interfaces are connected.
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `router` object.
    RouterShowResponse:
      type: object
      description: Response of the routers/id:get operation
      properties:
        router:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the router.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                The router status.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            external_gateway_info:
              type:
                - object
                - 'null'
              properties:
                network_id:
                  type: string
                  format: uuid
                external_fixed_ips:
                  type: array
                  items:
                    type: object
                    properties:
                      ip_address:
                        type: string
                        description: IP Address
                      subnet_id:
                        type: string
                        description: The subnet ID from which the IP address is assigned
                enable_snat:
                  type:
                    - string
                    - boolean
                qos_policy_id:
                  type:
                    - string
                    - 'null'
                  format: uuid
              required:
                - network_id
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips`,
                `qos_policy_id`, `enable_default_route_ecmp` and
                `enable_default_route_bfd`.
                Otherwise, this would be `null`.
            ha:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
            enable_ndp_proxy:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                router, the IPv6 address of internal subnets attached to the router can be
                published to external by create `ndp_proxy`. `false` means NDP proxy is
                disabled, the IPv6 address of internal subnets attached to the router can
                not be published to external by `ndp_proxy`. It is available when
                `router-extend-ndp-proxy` extension is enabled.
            flavor_id:
              type: string
              description: |-
                The ID of the flavor associated with the router.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            availability_zones:
              type: array
              items:
                type: string
              description: |-
                The availability zone(s) for the router.
                It is available when `router_availability_zone` extension is enabled.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            distributed:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
            conntrack_helpers:
              type: string
              description: |-
                The associated conntrack helper resources for the roter. If the
                router has multiple conntrack helper resources, this field has
                multiple entries. Each entry consists of netfilter conntrack helper
                (`helper`), the network protocol (`protocol`), the network port
                (`port`).
            routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                    description: |-
                      The destination CIDR.
                  nexthop:
                    type: string
                    description: |-
                      The IP address of the next hop for the corresponding destination.
                      The next hop IP address must be a part of one of the subnets to
                      which the router interfaces are connected.
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `router` object.
    FlavorsCreateRequest:
      type: object
      description: Request of the flavors:post operation
      properties:
        flavor:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Name of the flavor.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the flavor.
            service_type:
              type: string
              description: |-
                Service type for the flavor. Example: FIREWALL.
            service_profiles:
              type: array
              items:
                type: string
                format: uuid
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
          description: |-
            A `flavor` object.
    FlavorsCreateResponse:
      type: object
      description: Response of the flavors:post operation
      properties:
        flavor:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the flavor.
            name:
              type: string
              maxLength: 255
              description: |-
                Name of the flavor.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the flavor.
            service_type:
              type: string
              description: |-
                Service type for the flavor. Example: FIREWALL.
            service_profiles:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                Service profile UUIDs associated with this flavor.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
          description: |-
            A `flavor` object.
    FlavorsIndexResponse:
      type: object
      description: Response of the flavors:get operation
      properties:
        flavors:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the flavor.
              name:
                type: string
                maxLength: 255
                description: |-
                  Name of the flavor.
              description:
                type:
                  - string
                  - 'null'
                maxLength: 1024
                description: |-
                  The human-readable description for the flavor.
              service_type:
                type: string
                description: |-
                  Service type for the flavor. Example: FIREWALL.
              service_profiles:
                type: array
                items:
                  type: string
                  format: uuid
                description: |-
                  Service profile UUIDs associated with this flavor.
              enabled:
                type:
                  - string
                  - boolean
                  - 'null'
                description: |-
                  Indicates whether the flavor is enabled or not. Default is true.
          description: |-
            A list of `flavor` objects.
    FlavorUpdateRequest:
      type: object
      description: Request of the flavors/id:put operation
      properties:
        flavor:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Name of the flavor.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the flavor.
            service_profiles:
              type: array
              items:
                type: string
                format: uuid
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
          description: |-
            A `flavor` object.
    FlavorUpdateResponse:
      type: object
      description: Response of the flavors/id:put operation
      properties:
        flavor:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the flavor.
            name:
              type: string
              maxLength: 255
              description: |-
                Name of the flavor.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the flavor.
            service_type:
              type: string
              description: |-
                Service type for the flavor. Example: FIREWALL.
            service_profiles:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                Service profile UUIDs associated with this flavor.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
          description: |-
            A `flavor` object.
    FlavorShowResponse:
      type: object
      description: Response of the flavors/id:get operation
      properties:
        flavor:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the flavor.
            name:
              type: string
              maxLength: 255
              description: |-
                Name of the flavor.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the flavor.
            service_type:
              type: string
              description: |-
                Service type for the flavor. Example: FIREWALL.
            service_profiles:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                Service profile UUIDs associated with this flavor.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
          description: |-
            A `flavor` object.
    Service_ProfilesCreateRequest:
      type: object
      description: Request of the service_profiles:post operation
      properties:
        service_profile:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the service profile.
            driver:
              type: string
              maxLength: 1024
              description: |-
                Provider driver to use for this profile.
            metainfo:
              type: string
              description: |-
                JSON-formatted meta information of the service profile.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
          description: |-
            A `service_profile` object.
    Service_ProfilesCreateResponse:
      type: object
      description: Response of the service_profiles:post operation
      properties:
        service_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the service profile.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the service profile.
            driver:
              type: string
              maxLength: 1024
              description: |-
                Provider driver to use for this profile.
            metainfo:
              type: string
              description: |-
                JSON-formatted meta information of the service profile.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
          description: |-
            A `service_profile` object.
    Service_ProfilesIndexResponse:
      type: object
      description: Response of the service_profiles:get operation
      properties:
        service_profiles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the service profile.
              description:
                type:
                  - string
                  - 'null'
                maxLength: 1024
                description: |-
                  The human-readable description for the service profile.
              driver:
                type: string
                maxLength: 1024
                description: |-
                  Provider driver to use for this profile.
              metainfo:
                type: string
                description: |-
                  JSON-formatted meta information of the service profile.
              enabled:
                type:
                  - string
                  - boolean
                  - 'null'
                description: |-
                  Indicates whether this service profile is enabled or not.
                  Default is `true`.
          description: |-
            Service profile UUIDs associated with this
            flavor.
    Service_ProfileUpdateRequest:
      type: object
      description: Request of the service_profiles/id:put operation
      properties:
        service_profile:
          type: object
          properties:
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the service profile.
            driver:
              type: string
              maxLength: 1024
              description: |-
                Provider driver to use for this profile.
            metainfo:
              type: string
              description: |-
                JSON-formatted meta information of the service profile.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
          description: |-
            A `service_profile` object.
    Service_ProfileUpdateResponse:
      type: object
      description: Response of the service_profiles/id:put operation
      properties:
        service_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the service profile.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the service profile.
            driver:
              type: string
              maxLength: 1024
              description: |-
                Provider driver to use for this profile.
            metainfo:
              type: string
              description: |-
                JSON-formatted meta information of the service profile.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
          description: |-
            A `service_profile` object.
    Service_ProfileShowResponse:
      type: object
      description: Response of the service_profiles/id:get operation
      properties:
        service_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the service profile.
            description:
              type:
                - string
                - 'null'
              maxLength: 1024
              description: |-
                The human-readable description for the service profile.
            driver:
              type: string
              maxLength: 1024
              description: |-
                Provider driver to use for this profile.
            metainfo:
              type: string
              description: |-
                JSON-formatted meta information of the service profile.
            enabled:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
          description: |-
            A `service_profile` object.
    FlavorsNext_ProvidersCreateRequest:
      type: object
      description: Request of the flavors/flavor_id/next_providers:post operation
      properties:
        next_provider:
          type: object
          properties: {}
    FlavorsNext_ProvidersCreateResponse:
      type: object
      description: Response of the flavors/flavor_id/next_providers:post operation
      properties:
        next_provider:
          type: object
          properties:
            provider:
              type: string
            driver:
              type: string
            metainfo:
              type: string
    FlavorsNext_ProvidersIndexResponse:
      type: object
      description: Response of the flavors/flavor_id/next_providers:get operation
      properties:
        next_providers:
          type: array
          items:
            type: object
            properties:
              provider:
                type: string
              driver:
                type: string
              metainfo:
                type: string
    FlavorsNext_ProviderUpdateRequest:
      type: object
      description: Request of the flavors/flavor_id/next_providers/id:put operation
      properties:
        next_provider:
          type: object
          properties: {}
    FlavorsNext_ProviderUpdateResponse:
      type: object
      description: Response of the flavors/flavor_id/next_providers/id:put operation
      properties:
        next_provider:
          type: object
          properties:
            provider:
              type: string
            driver:
              type: string
            metainfo:
              type: string
    FlavorsNext_ProviderShowResponse:
      type: object
      description: Response of the flavors/flavor_id/next_providers/id:get operation
      properties:
        next_provider:
          type: object
          properties:
            provider:
              type: string
            driver:
              type: string
            metainfo:
              type: string
    FlavorsService_ProfilesCreateRequest:
      type: object
      description: Request of the flavors/flavor_id/service_profiles:post operation
      properties:
        service_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the service profile.
          description: |-
            A `service_profile` object.
    FlavorsService_ProfilesCreateResponse:
      type: object
      description: Response of the flavors/flavor_id/service_profiles:post operation
      properties:
        service_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the resource.
          description: |-
            A `service_profile` object.
    FlavorsService_ProfilesIndexResponse:
      type: object
      description: Response of the flavors/flavor_id/service_profiles:get operation
      properties:
        service_profiles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
    FlavorsService_ProfileUpdateRequest:
      type: object
      description: Request of the flavors/flavor_id/service_profiles/id:put operation
      properties:
        service_profile:
          type: object
          properties: {}
    FlavorsService_ProfileUpdateResponse:
      type: object
      description: Response of the flavors/flavor_id/service_profiles/id:put operation
      properties:
        service_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
    FlavorsService_ProfileShowResponse:
      type: object
      description: Response of the flavors/flavor_id/service_profiles/id:get operation
      properties:
        service_profile:
          type: object
          properties:
            id:
              type: string
              format: uuid
    FloatingipsPort_ForwardingsCreateRequest:
      type: object
      description: Request of the floatingips/floatingip_id/port_forwardings:post
        operation
      properties:
        port_forwarding:
          type: object
          properties:
            project_id:
              type: string
              maxLength: 255
            external_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
            internal_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
            internal_ip_address:
              type: string
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The IP protocol used in the floating IP port forwarding.
            internal_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
            description:
              type: string
              maxLength: 1024
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
            external_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
            internal_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
          description: |-
            A `floating IP port forwarding` object.
    FloatingipsPort_ForwardingsCreateResponse:
      type: object
      description: Response of the floatingips/floatingip_id/port_forwardings:post
        operation
      properties:
        port_forwarding:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the floating IP port forwarding.
            external_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
            internal_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
            internal_ip_address:
              type: string
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The IP protocol used in the floating IP port forwarding.
            internal_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
            description:
              type: string
              maxLength: 1024
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
            external_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
            internal_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
          description: |-
            A `floating IP port forwarding` object.
    FloatingipsPort_ForwardingsIndexResponse:
      type: object
      description: Response of the floatingips/floatingip_id/port_forwardings:get
        operation
      properties:
        port_forwardings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the floating IP port forwarding.
              external_port:
                type:
                  - number
                  - 'null'
                minimum: 1
                maximum: 65535
                description: |-
                  The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                  address.
              internal_port:
                type:
                  - number
                  - 'null'
                minimum: 1
                maximum: 65535
                description: |-
                  The TCP/UDP/other protocol port number of the Neutron port fixed IP
                  address associated to the floating ip port forwarding.
              internal_ip_address:
                type: string
                description: |-
                  The fixed IPv4 address of the Neutron port associated to the floating IP
                  port forwarding.
              protocol:
                type: string
                enum:
                  - dccp
                  - icmp
                  - ipv6-icmp
                  - sctp
                  - tcp
                  - udp
                description: |-
                  The IP protocol used in the floating IP port forwarding.
              internal_port_id:
                type: string
                format: uuid
                description: |-
                  The ID of the Neutron port associated to the floating IP port forwarding.
              description:
                type: string
                maxLength: 1024
                description: |-
                  A text describing the rule, which helps users to
                  manage/find easily theirs rules.
              external_port_range:
                type: number
                minimum: 1
                maximum: 65535
                description: |-
                  The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                  address.
              internal_port_range:
                type: number
                minimum: 1
                maximum: 65535
                description: |-
                  The TCP/UDP/other protocol port range of the Neutron port fixed IP
                  address associated to the floating ip port forwarding.
          description: |-
            A list of `floating IP port forwardings` objects.
    FloatingipsPort_ForwardingUpdateRequest:
      type: object
      description: Request of the floatingips/floatingip_id/port_forwardings/id:put
        operation
      properties:
        port_forwarding:
          type: object
          properties:
            external_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
            internal_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
            internal_ip_address:
              type: string
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The IP protocol used in the floating IP port forwarding.
            internal_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
            description:
              type: string
              maxLength: 1024
            external_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
            internal_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
          description: |-
            A `floating IP port forwarding` object.
    FloatingipsPort_ForwardingUpdateResponse:
      type: object
      description: Response of the floatingips/floatingip_id/port_forwardings/id:put
        operation
      properties:
        port_forwarding:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the floating IP port forwarding.
            external_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
            internal_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
            internal_ip_address:
              type: string
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The IP protocol used in the floating IP port forwarding.
            internal_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
            description:
              type: string
              maxLength: 1024
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
            external_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
            internal_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
          description: |-
            A `floating IP port forwarding` object.
    FloatingipsPort_ForwardingShowResponse:
      type: object
      description: Response of the floatingips/floatingip_id/port_forwardings/id:get
        operation
      properties:
        port_forwarding:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the floating IP port forwarding.
            external_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
            internal_port:
              type:
                - number
                - 'null'
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
            internal_ip_address:
              type: string
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The IP protocol used in the floating IP port forwarding.
            internal_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
            description:
              type: string
              maxLength: 1024
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
            external_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
            internal_port_range:
              type: number
              minimum: 1
              maximum: 65535
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
          description: |-
            A `floating IP port forwarding` object.
    Floatingip_PoolsCreateRequest:
      type: object
      description: Request of the floatingip-pools:post operation
      properties:
        floatingip_pool:
          type: object
          properties: {}
    Floatingip_PoolsCreateResponse:
      type: object
      description: Response of the floatingip-pools:post operation
      properties:
        floatingip_pool:
          type: object
          properties:
            subnet_id:
              type: string
              format: uuid
            subnet_name:
              type: string
              maxLength: 255
            network_id:
              type: string
              format: uuid
            cidr:
              type:
                - string
                - 'null'
            project_id:
              type: string
              maxLength: 255
    Floatingip_PoolsIndexResponse:
      type: object
      description: Response of the floatingip-pools:get operation
      properties:
        floatingip_pools:
          type: array
          items:
            type: object
            properties:
              subnet_id:
                type: string
                format: uuid
              subnet_name:
                type: string
                maxLength: 255
              network_id:
                type: string
                format: uuid
              cidr:
                type:
                  - string
                  - 'null'
              project_id:
                type: string
                maxLength: 255
    Floatingip_PoolUpdateRequest:
      type: object
      description: Request of the floatingip-pools/id:put operation
      properties:
        floatingip_pool:
          type: object
          properties: {}
    Floatingip_PoolUpdateResponse:
      type: object
      description: Response of the floatingip-pools/id:put operation
      properties:
        floatingip_pool:
          type: object
          properties:
            subnet_id:
              type: string
              format: uuid
            subnet_name:
              type: string
              maxLength: 255
            network_id:
              type: string
              format: uuid
            cidr:
              type:
                - string
                - 'null'
            project_id:
              type: string
              maxLength: 255
    Floatingip_PoolShowResponse:
      type: object
      description: Response of the floatingip-pools/id:get operation
      properties:
        floatingip_pool:
          type: object
          properties:
            subnet_id:
              type: string
              format: uuid
            subnet_name:
              type: string
              maxLength: 255
            network_id:
              type: string
              format: uuid
            cidr:
              type:
                - string
                - 'null'
            project_id:
              type: string
              maxLength: 255
    FloatingipsCreateRequest:
      type: object
      description: Request of the floatingips:post operation
      properties:
        floatingip:
          type: object
          properties:
            floating_ip_address:
              type: string
              description: |-
                The floating IP address.
            subnet_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The subnet ID on which you want to create the floating IP.
            floating_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network associated with the
                floating IP.
            port_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a port associated with the floating IP.
                To associate the floating IP with a fixed IP at creation time,
                you must specify the identifier of the internal port.
            fixed_ip_address:
              type: string
              description: |-
                The fixed IP address that is associated with the floating IP.
                If an internal port has multiple associated IP addresses,
                the service chooses the first IP address unless you explicitly
                define a fixed IP address in the `fixed_ip_address` parameter.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the floating IP.
            dns_name:
              type: string
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          required:
            - floating_network_id
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
    FloatingipsCreateResponse:
      type: object
      description: Response of the floatingips:post operation
      properties:
        floatingip:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the floating IP address.
            floating_ip_address:
              type: string
              description: |-
                The floating IP address.
            floating_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network associated with the
                floating IP.
            router_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the router for the floating IP.
            port_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a port associated with the floating IP.
            fixed_ip_address:
              type: string
              description: |-
                The fixed IP address that is associated with the
                floating IP address.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            status:
              type: string
              description: |-
                The status of the floating IP. Values are
                `ACTIVE`, `DOWN` and `ERROR`.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the floating IP.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            dns_name:
              type: string
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            port_details:
              type: object
              properties:
                name:
                  type: string
                  description: Human-readable name of the resource.
                network_id:
                  type: string
                  format: uuid
                  description: The ID of the attached network.
                admin_state_up:
                  type: boolean
                  description: The administrative state of the resource, which is
                    up (`true`) or down (`false`).
                mac_address:
                  type: string
                  description: The MAC address of the port. If the port uses the `direct-physical`
                    `vnic_type` then the value of this field is overwritten with the
                    MAC address provided in the active binding:profile if any.
                device_id:
                  type: string
                  description: The ID of the device that uses this port. For example,
                    a server instance or a logical router.
                device_owner:
                  type: string
                  description: The entity type that uses this port. For example, `compute:nova`
                    (server instance), `network:dhcp` (DHCP agent) or `network:router_interface`
                    (router interface).
                status:
                  type: string
                  description: The port status. Values are `ACTIVE`, `DOWN`, `BUILD`
                    and `ERROR`.
              description: |-
                The information of the port that this floating IP associates with.
                In particular, if the floating IP is associated with a port, this field
                contains some attributes of the associated port, including `name`,
                `network_id`, `mac_address`, `admin_state_up`, `status`,
                `device_id` and `device_owner`. If the floating IP is not associated
                with a port, this field is `null`.
            port_forwardings:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The ID of the floating IP port forwarding.
                  external_port:
                    type:
                      - number
                      - 'null'
                    description: The TCP/UDP/other protocol port number of the port
                      forwarding’s floating IP address.
                  internal_port:
                    type:
                      - number
                      - 'null'
                    description: The TCP/UDP/other protocol port number of the Neutron
                      port fixed IP address associated to the floating ip port forwarding.
                  internal_ip_address:
                    type: string
                    description: The fixed IPv4 address of the Neutron port associated
                      to the floating IP port forwarding.
                  protocol:
                    type: string
                    description: The IP protocol used in the floating IP port forwarding.
                  internal_port_id:
                    type: string
                    format: uuid
                    description: The ID of the Neutron port associated to the floating
                      IP port forwarding.
                  description:
                    type: string
                    description: |-
                      A human-readable description for the resource.
                  external_port_range:
                    type: number
                    description: The TCP/UDP/other protocol port range of the port
                      forwarding’s floating IP address.
                  internal_port_range:
                    type: number
                    description: The TCP/UDP/other protocol port range of the Neutron
                      port fixed IP address associated to the floating ip port forwarding.
              description: |-
                The associated port forwarding resources for the floating IP. If the
                floating IP has multiple port forwarding resources, this field has
                multiple entries. Each entry consists of network IP protocol
                (`protocol`), the fixed IP address of internal neutron port
                (`internal_ip_address`), the TCP or UDP port or port range used by
                internal neutron port (`internal_port`) or (`internal_port_range`)
                and the TCP or UDP port or port range used by floating IP
                (`external_port`) or (`external_port_range`).
            description:
              type: string
              maxLength: 255
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
    FloatingipsIndexResponse:
      type: object
      description: Response of the floatingips:get operation
      properties:
        floatingips:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the floating IP address.
              floating_ip_address:
                type: string
                description: |-
                  The floating IP address.
              floating_network_id:
                type: string
                format: uuid
                description: |-
                  The ID of the network associated with the
                  floating IP.
              router_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of the router for the floating IP.
              port_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of a port associated with the floating IP.
              fixed_ip_address:
                type: string
                description: |-
                  The fixed IP address that is associated with the
                  floating IP address.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              status:
                type: string
                description: |-
                  The status of the floating IP. Values are
                  `ACTIVE`, `DOWN` and `ERROR`.
              qos_policy_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of the QoS policy associated with the floating IP.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              dns_name:
                type: string
                maxLength: 255
                description: |-
                  A valid DNS name.
              dns_domain:
                type: string
                format: hostname
                maxLength: 255
                description: |-
                  A valid DNS domain.
              port_details:
                type: object
                properties:
                  name:
                    type: string
                    description: Human-readable name of the resource.
                  network_id:
                    type: string
                    format: uuid
                    description: The ID of the attached network.
                  admin_state_up:
                    type: boolean
                    description: The administrative state of the resource, which is
                      up (`true`) or down (`false`).
                  mac_address:
                    type: string
                    description: The MAC address of the port. If the port uses the
                      `direct-physical` `vnic_type` then the value of this field is
                      overwritten with the MAC address provided in the active binding:profile
                      if any.
                  device_id:
                    type: string
                    description: The ID of the device that uses this port. For example,
                      a server instance or a logical router.
                  device_owner:
                    type: string
                    description: The entity type that uses this port. For example,
                      `compute:nova` (server instance), `network:dhcp` (DHCP agent)
                      or `network:router_interface` (router interface).
                  status:
                    type: string
                    description: The port status. Values are `ACTIVE`, `DOWN`, `BUILD`
                      and `ERROR`.
                description: |-
                  The information of the port that this floating IP associates with.
                  In particular, if the floating IP is associated with a port, this field
                  contains some attributes of the associated port, including `name`,
                  `network_id`, `mac_address`, `admin_state_up`, `status`,
                  `device_id` and `device_owner`. If the floating IP is not associated
                  with a port, this field is `null`.
              port_forwardings:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The ID of the floating IP port forwarding.
                    external_port:
                      type:
                        - number
                        - 'null'
                      description: The TCP/UDP/other protocol port number of the port
                        forwarding’s floating IP address.
                    internal_port:
                      type:
                        - number
                        - 'null'
                      description: The TCP/UDP/other protocol port number of the Neutron
                        port fixed IP address associated to the floating ip port forwarding.
                    internal_ip_address:
                      type: string
                      description: The fixed IPv4 address of the Neutron port associated
                        to the floating IP port forwarding.
                    protocol:
                      type: string
                      description: The IP protocol used in the floating IP port forwarding.
                    internal_port_id:
                      type: string
                      format: uuid
                      description: The ID of the Neutron port associated to the floating
                        IP port forwarding.
                    description:
                      type: string
                      description: |-
                        A human-readable description for the resource.
                    external_port_range:
                      type: number
                      description: The TCP/UDP/other protocol port range of the port
                        forwarding’s floating IP address.
                    internal_port_range:
                      type: number
                      description: The TCP/UDP/other protocol port range of the Neutron
                        port fixed IP address associated to the floating ip port forwarding.
                description: |-
                  The associated port forwarding resources for the floating IP. If the
                  floating IP has multiple port forwarding resources, this field has
                  multiple entries. Each entry consists of network IP protocol
                  (`protocol`), the fixed IP address of internal neutron port
                  (`internal_ip_address`), the TCP or UDP port or port range used by
                  internal neutron port (`internal_port`) or (`internal_port_range`)
                  and the TCP or UDP port or port range used by floating IP
                  (`external_port`) or (`external_port_range`).
              description:
                type: string
                maxLength: 255
          description: |-
            A list of `floatingip` objects.
    FloatingipUpdateRequest:
      type: object
      description: Request of the floatingips/id:put operation
      properties:
        floatingip:
          type: object
          properties:
            port_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a port associated with the floating IP.
                To associate the floating IP with a fixed IP,
                you must specify the ID of the internal port.
                To disassociate the floating IP, `null` should be specified.
            fixed_ip_address:
              type: string
              description: |-
                The fixed IP address that is associated with the floating IP.
                If an internal port has multiple associated IP addresses,
                the service chooses the first IP address unless you explicitly
                define a fixed IP address in the `fixed_ip_address` parameter.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
    FloatingipUpdateResponse:
      type: object
      description: Response of the floatingips/id:put operation
      properties:
        floatingip:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the floating IP address.
            floating_ip_address:
              type: string
              description: |-
                The floating IP address.
            floating_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network associated with the
                floating IP.
            router_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the router for the floating IP.
            port_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a port associated with the floating IP.
            fixed_ip_address:
              type: string
              description: |-
                The fixed IP address that is associated with the
                floating IP address.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            status:
              type: string
              description: |-
                The status of the floating IP. Values are
                `ACTIVE`, `DOWN` and `ERROR`.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the floating IP.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            dns_name:
              type: string
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            port_details:
              type: object
              properties:
                name:
                  type: string
                  description: Human-readable name of the resource.
                network_id:
                  type: string
                  format: uuid
                  description: The ID of the attached network.
                admin_state_up:
                  type: boolean
                  description: The administrative state of the resource, which is
                    up (`true`) or down (`false`).
                mac_address:
                  type: string
                  description: The MAC address of the port. If the port uses the `direct-physical`
                    `vnic_type` then the value of this field is overwritten with the
                    MAC address provided in the active binding:profile if any.
                device_id:
                  type: string
                  description: The ID of the device that uses this port. For example,
                    a server instance or a logical router.
                device_owner:
                  type: string
                  description: The entity type that uses this port. For example, `compute:nova`
                    (server instance), `network:dhcp` (DHCP agent) or `network:router_interface`
                    (router interface).
                status:
                  type: string
                  description: The port status. Values are `ACTIVE`, `DOWN`, `BUILD`
                    and `ERROR`.
              description: |-
                The information of the port that this floating IP associates with.
                In particular, if the floating IP is associated with a port, this field
                contains some attributes of the associated port, including `name`,
                `network_id`, `mac_address`, `admin_state_up`, `status`,
                `device_id` and `device_owner`. If the floating IP is not associated
                with a port, this field is `null`.
            port_forwardings:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The ID of the floating IP port forwarding.
                  external_port:
                    type:
                      - number
                      - 'null'
                    description: The TCP/UDP/other protocol port number of the port
                      forwarding’s floating IP address.
                  internal_port:
                    type:
                      - number
                      - 'null'
                    description: The TCP/UDP/other protocol port number of the Neutron
                      port fixed IP address associated to the floating ip port forwarding.
                  internal_ip_address:
                    type: string
                    description: The fixed IPv4 address of the Neutron port associated
                      to the floating IP port forwarding.
                  protocol:
                    type: string
                    description: The IP protocol used in the floating IP port forwarding.
                  internal_port_id:
                    type: string
                    format: uuid
                    description: The ID of the Neutron port associated to the floating
                      IP port forwarding.
                  description:
                    type: string
                    description: |-
                      A human-readable description for the resource.
                  external_port_range:
                    type: number
                    description: The TCP/UDP/other protocol port range of the port
                      forwarding’s floating IP address.
                  internal_port_range:
                    type: number
                    description: The TCP/UDP/other protocol port range of the Neutron
                      port fixed IP address associated to the floating ip port forwarding.
              description: |-
                The associated port forwarding resources for the floating IP. If the
                floating IP has multiple port forwarding resources, this field has
                multiple entries. Each entry consists of network IP protocol
                (`protocol`), the fixed IP address of internal neutron port
                (`internal_ip_address`), the TCP or UDP port or port range used by
                internal neutron port (`internal_port`) or (`internal_port_range`)
                and the TCP or UDP port or port range used by floating IP
                (`external_port`) or (`external_port_range`).
            description:
              type: string
              maxLength: 255
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
    FloatingipShowResponse:
      type: object
      description: Response of the floatingips/id:get operation
      properties:
        floatingip:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the floating IP address.
            floating_ip_address:
              type: string
              description: |-
                The floating IP address.
            floating_network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network associated with the
                floating IP.
            router_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the router for the floating IP.
            port_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a port associated with the floating IP.
            fixed_ip_address:
              type: string
              description: |-
                The fixed IP address that is associated with the
                floating IP address.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            status:
              type: string
              description: |-
                The status of the floating IP. Values are
                `ACTIVE`, `DOWN` and `ERROR`.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the floating IP.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            dns_name:
              type: string
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            port_details:
              type: object
              properties:
                name:
                  type: string
                  description: Human-readable name of the resource.
                network_id:
                  type: string
                  format: uuid
                  description: The ID of the attached network.
                admin_state_up:
                  type: boolean
                  description: The administrative state of the resource, which is
                    up (`true`) or down (`false`).
                mac_address:
                  type: string
                  description: The MAC address of the port. If the port uses the `direct-physical`
                    `vnic_type` then the value of this field is overwritten with the
                    MAC address provided in the active binding:profile if any.
                device_id:
                  type: string
                  description: The ID of the device that uses this port. For example,
                    a server instance or a logical router.
                device_owner:
                  type: string
                  description: The entity type that uses this port. For example, `compute:nova`
                    (server instance), `network:dhcp` (DHCP agent) or `network:router_interface`
                    (router interface).
                status:
                  type: string
                  description: The port status. Values are `ACTIVE`, `DOWN`, `BUILD`
                    and `ERROR`.
              description: |-
                The information of the port that this floating IP associates with.
                In particular, if the floating IP is associated with a port, this field
                contains some attributes of the associated port, including `name`,
                `network_id`, `mac_address`, `admin_state_up`, `status`,
                `device_id` and `device_owner`. If the floating IP is not associated
                with a port, this field is `null`.
            port_forwardings:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The ID of the floating IP port forwarding.
                  external_port:
                    type:
                      - number
                      - 'null'
                    description: The TCP/UDP/other protocol port number of the port
                      forwarding’s floating IP address.
                  internal_port:
                    type:
                      - number
                      - 'null'
                    description: The TCP/UDP/other protocol port number of the Neutron
                      port fixed IP address associated to the floating ip port forwarding.
                  internal_ip_address:
                    type: string
                    description: The fixed IPv4 address of the Neutron port associated
                      to the floating IP port forwarding.
                  protocol:
                    type: string
                    description: The IP protocol used in the floating IP port forwarding.
                  internal_port_id:
                    type: string
                    format: uuid
                    description: The ID of the Neutron port associated to the floating
                      IP port forwarding.
                  description:
                    type: string
                    description: |-
                      A human-readable description for the resource.
                  external_port_range:
                    type: number
                    description: The TCP/UDP/other protocol port range of the port
                      forwarding’s floating IP address.
                  internal_port_range:
                    type: number
                    description: The TCP/UDP/other protocol port range of the Neutron
                      port fixed IP address associated to the floating ip port forwarding.
              description: |-
                The associated port forwarding resources for the floating IP. If the
                floating IP has multiple port forwarding resources, this field has
                multiple entries. Each entry consists of network IP protocol
                (`protocol`), the fixed IP address of internal neutron port
                (`internal_ip_address`), the TCP or UDP port or port range used by
                internal neutron port (`internal_port`) or (`internal_port_range`)
                and the TCP or UDP port or port range used by floating IP
                (`external_port`) or (`external_port_range`).
            description:
              type: string
              maxLength: 255
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
    RoutersConntrack_HelpersCreateRequest:
      type: object
      description: Request of the routers/router_id/conntrack_helpers:post operation
      properties:
        conntrack_helper:
          type: object
          properties:
            project_id:
              type: string
              maxLength: 255
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The network protocol for the netfilter conntrack target rule.
            port:
              type:
                - string
                - integer
              minimum: 1
              maximum: 65535
              description: |-
                The network port for the netfilter conntrack target rule.
            helper:
              type: string
              maxLength: 64
              description: |-
                The netfilter conntrack helper module.
          description: |-
            A router `conntrack helper` object.
    RoutersConntrack_HelpersCreateResponse:
      type: object
      description: Response of the routers/router_id/conntrack_helpers:post operation
      properties:
        conntrack_helper:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the conntrack helper.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The network protocol for the netfilter conntrack target rule.
            port:
              type:
                - string
                - integer
              minimum: 1
              maximum: 65535
              description: |-
                The network port for the netfilter conntrack target rule.
            helper:
              type: string
              maxLength: 64
              description: |-
                The netfilter conntrack helper module.
          description: |-
            A router `conntrack helper` object.
    RoutersConntrack_HelpersIndexResponse:
      type: object
      description: Response of the routers/router_id/conntrack_helpers:get operation
      properties:
        conntrack_helpers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the conntrack helper.
              protocol:
                type: string
                enum:
                  - dccp
                  - icmp
                  - ipv6-icmp
                  - sctp
                  - tcp
                  - udp
                description: |-
                  The network protocol for the netfilter conntrack target rule.
              port:
                type:
                  - string
                  - integer
                minimum: 1
                maximum: 65535
                description: |-
                  The network port for the netfilter conntrack target rule.
              helper:
                type: string
                maxLength: 64
                description: |-
                  The netfilter conntrack helper module.
          description: |-
            A list of `router conntrack helpers` objects.
    RoutersConntrack_HelperUpdateRequest:
      type: object
      description: Request of the routers/router_id/conntrack_helpers/id:put operation
      properties:
        conntrack_helper:
          type: object
          properties:
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The network protocol for the netfilter conntrack target rule.
            port:
              type:
                - string
                - integer
              minimum: 1
              maximum: 65535
              description: |-
                The network port for the netfilter conntrack target rule.
            helper:
              type: string
              maxLength: 64
              description: |-
                The netfilter conntrack helper module.
    RoutersConntrack_HelperUpdateResponse:
      type: object
      description: Response of the routers/router_id/conntrack_helpers/id:put operation
      properties:
        conntrack_helper:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the conntrack helper.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The network protocol for the netfilter conntrack target rule.
            port:
              type:
                - string
                - integer
              minimum: 1
              maximum: 65535
              description: |-
                The network port for the netfilter conntrack target rule.
            helper:
              type: string
              maxLength: 64
              description: |-
                The netfilter conntrack helper module.
          description: |-
            A router `conntrack helper` object.
    RoutersConntrack_HelperShowResponse:
      type: object
      description: Response of the routers/router_id/conntrack_helpers/id:get operation
      properties:
        conntrack_helper:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the conntrack helper.
            protocol:
              type: string
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              description: |-
                The network protocol for the netfilter conntrack target rule.
            port:
              type:
                - string
                - integer
              minimum: 1
              maximum: 65535
              description: |-
                The network port for the netfilter conntrack target rule.
            helper:
              type: string
              maxLength: 64
              description: |-
                The netfilter conntrack helper module.
          description: |-
            A router `conntrack helper` object.
    Ndp_ProxiesCreateRequest:
      type: object
      description: Request of the ndp-proxies:post operation
      properties:
        ndp_proxy:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            router_id:
              type: string
              format: uuid
            port_id:
              type: string
              format: uuid
            ip_address:
              type: string
            description:
              type: string
              maxLength: 255
    Ndp_ProxiesCreateResponse:
      type: object
      description: Response of the ndp-proxies:post operation
      properties:
        ndp_proxy:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            router_id:
              type: string
              format: uuid
            port_id:
              type: string
              format: uuid
            ip_address:
              type: string
            description:
              type: string
              maxLength: 255
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
    Ndp_ProxiesIndexResponse:
      type: object
      description: Response of the ndp-proxies:get operation
      properties:
        ndp_proxies:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                maxLength: 255
              project_id:
                type: string
                maxLength: 255
              router_id:
                type: string
                format: uuid
              port_id:
                type: string
                format: uuid
              ip_address:
                type: string
              description:
                type: string
                maxLength: 255
              revision_number:
                type: integer
              created_at:
                type: string
              updated_at:
                type: string
    Ndp_ProxyUpdateRequest:
      type: object
      description: Request of the ndp-proxies/id:put operation
      properties:
        ndp_proxy:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
    Ndp_ProxyUpdateResponse:
      type: object
      description: Response of the ndp-proxies/id:put operation
      properties:
        ndp_proxy:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            router_id:
              type: string
              format: uuid
            port_id:
              type: string
              format: uuid
            ip_address:
              type: string
            description:
              type: string
              maxLength: 255
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
    Ndp_ProxyShowResponse:
      type: object
      description: Response of the ndp-proxies/id:get operation
      properties:
        ndp_proxy:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            router_id:
              type: string
              format: uuid
            port_id:
              type: string
              format: uuid
            ip_address:
              type: string
            description:
              type: string
              maxLength: 255
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
    AgentsL3_RoutersCreateRequest:
      type: object
      properties:
        router_id:
          type: string
          format: uuid
          description: |-
            The ID of the router.
    AgentsL3_RoutersCreateResponse:
      type: object
      description: Response of the agents/agent_id/l3-routers:post operation
    AgentsL3_RoutersIndexResponse:
      type: object
      properties:
        routers:
          type: array
          description: |-
            A list of `router` objects.
          items:
            type: object
            properties:
              admin_state_up:
                type: boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              availability_zone_hints:
                type: array
                description: |-
                  The availability zone candidates for the router.
                  It is available when `router_availability_zone` extension is enabled.
                items:
                  type: string
              availability_zones:
                type: array
                description: |-
                  The availability zone(s) for the router.
                  It is available when `router_availability_zone` extension is enabled.
                items:
                  type: string
              description:
                type: string
                description: |-
                  A human-readable description for the resource.
              distributed:
                type: boolean
                description: |-
                  `true` indicates a distributed router.
                  It is available when `dvr` extension is enabled.
              external_gateway_info:
                description: |-
                  The external gateway information of the router.
                  If the router has an external gateway, this would be a dict with
                  `network_id`, `enable_snat`, `external_fixed_ips`,
                  `qos_policy_id`, `enable_default_route_ecmp` and
                  `enable_default_route_bfd`.
                  Otherwise, this would be `null`.
                type: object
                properties:
                  enable_snat:
                    type: boolean
                  external_fixed_ips:
                    type: array
                    items:
                      type: object
                      properties:
                        ip_address:
                          type: string
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                        subnet_id:
                          type: string
                          format: uuid
                  network_id:
                    type: string
                    format: uuid
              flavor_id:
                type: string
                format: uuid
                description: |-
                  The ID of the flavor associated with the router.
              ha:
                type: boolean
                description: |-
                  `true` indicates a highly-available router.
                  It is available when `l3-ha` extension is enabled.
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the router.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              routes:
                type: array
                description: |-
                  The extra routes configuration for L3 router.
                  A list of dictionaries with `destination` and `nexthop` parameters.
                  It is available when `extraroute` extension is enabled.
                items:
                  type: object
                  properties:
                    destination:
                      type: string
                      description: |-
                        The destination CIDR.
                    next_hop:
                      type: string
              status:
                type: string
                description: |-
                  The router status.
              project_id:
                type: string
                format: uuid
                description: |-
                  The ID of the project.
              tenant_id:
                type: string
                format: uuid
                description: |-
                  The ID of the project.
              service_type_id:
                type: string
                format: uuid
                description: |-
                  The ID of the service type associated with the router.
    AgentsL3_RouterUpdateRequest:
      type: object
      description: Request of the agents/agent_id/l3-routers/id:put operation
    AgentsL3_RouterUpdateResponse:
      type: object
      description: Response of the agents/agent_id/l3-routers/id:put operation
    AgentsL3_RouterShowResponse:
      type: object
      description: Response of the agents/agent_id/l3-routers/id:get operation
    RoutersL3_AgentsCreateRequest:
      type: object
      description: Request of the routers/router_id/l3-agents:post operation
    RoutersL3_AgentsCreateResponse:
      type: object
      description: Response of the routers/router_id/l3-agents:post operation
    RoutersL3_AgentsIndexResponse:
      type: object
      description: Response of the routers/router_id/l3-agents:get operation
    RoutersL3_AgentUpdateRequest:
      type: object
      description: Request of the routers/router_id/l3-agents/id:put operation
    RoutersL3_AgentUpdateResponse:
      type: object
      description: Response of the routers/router_id/l3-agents/id:put operation
    RoutersL3_AgentShowResponse:
      type: object
      description: Response of the routers/router_id/l3-agents/id:get operation
    Local_IpsCreateRequest:
      type: object
      description: Request of the local-ips:post operation
      properties:
        local_ip:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            local_port_id:
              type: string
              format: uuid
            network_id:
              type: string
              format: uuid
            local_ip_address:
              type: string
            ip_mode:
              type: string
              enum:
                - translate
                - passthrough
    Local_IpsCreateResponse:
      type: object
      description: Response of the local-ips:post operation
      properties:
        local_ip:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            local_port_id:
              type: string
              format: uuid
            network_id:
              type: string
              format: uuid
            local_ip_address:
              type: string
            ip_mode:
              type: string
              enum:
                - translate
                - passthrough
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
    Local_IpsIndexResponse:
      type: object
      description: Response of the local-ips:get operation
      properties:
        local_ips:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                maxLength: 255
              description:
                type: string
                maxLength: 255
              project_id:
                type: string
                maxLength: 255
              local_port_id:
                type: string
                format: uuid
              network_id:
                type: string
                format: uuid
              local_ip_address:
                type: string
              ip_mode:
                type: string
                enum:
                  - translate
                  - passthrough
              revision_number:
                type: integer
              created_at:
                type: string
              updated_at:
                type: string
    Local_IpUpdateRequest:
      type: object
      description: Request of the local-ips/id:put operation
      properties:
        local_ip:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
    Local_IpUpdateResponse:
      type: object
      description: Response of the local-ips/id:put operation
      properties:
        local_ip:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            local_port_id:
              type: string
              format: uuid
            network_id:
              type: string
              format: uuid
            local_ip_address:
              type: string
            ip_mode:
              type: string
              enum:
                - translate
                - passthrough
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
    Local_IpShowResponse:
      type: object
      description: Response of the local-ips/id:get operation
      properties:
        local_ip:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
            project_id:
              type: string
              maxLength: 255
            local_port_id:
              type: string
              format: uuid
            network_id:
              type: string
              format: uuid
            local_ip_address:
              type: string
            ip_mode:
              type: string
              enum:
                - translate
                - passthrough
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
    Local_IpsPort_AssociationsCreateRequest:
      type: object
      description: Request of the local_ips/local_ip_id/port_associations:post operation
      properties:
        port_association:
          type: object
          properties:
            fixed_port_id:
              type: string
              format: uuid
              description: |-
                The requested ID of the port associated with the Local IP.
            fixed_ip:
              type: string
              description: |-
                The requested IP of the port associated with the Local IP.
            project_id:
              type: string
              maxLength: 255
    Local_IpsPort_AssociationsCreateResponse:
      type: object
      description: Response of the local_ips/local_ip_id/port_associations:post operation
      properties:
        port_association:
          type: object
          properties:
            local_ip_id:
              type: string
              description: |-
                The ID of the associated Local IP.
            local_ip_address:
              type: string
            fixed_port_id:
              type: string
              format: uuid
              description: |-
                The ID of the port associated with the Local IP.
            fixed_ip:
              type: string
              description: |-
                The IP of the port associated with the Local IP.
            host:
              type: string
              description: |-
                The host of the port associated with the Local IP.
    Local_IpsPort_AssociationsIndexResponse:
      type: object
      description: Response of the local_ips/local_ip_id/port_associations:get operation
      properties:
        port_associations:
          type: array
          items:
            type: object
            properties:
              local_ip_id:
                type: string
                description: |-
                  The ID of the Local IP.
              local_ip_address:
                type: string
                description: |-
                  The actual IP address of the Local IP.
              fixed_port_id:
                type: string
                format: uuid
                description: |-
                  The ID of the port associated with the Local IP.
              fixed_ip:
                type: string
                description: |-
                  The IP of the port associated with the Local IP.
              host:
                type: string
                description: |-
                  The host of the port associated with the Local IP.
    Local_IpsPort_AssociationUpdateRequest:
      type: object
      description: Request of the local_ips/local_ip_id/port_associations/id:put operation
      properties:
        port_association:
          type: object
          properties: {}
    Local_IpsPort_AssociationUpdateResponse:
      type: object
      description: Response of the local_ips/local_ip_id/port_associations/id:put
        operation
      properties:
        port_association:
          type: object
          properties:
            local_ip_id:
              type: string
            local_ip_address:
              type: string
            fixed_port_id:
              type: string
              format: uuid
            fixed_ip:
              type: string
            host:
              type: string
    Local_IpsPort_AssociationShowResponse:
      type: object
      description: Response of the local_ips/local_ip_id/port_associations/id:get
        operation
      properties:
        port_association:
          type: object
          properties:
            local_ip_id:
              type: string
            local_ip_address:
              type: string
            fixed_port_id:
              type: string
              format: uuid
            fixed_ip:
              type: string
            host:
              type: string
    LogLogsCreateRequest:
      type: object
      description: Request of the log/logs:post operation
      properties:
        log:
          type: object
          properties:
            project_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            resource_type:
              type: string
              maxLength: 255
              description: |-
                The resource log type such as ‘security_group’.
            resource_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource log (e.g security group ID).
            event:
              type: string
              enum:
                - ACCEPT
                - DROP
                - ALL
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
                Default is `ALL`.
            target_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource target log such as port ID.
            enabled:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this log object is enabled or disabled.
                Default is true.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `log` object.
    LogLogsCreateResponse:
      type: object
      description: Response of the log/logs:post operation
      properties:
        log:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the log object.
            project_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            resource_type:
              type: string
              maxLength: 255
              description: |-
                The resource log type such as ‘security_group’.
            resource_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource log (e.g security group ID).
            event:
              type: string
              enum:
                - ACCEPT
                - DROP
                - ALL
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
            target_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource target log such as port ID.
            enabled:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this log object is enabled or disabled.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `log` object.
    LogLogsIndexResponse:
      type: object
      description: Response of the log/logs:get operation
      properties:
        logs:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the log object.
              project_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              resource_type:
                type: string
                maxLength: 255
                description: |-
                  The resource log type such as ‘security_group’.
              resource_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of resource log (e.g security group ID).
              event:
                type: string
                enum:
                  - ACCEPT
                  - DROP
                  - ALL
                description: |-
                  Type of security events to log.
                  `ACCEPT`, `DROP`, or `ALL`.
              target_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of resource target log such as port ID.
              enabled:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether this log object is enabled or disabled.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
          description: |-
            A list of `log` objects.
    LogLogUpdateRequest:
      type: object
      description: Request of the log/logs/id:put operation
      properties:
        log:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            enabled:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this log object is enabled or disabled.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `log` object.
    LogLogUpdateResponse:
      type: object
      description: Response of the log/logs/id:put operation
      properties:
        log:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the log object.
            project_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            resource_type:
              type: string
              maxLength: 255
              description: |-
                The resource log type such as ‘security_group’.
            resource_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource log (e.g security group ID).
            event:
              type: string
              enum:
                - ACCEPT
                - DROP
                - ALL
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
            target_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource target log such as port ID.
            enabled:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this log object is enabled or disabled.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `log` object.
    LogLogShowResponse:
      type: object
      description: Response of the log/logs/id:get operation
      properties:
        log:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the log object.
            project_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            resource_type:
              type: string
              maxLength: 255
              description: |-
                The resource log type such as ‘security_group’.
            resource_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource log (e.g security group ID).
            event:
              type: string
              enum:
                - ACCEPT
                - DROP
                - ALL
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
            target_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of resource target log such as port ID.
            enabled:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this log object is enabled or disabled.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `log` object.
    LogLoggable_ResourcesCreateRequest:
      type: object
      description: Request of the log/loggable-resources:post operation
      properties:
        loggable_resource:
          type: object
          properties: {}
    LogLoggable_ResourcesCreateResponse:
      type: object
      description: Response of the log/loggable-resources:post operation
      properties:
        loggable_resource:
          type: object
          properties:
            type:
              type: string
    LogLoggable_ResourcesIndexResponse:
      type: object
      description: Response of the log/loggable-resources:get operation
      properties:
        loggable_resources:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: |-
                  The resource log type such as ‘security_group’.
          description: |-
            A list of `loggable_resource` object.
    LogLoggable_ResourceUpdateRequest:
      type: object
      description: Request of the log/loggable-resources/id:put operation
      properties:
        loggable_resource:
          type: object
          properties: {}
    LogLoggable_ResourceUpdateResponse:
      type: object
      description: Response of the log/loggable-resources/id:put operation
      properties:
        loggable_resource:
          type: object
          properties:
            type:
              type: string
    LogLoggable_ResourceShowResponse:
      type: object
      description: Response of the log/loggable-resources/id:get operation
      properties:
        loggable_resource:
          type: object
          properties:
            type:
              type: string
    MeteringMetering_LabelsCreateRequest:
      type: object
      description: Request of the metering/metering-labels:post operation
      properties:
        metering_label:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this metering label is shared
                across all projects.
          description: |-
            A `metering_label` object.
    MeteringMetering_LabelsCreateResponse:
      type: object
      description: Response of the metering/metering-labels:post operation
      properties:
        metering_label:
          type: object
          properties:
            id:
              type: string
              description: |-
                The ID of the metering label.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this metering label is shared
                across all projects.
          description: |-
            A `metering_label` object.
    MeteringMetering_LabelsIndexResponse:
      type: object
      description: Response of the metering/metering-labels:get operation
      properties:
        metering_labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  The ID of the metering label.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              description:
                type: string
                maxLength: 1024
                description: |-
                  A human-readable description for the resource.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              shared:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether this metering label is shared
                  across all projects.
          description: |-
            A list of `metering_label` objects.
    MeteringMetering_LabelUpdateRequest:
      type: object
      description: Request of the metering/metering-labels/id:put operation
      properties:
        metering_label:
          type: object
          properties: {}
    MeteringMetering_LabelUpdateResponse:
      type: object
      description: Response of the metering/metering-labels/id:put operation
      properties:
        metering_label:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 1024
            tenant_id:
              type: string
              maxLength: 255
            shared:
              type:
                - string
                - boolean
    MeteringMetering_LabelShowResponse:
      type: object
      description: Response of the metering/metering-labels/id:get operation
      properties:
        metering_label:
          type: object
          properties:
            id:
              type: string
              description: |-
                The ID of the metering label.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this metering label is shared
                across all projects.
          description: |-
            A `metering_label` object.
    MeteringMetering_Label_RulesCreateRequest:
      type: object
      description: Request of the metering/metering-label-rules:post operation
      properties:
        metering_label_rule:
          type: object
          properties:
            metering_label_id:
              type: string
              format: uuid
              description: |-
                The metering label ID associated with this
                metering rule.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the metering rule is applied.
            excluded:
              type:
                - string
                - boolean
              description: |-
                Indicates whether to count the traffic of a specific IP address with the
                `remote_ip_prefix`, `source_ip_prefix`, or `destination_ip_prefix`
                values. Default is `false`.
            remote_ip_prefix:
              type: string
              description: |-
                (deprecated) The source IP prefix that is matched by this metering rule. By
                source IP prefix, one should read the internal/private IPs used in
                OpenStack.
            tenant_id:
              type: string
              maxLength: 255
            source_ip_prefix:
              type: string
            destination_ip_prefix:
              type: string
          description: |-
            A `metering_label_rule` object.
    MeteringMetering_Label_RulesCreateResponse:
      type: object
      description: Response of the metering/metering-label-rules:post operation
      properties:
        metering_label_rule:
          type: object
          properties:
            id:
              type: string
              description: |-
                The ID of the metering label rule.
            metering_label_id:
              type: string
              format: uuid
              description: |-
                The metering label ID associated with this
                metering rule.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the metering rule is applied.
            excluded:
              type:
                - string
                - boolean
              description: |-
                Indicates whether to count the traffic of a specific IP address with the
                `remote_ip_prefix`, `source_ip_prefix`, or `destination_ip_prefix`
                values.
            remote_ip_prefix:
              type: string
              description: |-
                (deprecated) The source IP prefix that is matched by this metering rule. By
                source IP prefix, one should read the internal/private IPs used in
                OpenStack.
            tenant_id:
              type: string
              maxLength: 255
            source_ip_prefix:
              type: string
            destination_ip_prefix:
              type: string
          description: |-
            A `metering_label_rule` object.
    MeteringMetering_Label_RulesIndexResponse:
      type: object
      description: Response of the metering/metering-label-rules:get operation
      properties:
        metering_label_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |-
                  The ID of the metering label rule.
              metering_label_id:
                type: string
                format: uuid
                description: |-
                  The metering label ID associated with this
                  metering rule.
              direction:
                type: string
                enum:
                  - ingress
                  - egress
                description: |-
                  Ingress or egress, which is the direction in
                  which the metering rule is applied.
              excluded:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether to count the traffic of a specific IP address with the
                  `remote_ip_prefix`, `source_ip_prefix`, or `destination_ip_prefix`
                  values.
              remote_ip_prefix:
                type: string
                description: |-
                  (deprecated) The source IP prefix that is matched by this metering rule. By
                  source IP prefix, one should read the internal/private IPs used in
                  OpenStack.
              tenant_id:
                type: string
                maxLength: 255
              source_ip_prefix:
                type: string
              destination_ip_prefix:
                type: string
          description: |-
            A list of `metering_label_rule` objects.
    MeteringMetering_Label_RuleUpdateRequest:
      type: object
      description: Request of the metering/metering-label-rules/id:put operation
      properties:
        metering_label_rule:
          type: object
          properties:
            source_ip_prefix:
              type: string
            destination_ip_prefix:
              type: string
    MeteringMetering_Label_RuleUpdateResponse:
      type: object
      description: Response of the metering/metering-label-rules/id:put operation
      properties:
        metering_label_rule:
          type: object
          properties:
            id:
              type: string
            metering_label_id:
              type: string
              format: uuid
            direction:
              type: string
              enum:
                - ingress
                - egress
            excluded:
              type:
                - string
                - boolean
            remote_ip_prefix:
              type: string
            tenant_id:
              type: string
              maxLength: 255
            source_ip_prefix:
              type: string
            destination_ip_prefix:
              type: string
    MeteringMetering_Label_RuleShowResponse:
      type: object
      description: Response of the metering/metering-label-rules/id:get operation
      properties:
        metering_label_rule:
          type: object
          properties:
            id:
              type: string
            metering_label_id:
              type: string
              format: uuid
            direction:
              type: string
              enum:
                - ingress
                - egress
            excluded:
              type:
                - string
                - boolean
            remote_ip_prefix:
              type: string
            tenant_id:
              type: string
              maxLength: 255
            source_ip_prefix:
              type: string
            destination_ip_prefix:
              type: string
    Network_Ip_AvailabilitiesCreateRequest:
      type: object
      description: Request of the network-ip-availabilities:post operation
      properties:
        network_ip_availability:
          type: object
          properties: {}
    Network_Ip_AvailabilitiesCreateResponse:
      type: object
      description: Response of the network-ip-availabilities:post operation
      properties:
        network_ip_availability:
          type: object
          properties:
            network_id:
              type: string
            network_name:
              type: string
            tenant_id:
              type: string
            total_ips:
              type: string
            used_ips:
              type: string
            subnet_ip_availability:
              type: string
    Network_Ip_AvailabilitiesIndexResponse:
      type: object
      description: Response of the network-ip-availabilities:get operation
      properties:
        network_ip_availabilities:
          type: array
          items:
            type: object
            properties:
              network_id:
                type: string
                description: |-
                  The ID of the network whose IP availability detail is reported.
              network_name:
                type: string
                description: |-
                  Human-readable name of the network.
              tenant_id:
                type: string
                description: |-
                  The ID of the project.
              total_ips:
                type: string
                description: |-
                  The total number of IP addresses in a network.
              used_ips:
                type: string
                description: |-
                  The number of used IP addresses of all subnets in
                  a network.
              subnet_ip_availability:
                type: string
                description: |-
                  A list of dictionaries showing subnet IP availability.
                  It contains information for every subnet associated to the network.
          description: |-
            The `network_ip_availabilities` object.
    Network_Ip_AvailabilityUpdateRequest:
      type: object
      description: Request of the network-ip-availabilities/id:put operation
      properties:
        network_ip_availability:
          type: object
          properties: {}
    Network_Ip_AvailabilityUpdateResponse:
      type: object
      description: Response of the network-ip-availabilities/id:put operation
      properties:
        network_ip_availability:
          type: object
          properties:
            network_id:
              type: string
            network_name:
              type: string
            tenant_id:
              type: string
            total_ips:
              type: string
            used_ips:
              type: string
            subnet_ip_availability:
              type: string
    Network_Ip_AvailabilityShowResponse:
      type: object
      description: Response of the network-ip-availabilities/id:get operation
      properties:
        network_ip_availability:
          type: object
          properties:
            network_id:
              type: string
              description: |-
                The ID of the network whose IP availability detail is reported.
            network_name:
              type: string
              description: |-
                Human-readable name of the network.
            tenant_id:
              type: string
              description: |-
                The ID of the project.
            total_ips:
              type: string
              description: |-
                The total number of IP addresses in a network.
            used_ips:
              type: string
              description: |-
                The number of used IP addresses of all subnets in
                a network.
            subnet_ip_availability:
              type: string
              description: |-
                A list of dictionaries showing subnet IP availability.
                It contains information for every subnet associated to the network.
          description: |-
            A `network_ip_availability` object.
    Network_Segment_RangesCreateRequest:
      type: object
      description: Request of the network-segment-ranges:post operation
      properties:
        network_segment_range:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            shared:
              type:
                - string
                - boolean
            project_id:
              type: string
              maxLength: 255
            network_type:
              type: string
              enum:
                - vlan
                - vxlan
                - gre
                - geneve
            physical_network:
              type: string
              maxLength: 64
            minimum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            maximum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            description:
              type: string
              maxLength: 255
    Network_Segment_RangesCreateResponse:
      type: object
      description: Response of the network-segment-ranges:post operation
      properties:
        network_segment_range:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            default:
              type:
                - string
                - boolean
            shared:
              type:
                - string
                - boolean
            project_id:
              type: string
              maxLength: 255
            network_type:
              type: string
              enum:
                - vlan
                - vxlan
                - gre
                - geneve
            physical_network:
              type: string
              maxLength: 64
            minimum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            maximum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            used:
              type: string
            available:
              type: string
            revision_number:
              type: integer
            tags:
              type: array
              items:
                type: string
            created_at:
              type: string
            updated_at:
              type: string
            description:
              type: string
              maxLength: 255
    Network_Segment_RangesIndexResponse:
      type: object
      description: Response of the network-segment-ranges:get operation
      properties:
        network_segment_ranges:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
                maxLength: 255
              default:
                type:
                  - string
                  - boolean
              shared:
                type:
                  - string
                  - boolean
              project_id:
                type: string
                maxLength: 255
              network_type:
                type: string
                enum:
                  - vlan
                  - vxlan
                  - gre
                  - geneve
              physical_network:
                type: string
                maxLength: 64
              minimum:
                type:
                  - string
                  - integer
                minimum: 1
                maximum: 4294967295
              maximum:
                type:
                  - string
                  - integer
                minimum: 1
                maximum: 4294967295
              used:
                type: string
              available:
                type: string
              revision_number:
                type: integer
              tags:
                type: array
                items:
                  type: string
              created_at:
                type: string
              updated_at:
                type: string
              description:
                type: string
                maxLength: 255
    Network_Segment_RangeUpdateRequest:
      type: object
      description: Request of the network-segment-ranges/id:put operation
      properties:
        network_segment_range:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
            minimum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            maximum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            description:
              type: string
              maxLength: 255
    Network_Segment_RangeUpdateResponse:
      type: object
      description: Response of the network-segment-ranges/id:put operation
      properties:
        network_segment_range:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            default:
              type:
                - string
                - boolean
            shared:
              type:
                - string
                - boolean
            project_id:
              type: string
              maxLength: 255
            network_type:
              type: string
              enum:
                - vlan
                - vxlan
                - gre
                - geneve
            physical_network:
              type: string
              maxLength: 64
            minimum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            maximum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            used:
              type: string
            available:
              type: string
            revision_number:
              type: integer
            tags:
              type: array
              items:
                type: string
            created_at:
              type: string
            updated_at:
              type: string
            description:
              type: string
              maxLength: 255
    Network_Segment_RangeShowResponse:
      type: object
      description: Response of the network-segment-ranges/id:get operation
      properties:
        network_segment_range:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
              maxLength: 255
            default:
              type:
                - string
                - boolean
            shared:
              type:
                - string
                - boolean
            project_id:
              type: string
              maxLength: 255
            network_type:
              type: string
              enum:
                - vlan
                - vxlan
                - gre
                - geneve
            physical_network:
              type: string
              maxLength: 64
            minimum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            maximum:
              type:
                - string
                - integer
              minimum: 1
              maximum: 4294967295
            used:
              type: string
            available:
              type: string
            revision_number:
              type: integer
            tags:
              type: array
              items:
                type: string
            created_at:
              type: string
            updated_at:
              type: string
            description:
              type: string
              maxLength: 255
    PortsBindingsCreateRequest:
      type: object
      description: Request of the ports/port_id/bindings:post operation
      properties:
        binding:
          type: object
          properties:
            host:
              type: string
            vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
            profile:
              type:
                - object
                - 'null'
            project_id:
              type: string
              maxLength: 255
    PortsBindingsCreateResponse:
      type: object
      description: Response of the ports/port_id/bindings:post operation
      properties:
        binding:
          type: object
          properties:
            host:
              type: string
            vif_type:
              type: string
            vif_details:
              type: string
            vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
            profile:
              type:
                - object
                - 'null'
            status:
              type: string
            project_id:
              type: string
              maxLength: 255
    PortsBindingsIndexResponse:
      type: object
      description: Response of the ports/port_id/bindings:get operation
      properties:
        bindings:
          type: array
          items:
            type: object
            properties:
              host:
                type: string
                description: |-
                  The hostname of the system the agent is running on.
              vif_type:
                type: string
                description: |-
                  The type of which mechanism is used for the port.
                  An API consumer like nova can use this to determine an appropriate way to
                  attach a device (for example an interface of a virtual server) to the port.
                  Available values currently defined includes
                  `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                  `vhostuser`, `distributed` and `other`.
                  There are also special values: `unbound` and `binding_failed`.
                  `unbound` means the port is
                  not bound to a networking back-end. `binding_failed` means an error
                  that the port failed to be bound to a networking back-end.
              vif_details:
                type: string
                description: |-
                  A dictionary which contains additional information on the port.
                  Currently the following fields are defined: `port_filter` and
                  `ovs_hybrid_plug`.
                  `port_filter` is a boolean indicating the networking service
                  provides port filtering features such as security group and/or
                  anti MAC/IP spoofing.
                  `ovs_hybrid_plug` is a boolean used to inform an API consumer
                  like nova that the hybrid plugging strategy for OVS should be used.
              vnic_type:
                type: string
                enum:
                  - normal
                  - direct
                  - macvtap
                  - baremetal
                  - direct-physical
                  - virtio-forwarder
                  - smart-nic
                  - vdpa
                  - accelerator-direct
                  - accelerator-direct-physical
                  - remote-managed
                description: |-
                  The type of vNIC which this port should be attached to. This is used to
                  determine which mechanism driver(s) to be used to bind the port.
                  The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                  `direct-physical`, `virtio-forwarder`, `smart-nic`
                  and `remote-managed`.
                  What type of vNIC is actually available depends on deployments.
              profile:
                type:
                  - object
                  - 'null'
                description: |-
                  A dictionary that enables the application running on the specific host to
                  pass and receive vif port information specific to the networking back-end.
                  The networking API does not define a specific format of this field.
                  If the update request is null this response field will be {}.
              status:
                type: string
              project_id:
                type: string
                maxLength: 255
          description: |-
            A `binding` object.
    PortsBindingsActivateActivateRequest:
      type: object
      properties:
        host:
          type: string
          description: |-
            The hostname of the system the agent is running on.
    PortsBindingUpdateRequest:
      type: object
      description: Request of the ports/port_id/bindings/id:put operation
      properties:
        binding:
          type: object
          properties:
            host:
              type: string
            vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
            profile:
              type:
                - object
                - 'null'
    PortsBindingUpdateResponse:
      type: object
      description: Response of the ports/port_id/bindings/id:put operation
      properties:
        binding:
          type: object
          properties:
            host:
              type: string
            vif_type:
              type: string
            vif_details:
              type: string
            vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
            profile:
              type:
                - object
                - 'null'
            status:
              type: string
            project_id:
              type: string
              maxLength: 255
    PortsBindingShowResponse:
      type: object
      description: Response of the ports/port_id/bindings/id:get operation
      properties:
        binding:
          type: object
          properties:
            host:
              type: string
              description: |-
                The hostname of the system the agent is running on.
            vif_type:
              type: string
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
            vif_details:
              type: string
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
            vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
            profile:
              type:
                - object
                - 'null'
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
            status:
              type: string
            project_id:
              type: string
              maxLength: 255
    QosPoliciesCreateRequest:
      type: object
      description: Request of the qos/policies:post operation
      properties:
        policy:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            shared:
              type:
                - string
                - boolean
              description: |-
                Set to `true` to share this policy with other
                projects. Default is `false`.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            is_default:
              type:
                - string
                - boolean
              description: |-
                If `true`, the QoS `policy` is the default policy.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A QoS `policy` object.
    QosPoliciesCreateResponse:
      type: object
      description: Response of the qos/policies:post operation
      properties:
        policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS policy.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this policy is shared across
                all projects.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            rules:
              type: string
              description: |-
                A set of zero or more policy rules.
            is_default:
              type:
                - string
                - boolean
              description: |-
                If `true`, the QoS `policy` is the default policy.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A QoS `policy` object.
    QosPoliciesIndexResponse:
      type: object
      description: Response of the qos/policies:get operation
      properties:
        policies:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the QoS policy.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              shared:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether this policy is shared across
                  all projects.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              rules:
                type: string
                description: |-
                  A set of zero or more policy rules.
              is_default:
                type:
                  - string
                  - boolean
                description: |-
                  If `true`, the QoS `policy` is the default policy.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
          description: |-
            A list of QoS `policy` objects.
    QosPolicyUpdateRequest:
      type: object
      description: Request of the qos/policies/id:put operation
      properties:
        policy:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            shared:
              type:
                - string
                - boolean
              description: |-
                Set to `true` to share this policy with other
                projects. Default is `false`.
            is_default:
              type:
                - string
                - boolean
              description: |-
                If `true`, the QoS `policy` is the default policy.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A QoS `policy` object.
    QosPolicyUpdateResponse:
      type: object
      description: Response of the qos/policies/id:put operation
      properties:
        policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS policy.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this policy is shared across
                all projects.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            rules:
              type: string
              description: |-
                A set of zero or more policy rules.
            is_default:
              type:
                - string
                - boolean
              description: |-
                If `true`, the QoS `policy` is the default policy.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A QoS `policy` object.
    QosPolicyShowResponse:
      type: object
      description: Response of the qos/policies/id:get operation
      properties:
        policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS policy.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this policy is shared across
                all projects.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            rules:
              type: string
              description: |-
                A set of zero or more policy rules.
            is_default:
              type:
                - string
                - boolean
              description: |-
                If `true`, the QoS `policy` is the default policy.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A QoS `policy` object.
    QosRule_TypesCreateRequest:
      type: object
      description: Request of the qos/rule-types:post operation
      properties:
        rule_type:
          type: object
          properties:
            all_rules:
              type:
                - string
                - boolean
                - 'null'
            all_supported:
              type:
                - string
                - boolean
                - 'null'
    QosRule_TypesCreateResponse:
      type: object
      description: Response of the qos/rule-types:post operation
      properties:
        rule_type:
          type: object
          properties:
            type:
              type: string
            drivers:
              type: string
    QosRule_TypesIndexResponse:
      type: object
      description: Response of the qos/rule-types:get operation
      properties:
        rule_types:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: |-
                  The type of QoS rule.
              drivers:
                type: string
          description: |-
            A list of QoS `rule_type` objects.
    QosRule_TypeUpdateRequest:
      type: object
      description: Request of the qos/rule-types/id:put operation
      properties:
        rule_type:
          type: object
          properties:
            all_rules:
              type:
                - string
                - boolean
                - 'null'
            all_supported:
              type:
                - string
                - boolean
                - 'null'
    QosRule_TypeUpdateResponse:
      type: object
      description: Response of the qos/rule-types/id:put operation
      properties:
        rule_type:
          type: object
          properties:
            type:
              type: string
            drivers:
              type: string
    QosRule_TypeShowResponse:
      type: object
      description: Response of the qos/rule-types/id:get operation
      properties:
        rule_type:
          type: object
          properties:
            type:
              type: string
              description: |-
                The type of QoS rule.
            drivers:
              type: string
              description: |-
                List of loaded QoS drivers with supported
                rule type parameters with possible values for each.
                Each driver is represented by a dict with the keys
                `name` and `supported_parameters`.
                Field `name` contains the name of a backend driver.
                Field `supported_parameters` contains a list of dicts with
                `parameter_name`, `parameter_type` and `parameter_values`
                fields.
                The valid values for `parameter_type` are `choices` or `range`.
                If `parameter_type` is `choices` then `parameter_values`
                contains a list of acceptable values, otherwise it contains
                a dict with keys of `start` and `end` which define the range
                of acceptable values.
    QosPoliciesBandwidth_Limit_RulesCreateRequest:
      type: object
      description: Request of the qos/policies/policy_id/bandwidth_limit_rules:post
        operation
      properties:
        bandwidth_limit_rule:
          type: object
          properties:
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum burst size (in kilobits). Default is `0`.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
          description: |-
            A `bandwidth_limit_rule` object.
    QosPoliciesBandwidth_Limit_RulesCreateResponse:
      type: object
      description: Response of the qos/policies/policy_id/bandwidth_limit_rules:post
        operation
      properties:
        bandwidth_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Bandwidth limit rule.
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum burst size (in kilobits).
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
          description: |-
            A `bandwidth_limit_rule` object.
    QosPoliciesBandwidth_Limit_RulesIndexResponse:
      type: object
      description: Response of the qos/policies/policy_id/bandwidth_limit_rules:get
        operation
      properties:
        bandwidth_limit_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the QoS Bandwidth limit rule.
              max_kbps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
                description: |-
                  The maximum KBPS (kilobits per second) value. If you specify this
                  value, must be greater than 0 otherwise max_kbps will have no value.
              max_burst_kbps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
                description: |-
                  The maximum burst size (in kilobits).
              direction:
                type: string
                enum:
                  - ingress
                  - egress
                description: |-
                  The direction of the traffic to which the QoS
                  rule is applied, as seen from the point of view
                  of the `port`.
                  Valid values are `egress` and `ingress`.
                  Default value is `egress`.
          description: |-
            A list of bandwidth limit rules associated with
            the QoS policy.
    QosPoliciesBandwidth_Limit_RuleUpdateRequest:
      type: object
      description: Request of the qos/policies/policy_id/bandwidth_limit_rules/id:put
        operation
      properties:
        bandwidth_limit_rule:
          type: object
          properties:
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum burst size (in kilobits). Default is `0`.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
          description: |-
            A `bandwidth_limit_rule` object.
    QosPoliciesBandwidth_Limit_RuleUpdateResponse:
      type: object
      description: Response of the qos/policies/policy_id/bandwidth_limit_rules/id:put
        operation
      properties:
        bandwidth_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Bandwidth limit rule.
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum burst size (in kilobits).
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
          description: |-
            A `bandwidth_limit_rule` object.
    QosPoliciesBandwidth_Limit_RuleShowResponse:
      type: object
      description: Response of the qos/policies/policy_id/bandwidth_limit_rules/id:get
        operation
      properties:
        bandwidth_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS Bandwidth limit rule.
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The maximum burst size (in kilobits).
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
          description: |-
            A `bandwidth_limit_rule` object.
    QosPoliciesDscp_Marking_RulesCreateRequest:
      type: object
      description: Request of the qos/policies/policy_id/dscp_marking_rules:post operation
      properties:
        dscp_marking_rule:
          type: object
          properties:
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
              description: |-
                The DSCP mark value.
          description: |-
            A `dscp_marking_rule` object.
    QosPoliciesDscp_Marking_RulesCreateResponse:
      type: object
      description: Response of the qos/policies/policy_id/dscp_marking_rules:post
        operation
      properties:
        dscp_marking_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS DSCP marking rule.
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
              description: |-
                The DSCP mark value.
          description: |-
            A `dscp_marking_rule` object.
    QosPoliciesDscp_Marking_RulesIndexResponse:
      type: object
      description: Response of the qos/policies/policy_id/dscp_marking_rules:get operation
      properties:
        dscp_marking_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the QoS DSCP marking rule.
              dscp_mark:
                type:
                  - string
                  - integer
                enum:
                  - 0
                  - 8
                  - 10
                  - 12
                  - 14
                  - 16
                  - 18
                  - 20
                  - 22
                  - 24
                  - 26
                  - 28
                  - 30
                  - 32
                  - 34
                  - 36
                  - 38
                  - 40
                  - 44
                  - 46
                  - 48
                  - 56
                description: |-
                  The DSCP mark value.
          description: |-
            A list of `dscp_marking_rule` objects.
    QosPoliciesDscp_Marking_RuleUpdateRequest:
      type: object
      description: Request of the qos/policies/policy_id/dscp_marking_rules/id:put
        operation
      properties:
        dscp_marking_rule:
          type: object
          properties:
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
              description: |-
                The DSCP mark value.
          description: |-
            A `dscp_marking_rule` object.
    QosPoliciesDscp_Marking_RuleUpdateResponse:
      type: object
      description: Response of the qos/policies/policy_id/dscp_marking_rules/id:put
        operation
      properties:
        dscp_marking_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS DSCP marking rule.
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
              description: |-
                The DSCP mark value.
          description: |-
            A `dscp_marking_rule` object.
    QosPoliciesDscp_Marking_RuleShowResponse:
      type: object
      description: Response of the qos/policies/policy_id/dscp_marking_rules/id:get
        operation
      properties:
        dscp_marking_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS DSCP marking rule.
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
              description: |-
                The DSCP mark value.
          description: |-
            A `dscp_marking_rule` object.
    QosPoliciesMinimum_Bandwidth_RulesCreateRequest:
      type: object
      description: Request of the qos/policies/policy_id/minimum_bandwidth_rules:post
        operation
      properties:
        minimum_bandwidth_rule:
          type: object
          properties:
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
          description: |-
            A `minimum_bandwidth_rule` object.
    QosPoliciesMinimum_Bandwidth_RulesCreateResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum_bandwidth_rules:post
        operation
      properties:
        minimum_bandwidth_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS minimum bandwidth rule.
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
          description: |-
            A `minimum_bandwidth_rule` object.
    QosPoliciesMinimum_Bandwidth_RulesIndexResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum_bandwidth_rules:get
        operation
      properties:
        minimum_bandwidth_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the QoS minimum bandwidth rule.
              min_kbps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
                description: |-
                  The minimum KBPS (kilobits per second) value which should be available for
                  port.
              direction:
                type: string
                enum:
                  - ingress
                  - egress
                description: |-
                  The direction of the traffic to which the QoS
                  rule is applied, as seen from the point of view
                  of the `port`.
                  Valid values are `egress` and `ingress`.
                  Default value is `egress`.
          description: |-
            A list of `minimum_bandwidth_rule` objects associated with
            the QoS policy.
    QosPoliciesMinimum_Bandwidth_RuleUpdateRequest:
      type: object
      description: Request of the qos/policies/policy_id/minimum_bandwidth_rules/id:put
        operation
      properties:
        minimum_bandwidth_rule:
          type: object
          properties:
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
          description: |-
            A `minimum_bandwidth_rule` object.
    QosPoliciesMinimum_Bandwidth_RuleUpdateResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum_bandwidth_rules/id:put
        operation
      properties:
        minimum_bandwidth_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS minimum bandwidth rule.
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
          description: |-
            A `minimum_bandwidth_rule` object.
    QosPoliciesMinimum_Bandwidth_RuleShowResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum_bandwidth_rules/id:get
        operation
      properties:
        minimum_bandwidth_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the QoS minimum bandwidth rule.
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
          description: |-
            A `minimum_bandwidth_rule` object.
    QosPoliciesMinimum_Packet_Rate_RulesCreateRequest:
      type: object
      description: Request of the qos/policies/policy_id/minimum-packet-rate-rules:post
        operation
      properties:
        minimum_packet_rate_rule:
          type: object
          properties:
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosPoliciesMinimum_Packet_Rate_RulesCreateResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum-packet-rate-rules:post
        operation
      properties:
        minimum_packet_rate_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosPoliciesMinimum_Packet_Rate_RulesIndexResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum-packet-rate-rules:get
        operation
      properties:
        minimum_packet_rate_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              min_kpps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
              direction:
                type: string
                enum:
                  - any
                  - ingress
                  - egress
    QosPoliciesMinimum_Packet_Rate_RuleUpdateRequest:
      type: object
      description: Request of the qos/policies/policy_id/minimum-packet-rate-rules/id:put
        operation
      properties:
        minimum_packet_rate_rule:
          type: object
          properties:
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosPoliciesMinimum_Packet_Rate_RuleUpdateResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum-packet-rate-rules/id:put
        operation
      properties:
        minimum_packet_rate_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosPoliciesMinimum_Packet_Rate_RuleShowResponse:
      type: object
      description: Response of the qos/policies/policy_id/minimum-packet-rate-rules/id:get
        operation
      properties:
        minimum_packet_rate_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosAlias_Minimum_Packet_Rate_RulesCreateRequest:
      type: object
      description: Request of the qos/alias-minimum-packet-rate-rules:post operation
      properties:
        alias_minimum_packet_rate_rule:
          type: object
          properties: {}
    QosAlias_Minimum_Packet_Rate_RulesCreateResponse:
      type: object
      description: Response of the qos/alias-minimum-packet-rate-rules:post operation
      properties:
        alias_minimum_packet_rate_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosAlias_Minimum_Packet_Rate_RulesIndexResponse:
      type: object
      description: Response of the qos/alias-minimum-packet-rate-rules:get operation
      properties:
        alias_minimum_packet_rate_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              min_kpps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
              direction:
                type: string
                enum:
                  - any
                  - ingress
                  - egress
    QosAlias_Minimum_Packet_Rate_RuleUpdateRequest:
      type: object
      description: Request of the qos/alias-minimum-packet-rate-rules/id:put operation
      properties:
        alias_minimum_packet_rate_rule:
          type: object
          properties:
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosAlias_Minimum_Packet_Rate_RuleUpdateResponse:
      type: object
      description: Response of the qos/alias-minimum-packet-rate-rules/id:put operation
      properties:
        alias_minimum_packet_rate_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    QosAlias_Minimum_Packet_Rate_RuleShowResponse:
      type: object
      description: Response of the qos/alias-minimum-packet-rate-rules/id:get operation
      properties:
        alias_minimum_packet_rate_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            min_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - any
                - ingress
                - egress
    PoliciesPacket_Rate_Limit_RulesCreateRequest:
      type: object
      description: Request of the policies/policy_id/packet_rate_limit_rules:post
        operation
      properties:
        packet_rate_limit_rule:
          type: object
          properties:
            max_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            max_burst_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    PoliciesPacket_Rate_Limit_RulesCreateResponse:
      type: object
      description: Response of the policies/policy_id/packet_rate_limit_rules:post
        operation
      properties:
        packet_rate_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            max_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            max_burst_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    PoliciesPacket_Rate_Limit_RulesIndexResponse:
      type: object
      description: Response of the policies/policy_id/packet_rate_limit_rules:get
        operation
      properties:
        packet_rate_limit_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              max_kpps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
              max_burst_kpps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
              direction:
                type: string
                enum:
                  - ingress
                  - egress
    PoliciesPacket_Rate_Limit_RuleUpdateRequest:
      type: object
      description: Request of the policies/policy_id/packet_rate_limit_rules/id:put
        operation
      properties:
        packet_rate_limit_rule:
          type: object
          properties:
            max_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            max_burst_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    PoliciesPacket_Rate_Limit_RuleUpdateResponse:
      type: object
      description: Response of the policies/policy_id/packet_rate_limit_rules/id:put
        operation
      properties:
        packet_rate_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            max_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            max_burst_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    PoliciesPacket_Rate_Limit_RuleShowResponse:
      type: object
      description: Response of the policies/policy_id/packet_rate_limit_rules/id:get
        operation
      properties:
        packet_rate_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            max_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            max_burst_kpps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    QosAlias_Bandwidth_Limit_RulesCreateRequest:
      type: object
      description: Request of the qos/alias-bandwidth-limit-rules:post operation
      properties:
        alias_bandwidth_limit_rule:
          type: object
          properties: {}
    QosAlias_Bandwidth_Limit_RulesCreateResponse:
      type: object
      description: Response of the qos/alias-bandwidth-limit-rules:post operation
      properties:
        alias_bandwidth_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
    QosAlias_Bandwidth_Limit_RulesIndexResponse:
      type: object
      description: Response of the qos/alias-bandwidth-limit-rules:get operation
      properties:
        alias_bandwidth_limit_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              tenant_id:
                type: string
              max_kbps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
              direction:
                type: string
                enum:
                  - ingress
                  - egress
              max_burst_kbps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
    QosAlias_Bandwidth_Limit_RuleUpdateRequest:
      type: object
      description: Request of the qos/alias-bandwidth-limit-rules/id:put operation
      properties:
        alias_bandwidth_limit_rule:
          type: object
          properties:
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
    QosAlias_Bandwidth_Limit_RuleUpdateResponse:
      type: object
      description: Response of the qos/alias-bandwidth-limit-rules/id:put operation
      properties:
        alias_bandwidth_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
    QosAlias_Bandwidth_Limit_RuleShowResponse:
      type: object
      description: Response of the qos/alias-bandwidth-limit-rules/id:get operation
      properties:
        alias_bandwidth_limit_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            max_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
            max_burst_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
    QosAlias_Dscp_Marking_RulesCreateRequest:
      type: object
      description: Request of the qos/alias-dscp-marking-rules:post operation
      properties:
        alias_dscp_marking_rule:
          type: object
          properties: {}
    QosAlias_Dscp_Marking_RulesCreateResponse:
      type: object
      description: Response of the qos/alias-dscp-marking-rules:post operation
      properties:
        alias_dscp_marking_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
    QosAlias_Dscp_Marking_RulesIndexResponse:
      type: object
      description: Response of the qos/alias-dscp-marking-rules:get operation
      properties:
        alias_dscp_marking_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              tenant_id:
                type: string
              dscp_mark:
                type:
                  - string
                  - integer
                enum:
                  - 0
                  - 8
                  - 10
                  - 12
                  - 14
                  - 16
                  - 18
                  - 20
                  - 22
                  - 24
                  - 26
                  - 28
                  - 30
                  - 32
                  - 34
                  - 36
                  - 38
                  - 40
                  - 44
                  - 46
                  - 48
                  - 56
    QosAlias_Dscp_Marking_RuleUpdateRequest:
      type: object
      description: Request of the qos/alias-dscp-marking-rules/id:put operation
      properties:
        alias_dscp_marking_rule:
          type: object
          properties:
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
    QosAlias_Dscp_Marking_RuleUpdateResponse:
      type: object
      description: Response of the qos/alias-dscp-marking-rules/id:put operation
      properties:
        alias_dscp_marking_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
    QosAlias_Dscp_Marking_RuleShowResponse:
      type: object
      description: Response of the qos/alias-dscp-marking-rules/id:get operation
      properties:
        alias_dscp_marking_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            dscp_mark:
              type:
                - string
                - integer
              enum:
                - 0
                - 8
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
    QosAlias_Minimum_Bandwidth_RulesCreateRequest:
      type: object
      description: Request of the qos/alias-minimum-bandwidth-rules:post operation
      properties:
        alias_minimum_bandwidth_rule:
          type: object
          properties: {}
    QosAlias_Minimum_Bandwidth_RulesCreateResponse:
      type: object
      description: Response of the qos/alias-minimum-bandwidth-rules:post operation
      properties:
        alias_minimum_bandwidth_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    QosAlias_Minimum_Bandwidth_RulesIndexResponse:
      type: object
      description: Response of the qos/alias-minimum-bandwidth-rules:get operation
      properties:
        alias_minimum_bandwidth_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              tenant_id:
                type: string
              min_kbps:
                type:
                  - string
                  - integer
                minimum: 0
                maximum: 2147483647
              direction:
                type: string
                enum:
                  - ingress
                  - egress
    QosAlias_Minimum_Bandwidth_RuleUpdateRequest:
      type: object
      description: Request of the qos/alias-minimum-bandwidth-rules/id:put operation
      properties:
        alias_minimum_bandwidth_rule:
          type: object
          properties:
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    QosAlias_Minimum_Bandwidth_RuleUpdateResponse:
      type: object
      description: Response of the qos/alias-minimum-bandwidth-rules/id:put operation
      properties:
        alias_minimum_bandwidth_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    QosAlias_Minimum_Bandwidth_RuleShowResponse:
      type: object
      description: Response of the qos/alias-minimum-bandwidth-rules/id:get operation
      properties:
        alias_minimum_bandwidth_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            tenant_id:
              type: string
            min_kbps:
              type:
                - string
                - integer
              minimum: 0
              maximum: 2147483647
            direction:
              type: string
              enum:
                - ingress
                - egress
    QuotasIndexResponse:
      type: object
      description: Response of the quotas:get operation
      properties:
        quotas:
          type: array
          items:
            type: object
            properties:
              floatingip:
                type: integer
                description: |-
                  The number of floating IP addresses allowed for
                  each project. A value of `-1` means no limit.
              network:
                type: integer
                description: |-
                  The number of networks allowed for each project.
                  A value of `-1` means no limit.
              port:
                type: integer
                description: |-
                  The number of ports allowed for each project.
                  A value of `-1` means no limit.
              rbac_policy:
                type: integer
                description: |-
                  The number of role-based access control (RBAC)
                  policies for each project. A value of `-1` means
                  no limit.
              router:
                type: integer
                description: |-
                  The number of routers allowed for each project.
                  A value of `-1` means no limit.
              security_group:
                type: integer
                description: |-
                  The number of security groups allowed for each
                  project. A value of `-1` means no limit.
              security_group_rule:
                type: integer
                description: |-
                  The number of security group rules allowed for
                  each project. A value of `-1` means no limit.
              subnet:
                type: integer
                description: |-
                  The number of subnets allowed for each project.
                  A value of `-1` means no limit.
              subnetpool:
                type: integer
                description: |-
                  The number of subnet pools allowed for each
                  project. A value of `-1` means no limit.
              project_id:
                type: string
                format: uuid
                description: |-
                  The ID of the project.
          description: |-
            A list of quota objects.
    QuotasDefaultDefaultResponse:
      type: object
      description: Response of the quotas/id/default:get operation
      properties:
        quota:
          type: object
          properties:
            floatingip:
              type: integer
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
            network:
              type: integer
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
            port:
              type: integer
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
            rbac_policy:
              type: integer
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
            router:
              type: integer
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
            security_group:
              type: integer
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
            security_group_rule:
              type: integer
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
            subnet:
              type: integer
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
            subnetpool:
              type: integer
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
            project_id:
              type: string
              format: uuid
              description: The ID of the project.
          description: |-
            A `quota` object.
    QuotaUpdateRequest:
      type: object
      description: Request of the quotas/id:put operation
      properties:
        quota:
          type: object
          properties:
            floatingip:
              type: integer
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
            network:
              type: integer
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
            port:
              type: integer
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
            rbac_policy:
              type: integer
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
            router:
              type: integer
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
            security_group:
              type: integer
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
            security_group_rule:
              type: integer
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
            subnet:
              type: integer
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
            subnetpool:
              type: integer
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
            project_id:
              type: string
              format: uuid
              description: The ID of the project.
          description: |-
            A `quota` object.
    QuotaUpdateResponse:
      type: object
      description: Response of the quotas/id:put operation
      properties:
        quota:
          type: object
          properties:
            floatingip:
              type: integer
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
            network:
              type: integer
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
            port:
              type: integer
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
            rbac_policy:
              type: integer
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
            router:
              type: integer
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
            security_group:
              type: integer
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
            security_group_rule:
              type: integer
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
            subnet:
              type: integer
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
            subnetpool:
              type: integer
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
            project_id:
              type: string
              format: uuid
              description: The ID of the project.
          description: |-
            A `quota` object.
    QuotaShowResponse:
      type: object
      description: Response of the quotas/id:get operation
      properties:
        quota:
          type: object
          properties:
            floatingip:
              type: integer
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
            network:
              type: integer
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
            port:
              type: integer
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
            rbac_policy:
              type: integer
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
            router:
              type: integer
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
            security_group:
              type: integer
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
            security_group_rule:
              type: integer
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
            subnet:
              type: integer
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
            subnetpool:
              type: integer
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
            project_id:
              type: string
              format: uuid
              description: The ID of the project.
          description: |-
            A `quota` object.
    QuotasDetailsDetailsResponse:
      type: object
      description: Response of the quotas/id/details:get operation
      properties:
        quota:
          type: object
          properties:
            floatingip:
              description: The number of floating IP addresses allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            network:
              description: The number of networks allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            port:
              description: The number of ports allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            rbac_policy:
              description: The number of role-based access control (RBAC) policies
                for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            router:
              description: The number of routers allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            security_group:
              description: The number of security groups allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            security_group_rule:
              description: The number of security group rules allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            subnet:
              description: The number of subnets allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
            subnetpool:
              description: The number of subnet pools allowed for each project.
              type: object
              properties:
                used:
                  type: integer
                  description: Used quota
                limit:
                  type: integer
                  description: Current quota limit
                reserved:
                  type: integer
                  description: Reserved quota
    Rbac_PoliciesCreateRequest:
      type: object
      description: Request of the rbac-policies:post operation
      properties:
        rbac_policy:
          type: object
          properties:
            object_type:
              type: string
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
            object_id:
              type: string
              format: uuid
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
            target_tenant:
              type: string
              maxLength: 255
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced. Please note
                that Neutron does not perform any type of validation that the value provided is
                actually the ID of the existing project. If, for example, the name of the project
                is provided here, it will be accepted by the Neutron API, but the RBAC rule
                created will not work as expected.
            tenant_id:
              type: string
              maxLength: 255
            action:
              type: string
              maxLength: 255
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
    Rbac_PoliciesCreateResponse:
      type: object
      description: Response of the rbac-policies:post operation
      properties:
        rbac_policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the RBAC policy.
            object_type:
              type: string
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
            object_id:
              type: string
              format: uuid
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
            target_tenant:
              type: string
              maxLength: 255
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
            action:
              type: string
              maxLength: 255
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
    Rbac_PoliciesIndexResponse:
      type: object
      description: Response of the rbac-policies:get operation
      properties:
        rbac_policies:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the RBAC policy.
              object_type:
                type: string
                description: |-
                  The type of the object that the RBAC policy affects. Types include
                  `qos-policy`, `network`, `security-group`, `address-scope`,
                  `subnetpool` or `address-group`.
              object_id:
                type: string
                format: uuid
                description: |-
                  The ID of the `object_type` resource. An `object_type` of `network`
                  returns a network ID, an `object_type` of `qos-policy` returns a QoS
                  policy ID, an `object_type` of `security-group` returns a security
                  group ID, an `object_type` of `address-scope` returns a address scope
                  ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                  an `object_type` of `address-group` returns an address group ID.
              target_tenant:
                type: string
                maxLength: 255
                description: |-
                  The ID of the tenant to which the RBAC policy will be enforced.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project that owns the resource.
              action:
                type: string
                maxLength: 255
                description: |-
                  Action for the RBAC policy which is `access_as_external` or
                  `access_as_shared`.
    Rbac_PolicyUpdateRequest:
      type: object
      description: Request of the rbac-policies/id:put operation
      properties:
        rbac_policy:
          type: object
          properties:
            target_tenant:
              type: string
              maxLength: 255
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced. Please note
                that Neutron does not perform any type of validation that the value provided is
                actually the ID of the existing project. If, for example, the name of the project
                is provided here, it will be accepted by the Neutron API, but the RBAC rule
                created will not work as expected.
    Rbac_PolicyUpdateResponse:
      type: object
      description: Response of the rbac-policies/id:put operation
      properties:
        rbac_policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the RBAC policy.
            object_type:
              type: string
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
            object_id:
              type: string
              format: uuid
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
            target_tenant:
              type: string
              maxLength: 255
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
            action:
              type: string
              maxLength: 255
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
    Rbac_PolicyShowResponse:
      type: object
      description: Response of the rbac-policies/id:get operation
      properties:
        rbac_policy:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the RBAC policy.
            object_type:
              type: string
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
            object_id:
              type: string
              format: uuid
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
            target_tenant:
              type: string
              maxLength: 255
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
            action:
              type: string
              maxLength: 255
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
    Default_Security_Group_RulesCreateRequest:
      type: object
      description: Request of the default-security-group-rules:post operation
      properties:
        default_security_group_rule:
          type: object
          properties:
            tenant_id:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            remote_group_id:
              type: string
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
            remote_address_group_id:
              type: string
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
            protocol:
              type: string
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
            port_range_min:
              type:
                - integer
                - 'null'
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
            port_range_max:
              type:
                - integer
                - 'null'
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
            remote_ip_prefix:
              type: string
              description: |-
                The remote IP prefix that is matched by this security group rule.
            used_in_default_sg:
              type:
                - string
                - boolean
              description: |-
                Whether this security group rule template should be used in default
                security group created automatically for each new project. Default value
                is `False`.
            used_in_non_default_sg:
              type:
                - string
                - boolean
              description: |-
                Whether this security group rule template should be used in custom
                security groups created by project user. Default value is `True`.
          description: |-
            A `default_security_group_rule` object.
    Default_Security_Group_RulesCreateResponse:
      type: object
      description: Response of the default-security-group-rules:post operation
      properties:
        default_security_group_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the security group default rule.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            remote_group_id:
              type: string
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
            remote_address_group_id:
              type: string
              description: |-
                The remote address group UUID to associate with this
                security group rule.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
            protocol:
              type: string
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
            port_range_min:
              type:
                - integer
                - 'null'
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
            port_range_max:
              type:
                - integer
                - 'null'
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
            remote_ip_prefix:
              type: string
              description: |-
                The remote IP prefix that is matched by this security group rule.
            used_in_default_sg:
              type:
                - string
                - boolean
              description: |-
                Whether this security group rule template should be used in default
                security group created automatically for each new project. Default value
                is `False`.
            used_in_non_default_sg:
              type:
                - string
                - boolean
              description: |-
                Whether this security group rule template should be used in custom
                security groups created by project user. Default value is `True`.
    Default_Security_Group_RulesIndexResponse:
      type: object
      description: Response of the default-security-group-rules:get operation
      properties:
        default_security_group_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the security group default rule.
              description:
                type: string
                maxLength: 1024
                description: |-
                  A human-readable description for the resource.
              remote_group_id:
                type: string
              remote_address_group_id:
                type: string
                description: |-
                  The remote address group UUID to associate with this
                  security group rule.
              direction:
                type: string
                enum:
                  - ingress
                  - egress
                description: |-
                  Ingress or egress, which is the direction in
                  which the security group rule is applied.
              protocol:
                type: string
                description: |-
                  The IP protocol can be represented by a string, an integer, or `null`.
                  Valid string or integer values are `any` or `0`, `ah` or `51`,
                  `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                  `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                  `ipip` or `4`, `ipv6-encap` or `41`,
                  `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                  `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                  `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                  `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                  `vrrp` or `112`. Additionally, any integer value between [0-255] is
                  also valid. The string `any` (or integer `0`) means `all` IP
                  protocols. See the constants in `neutron_lib.constants` for the most
                  up-to-date list of supported strings.
              port_range_min:
                type:
                  - integer
                  - 'null'
                description: |-
                  The minimum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be less than or equal to
                  the `port_range_max` attribute value. If the protocol is ICMP,
                  this value must be an ICMP type.
              port_range_max:
                type:
                  - integer
                  - 'null'
                description: |-
                  The maximum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                  the `port_range_min` attribute value. If the protocol is ICMP,
                  this value must be an ICMP code.
              ethertype:
                type: string
                enum:
                  - IPv4
                  - IPv6
                description: |-
                  Must be IPv4 or IPv6, and addresses represented
                  in CIDR must match the ingress or egress rules.
              remote_ip_prefix:
                type: string
                description: |-
                  The remote IP prefix that is matched by this security group rule.
              used_in_default_sg:
                type:
                  - string
                  - boolean
                description: |-
                  Whether this security group rule template should be used in default
                  security group created automatically for each new project. Default value
                  is `False`.
              used_in_non_default_sg:
                type:
                  - string
                  - boolean
                description: |-
                  Whether this security group rule template should be used in custom
                  security groups created by project user. Default value is `True`.
    Default_Security_Group_RuleUpdateRequest:
      type: object
      description: Request of the default-security-group-rules/id:put operation
      properties:
        default_security_group_rule:
          type: object
          properties: {}
    Default_Security_Group_RuleUpdateResponse:
      type: object
      description: Response of the default-security-group-rules/id:put operation
      properties:
        default_security_group_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            description:
              type: string
              maxLength: 1024
            remote_group_id:
              type: string
            remote_address_group_id:
              type: string
            direction:
              type: string
              enum:
                - ingress
                - egress
            protocol:
              type: string
            port_range_min:
              type:
                - integer
                - 'null'
            port_range_max:
              type:
                - integer
                - 'null'
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
            remote_ip_prefix:
              type: string
            used_in_default_sg:
              type:
                - string
                - boolean
            used_in_non_default_sg:
              type:
                - string
                - boolean
    Default_Security_Group_RuleShowResponse:
      type: object
      description: Response of the default-security-group-rules/id:get operation
      properties:
        default_security_group_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the security group default rule.
            description:
              type: string
              maxLength: 1024
              description: |-
                A human-readable description for the resource.
            remote_group_id:
              type: string
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
            remote_address_group_id:
              type: string
              description: |-
                The remote address group UUID to associate with this
                security group rule.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
            protocol:
              type: string
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
            port_range_min:
              type:
                - integer
                - 'null'
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
            port_range_max:
              type:
                - integer
                - 'null'
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
            remote_ip_prefix:
              type: string
              description: |-
                The remote IP prefix that is matched by this security group rule.
            used_in_default_sg:
              type:
                - string
                - boolean
              description: |-
                Whether this security group rule template should be used in default
                security group created automatically for each new project. Default value
                is `False`.
            used_in_non_default_sg:
              type:
                - string
                - boolean
              description: |-
                Whether this security group rule template should be used in custom
                security groups created by project user. Default value is `True`.
          description: |-
            A `default_security_group_rule` object.
    Security_GroupsCreateRequest:
      type: object
      description: Request of the security-groups:post operation
      properties:
        security_group:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            stateful:
              type:
                - string
                - boolean
              description: |-
                Indicates if the security group is stateful or stateless.
          description: |-
            A `security_group` object.
    Security_GroupsCreateResponse:
      type: object
      description: Response of the security-groups:post operation
      properties:
        security_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the security group.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            security_group_rules:
              type: array
              description: |-
                A list of `security_group_rule` objects.
                Refer to [Security group rules](#security-group-rules) for details.
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The ID of the security group rule.
                  security_group_id:
                    type: string
                    maxLength: 36
                    description: "The security group ID to associate with this\nsecurity
                      group rule."
                  remote_group_id:
                    type: string
                    description: "The remote group UUID to associate with this\nsecurity
                      group rule. You can specify either the\n`remote_group_id` or
                      `remote_ip_prefix` attribute in the\nrequest body."
                  direction:
                    type: string
                    enum:
                      - ingress
                      - egress
                    description: "Ingress or egress, which is the direction in\nwhich
                      the security group rule is applied."
                  protocol:
                    type: string
                    description: The IP protocol can be represented by a string, an
                      integer, or `null`.
                  port_range_min:
                    type:
                      - 'null'
                      - integer
                    description: "The minimum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be less than or equal to\n
                      the `port_range_max` attribute value. If the protocol is ICMP,\n
                      this value must be an ICMP type."
                  port_range_max:
                    type:
                      - 'null'
                      - integer
                    description: "The maximum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be greater than or equal to\n
                      the `port_range_min` attribute value. If the protocol is ICMP,\n
                      this value must be an ICMP code."
                  ethertype:
                    type: string
                    enum:
                      - IPv4
                      - IPv6
                    description: "Must be IPv4 or IPv6, and addresses represented\n
                      in CIDR must match the ingress or egress rules."
                  remote_ip_prefix:
                    type:
                      - string
                      - 'null'
                    description: The remote IP prefix that is matched by this security
                      group rule.
                  tenant_id:
                    type: string
                    maxLength: 255
                    description: The ID of the project.
                  revision_number:
                    type: integer
                    description: |-
                      The revision number of the resource.
                  created_at:
                    type: string
                    description: |-
                      Time at which the resource has been created (in UTC ISO8601 format).
                  updated_at:
                    type: string
                    description: |-
                      Time at which the resource has been updated (in UTC ISO8601 format).
                  description:
                    type: string
                    maxLength: 255
                    description: |-
                      A human-readable description for the resource.
                  normalized_cidr:
                    type:
                      - string
                      - 'null'
                  remote_address_group_id:
                    type: string
                    description: "The remote address group UUID that is associated
                      with this\nsecurity group rule."
                  belongs_to_default_sg:
                    type:
                      - string
                      - boolean
                      - 'null'
                    description: "Indicates if the security group rule belongs to
                      the default security\ngroup of the project or not."
            revision_number:
              type: integer
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
            updated_at:
              type: string
            description:
              type: string
              maxLength: 255
            stateful:
              type:
                - string
                - boolean
              description: |-
                Indicates if the security group is stateful or stateless.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this security group is shared to the requester’s project.
          description: |-
            A `security_group` object.
    Security_GroupsIndexResponse:
      type: object
      description: Response of the security-groups:get operation
      properties:
        security_groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the security group.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              security_group_rules:
                type: array
                description: |-
                  A list of `security_group_rule` objects.
                  Refer to [Security group rules](#security-group-rules) for details.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: The ID of the security group rule.
                    security_group_id:
                      type: string
                      maxLength: 36
                      description: "The security group ID to associate with this\n
                        security group rule."
                    remote_group_id:
                      type: string
                      description: "The remote group UUID to associate with this\n
                        security group rule. You can specify either the\n`remote_group_id`
                        or `remote_ip_prefix` attribute in the\nrequest body."
                    direction:
                      type: string
                      enum:
                        - ingress
                        - egress
                      description: "Ingress or egress, which is the direction in\n
                        which the security group rule is applied."
                    protocol:
                      type: string
                      description: The IP protocol can be represented by a string,
                        an integer, or `null`.
                    port_range_min:
                      type:
                        - 'null'
                        - integer
                      description: "The minimum port number in the range that is\n
                        matched by the security group rule. If the protocol is TCP,
                        UDP,\nDCCP, SCTP or UDP-Lite this value must be less than
                        or equal to\nthe `port_range_max` attribute value. If the
                        protocol is ICMP,\nthis value must be an ICMP type."
                    port_range_max:
                      type:
                        - 'null'
                        - integer
                      description: "The maximum port number in the range that is\n
                        matched by the security group rule. If the protocol is TCP,
                        UDP,\nDCCP, SCTP or UDP-Lite this value must be greater than
                        or equal to\nthe `port_range_min` attribute value. If the
                        protocol is ICMP,\nthis value must be an ICMP code."
                    ethertype:
                      type: string
                      enum:
                        - IPv4
                        - IPv6
                      description: "Must be IPv4 or IPv6, and addresses represented\n
                        in CIDR must match the ingress or egress rules."
                    remote_ip_prefix:
                      type:
                        - string
                        - 'null'
                      description: The remote IP prefix that is matched by this security
                        group rule.
                    tenant_id:
                      type: string
                      maxLength: 255
                      description: The ID of the project.
                    revision_number:
                      type: integer
                      description: |-
                        The revision number of the resource.
                    created_at:
                      type: string
                      description: |-
                        Time at which the resource has been created (in UTC ISO8601 format).
                    updated_at:
                      type: string
                      description: |-
                        Time at which the resource has been updated (in UTC ISO8601 format).
                    description:
                      type: string
                      maxLength: 255
                      description: |-
                        A human-readable description for the resource.
                    normalized_cidr:
                      type:
                        - string
                        - 'null'
                    remote_address_group_id:
                      type: string
                      description: "The remote address group UUID that is associated
                        with this\nsecurity group rule."
                    belongs_to_default_sg:
                      type:
                        - string
                        - boolean
                        - 'null'
                      description: "Indicates if the security group rule belongs to
                        the default security\ngroup of the project or not."
              revision_number:
                type: integer
              tags:
                type: array
                items:
                  type: string
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
              updated_at:
                type: string
              description:
                type: string
                maxLength: 255
              stateful:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates if the security group is stateful or stateless.
              shared:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether this security group is shared to the requester’s project.
          description: |-
            A list of `security_group` objects.
    Security_GroupUpdateRequest:
      type: object
      description: Request of the security-groups/id:put operation
      properties:
        security_group:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            stateful:
              type:
                - string
                - boolean
          description: |-
            A `security_group` object.
    Security_GroupUpdateResponse:
      type: object
      description: Response of the security-groups/id:put operation
      properties:
        security_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the security group.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            security_group_rules:
              type: array
              description: |-
                A list of `security_group_rule` objects.
                Refer to [Security group rules](#security-group-rules) for details.
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The ID of the security group rule.
                  security_group_id:
                    type: string
                    maxLength: 36
                    description: "The security group ID to associate with this\nsecurity
                      group rule."
                  remote_group_id:
                    type: string
                    description: "The remote group UUID to associate with this\nsecurity
                      group rule. You can specify either the\n`remote_group_id` or
                      `remote_ip_prefix` attribute in the\nrequest body."
                  direction:
                    type: string
                    enum:
                      - ingress
                      - egress
                    description: "Ingress or egress, which is the direction in\nwhich
                      the security group rule is applied."
                  protocol:
                    type: string
                    description: The IP protocol can be represented by a string, an
                      integer, or `null`.
                  port_range_min:
                    type:
                      - 'null'
                      - integer
                    description: "The minimum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be less than or equal to\n
                      the `port_range_max` attribute value. If the protocol is ICMP,\n
                      this value must be an ICMP type."
                  port_range_max:
                    type:
                      - 'null'
                      - integer
                    description: "The maximum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be greater than or equal to\n
                      the `port_range_min` attribute value. If the protocol is ICMP,\n
                      this value must be an ICMP code."
                  ethertype:
                    type: string
                    enum:
                      - IPv4
                      - IPv6
                    description: "Must be IPv4 or IPv6, and addresses represented\n
                      in CIDR must match the ingress or egress rules."
                  remote_ip_prefix:
                    type:
                      - string
                      - 'null'
                    description: The remote IP prefix that is matched by this security
                      group rule.
                  tenant_id:
                    type: string
                    maxLength: 255
                    description: The ID of the project.
                  revision_number:
                    type: integer
                    description: |-
                      The revision number of the resource.
                  created_at:
                    type: string
                    description: |-
                      Time at which the resource has been created (in UTC ISO8601 format).
                  updated_at:
                    type: string
                    description: |-
                      Time at which the resource has been updated (in UTC ISO8601 format).
                  description:
                    type: string
                    maxLength: 255
                    description: |-
                      A human-readable description for the resource.
                  normalized_cidr:
                    type:
                      - string
                      - 'null'
                  remote_address_group_id:
                    type: string
                    description: "The remote address group UUID that is associated
                      with this\nsecurity group rule."
                  belongs_to_default_sg:
                    type:
                      - string
                      - boolean
                      - 'null'
                    description: "Indicates if the security group rule belongs to
                      the default security\ngroup of the project or not."
            revision_number:
              type: integer
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
            updated_at:
              type: string
            description:
              type: string
              maxLength: 255
            stateful:
              type:
                - string
                - boolean
              description: |-
                Indicates if the security group is stateful or stateless.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this security group is shared to the requester’s project.
          description: |-
            A `security_group` object.
    Security_GroupShowResponse:
      type: object
      description: Response of the security-groups/id:get operation
      properties:
        security_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the security group.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            security_group_rules:
              type: array
              description: |-
                A list of `security_group_rule` objects.
                Refer to [Security group rules](#security-group-rules) for details.
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: The ID of the security group rule.
                  security_group_id:
                    type: string
                    maxLength: 36
                    description: "The security group ID to associate with this\nsecurity
                      group rule."
                  remote_group_id:
                    type: string
                    description: "The remote group UUID to associate with this\nsecurity
                      group rule. You can specify either the\n`remote_group_id` or
                      `remote_ip_prefix` attribute in the\nrequest body."
                  direction:
                    type: string
                    enum:
                      - ingress
                      - egress
                    description: "Ingress or egress, which is the direction in\nwhich
                      the security group rule is applied."
                  protocol:
                    type: string
                    description: The IP protocol can be represented by a string, an
                      integer, or `null`.
                  port_range_min:
                    type:
                      - 'null'
                      - integer
                    description: "The minimum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be less than or equal to\n
                      the `port_range_max` attribute value. If the protocol is ICMP,\n
                      this value must be an ICMP type."
                  port_range_max:
                    type:
                      - 'null'
                      - integer
                    description: "The maximum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be greater than or equal to\n
                      the `port_range_min` attribute value. If the protocol is ICMP,\n
                      this value must be an ICMP code."
                  ethertype:
                    type: string
                    enum:
                      - IPv4
                      - IPv6
                    description: "Must be IPv4 or IPv6, and addresses represented\n
                      in CIDR must match the ingress or egress rules."
                  remote_ip_prefix:
                    type:
                      - string
                      - 'null'
                    description: The remote IP prefix that is matched by this security
                      group rule.
                  tenant_id:
                    type: string
                    maxLength: 255
                    description: The ID of the project.
                  revision_number:
                    type: integer
                    description: |-
                      The revision number of the resource.
                  created_at:
                    type: string
                    description: |-
                      Time at which the resource has been created (in UTC ISO8601 format).
                  updated_at:
                    type: string
                    description: |-
                      Time at which the resource has been updated (in UTC ISO8601 format).
                  description:
                    type: string
                    maxLength: 255
                    description: |-
                      A human-readable description for the resource.
                  normalized_cidr:
                    type:
                      - string
                      - 'null'
                  remote_address_group_id:
                    type: string
                    description: "The remote address group UUID that is associated
                      with this\nsecurity group rule."
                  belongs_to_default_sg:
                    type:
                      - string
                      - boolean
                      - 'null'
                    description: "Indicates if the security group rule belongs to
                      the default security\ngroup of the project or not."
            revision_number:
              type: integer
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
            updated_at:
              type: string
            description:
              type: string
              maxLength: 255
            stateful:
              type:
                - string
                - boolean
              description: |-
                Indicates if the security group is stateful or stateless.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this security group is shared to the requester’s project.
          description: |-
            A `security_group` object.
    Security_Group_RulesCreateRequest:
      type: object
      description: Request of the security-group-rules:post operation
      properties:
        security_group_rule:
          type: object
          properties:
            security_group_id:
              type: string
              maxLength: 36
              description: |-
                The security group ID to associate with this
                security group rule.
            remote_group_id:
              type: string
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
            protocol:
              type: string
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
            port_range_min:
              type:
                - integer
                - 'null'
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
            port_range_max:
              type:
                - integer
                - 'null'
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
            remote_ip_prefix:
              type: string
              description: |-
                The remote IP prefix that is matched by this security group rule.
            tenant_id:
              type: string
              maxLength: 255
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            remote_address_group_id:
              type: string
          description: |-
            A `security_group_rule` object.
    Security_Group_RulesCreateResponse:
      type: object
      description: Response of the security-group-rules:post operation
      properties:
        security_group_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the security group rule.
            security_group_id:
              type: string
              maxLength: 36
              description: |-
                The security group ID to associate with this
                security group rule.
            remote_group_id:
              type: string
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
            protocol:
              type: string
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
            port_range_min:
              type:
                - integer
                - 'null'
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
            port_range_max:
              type:
                - integer
                - 'null'
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
            remote_ip_prefix:
              type: string
              description: |-
                The remote IP prefix that is matched by this security group rule.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            normalized_cidr:
              type:
                - string
                - 'null'
            remote_address_group_id:
              type: string
              description: |-
                The remote address group UUID that is associated with this
                security group rule.
            belongs_to_default_sg:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates if the security group rule belongs to the default security
                group of the project or not.
          description: |-
            A `security_group_rule` object.
    Security_Group_RulesIndexResponse:
      type: object
      description: Response of the security-group-rules:get operation
      properties:
        security_group_rules:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the security group rule.
              security_group_id:
                type: string
                maxLength: 36
                description: |-
                  The security group ID to associate with this
                  security group rule.
              remote_group_id:
                type: string
                description: |-
                  The remote group UUID to associate with this
                  security group rule. You can specify either the
                  `remote_group_id` or `remote_ip_prefix` attribute in the
                  request body.
              direction:
                type: string
                enum:
                  - ingress
                  - egress
                description: |-
                  Ingress or egress, which is the direction in
                  which the security group rule is applied.
              protocol:
                type: string
                description: |-
                  The IP protocol can be represented by a string, an integer, or `null`.
                  Valid string or integer values are `any` or `0`, `ah` or `51`,
                  `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                  `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                  `ipip` or `4`, `ipv6-encap` or `41`,
                  `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                  `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                  `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                  `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                  `vrrp` or `112`. Additionally, any integer value between [0-255] is
                  also valid. The string `any` (or integer `0`) means `all` IP
                  protocols. See the constants in `neutron_lib.constants` for the most
                  up-to-date list of supported strings.
              port_range_min:
                type:
                  - integer
                  - 'null'
                description: |-
                  The minimum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be less than or equal to
                  the `port_range_max` attribute value. If the protocol is ICMP,
                  this value must be an ICMP type.
              port_range_max:
                type:
                  - integer
                  - 'null'
                description: |-
                  The maximum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                  the `port_range_min` attribute value. If the protocol is ICMP,
                  this value must be an ICMP code.
              ethertype:
                type: string
                enum:
                  - IPv4
                  - IPv6
                description: |-
                  Must be IPv4 or IPv6, and addresses represented
                  in CIDR must match the ingress or egress rules.
              remote_ip_prefix:
                type: string
                description: |-
                  The remote IP prefix that is matched by this security group rule.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
              normalized_cidr:
                type:
                  - string
                  - 'null'
              remote_address_group_id:
                type: string
                description: |-
                  The remote address group UUID that is associated with this
                  security group rule.
              belongs_to_default_sg:
                type:
                  - string
                  - boolean
                  - 'null'
                description: |-
                  Indicates if the security group rule belongs to the default security
                  group of the project or not.
          description: |-
            A list of `security_group_rule` objects.
            Refer to [Security group rules](#security-group-rules) for details.
    Security_Group_RuleUpdateRequest:
      type: object
      description: Request of the security-group-rules/id:put operation
      properties:
        security_group_rule:
          type: object
          properties:
            description:
              type: string
              maxLength: 255
    Security_Group_RuleUpdateResponse:
      type: object
      description: Response of the security-group-rules/id:put operation
      properties:
        security_group_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
            security_group_id:
              type: string
              maxLength: 36
            remote_group_id:
              type: string
            direction:
              type: string
              enum:
                - ingress
                - egress
            protocol:
              type: string
            port_range_min:
              type:
                - integer
                - 'null'
            port_range_max:
              type:
                - integer
                - 'null'
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
            remote_ip_prefix:
              type: string
            tenant_id:
              type: string
              maxLength: 255
            revision_number:
              type: integer
            created_at:
              type: string
            updated_at:
              type: string
            description:
              type: string
              maxLength: 255
            normalized_cidr:
              type:
                - string
                - 'null'
            remote_address_group_id:
              type: string
            belongs_to_default_sg:
              type:
                - string
                - boolean
                - 'null'
    Security_Group_RuleShowResponse:
      type: object
      description: Response of the security-group-rules/id:get operation
      properties:
        security_group_rule:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the security group rule.
            security_group_id:
              type: string
              maxLength: 36
              description: |-
                The security group ID to associate with this
                security group rule.
            remote_group_id:
              type: string
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
            direction:
              type: string
              enum:
                - ingress
                - egress
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
            protocol:
              type: string
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
            port_range_min:
              type:
                - integer
                - 'null'
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
            port_range_max:
              type:
                - integer
                - 'null'
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
            ethertype:
              type: string
              enum:
                - IPv4
                - IPv6
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
            remote_ip_prefix:
              type: string
              description: |-
                The remote IP prefix that is matched by this security group rule.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            normalized_cidr:
              type:
                - string
                - 'null'
            remote_address_group_id:
              type: string
              description: |-
                The remote address group UUID that is associated with this
                security group rule.
            belongs_to_default_sg:
              type:
                - string
                - boolean
                - 'null'
              description: |-
                Indicates if the security group rule belongs to the default security
                group of the project or not.
          description: |-
            A `security_group_rule` object.
    SegmentsCreateRequest:
      type: object
      description: Request of the segments:post operation
      properties:
        segment:
          type: object
          properties:
            tenant_id:
              type: string
              maxLength: 255
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            physical_network:
              type: string
              maxLength: 64
              description: |-
                The physical network where this network/segment is implemented.
            network_type:
              type: string
              maxLength: 32
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
            segmentation_id:
              type:
                - string
                - integer
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
            name:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                Human-readable name of the segment.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
    SegmentsCreateResponse:
      type: object
      description: Response of the segments:post operation
      properties:
        segment:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the segment.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            physical_network:
              type: string
              maxLength: 64
              description: |-
                The physical network where this network/segment is implemented.
            network_type:
              type: string
              maxLength: 32
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
            segmentation_id:
              type:
                - string
                - integer
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
            name:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
    SegmentsIndexResponse:
      type: object
      description: Response of the segments:get operation
      properties:
        segments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The UUID of the segment.
              network_id:
                type: string
                format: uuid
                description: |-
                  The ID of the attached network.
              physical_network:
                type: string
                maxLength: 64
                description: |-
                  The physical network where this network/segment is implemented.
              network_type:
                type: string
                maxLength: 32
                description: |-
                  The type of physical network that maps to this
                  network resource. For example, `flat`, `vlan`, `vxlan`, or
                  `gre`.
              segmentation_id:
                type:
                  - string
                  - integer
                description: |-
                  The ID of the isolated segment on the physical network.
                  The `network_type` attribute defines the segmentation model.
                  For example, if the `network_type` value is vlan, this ID is a vlan
                  identifier. If the `network_type` value is gre, this ID is a gre key.
                  `Note` that only the segmentation-id of VLAN type networks can be
                  changed!
              name:
                type:
                  - string
                  - 'null'
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
    SegmentUpdateRequest:
      type: object
      description: Request of the segments/id:put operation
      properties:
        segment:
          type: object
          properties:
            name:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                Human-readable name of the segment.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
    SegmentUpdateResponse:
      type: object
      description: Response of the segments/id:put operation
      properties:
        segment:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the segment.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            physical_network:
              type: string
              maxLength: 64
              description: |-
                The physical network where this network/segment is implemented.
            network_type:
              type: string
              maxLength: 32
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
            segmentation_id:
              type:
                - string
                - integer
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
            name:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
    SegmentShowResponse:
      type: object
      description: Response of the segments/id:get operation
      properties:
        segment:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The UUID of the segment.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            physical_network:
              type: string
              maxLength: 64
              description: |-
                The physical network where this network/segment is implemented.
            network_type:
              type: string
              maxLength: 32
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
            segmentation_id:
              type:
                - string
                - integer
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
            name:
              type:
                - string
                - 'null'
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
    Service_ProvidersCreateRequest:
      type: object
      description: Request of the service-providers:post operation
      properties:
        service_provider:
          type: object
          properties: {}
    Service_ProvidersCreateResponse:
      type: object
      description: Response of the service-providers:post operation
      properties:
        service_provider:
          type: object
          properties:
            service_type:
              type: string
            name:
              type: string
            default:
              type: string
    Service_ProvidersIndexResponse:
      type: object
      description: Response of the service-providers:get operation
      properties:
        service_providers:
          type: array
          items:
            type: object
            properties:
              service_type:
                type: string
                description: |-
                  The service type, which is `CORE`, `DUMMY`,
                  `FIREWALL`, `FLAVORS`, `L3_ROUTER_NAT`, `METERING`, `QOS`,
                  or `VPN`.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              default:
                type: string
                description: |-
                  Defines whether the provider is the default for
                  the service type. If this value is `true`, the provider is the
                  default. If this value is `false`, the provider is not the
                  default.
          description: |-
            A list of `service_provider` objects.
    Service_ProviderUpdateRequest:
      type: object
      description: Request of the service-providers/id:put operation
      properties:
        service_provider:
          type: object
          properties: {}
    Service_ProviderUpdateResponse:
      type: object
      description: Response of the service-providers/id:put operation
      properties:
        service_provider:
          type: object
          properties:
            service_type:
              type: string
            name:
              type: string
            default:
              type: string
    Service_ProviderShowResponse:
      type: object
      description: Response of the service-providers/id:get operation
      properties:
        service_provider:
          type: object
          properties:
            service_type:
              type: string
            name:
              type: string
            default:
              type: string
    SubnetpoolsCreateRequest:
      type: object
      description: Request of the subnetpools:post operation
      properties:
        subnetpool:
          type: object
          properties:
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            prefixes:
              type: array
              items:
                type: string
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
            default_quota:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
            default_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
            min_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
            max_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
            is_default:
              type:
                - string
                - boolean
              description: |-
                The subnetpool is default pool or not.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
            address_scope_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                An address scope to assign to the subnet pool.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `subnetpool` object.
    SubnetpoolsCreateResponse:
      type: object
      description: Response of the subnetpools:post operation
      properties:
        subnetpool:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet pool.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            prefixes:
              type: array
              items:
                type: string
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
            default_quota:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
            ip_version:
              type: integer
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
            default_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
            min_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
            max_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
            is_default:
              type:
                - string
                - boolean
              description: |-
                The subnetpool is default pool or not.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
            address_scope_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                An address scope to assign to the subnet pool.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `subnetpool` object.
    SubnetpoolsIndexResponse:
      type: object
      description: Response of the subnetpools:get operation
      properties:
        subnetpools:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the subnet pool.
              name:
                type: string
                description: |-
                  Human-readable name of the resource.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              prefixes:
                type: array
                items:
                  type: string
                description: |-
                  A list of subnet prefixes to assign to the subnet
                  pool. The API merges adjacent prefixes and treats them as a single
                  prefix. Each subnet prefix must be unique among all subnet
                  prefixes in all subnet pools that are associated with the address
                  scope.
              default_quota:
                type:
                  - string
                  - integer
                minimum: 0
                description: |-
                  A per-project quota on the prefix space that can
                  be allocated from the subnet pool for project subnets. Default is
                  no quota is enforced on allocations from the subnet pool. For IPv4
                  subnet pools, `default_quota` is measured in units of /32. For
                  IPv6 subnet pools, `default_quota` is measured units of /64. All
                  projects that use the subnet pool have the same prefix quota
                  applied.
              ip_version:
                type: integer
                description: |-
                  The IP protocol version. Valid value is `4` or
                  `6`. Default is `4`.
              default_prefixlen:
                type:
                  - string
                  - integer
                minimum: 0
                description: |-
                  The size of the prefix to allocate when the
                  `cidr` or `prefixlen` attributes are omitted when you create
                  the subnet. Default is `min_prefixlen`.
              min_prefixlen:
                type:
                  - string
                  - integer
                minimum: 0
                description: |-
                  The smallest prefix that can be allocated from a
                  subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                  subnet pools, default is `64`.
              max_prefixlen:
                type:
                  - string
                  - integer
                minimum: 0
                description: |-
                  The maximum prefix size that can be allocated
                  from the subnet pool. For IPv4 subnet pools, default is `32`.
                  For IPv6 subnet pools, default is `128`.
              is_default:
                type:
                  - string
                  - boolean
                description: |-
                  The subnetpool is default pool or not.
              shared:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether this resource is shared across all projects.
                  By default, only administrative users can change this value.
              address_scope_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  An address scope to assign to the subnet pool.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
          description: |-
            A list of `subnetpool` objects.
    SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsRequest:
      type: object
      description: Request of the subnetpools/id/onboard_network_subnets:put operation
    SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsResponse:
      type: object
      description: Response of the subnetpools/id/onboard_network_subnets:put operation
    SubnetpoolUpdateRequest:
      type: object
      description: Request of the subnetpools/id:put operation
      properties:
        subnetpool:
          type: object
          properties:
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            prefixes:
              type: array
              items:
                type: string
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
            default_quota:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
            default_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
            min_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
            max_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
            is_default:
              type:
                - string
                - boolean
              description: |-
                The subnetpool is default pool or not.
            address_scope_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                An address scope to assign to the subnet pool.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `subnetpool` object.
    SubnetpoolUpdateResponse:
      type: object
      description: Response of the subnetpools/id:put operation
      properties:
        subnetpool:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet pool.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            prefixes:
              type: array
              items:
                type: string
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
            default_quota:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
            ip_version:
              type: integer
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
            default_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
            min_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
            max_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
            is_default:
              type:
                - string
                - boolean
              description: |-
                The subnetpool is default pool or not.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
            address_scope_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                An address scope to assign to the subnet pool.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `subnetpool` object.
    SubnetpoolShowResponse:
      type: object
      description: Response of the subnetpools/id:get operation
      properties:
        subnetpool:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet pool.
            name:
              type: string
              description: |-
                Human-readable name of the resource.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            prefixes:
              type: array
              items:
                type: string
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
            default_quota:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
            ip_version:
              type: integer
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
            default_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
            min_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
            max_prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
            is_default:
              type:
                - string
                - boolean
              description: |-
                The subnetpool is default pool or not.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
            address_scope_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                An address scope to assign to the subnet pool.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `subnetpool` object.
    SubnetpoolsAdd_PrefixesAdd_PrefixesRequest:
      type: object
      description: Request of the subnetpools/id/add_prefixes:put operation
    SubnetpoolsAdd_PrefixesAdd_PrefixesResponse:
      type: object
      description: Response of the subnetpools/id/add_prefixes:put operation
    SubnetpoolsRemove_PrefixesRemove_PrefixesRequest:
      type: object
      description: Request of the subnetpools/id/remove_prefixes:put operation
    SubnetpoolsRemove_PrefixesRemove_PrefixesResponse:
      type: object
      description: Response of the subnetpools/id/remove_prefixes:put operation
    PortsTagsUpdate_AllRequest:
      type: object
      description: Request of the ports/port_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    PortsTagsUpdate_AllResponse:
      type: object
      description: Response of the ports/port_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    PortsTagsIndexResponse:
      type: object
      description: Response of the ports/port_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    PortsTagUpdateRequest:
      type: object
      description: Request of the ports/port_id/tags/id:put operation
    PortsTagUpdateResponse:
      type: object
      description: Response of the ports/port_id/tags/id:put operation
    SubnetsTagsUpdate_AllRequest:
      type: object
      description: Request of the subnets/subnet_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    SubnetsTagsUpdate_AllResponse:
      type: object
      description: Response of the subnets/subnet_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    SubnetsTagsIndexResponse:
      type: object
      description: Response of the subnets/subnet_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    SubnetsTagUpdateRequest:
      type: object
      description: Request of the subnets/subnet_id/tags/id:put operation
    SubnetsTagUpdateResponse:
      type: object
      description: Response of the subnets/subnet_id/tags/id:put operation
    SubnetpoolsTagsUpdate_AllRequest:
      type: object
      description: Request of the subnetpools/subnetpool_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    SubnetpoolsTagsUpdate_AllResponse:
      type: object
      description: Response of the subnetpools/subnetpool_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    SubnetpoolsTagsIndexResponse:
      type: object
      description: Response of the subnetpools/subnetpool_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    SubnetpoolsTagUpdateRequest:
      type: object
      description: Request of the subnetpools/subnetpool_id/tags/id:put operation
    SubnetpoolsTagUpdateResponse:
      type: object
      description: Response of the subnetpools/subnetpool_id/tags/id:put operation
    NetworksTagsUpdate_AllRequest:
      type: object
      description: Request of the networks/network_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    NetworksTagsUpdate_AllResponse:
      type: object
      description: Response of the networks/network_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    NetworksTagsIndexResponse:
      type: object
      description: Response of the networks/network_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    NetworksTagUpdateRequest:
      type: object
      description: Request of the networks/network_id/tags/id:put operation
    NetworksTagUpdateResponse:
      type: object
      description: Response of the networks/network_id/tags/id:put operation
    RoutersTagsUpdate_AllRequest:
      type: object
      description: Request of the routers/router_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    RoutersTagsUpdate_AllResponse:
      type: object
      description: Response of the routers/router_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    RoutersTagsIndexResponse:
      type: object
      description: Response of the routers/router_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    RoutersTagUpdateRequest:
      type: object
      description: Request of the routers/router_id/tags/id:put operation
    RoutersTagUpdateResponse:
      type: object
      description: Response of the routers/router_id/tags/id:put operation
    FloatingipsTagsUpdate_AllRequest:
      type: object
      description: Request of the floatingips/floatingip_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    FloatingipsTagsUpdate_AllResponse:
      type: object
      description: Response of the floatingips/floatingip_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    FloatingipsTagsIndexResponse:
      type: object
      description: Response of the floatingips/floatingip_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    FloatingipsTagUpdateRequest:
      type: object
      description: Request of the floatingips/floatingip_id/tags/id:put operation
    FloatingipsTagUpdateResponse:
      type: object
      description: Response of the floatingips/floatingip_id/tags/id:put operation
    PoliciesTagsUpdate_AllRequest:
      type: object
      description: Request of the policies/policy_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    PoliciesTagsUpdate_AllResponse:
      type: object
      description: Response of the policies/policy_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    PoliciesTagsIndexResponse:
      type: object
      description: Response of the policies/policy_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    PoliciesTagUpdateRequest:
      type: object
      description: Request of the policies/policy_id/tags/id:put operation
    PoliciesTagUpdateResponse:
      type: object
      description: Response of the policies/policy_id/tags/id:put operation
    Security_GroupsTagsUpdate_AllRequest:
      type: object
      description: Request of the security-groups/security_group_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    Security_GroupsTagsUpdate_AllResponse:
      type: object
      description: Response of the security-groups/security_group_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    Security_GroupsTagsIndexResponse:
      type: object
      description: Response of the security-groups/security_group_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    Security_GroupsTagUpdateRequest:
      type: object
      description: Request of the security-groups/security_group_id/tags/id:put operation
    Security_GroupsTagUpdateResponse:
      type: object
      description: Response of the security-groups/security_group_id/tags/id:put operation
    TrunksTagsUpdate_AllRequest:
      type: object
      description: Request of the trunks/trunk_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    TrunksTagsUpdate_AllResponse:
      type: object
      description: Response of the trunks/trunk_id/tags:put operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    TrunksTagsIndexResponse:
      type: object
      description: Response of the trunks/trunk_id/tags:get operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    TrunksTagUpdateRequest:
      type: object
      description: Request of the trunks/trunk_id/tags/id:put operation
    TrunksTagUpdateResponse:
      type: object
      description: Response of the trunks/trunk_id/tags/id:put operation
    Network_Segment_RangesTagsUpdate_AllRequest:
      type: object
      description: Request of the network_segment_ranges/network_segment_range_id/tags:put
        operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    Network_Segment_RangesTagsUpdate_AllResponse:
      type: object
      description: Response of the network_segment_ranges/network_segment_range_id/tags:put
        operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    Network_Segment_RangesTagsIndexResponse:
      type: object
      description: Response of the network_segment_ranges/network_segment_range_id/tags:get
        operation
      properties:
        tags:
          type: array
          items:
            type: string
            maxLength: 255
    Network_Segment_RangesTagUpdateRequest:
      type: object
      description: Request of the network_segment_ranges/network_segment_range_id/tags/id:put
        operation
    Network_Segment_RangesTagUpdateResponse:
      type: object
      description: Response of the network_segment_ranges/network_segment_range_id/tags/id:put
        operation
    NetworksIndexResponse:
      type: object
      description: Response of the networks:get operation
      properties:
        networks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the network.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the network.
              subnets:
                type: array
                items:
                  type: string
                  format: uuid
                description: |-
                  The associated subnets.
              admin_state_up:
                type:
                  - string
                  - boolean
                description: |-
                  The administrative state of the network, which is
                  up (`true`) or down (`false`).
              status:
                type: string
                description: |-
                  The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              shared:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether this network is shared across all tenants. By default,
                  only administrative users can change this value.
              ipv4_address_scope:
                type: string
                description: |-
                  The ID of the IPv4 address scope that the network is associated with.
              ipv6_address_scope:
                type: string
                description: |-
                  The ID of the IPv6 address scope that the network is associated with.
              router:external:
                type:
                  - string
                  - boolean
                description: |-
                  Defines whether the network may be used for creation of floating IPs. Only
                  networks with this flag may be an external gateway for routers.
                  The network must have an external routing facility that is not managed by
                  the networking service. If the network is updated from external to internal
                  the unused floating IPs of this network are automatically deleted when
                  extension `floatingip-autodelete-internal` is present.
              l2_adjacency:
                type: string
                description: |-
                  Indicates whether L2 connectivity is available throughout
                  the `network`.
              segments:
                type: array
                items:
                  type: object
                  properties:
                    provider:segmentation_id:
                      type: integer
                      description: |-
                        The ID of the isolated segment on the physical network.
                        The `network_type` attribute defines the segmentation model.
                        For example, if the `network_type` value is vlan, this ID is a vlan
                        identifier. If the `network_type` value is gre, this ID is a gre key.
                        `Note` that only the segmentation-id of VLAN type networks can be
                        changed!
                    provider:physical_network:
                      type: string
                      description: |-
                        The physical network where this network/segment is implemented.
                    provider:network_type:
                      type: string
                      description: |-
                        The type of physical network that this network is mapped to.
                        For example, `flat`, `vlan`, `vxlan`, or `gre`.
                        Valid values depend on a networking back-end.
                description: |-
                  A list of provider `segment` objects.
              mtu:
                type:
                  - string
                  - integer
                minimum: 0
                description: |-
                  The maximum transmission unit (MTU) value to
                  address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                  IPv6.
              availability_zones:
                type: array
                items:
                  type: string
                description: |-
                  The availability zone for the network.
              availability_zone_hints:
                type: array
                items:
                  type: string
                description: |-
                  The availability zone candidate for the network.
              port_security_enabled:
                type:
                  - string
                  - boolean
                description: |-
                  The port security status of the network. Valid values are
                  enabled (`true`) and disabled (`false`).
                  This value is used as the default value of `port_security_enabled`
                  field of a newly created port.
              provider:network_type:
                type: string
                maxLength: 32
              provider:physical_network:
                type: string
                maxLength: 64
              provider:segmentation_id:
                type:
                  - string
                  - integer
              qos_policy_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of the QoS policy associated with the network.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              tags:
                type: array
                items:
                  type: string
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              is_default:
                type:
                  - string
                  - boolean
                description: |-
                  The network is default pool or not.
              dns_domain:
                type: string
                format: hostname
                maxLength: 255
                description: |-
                  A valid DNS domain.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
          description: |-
            A list of `network` objects.
    NetworksCreateRequest:
      type: object
      description: Request of the networks:post operation
      properties:
        network:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the network.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
            router:external:
              type:
                - string
                - boolean
              description: |-
                Indicates whether the network has an external routing facility that’s not
                managed by the networking service.
            segments:
              type: array
              items:
                type: object
                properties:
                  provider:segmentation_id:
                    type: integer
                    description: |-
                      The ID of the isolated segment on the physical network.
                      The `network_type` attribute defines the segmentation model.
                      For example, if the `network_type` value is vlan, this ID is a vlan
                      identifier. If the `network_type` value is gre, this ID is a gre key.
                  provider:physical_network:
                    type: string
                    description: |-
                      The physical network where this network should be implemented.
                      The Networking API v2.0 does not provide a way to list available
                      physical networks. For example, the Open vSwitch plug-in configuration
                      file defines a symbolic name that maps to specific bridges on each
                      compute host.
                  provider:network_type:
                    type: string
                    description: |-
                      The type of physical network that this network should be mapped to.
                      For example, `flat`, `vlan`, `vxlan`, or `gre`.
                      Valid values depend on a networking back-end.
              description: |-
                A list of provider `segment` objects.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidate for the network.
            ha:
              type:
                - string
                - boolean
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
            provider:network_type:
              type: string
              maxLength: 32
            provider:physical_network:
              type: string
              maxLength: 64
            provider:segmentation_id:
              type:
                - string
                - integer
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the network.
            is_default:
              type:
                - string
                - boolean
              description: |-
                The network is default or not.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `network` object.
    NetworksCreateResponse:
      type: object
      description: Response of the networks:post operation
      properties:
        network:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the network.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the network.
            subnets:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The associated subnets.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this network is shared across all tenants. By default,
                only administrative users can change this value.
            ipv4_address_scope:
              type: string
              description: |-
                The ID of the IPv4 address scope that the network is associated with.
            ipv6_address_scope:
              type: string
              description: |-
                The ID of the IPv6 address scope that the network is associated with.
            router:external:
              type:
                - string
                - boolean
              description: |-
                Defines whether the network may be used for creation of floating IPs. Only
                networks with this flag may be an external gateway for routers.
                The network must have an external routing facility that is not managed by
                the networking service. If the network is updated from external to internal
                the unused floating IPs of this network are automatically deleted when
                extension `floatingip-autodelete-internal` is present.
            l2_adjacency:
              type: string
              description: |-
                Indicates whether L2 connectivity is available throughout
                the `network`.
            segments:
              type: array
              items:
                type: object
                properties:
                  provider:segmentation_id:
                    type: integer
                    description: |-
                      The ID of the isolated segment on the physical network.
                      The `network_type` attribute defines the segmentation model.
                      For example, if the `network_type` value is vlan, this ID is a vlan
                      identifier. If the `network_type` value is gre, this ID is a gre key.
                      `Note` that only the segmentation-id of VLAN type networks can be
                      changed!
                  provider:physical_network:
                    type: string
                    description: |-
                      The physical network where this network/segment is implemented.
                  provider:network_type:
                    type: string
                    description: |-
                      The type of physical network that this network is mapped to.
                      For example, `flat`, `vlan`, `vxlan`, or `gre`.
                      Valid values depend on a networking back-end.
              description: |-
                A list of provider `segment` objects.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            availability_zones:
              type: array
              items:
                type: string
              description: |-
                The availability zone for the network.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidate for the network.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
            provider:network_type:
              type: string
              maxLength: 32
            provider:physical_network:
              type: string
              maxLength: 64
            provider:segmentation_id:
              type:
                - string
                - integer
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the network.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            is_default:
              type:
                - string
                - boolean
              description: |-
                The network is default pool or not.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `network` object.
    SubnetsIndexResponse:
      type: object
      description: Response of the subnets:get operation
      properties:
        subnets:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the subnet.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              ip_version:
                type:
                  - string
                  - integer
                enum:
                  - 4
                  - 6
                description: |-
                  The IP protocol version. Value is `4` or `6`.
              network_id:
                type: string
                format: uuid
                description: |-
                  The ID of the network to which the subnet belongs.
              subnetpool_id:
                type:
                  - string
                  - 'null'
                description: |-
                  The ID of the subnet pool associated with the subnet.
              cidr:
                type:
                  - string
                  - 'null'
                description: |-
                  The CIDR of the subnet.
              gateway_ip:
                type: string
                description: |-
                  Gateway IP of this subnet. If the value is `null` that implies no
                  gateway is associated with the subnet.
              allocation_pools:
                type: array
                items:
                  type: object
                  properties:
                    start:
                      type: string
                    end:
                      type: string
                description: |-
                  Allocation pools with `start` and `end` IP addresses
                  for this subnet.
              dns_nameservers:
                type: array
                items:
                  type: string
                description: |-
                  List of dns name servers associated with the subnet.
              host_routes:
                type: array
                items:
                  type: object
                  properties:
                    destination:
                      type: string
                    nexthop:
                      type: string
                description: |-
                  Additional routes for the subnet. A list of dictionaries with
                  `destination` and `nexthop` parameters.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              enable_dhcp:
                type:
                  - string
                  - boolean
                description: |-
                  Indicates whether dhcp is enabled or disabled
                  for the subnet.
              ipv6_ra_mode:
                type: string
                enum:
                  - dhcpv6-stateful
                  - dhcpv6-stateless
                  - slaac
                description: |-
                  The IPv6 router advertisement specifies whether the networking service
                  should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                  `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              ipv6_address_mode:
                type: string
                enum:
                  - dhcpv6-stateful
                  - dhcpv6-stateless
                  - slaac
                description: |-
                  The IPv6 address modes specifies mechanisms for assigning IP addresses.
                  Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              router:external:
                type:
                  - string
                  - boolean
              service_types:
                type: array
                description: |-
                  The service types associated with the subnet.
                items:
                  type: string
              tags:
                type: array
                items:
                  type: string
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              dns_publish_fixed_ip:
                type:
                  - string
                  - boolean
                description: |-
                  Whether to publish DNS records for IPs from this subnet.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
              segment_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of a network segment the subnet is associated with.
                  It is available when `segment` extension is enabled.
          description: |-
            A list of `subnet` objects.
    SubnetsCreateRequest:
      type: object
      description: Request of the subnets:post operation
      properties:
        subnet:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource. Default is an empty string.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Value is `4` or `6`.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network to which the subnet belongs.
            subnetpool_id:
              type:
                - string
                - 'null'
              description: |-
                The ID of the subnet pool associated with the subnet.
            prefixlen:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The prefix length to use for subnet allocation from a subnet pool.
                If not specified, the `default_prefixlen` value of the subnet pool
                will be used.
            cidr:
              type:
                - string
                - 'null'
              description: |-
                The CIDR of the subnet.
            gateway_ip:
              type: string
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet. If the gateway_ip is not
                specified, OpenStack Networking allocates an address from the CIDR
                for the gateway for the subnet by default.
            allocation_pools:
              type: array
              items:
                type: object
                properties:
                  start:
                    type: string
                  end:
                    type: string
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet. If allocation_pools are not specified, OpenStack
                Networking automatically allocates pools for covering all IP addresses
                in the CIDR, excluding the address reserved for the subnet gateway by
                default.
            dns_nameservers:
              type: array
              items:
                type: string
              description: |-
                List of dns name servers associated with the subnet. Default is an
                empty list.
            host_routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters. Default value is
                an empty list.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            enable_dhcp:
              type:
                - string
                - boolean
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet. Default is `true`.
            ipv6_ra_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless`.
            ipv6_address_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless`.
            service_types:
              type: array
              description: |-
                The service types associated with the subnet.
              items:
                type: string
            use_default_subnetpool:
              type:
                - string
                - boolean
              description: |-
                Whether to allocate this subnet from the default subnet pool.
            dns_publish_fixed_ip:
              type:
                - string
                - boolean
              description: |-
                Whether to publish DNS records for IPs from this subnet. Default
                is `false`.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            segment_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
          required:
            - network_id
            - ip_version
          description: |-
            A `subnet` object.
    SubnetsCreateResponse:
      type: object
      description: Response of the subnets:post operation
      properties:
        subnet:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Value is `4` or `6`.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network to which the subnet belongs.
            subnetpool_id:
              type:
                - string
                - 'null'
              description: |-
                The ID of the subnet pool associated with the subnet.
            cidr:
              type:
                - string
                - 'null'
              description: |-
                The CIDR of the subnet.
            gateway_ip:
              type: string
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet.
            allocation_pools:
              type: array
              items:
                type: object
                properties:
                  start:
                    type: string
                  end:
                    type: string
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet.
            dns_nameservers:
              type: array
              items:
                type: string
              description: |-
                List of dns name servers associated with the subnet.
            host_routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            enable_dhcp:
              type:
                - string
                - boolean
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet.
            ipv6_ra_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
            ipv6_address_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            router:external:
              type:
                - string
                - boolean
            service_types:
              type: array
              description: |-
                The service types associated with the subnet.
              items:
                type: string
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            dns_publish_fixed_ip:
              type:
                - string
                - boolean
              description: |-
                Whether to publish DNS records for IPs from this subnet.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            segment_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
          description: |-
            A `subnet` object.
    PortsIndexResponse:
      type: object
      description: Response of the ports:get operation
      properties:
        ports:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the resource.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
              network_id:
                type: string
                format: uuid
                description: |-
                  The ID of the attached network.
              admin_state_up:
                type:
                  - string
                  - boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              mac_address:
                type: string
                description: |-
                  The MAC address of the port. If the port uses the `direct-physical`
                  `vnic_type` then the value of this field is overwritten with the MAC
                  address provided in the active binding:profile if any.
              fixed_ips:
                type: array
                items:
                  type: object
                  properties:
                    ip_address:
                      type: string
                      description: IP Address
                    subnet_id:
                      type: string
                      description: The subnet ID from which the IP address is assigned
                description: |-
                  The IP addresses for the port. If the port has multiple IP addresses,
                  this field has multiple entries. Each entry consists of IP address
                  (`ip_address`) and the subnet ID from which the IP address
                  is assigned (`subnet_id`).
              device_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the device that uses this port.
                  For example, a server instance or a logical router.
              device_owner:
                type: string
                maxLength: 255
                description: |-
                  The entity type that uses this port.
                  For example, `compute:nova` (server instance), `network:dhcp`
                  (DHCP agent) or `network:router_interface` (router interface).
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              status:
                type: string
                description: |-
                  The port status. Values are `ACTIVE`, `DOWN`,
                  `BUILD` and `ERROR`.
              allowed_address_pairs:
                type: array
                items:
                  type: object
                  properties:
                    ip_address:
                      type: string
                    max_address:
                      type: string
                description: |-
                  A set of zero or more allowed address pair objects each where address pair
                  object contains an `ip_address` and `mac_address`. While the
                  `ip_address` is required, the `mac_address` will be taken from the
                  port if not specified. The value of `ip_address` can be an IP Address
                  or a CIDR (if supported by the underlying extension plugin).
                  A server connected to the port can send a packet with source address which
                  matches one of the specified allowed address pairs.
              data_plane_status:
                type: string
                enum:
                  - 
                  - ACTIVE
                  - DOWN
                description: |-
                  Status of the underlying data plane of a port.
              extra_dhcp_opts:
                type: array
                items:
                  type: object
                  extraProperties: true
                x-openstack:
                  todo: implementme
                description: |-
                  A set of zero or more extra DHCP option pairs. An
                  option pair consists of an option value and name.
              ip_allocation:
                type: string
                description: |-
                  Indicates when ports use either `deferred`, `immediate` or no IP
                  allocation (`none`).
              device_profile:
                type:
                  - string
                  - 'null'
                maxLength: 255
              hints:
                type:
                  - object
                  - 'null'
                description: |-
                  Admin-only. The following values control Open vSwitch’s Userspace Tx
                  packet steering feature:

                  * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
              numa_affinity_policy:
                type: string
                enum:
                  - required
                  - preferred
                  - legacy
                  - socket
                  - 
                description: |-
                  The port NUMA affinity policy requested during the virtual machine
                  scheduling. Values: `None`, `required`, `preferred` or `legacy`.
              resource_request:
                type: string
                description: |-
                  Expose Placement resources (i.e.: `minimum-bandwidth`) and
                  traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                  Nova and Placement. A `resource_request` object contains
                  `request_groups` and `same_subtree` keys. `request_groups` is a list
                  of dicts, where each dict represents one group of resources and traits
                  that needs to be fulfilled from a single resource provider. Every dict in
                  the list must contain `id`, `required` and `resources` keys. The
                  `id` field is a string which represents a unique UUID that is generated
                  for each group by combining the `port_id` and UUIDs of the QoS rules
                  contributing to the group via the UUID5 method. `required` key contains
                  the traits (generated from the `vnic_type` and the `physnet`) required
                  by the port, and a `resources` key contains a mapping of requested
                  resource class name and requested amount from the QoS policy.
                  `same_subtree` key contains a list of `id` values from every resource
                  group.
              binding:vif_type:
                type: string
                description: |-
                  The type of which mechanism is used for the port.
                  An API consumer like nova can use this to determine an appropriate way to
                  attach a device (for example an interface of a virtual server) to the port.
                  Available values currently defined includes
                  `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                  `vhostuser`, `distributed` and `other`.
                  There are also special values: `unbound` and `binding_failed`.
                  `unbound` means the port is
                  not bound to a networking back-end. `binding_failed` means an error
                  that the port failed to be bound to a networking back-end.
              binding:vif_details:
                type: object
                description: |-
                  A dictionary which contains additional information on the port.
                  Currently the following fields are defined: `port_filter` and
                  `ovs_hybrid_plug`.
                  `port_filter` is a boolean indicating the networking service
                  provides port filtering features such as security group and/or
                  anti MAC/IP spoofing.
                  `ovs_hybrid_plug` is a boolean used to inform an API consumer
                  like nova that the hybrid plugging strategy for OVS should be used.
              binding:vnic_type:
                type: string
                enum:
                  - normal
                  - direct
                  - macvtap
                  - baremetal
                  - direct-physical
                  - virtio-forwarder
                  - smart-nic
                  - vdpa
                  - accelerator-direct
                  - accelerator-direct-physical
                  - remote-managed
                description: |-
                  The type of vNIC which this port should be attached to. This is used to
                  determine which mechanism driver(s) to be used to bind the port.
                  The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                  `direct-physical`, `virtio-forwarder`, `smart-nic`
                  and `remote-managed`.
                  What type of vNIC is actually available depends on deployments.
              binding:host_id:
                type: string
                description: |-
                  The ID of the host where the port resides.
              binding:profile:
                type:
                  - object
                  - 'null'
                description: |-
                  A dictionary that enables the application running on the specific host to
                  pass and receive vif port information specific to the networking back-end.
                  The networking API does not define a specific format of this field.
                  If the update request is null this response field will be {}.
              port_security_enabled:
                type:
                  - string
                  - boolean
                description: |-
                  The port security status. A valid value is
                  enabled (`true`) or disabled (`false`).
                  If port security is enabled for the port,
                  security group rules and anti-spoofing rules are applied to
                  the traffic on the port. If disabled, no such rules are applied.
              qos_policy_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of the QoS policy associated with the port.
              qos_network_policy_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of the QoS policy of the network where this port is plugged.
              revision_number:
                type: integer
                description: |-
                  The revision number of the resource.
              tags:
                type: array
                items:
                  type: string
                uniqueItems: true
                description: |-
                  The list of tags on the resource.
              created_at:
                type: string
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
              updated_at:
                type: string
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
              propagate_uplink_status:
                type:
                  - string
                  - boolean
                description: |-
                  The uplink status propagation of the port. Valid values are
                  enabled (`true`) and disabled (`false`).
              dns_name:
                type: string
                format: hostname
                maxLength: 255
                description: |-
                  A valid DNS name.
              dns_assignment:
                type: array
                items:
                  type: object
                  properties:
                    fqdn:
                      type: string
                      format: hostname
                    hostname:
                      type: string
                      format: hostname
                    ip_address:
                      type: string
                description: |-
                  Data assigned to a port by the Networking internal DNS including the
                  `hostname`, `ip_address` and `fqdn`.
              dns_domain:
                type: string
                format: hostname
                maxLength: 255
                description: |-
                  A valid DNS domain.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
              security_groups:
                type: array
                items:
                  type: string
                  format: uuid
                description: |-
                  The IDs of security groups applied to the port.
          description: |-
            A list of `port` objects.
    PortsCreateRequest:
      type: object
      description: Request of the ports:post operation
      properties:
        port:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
            mac_address:
              type: string
              description: |-
                The MAC address of the port.
                If unspecified, a MAC address is automatically generated.
            fixed_ips:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                    description: IP Address
                  subnet_id:
                    type: string
                    description: The subnet ID from which the IP address is assigned
              description: |-
                The IP addresses for the port.
                If you would like to assign multiple IP addresses for the port,
                specify multiple entries in this field.
                Each entry consists of IP address (`ip_address`) and the subnet ID
                from which the IP address is assigned (`subnet_id`).

                * If you specify both a subnet ID and an IP address, OpenStack Networking
                  tries to allocate the IP address on that subnet to the port.
                * If you specify only a subnet ID, OpenStack Networking allocates
                  an available IP from that subnet to the port.
                * If you specify only an IP address, OpenStack Networking
                  tries to allocate the IP address if the address is a valid IP
                  for any of the subnets on the specified network.
            device_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
            device_owner:
              type: string
              maxLength: 255
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
            allowed_address_pairs:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
            extra_dhcp_opts:
              type: array
              items:
                type: object
                extraProperties: true
              x-openstack:
                todo: implementme
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
            device_profile:
              type:
                - string
                - 'null'
              maxLength: 255
            hints:
              type:
                - object
                - 'null'
              description: |-
                Admin-only. A dict, at the top level keyed by mechanism driver
                aliases (as defined in setup.cfg). To following values can be used to
                control Open vSwitch’s Userspace Tx packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash"}}}`
                * `{"openvswitch": {"other_config": {"tx-steering": "thread"}}}`

                If omitted the default is defined by Open vSwitch.
                The field cannot be longer than 4095 characters.
            numa_affinity_policy:
              type: string
              enum:
                - required
                - preferred
                - legacy
                - socket
                - 
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
            binding:vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
                The default is `normal`.
            binding:host_id:
              type: string
              description: |-
                The ID of the host where the port resides.
                The default is an empty string.
            binding:profile:
              type:
                - object
                - 'null'
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                This field is only meant for machine-machine communication for compute
                services like Nova, Ironic or Zun to pass information to a Neutron
                back-end. It should not be used by multiple services concurrently or by
                cloud end users. The existing counterexamples
                (`capabilities: [switchdev]` for Open vSwitch hardware offload and
                `trusted=true` for Trusted Virtual Functions) are due to be cleaned up.
                The networking API does not define a specific format of this field.
                The default is an empty dictionary.
                If you update it with null then it is treated like {} in the response.
                Since the port-mac-address-override extension the `device_mac_address`
                field of the binding:profile can be used to provide the MAC address of the
                physical device a direct-physical port is being bound to. If provided, then
                the `mac_address` field of the port resource will be updated to the MAC
                from the active binding.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                QoS policy associated with the port.
            tags:
              type: array
              items:
                type: string
              uniqueItems: true
            propagate_uplink_status:
              type:
                - string
                - boolean
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
            dns_name:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            security_groups:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The IDs of security groups applied to the port.
          description: |-
            A `port` object.
    PortsCreateResponse:
      type: object
      description: Response of the ports:post operation
      properties:
        port:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the resource.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            mac_address:
              type: string
              description: |-
                The MAC address of the port. If the port uses the `direct-physical`
                `vnic_type` then the value of this field is overwritten with the MAC
                address provided in the active binding:profile if any.
            fixed_ips:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                    description: IP Address
                  subnet_id:
                    type: string
                    description: The subnet ID from which the IP address is assigned
              description: |-
                The IP addresses for the port. If the port has multiple IP addresses,
                this field has multiple entries. Each entry consists of IP address
                (`ip_address`) and the subnet ID from which the IP address
                is assigned (`subnet_id`).
            device_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
            device_owner:
              type: string
              maxLength: 255
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            status:
              type: string
              description: |-
                The port status. Values are `ACTIVE`, `DOWN`,
                `BUILD` and `ERROR`.
            allowed_address_pairs:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
            data_plane_status:
              type: string
              enum:
                - 
                - ACTIVE
                - DOWN
              description: |-
                Status of the underlying data plane of a port.
            extra_dhcp_opts:
              type: array
              items:
                type: object
                extraProperties: true
              x-openstack:
                todo: implementme
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
            ip_allocation:
              type: string
              description: |-
                Indicates when ports use either `deferred`, `immediate` or no IP
                allocation (`none`).
            device_profile:
              type:
                - string
                - 'null'
              maxLength: 255
            hints:
              type:
                - object
                - 'null'
              description: |-
                Admin-only. The following values control Open vSwitch’s Userspace Tx
                packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
            numa_affinity_policy:
              type: string
              enum:
                - required
                - preferred
                - legacy
                - socket
                - 
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
            resource_request:
              type: string
              description: |-
                Expose Placement resources (i.e.: `minimum-bandwidth`) and
                traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                Nova and Placement. A `resource_request` object contains
                `request_groups` and `same_subtree` keys. `request_groups` is a list
                of dicts, where each dict represents one group of resources and traits
                that needs to be fulfilled from a single resource provider. Every dict in
                the list must contain `id`, `required` and `resources` keys. The
                `id` field is a string which represents a unique UUID that is generated
                for each group by combining the `port_id` and UUIDs of the QoS rules
                contributing to the group via the UUID5 method. `required` key contains
                the traits (generated from the `vnic_type` and the `physnet`) required
                by the port, and a `resources` key contains a mapping of requested
                resource class name and requested amount from the QoS policy.
                `same_subtree` key contains a list of `id` values from every resource
                group.
            binding:vif_type:
              type: string
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
            binding:vif_details:
              type: object
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
            binding:vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
            binding:host_id:
              type: string
              description: |-
                The ID of the host where the port resides.
            binding:profile:
              type:
                - object
                - 'null'
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the port.
            qos_network_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy of the network where this port is plugged.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              uniqueItems: true
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            propagate_uplink_status:
              type:
                - string
                - boolean
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
            dns_name:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_assignment:
              type: array
              items:
                type: object
                properties:
                  fqdn:
                    type: string
                    format: hostname
                  hostname:
                    type: string
                    format: hostname
                  ip_address:
                    type: string
              description: |-
                Data assigned to a port by the Networking internal DNS including the
                `hostname`, `ip_address` and `fqdn`.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            security_groups:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The IDs of security groups applied to the port.
          description: |-
            A `port` object.
    NetworkShowResponse:
      type: object
      description: Response of the networks/network_id:get operation
      properties:
        network:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the network.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the network.
            subnets:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The associated subnets.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this network is shared across all tenants. By default,
                only administrative users can change this value.
            ipv4_address_scope:
              type: string
              description: |-
                The ID of the IPv4 address scope that the network is associated with.
            ipv6_address_scope:
              type: string
              description: |-
                The ID of the IPv6 address scope that the network is associated with.
            router:external:
              type:
                - string
                - boolean
              description: |-
                Defines whether the network may be used for creation of floating IPs. Only
                networks with this flag may be an external gateway for routers.
                The network must have an external routing facility that is not managed by
                the networking service. If the network is updated from external to internal
                the unused floating IPs of this network are automatically deleted when
                extension `floatingip-autodelete-internal` is present.
            l2_adjacency:
              type: string
              description: |-
                Indicates whether L2 connectivity is available throughout
                the `network`.
            segments:
              type: array
              items:
                type: object
                properties:
                  provider:segmentation_id:
                    type: integer
                    description: |-
                      The ID of the isolated segment on the physical network.
                      The `network_type` attribute defines the segmentation model.
                      For example, if the `network_type` value is vlan, this ID is a vlan
                      identifier. If the `network_type` value is gre, this ID is a gre key.
                      `Note` that only the segmentation-id of VLAN type networks can be
                      changed!
                  provider:physical_network:
                    type: string
                    description: |-
                      The physical network where this network/segment is implemented.
                  provider:network_type:
                    type: string
                    description: |-
                      The type of physical network that this network is mapped to.
                      For example, `flat`, `vlan`, `vxlan`, or `gre`.
                      Valid values depend on a networking back-end.
              description: |-
                A list of provider `segment` objects.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            availability_zones:
              type: array
              items:
                type: string
              description: |-
                The availability zone for the network.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidate for the network.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
            provider:network_type:
              type: string
              maxLength: 32
            provider:physical_network:
              type: string
              maxLength: 64
            provider:segmentation_id:
              type:
                - string
                - integer
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the network.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            is_default:
              type:
                - string
                - boolean
              description: |-
                The network is default pool or not.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `network` object.
    NetworkUpdateRequest:
      type: object
      description: Request of the networks/network_id:put operation
      properties:
        network:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the network.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
            router:external:
              type:
                - string
                - boolean
              description: |-
                Indicates whether the network has an external routing facility that’s not
                managed by the networking service.
            segments:
              type: array
              items:
                type: object
                properties:
                  provider:segmentation_id:
                    type: integer
                    description: |-
                      The ID of the isolated segment on the physical network.
                      The `network_type` attribute defines the segmentation model.
                      For example, if the `network_type` value is vlan, this ID is a vlan
                      identifier. If the `network_type` value is gre, this ID is a gre key.
                      `Note` that only the segmentation-id of VLAN type networks can be
                      changed!
                  provider:physical_network:
                    type: string
                    description: |-
                      The physical network where this network/segment is implemented.
                  provider:network_type:
                    type: string
                    description: |-
                      The type of physical network that this network is mapped to.
                      For example, `flat`, `vlan`, `vxlan`, or `gre`.
                      Valid values depend on a networking back-end.
              description: |-
                A list of provider `segment` objects.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
            provider:network_type:
              type: string
              maxLength: 32
            provider:physical_network:
              type: string
              maxLength: 64
            provider:segmentation_id:
              type:
                - string
                - integer
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the network.
            is_default:
              type:
                - string
                - boolean
              description: |-
                The network is default or not.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
          description: |-
            A `network` object.
    NetworkUpdateResponse:
      type: object
      description: Response of the networks/network_id:put operation
      properties:
        network:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the network.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the network.
            subnets:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The associated subnets.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            shared:
              type:
                - string
                - boolean
              description: |-
                Indicates whether this network is shared across all tenants. By default,
                only administrative users can change this value.
            ipv4_address_scope:
              type: string
              description: |-
                The ID of the IPv4 address scope that the network is associated with.
            ipv6_address_scope:
              type: string
              description: |-
                The ID of the IPv6 address scope that the network is associated with.
            router:external:
              type:
                - string
                - boolean
              description: |-
                Defines whether the network may be used for creation of floating IPs. Only
                networks with this flag may be an external gateway for routers.
                The network must have an external routing facility that is not managed by
                the networking service. If the network is updated from external to internal
                the unused floating IPs of this network are automatically deleted when
                extension `floatingip-autodelete-internal` is present.
            l2_adjacency:
              type: string
              description: |-
                Indicates whether L2 connectivity is available throughout
                the `network`.
            segments:
              type: array
              items:
                type: object
                properties:
                  provider:segmentation_id:
                    type: integer
                    description: |-
                      The ID of the isolated segment on the physical network.
                      The `network_type` attribute defines the segmentation model.
                      For example, if the `network_type` value is vlan, this ID is a vlan
                      identifier. If the `network_type` value is gre, this ID is a gre key.
                      `Note` that only the segmentation-id of VLAN type networks can be
                      changed!
                  provider:physical_network:
                    type: string
                    description: |-
                      The physical network where this network/segment is implemented.
                  provider:network_type:
                    type: string
                    description: |-
                      The type of physical network that this network is mapped to.
                      For example, `flat`, `vlan`, `vxlan`, or `gre`.
                      Valid values depend on a networking back-end.
              description: |-
                A list of provider `segment` objects.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            availability_zones:
              type: array
              items:
                type: string
              description: |-
                The availability zone for the network.
            availability_zone_hints:
              type: array
              items:
                type: string
              description: |-
                The availability zone candidate for the network.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
            provider:network_type:
              type: string
              maxLength: 32
            provider:physical_network:
              type: string
              maxLength: 64
            provider:segmentation_id:
              type:
                - string
                - integer
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the network.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            is_default:
              type:
                - string
                - boolean
              description: |-
                The network is default pool or not.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
          description: |-
            A `network` object.
    SubnetShowResponse:
      type: object
      description: Response of the subnets/subnet_id:get operation
      properties:
        subnet:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Value is `4` or `6`.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network to which the subnet belongs.
            subnetpool_id:
              type:
                - string
                - 'null'
              description: |-
                The ID of the subnet pool associated with the subnet.
            cidr:
              type:
                - string
                - 'null'
              description: |-
                The CIDR of the subnet.
            gateway_ip:
              type: string
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet.
            allocation_pools:
              type: array
              items:
                type: object
                properties:
                  start:
                    type: string
                  end:
                    type: string
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet.
            dns_nameservers:
              type: array
              items:
                type: string
              description: |-
                List of dns name servers associated with the subnet.
            host_routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            enable_dhcp:
              type:
                - string
                - boolean
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet.
            ipv6_ra_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
            ipv6_address_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            router:external:
              type:
                - string
                - boolean
            service_types:
              type: array
              description: |-
                The service types associated with the subnet.
              items:
                type: string
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            dns_publish_fixed_ip:
              type:
                - string
                - boolean
              description: |-
                Whether to publish DNS records for IPs from this subnet.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            segment_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
          description: |-
            A `subnet` object.
    SubnetUpdateRequest:
      type: object
      description: Request of the subnets/subnet_id:put operation
      properties:
        subnet:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            gateway_ip:
              type: string
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet. If the gateway_ip is not
                specified, OpenStack Networking allocates an address from the CIDR
                for the gateway for the subnet by default.
            allocation_pools:
              type: array
              items:
                type: object
                properties:
                  start:
                    type: string
                  end:
                    type: string
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet. If allocation_pools are not specified, OpenStack
                Networking automatically allocates pools for covering all IP addresses
                in the CIDR, excluding the address reserved for the subnet gateway by
                default.
            dns_nameservers:
              type: array
              items:
                type: string
              description: |-
                List of dns name servers associated with the subnet. Default is an
                empty list.
            host_routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters. Default value is
                an empty list.
            enable_dhcp:
              type:
                - string
                - boolean
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet. Default is `true`.
            service_types:
              type: array
              description: |-
                The service types associated with the subnet.
              items:
                type: string
            dns_publish_fixed_ip:
              type:
                - string
                - boolean
              description: |-
                Whether to publish DNS records for IPs from this subnet. Default
                is `false`.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            segment_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
    SubnetUpdateResponse:
      type: object
      description: Response of the subnets/subnet_id:put operation
      properties:
        subnet:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the subnet.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            ip_version:
              type:
                - string
                - integer
              enum:
                - 4
                - 6
              description: |-
                The IP protocol version. Value is `4` or `6`.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the network to which the subnet belongs.
            subnetpool_id:
              type:
                - string
                - 'null'
              description: |-
                The ID of the subnet pool associated with the subnet.
            cidr:
              type:
                - string
                - 'null'
              description: |-
                The CIDR of the subnet.
            gateway_ip:
              type: string
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet.
            allocation_pools:
              type: array
              items:
                type: object
                properties:
                  start:
                    type: string
                  end:
                    type: string
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet.
            dns_nameservers:
              type: array
              items:
                type: string
              description: |-
                List of dns name servers associated with the subnet.
            host_routes:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            enable_dhcp:
              type:
                - string
                - boolean
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet.
            ipv6_ra_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
            ipv6_address_mode:
              type: string
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            router:external:
              type:
                - string
                - boolean
            service_types:
              type: array
              description: |-
                The service types associated with the subnet.
              items:
                type: string
            tags:
              type: array
              items:
                type: string
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            dns_publish_fixed_ip:
              type:
                - string
                - boolean
              description: |-
                Whether to publish DNS records for IPs from this subnet.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            segment_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
          description: |-
            A `subnet` object.
    PortShowResponse:
      type: object
      description: Response of the ports/port_id:get operation
      properties:
        port:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the resource.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            mac_address:
              type: string
              description: |-
                The MAC address of the port. If the port uses the `direct-physical`
                `vnic_type` then the value of this field is overwritten with the MAC
                address provided in the active binding:profile if any.
            fixed_ips:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                    description: IP Address
                  subnet_id:
                    type: string
                    description: The subnet ID from which the IP address is assigned
              description: |-
                The IP addresses for the port. If the port has multiple IP addresses,
                this field has multiple entries. Each entry consists of IP address
                (`ip_address`) and the subnet ID from which the IP address
                is assigned (`subnet_id`).
            device_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
            device_owner:
              type: string
              maxLength: 255
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            status:
              type: string
              description: |-
                The port status. Values are `ACTIVE`, `DOWN`,
                `BUILD` and `ERROR`.
            allowed_address_pairs:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
            data_plane_status:
              type: string
              enum:
                - 
                - ACTIVE
                - DOWN
              description: |-
                Status of the underlying data plane of a port.
            extra_dhcp_opts:
              type: array
              items:
                type: object
                extraProperties: true
              x-openstack:
                todo: implementme
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
            ip_allocation:
              type: string
              description: |-
                Indicates when ports use either `deferred`, `immediate` or no IP
                allocation (`none`).
            device_profile:
              type:
                - string
                - 'null'
              maxLength: 255
            hints:
              type:
                - object
                - 'null'
              description: |-
                Admin-only. The following values control Open vSwitch’s Userspace Tx
                packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
            numa_affinity_policy:
              type: string
              enum:
                - required
                - preferred
                - legacy
                - socket
                - 
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
            resource_request:
              type: string
              description: |-
                Expose Placement resources (i.e.: `minimum-bandwidth`) and
                traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                Nova and Placement. A `resource_request` object contains
                `request_groups` and `same_subtree` keys. `request_groups` is a list
                of dicts, where each dict represents one group of resources and traits
                that needs to be fulfilled from a single resource provider. Every dict in
                the list must contain `id`, `required` and `resources` keys. The
                `id` field is a string which represents a unique UUID that is generated
                for each group by combining the `port_id` and UUIDs of the QoS rules
                contributing to the group via the UUID5 method. `required` key contains
                the traits (generated from the `vnic_type` and the `physnet`) required
                by the port, and a `resources` key contains a mapping of requested
                resource class name and requested amount from the QoS policy.
                `same_subtree` key contains a list of `id` values from every resource
                group.
            binding:vif_type:
              type: string
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
            binding:vif_details:
              type: object
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
            binding:vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
            binding:host_id:
              type: string
              description: |-
                The ID of the host where the port resides.
            binding:profile:
              type:
                - object
                - 'null'
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the port.
            qos_network_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy of the network where this port is plugged.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              uniqueItems: true
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            propagate_uplink_status:
              type:
                - string
                - boolean
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
            dns_name:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_assignment:
              type: array
              items:
                type: object
                properties:
                  fqdn:
                    type: string
                    format: hostname
                  hostname:
                    type: string
                    format: hostname
                  ip_address:
                    type: string
              description: |-
                Data assigned to a port by the Networking internal DNS including the
                `hostname`, `ip_address` and `fqdn`.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            security_groups:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The IDs of security groups applied to the port.
          description: |-
            A `port` object.
    PortUpdateRequest:
      type: object
      description: Request of the ports/port_id:put operation
      properties:
        port:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
            mac_address:
              type: string
              description: |-
                The MAC address of the port.
                By default, only administrative users and users with advsvc role
                can change this value.
            fixed_ips:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                    description: IP Address
                  subnet_id:
                    type: string
                    description: The subnet ID from which the IP address is assigned
              description: |-
                The IP addresses for the port.
                If you would like to assign multiple IP addresses for the port,
                specify multiple entries in this field.
                Each entry consists of IP address (`ip_address`) and the subnet ID
                from which the IP address is assigned (`subnet_id`).

                * If you specify both a subnet ID and an IP address, OpenStack Networking
                  tries to allocate the IP address on that subnet to the port.
                * If you specify only a subnet ID, OpenStack Networking allocates
                  an available IP from that subnet to the port.
                * If you specify only an IP address, OpenStack Networking
                  tries to allocate the IP address if the address is a valid IP
                  for any of the subnets on the specified network.
            device_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
            device_owner:
              type: string
              maxLength: 255
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
            allowed_address_pairs:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
            data_plane_status:
              type: string
              enum:
                - 
                - ACTIVE
                - DOWN
              description: |-
                Status of the underlying data plane of a port.
            extra_dhcp_opts:
              type: array
              items:
                type: object
                extraProperties: true
              x-openstack:
                todo: implementme
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
            hints:
              type:
                - object
                - 'null'
              description: |-
                Admin-only. A dict, at the top level keyed by mechanism driver
                aliases (as defined in setup.cfg). To following values can be used to
                control Open vSwitch’s Userspace Tx packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash"}}}`
                * `{"openvswitch": {"other_config": {"tx-steering": "thread"}}}`

                If omitted the default is defined by Open vSwitch.
                The field cannot be longer than 4095 characters.
            numa_affinity_policy:
              type: string
              enum:
                - required
                - preferred
                - legacy
                - socket
                - 
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
            binding:vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
                The default is `normal`.
            binding:host_id:
              type: string
              description: |-
                The ID of the host where the port resides.
                The default is an empty string.
            binding:profile:
              type:
                - object
                - 'null'
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                This field is only meant for machine-machine communication for compute
                services like Nova, Ironic or Zun to pass information to a Neutron
                back-end. It should not be used by multiple services concurrently or by
                cloud end users. The existing counterexamples
                (`capabilities: [switchdev]` for Open vSwitch hardware offload and
                `trusted=true` for Trusted Virtual Functions) are due to be cleaned up.
                The networking API does not define a specific format of this field.
                The default is an empty dictionary.
                If you update it with null then it is treated like {} in the response.
                Since the port-mac-address-override extension the `device_mac_address`
                field of the binding:profile can be used to provide the MAC address of the
                physical device a direct-physical port is being bound to. If provided, then
                the `mac_address` field of the port resource will be updated to the MAC
                from the active binding.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                QoS policy associated with the port.
            dns_name:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            security_groups:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The IDs of security groups applied to the port.
          description: |-
            A `port` object.
    PortUpdateResponse:
      type: object
      description: Response of the ports/port_id:put operation
      properties:
        port:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the resource.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
            network_id:
              type: string
              format: uuid
              description: |-
                The ID of the attached network.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            mac_address:
              type: string
              description: |-
                The MAC address of the port. If the port uses the `direct-physical`
                `vnic_type` then the value of this field is overwritten with the MAC
                address provided in the active binding:profile if any.
            fixed_ips:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                    description: IP Address
                  subnet_id:
                    type: string
                    description: The subnet ID from which the IP address is assigned
              description: |-
                The IP addresses for the port. If the port has multiple IP addresses,
                this field has multiple entries. Each entry consists of IP address
                (`ip_address`) and the subnet ID from which the IP address
                is assigned (`subnet_id`).
            device_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
            device_owner:
              type: string
              maxLength: 255
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            status:
              type: string
              description: |-
                The port status. Values are `ACTIVE`, `DOWN`,
                `BUILD` and `ERROR`.
            allowed_address_pairs:
              type: array
              items:
                type: object
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
            data_plane_status:
              type: string
              enum:
                - 
                - ACTIVE
                - DOWN
              description: |-
                Status of the underlying data plane of a port.
            extra_dhcp_opts:
              type: array
              items:
                type: object
                extraProperties: true
              x-openstack:
                todo: implementme
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
            ip_allocation:
              type: string
              description: |-
                Indicates when ports use either `deferred`, `immediate` or no IP
                allocation (`none`).
            device_profile:
              type:
                - string
                - 'null'
              maxLength: 255
            hints:
              type:
                - object
                - 'null'
              description: |-
                Admin-only. The following values control Open vSwitch’s Userspace Tx
                packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
            numa_affinity_policy:
              type: string
              enum:
                - required
                - preferred
                - legacy
                - socket
                - 
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
            resource_request:
              type: string
              description: |-
                Expose Placement resources (i.e.: `minimum-bandwidth`) and
                traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                Nova and Placement. A `resource_request` object contains
                `request_groups` and `same_subtree` keys. `request_groups` is a list
                of dicts, where each dict represents one group of resources and traits
                that needs to be fulfilled from a single resource provider. Every dict in
                the list must contain `id`, `required` and `resources` keys. The
                `id` field is a string which represents a unique UUID that is generated
                for each group by combining the `port_id` and UUIDs of the QoS rules
                contributing to the group via the UUID5 method. `required` key contains
                the traits (generated from the `vnic_type` and the `physnet`) required
                by the port, and a `resources` key contains a mapping of requested
                resource class name and requested amount from the QoS policy.
                `same_subtree` key contains a list of `id` values from every resource
                group.
            binding:vif_type:
              type: string
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
            binding:vif_details:
              type: object
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
            binding:vnic_type:
              type: string
              enum:
                - normal
                - direct
                - macvtap
                - baremetal
                - direct-physical
                - virtio-forwarder
                - smart-nic
                - vdpa
                - accelerator-direct
                - accelerator-direct-physical
                - remote-managed
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
            binding:host_id:
              type: string
              description: |-
                The ID of the host where the port resides.
            binding:profile:
              type:
                - object
                - 'null'
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
            port_security_enabled:
              type:
                - string
                - boolean
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
            qos_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy associated with the port.
            qos_network_policy_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the QoS policy of the network where this port is plugged.
            revision_number:
              type: integer
              description: |-
                The revision number of the resource.
            tags:
              type: array
              items:
                type: string
              uniqueItems: true
              description: |-
                The list of tags on the resource.
            created_at:
              type: string
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
            updated_at:
              type: string
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
            propagate_uplink_status:
              type:
                - string
                - boolean
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
            dns_name:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS name.
            dns_assignment:
              type: array
              items:
                type: object
                properties:
                  fqdn:
                    type: string
                    format: hostname
                  hostname:
                    type: string
                    format: hostname
                  ip_address:
                    type: string
              description: |-
                Data assigned to a port by the Networking internal DNS including the
                `hostname`, `ip_address` and `fqdn`.
            dns_domain:
              type: string
              format: hostname
              maxLength: 255
              description: |-
                A valid DNS domain.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
            security_groups:
              type: array
              items:
                type: string
                format: uuid
              description: |-
                The IDs of security groups applied to the port.
          description: |-
            A `port` object.
    PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsRequest:
      type: object
      description: Request of the ports/port_id/add_allowed_address_pairs:put operation
    PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsResponse:
      type: object
      description: Response of the ports/port_id/add_allowed_address_pairs:put operation
    VpnIkepoliciesCreateRequest:
      type: object
      description: Request of the vpn/ikepolicies:post operation
      properties:
        ikepolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            phase1_negotiation_mode:
              type: string
              enum:
                - main
                - aggressive
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            ike_version:
              type: string
              enum:
                - v1
                - v2
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ikepolicy` object.
    VpnIkepoliciesCreateResponse:
      type: object
      description: Response of the vpn/ikepolicies:post operation
      properties:
        ikepolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IKE policy.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            phase1_negotiation_mode:
              type: string
              enum:
                - main
                - aggressive
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            ike_version:
              type: string
              enum:
                - v1
                - v2
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ikepolicy` object.
    VpnIkepoliciesIndexResponse:
      type: object
      description: Response of the vpn/ikepolicies:get operation
      properties:
        ikepolicies:
          type: array
          items:
            type: object
            properties:
              encryption_algorithm:
                type: string
                enum:
                  - 3des
                  - aes-128
                  - aes-192
                  - aes-256
                  - aes-128-ccm-8
                  - aes-192-ccm-8
                  - aes-256-ccm-8
                  - aes-128-ccm-12
                  - aes-192-ccm-12
                  - aes-256-ccm-12
                  - aes-128-ccm-16
                  - aes-192-ccm-16
                  - aes-256-ccm-16
                  - aes-128-gcm-8
                  - aes-192-gcm-8
                  - aes-256-gcm-8
                  - aes-128-gcm-12
                  - aes-192-gcm-12
                  - aes-256-gcm-12
                  - aes-128-gcm-16
                  - aes-192-gcm-16
                  - aes-256-gcm-16
                  - aes-128-ctr
                  - aes-192-ctr
                  - aes-256-ctr
                description: |-
                  The encryption algorithm. A valid value is
                  `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                  `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                  CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                  for all combinations of key length 128, 192, 256 bits and ICV length
                  8, 12, 16 octets.
                  Default is `aes-128`.
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the IKE policy.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
              auth_algorithm:
                type: string
                enum:
                  - sha1
                  - sha256
                  - sha384
                  - sha512
                  - aes-xcbc
                  - aes-cmac
                description: |-
                  The authentication hash algorithm. Valid values
                  are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                  `aes-cmac`.
                  The default is `sha1`.
              phase1_negotiation_mode:
                type: string
                enum:
                  - main
                  - aggressive
                description: |-
                  The IKE mode. A valid value is `main`, which is
                  the default.
              lifetime:
                type: string
                description: |-
                  The lifetime of the security association. The
                  lifetime consists of a unit and integer value. You can omit either
                  the unit or value portion of the lifetime. Default unit is seconds
                  and default value is 3600.
              ike_version:
                type: string
                enum:
                  - v1
                  - v2
                description: |-
                  The IKE version. A valid value is `v1` or
                  `v2`. Default is `v1`.
              pfs:
                type: string
                enum:
                  - group2
                  - group5
                  - group14
                  - group15
                  - group16
                  - group17
                  - group18
                  - group19
                  - group20
                  - group21
                  - group22
                  - group23
                  - group24
                  - group25
                  - group26
                  - group27
                  - group28
                  - group29
                  - group30
                  - group31
                description: |-
                  Perfect forward secrecy (PFS). A valid value is
                  `Group2`, `Group5`, `Group14` to `Group31`. Default is
                  `Group5`.
          description: |-
            A list of `ikepolicy` objects.
    VpnIkepolicyUpdateRequest:
      type: object
      description: Request of the vpn/ikepolicies/id:put operation
      properties:
        ikepolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            phase1_negotiation_mode:
              type: string
              enum:
                - main
                - aggressive
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            ike_version:
              type: string
              enum:
                - v1
                - v2
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ikepolicy` object.
    VpnIkepolicyUpdateResponse:
      type: object
      description: Response of the vpn/ikepolicies/id:put operation
      properties:
        ikepolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IKE policy.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            phase1_negotiation_mode:
              type: string
              enum:
                - main
                - aggressive
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            ike_version:
              type: string
              enum:
                - v1
                - v2
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ikepolicy` object.
    VpnIkepolicyShowResponse:
      type: object
      description: Response of the vpn/ikepolicies/id:get operation
      properties:
        ikepolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IKE policy.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            phase1_negotiation_mode:
              type: string
              enum:
                - main
                - aggressive
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            ike_version:
              type: string
              enum:
                - v1
                - v2
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ikepolicy` object.
    VpnIpsecpoliciesCreateRequest:
      type: object
      description: Request of the vpn/ipsecpolicies:post operation
      properties:
        ipsecpolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            transform_protocol:
              type: string
              enum:
                - ah
                - ah-esp
                - esp
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            encapsulation_mode:
              type: string
              enum:
                - transport
                - tunnel
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ipsecpolicy` object.
    VpnIpsecpoliciesCreateResponse:
      type: object
      description: Response of the vpn/ipsecpolicies:post operation
      properties:
        ipsecpolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec policy.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            transform_protocol:
              type: string
              enum:
                - ah
                - ah-esp
                - esp
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            encapsulation_mode:
              type: string
              enum:
                - transport
                - tunnel
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ipsecpolicy` object.
    VpnIpsecpoliciesIndexResponse:
      type: object
      description: Response of the vpn/ipsecpolicies:get operation
      properties:
        ipsecpolicies:
          type: array
          items:
            type: object
            properties:
              encryption_algorithm:
                type: string
                enum:
                  - 3des
                  - aes-128
                  - aes-192
                  - aes-256
                  - aes-128-ccm-8
                  - aes-192-ccm-8
                  - aes-256-ccm-8
                  - aes-128-ccm-12
                  - aes-192-ccm-12
                  - aes-256-ccm-12
                  - aes-128-ccm-16
                  - aes-192-ccm-16
                  - aes-256-ccm-16
                  - aes-128-gcm-8
                  - aes-192-gcm-8
                  - aes-256-gcm-8
                  - aes-128-gcm-12
                  - aes-192-gcm-12
                  - aes-256-gcm-12
                  - aes-128-gcm-16
                  - aes-192-gcm-16
                  - aes-256-gcm-16
                  - aes-128-ctr
                  - aes-192-ctr
                  - aes-256-ctr
                description: |-
                  The encryption algorithm. A valid value is
                  `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                  `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                  CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                  for all combinations of key length 128, 192, 256 bits and ICV length
                  8, 12, 16 octets.
                  Default is `aes-128`.
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the IPsec policy.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
              transform_protocol:
                type: string
                enum:
                  - ah
                  - ah-esp
                  - esp
                description: |-
                  The transform protocol. A valid value is `ESP`,
                  `AH`, or `AH- ESP`. Default is `ESP`.
              auth_algorithm:
                type: string
                enum:
                  - sha1
                  - sha256
                  - sha384
                  - sha512
                  - aes-xcbc
                  - aes-cmac
                description: |-
                  The authentication hash algorithm. Valid values
                  are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                  `aes-cmac`.
                  The default is `sha1`.
              encapsulation_mode:
                type: string
                enum:
                  - transport
                  - tunnel
                description: |-
                  The encapsulation mode. A valid value is
                  `tunnel` or `transport`. Default is `tunnel`.
              lifetime:
                type: string
                description: |-
                  The lifetime of the security association. The
                  lifetime consists of a unit and integer value. You can omit either
                  the unit or value portion of the lifetime. Default unit is seconds
                  and default value is 3600.
              pfs:
                type: string
                enum:
                  - group2
                  - group5
                  - group14
                  - group15
                  - group16
                  - group17
                  - group18
                  - group19
                  - group20
                  - group21
                  - group22
                  - group23
                  - group24
                  - group25
                  - group26
                  - group27
                  - group28
                  - group29
                  - group30
                  - group31
                description: |-
                  Perfect forward secrecy (PFS). A valid value is
                  `Group2`, `Group5`, `Group14` to `Group31`. Default is
                  `Group5`.
          description: |-
            A list of `ipsecpolicy` objects.
    VpnIpsecpolicyUpdateRequest:
      type: object
      description: Request of the vpn/ipsecpolicies/id:put operation
      properties:
        ipsecpolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            transform_protocol:
              type: string
              enum:
                - ah
                - ah-esp
                - esp
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            encapsulation_mode:
              type: string
              enum:
                - transport
                - tunnel
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ipsecpolicy` object.
    VpnIpsecpolicyUpdateResponse:
      type: object
      description: Response of the vpn/ipsecpolicies/id:put operation
      properties:
        ipsecpolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec policy.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            transform_protocol:
              type: string
              enum:
                - ah
                - ah-esp
                - esp
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            encapsulation_mode:
              type: string
              enum:
                - transport
                - tunnel
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ipsecpolicy` object.
    VpnIpsecpolicyShowResponse:
      type: object
      description: Response of the vpn/ipsecpolicies/id:get operation
      properties:
        ipsecpolicy:
          type: object
          properties:
            encryption_algorithm:
              type: string
              enum:
                - 3des
                - aes-128
                - aes-192
                - aes-256
                - aes-128-ccm-8
                - aes-192-ccm-8
                - aes-256-ccm-8
                - aes-128-ccm-12
                - aes-192-ccm-12
                - aes-256-ccm-12
                - aes-128-ccm-16
                - aes-192-ccm-16
                - aes-256-ccm-16
                - aes-128-gcm-8
                - aes-192-gcm-8
                - aes-256-gcm-8
                - aes-128-gcm-12
                - aes-192-gcm-12
                - aes-256-gcm-12
                - aes-128-gcm-16
                - aes-192-gcm-16
                - aes-256-gcm-16
                - aes-128-ctr
                - aes-192-ctr
                - aes-256-ctr
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec policy.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            transform_protocol:
              type: string
              enum:
                - ah
                - ah-esp
                - esp
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
            auth_algorithm:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - aes-xcbc
                - aes-cmac
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
            encapsulation_mode:
              type: string
              enum:
                - transport
                - tunnel
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
            lifetime:
              type: string
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
            pfs:
              type: string
              enum:
                - group2
                - group5
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
          description: |-
            An `ipsecpolicy` object.
    VpnEndpoint_GroupsCreateRequest:
      type: object
      description: Request of the vpn/endpoint-groups:post operation
      properties:
        endpoint_group:
          type: object
          properties:
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            type:
              type: string
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
            endpoints:
              type: array
              items:
                type: string
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
    VpnEndpoint_GroupsCreateResponse:
      type: object
      description: Response of the vpn/endpoint-groups:post operation
      properties:
        endpoint_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN endpoint group.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            type:
              type: string
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
            endpoints:
              type: array
              items:
                type: string
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
    VpnEndpoint_GroupsIndexResponse:
      type: object
      description: Response of the vpn/endpoint-groups:get operation
      properties:
        endpoint_groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the VPN endpoint group.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
              type:
                type: string
                enum:
                  - cidr
                  - network
                  - router
                  - subnet
                  - vlan
                description: |-
                  The type of the endpoints in the group. A valid
                  value is `subnet`, `cidr`, `network`, `router`, or
                  `vlan`. Only `subnet` and `cidr` are supported
                  at this moment.
              endpoints:
                type: array
                items:
                  type: string
                description: |-
                  List of endpoints of the same type, for the
                  endpoint group. The values will depend on type.
    VpnEndpoint_GroupUpdateRequest:
      type: object
      description: Request of the vpn/endpoint-groups/id:put operation
      properties:
        endpoint_group:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
    VpnEndpoint_GroupUpdateResponse:
      type: object
      description: Response of the vpn/endpoint-groups/id:put operation
      properties:
        endpoint_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN endpoint group.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            type:
              type: string
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
            endpoints:
              type: array
              items:
                type: string
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
    VpnEndpoint_GroupShowResponse:
      type: object
      description: Response of the vpn/endpoint-groups/id:get operation
      properties:
        endpoint_group:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN endpoint group.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            type:
              type: string
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
            endpoints:
              type: array
              items:
                type: string
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
    VpnVpnservicesCreateRequest:
      type: object
      description: Request of the vpn/vpnservices:post operation
      properties:
        vpnservice:
          type: object
          properties:
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            subnet_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
            router_id:
              type: string
              format: uuid
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            flavor_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the flavor.
          description: |-
            A `vpnservice` object.
    VpnVpnservicesCreateResponse:
      type: object
      description: Response of the vpn/vpnservices:post operation
      properties:
        vpnservice:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN service.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            subnet_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
            router_id:
              type: string
              format: uuid
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            external_v4_ip:
              type: string
              description: |-
                Read-only external (public) IPv4 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv4 interface is available.
            external_v6_ip:
              type: string
              description: |-
                Read-only external (public) IPv6 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv6 interface is available.
            status:
              type: string
              description: |-
                Indicates whether IPsec VPN service is currently
                operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
            flavor_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the flavor.
          description: |-
            A `vpnservice` object.
    VpnVpnservicesIndexResponse:
      type: object
      description: Response of the vpn/vpnservices:get operation
      properties:
        vpnservices:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the VPN service.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
              subnet_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  If you specify only a subnet UUID, OpenStack
                  Networking allocates an available IP from that subnet to the port.
                  If you specify both a subnet UUID and an IP address, OpenStack
                  Networking tries to allocate the address to the port.
              router_id:
                type: string
                format: uuid
              admin_state_up:
                type:
                  - string
                  - boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              external_v4_ip:
                type: string
                description: |-
                  Read-only external (public) IPv4 address that is
                  used for the VPN service. The VPN plugin sets this address if an
                  IPv4 interface is available.
              external_v6_ip:
                type: string
                description: |-
                  Read-only external (public) IPv6 address that is
                  used for the VPN service. The VPN plugin sets this address if an
                  IPv6 interface is available.
              status:
                type: string
                description: |-
                  Indicates whether IPsec VPN service is currently
                  operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                  `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
              flavor_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID of the flavor.
          description: |-
            A list of VPN service objects.
    VpnVpnserviceUpdateRequest:
      type: object
      description: Request of the vpn/vpnservices/id:put operation
      properties:
        vpnservice:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
          description: |-
            A `vpnservice` object.
    VpnVpnserviceUpdateResponse:
      type: object
      description: Response of the vpn/vpnservices/id:put operation
      properties:
        vpnservice:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN service.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            subnet_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
            router_id:
              type: string
              format: uuid
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            external_v4_ip:
              type: string
              description: |-
                Read-only external (public) IPv4 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv4 interface is available.
            external_v6_ip:
              type: string
              description: |-
                Read-only external (public) IPv6 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv6 interface is available.
            status:
              type: string
              description: |-
                Indicates whether IPsec VPN service is currently
                operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
            flavor_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the flavor.
          description: |-
            A `vpnservice` object.
    VpnVpnserviceShowResponse:
      type: object
      description: Response of the vpn/vpnservices/id:get operation
      properties:
        vpnservice:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN service.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            subnet_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
            router_id:
              type: string
              format: uuid
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            external_v4_ip:
              type: string
              description: |-
                Read-only external (public) IPv4 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv4 interface is available.
            external_v6_ip:
              type: string
              description: |-
                Read-only external (public) IPv6 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv6 interface is available.
            status:
              type: string
              description: |-
                Indicates whether IPsec VPN service is currently
                operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
            flavor_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID of the flavor.
          description: |-
            A `vpnservice` object.
    VpnIpsec_Site_ConnectionsCreateRequest:
      type: object
      description: Request of the vpn/ipsec-site-connections:post operation
      properties:
        ipsec_site_connection:
          type: object
          properties:
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            local_id:
              type: string
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
            peer_address:
              type: string
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
            peer_id:
              type: string
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
            peer_cidrs:
              type: array
              items:
                type: string
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
            local_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
            peer_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            initiator:
              type: string
              enum:
                - bi-directional
                - response-only
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
            psk:
              type: string
              description: |-
                The pre-shared key. A valid value is any string.
            dpd:
              type: string
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            vpnservice_id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN service.
            ikepolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IKE policy.
            ipsecpolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec policy.
          description: |-
            An `ipsec_site_connection` object.
    VpnIpsec_Site_ConnectionsCreateResponse:
      type: object
      description: Response of the vpn/ipsec-site-connections:post operation
      properties:
        ipsec_site_connection:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec site-to-site connection.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            local_id:
              type: string
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
            peer_address:
              type: string
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
            peer_id:
              type: string
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
            peer_cidrs:
              type: array
              items:
                type: string
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
            local_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
            peer_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
            route_mode:
              type: string
              description: |-
                The route mode. A valid value is `static`,
                which is the default.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            initiator:
              type: string
              enum:
                - bi-directional
                - response-only
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
            auth_mode:
              type: string
              enum:
                - psk
              description: |-
                The authentication mode. A valid value is
                `psk`, which is the default.
            psk:
              type: string
              description: |-
                The pre-shared key. A valid value is any string.
            dpd:
              type: string
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                Indicates whether the IPsec connection is
                currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                `PENDING_DELETE`.
            vpnservice_id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN service.
            ikepolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IKE policy.
            ipsecpolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec policy.
          description: |-
            An `ipsec_site_connection` object.
    VpnIpsec_Site_ConnectionsIndexResponse:
      type: object
      description: Response of the vpn/ipsec-site-connections:get operation
      properties:
        ipsec_site_connections:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: |-
                  The ID of the IPsec site-to-site connection.
              tenant_id:
                type: string
                maxLength: 255
                description: |-
                  The ID of the project.
              name:
                type: string
                maxLength: 255
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
              description:
                type: string
                maxLength: 255
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
              local_id:
                type: string
                description: |-
                  An ID to be used instead of the external IP address for a virtual
                  router used in traffic between instances on different networks in
                  east-west traffic. Most often, local ID would be domain name, email
                  address, etc. If this is not configured then the external IP address
                  will be used as the ID.
              peer_address:
                type: string
                description: |-
                  The peer gateway public IPv4 or IPv6 address or
                  FQDN.
              peer_id:
                type: string
                description: |-
                  The peer router identity for authentication. A
                  valid value is an IPv4 address, IPv6 address, e-mail address, key
                  ID, or FQDN. Typically, this value matches the `peer_address`
                  value.
              peer_cidrs:
                type: array
                items:
                  type: string
                description: |-
                  (Deprecated) Unique list of valid peer private
                  CIDRs in the form < net_address > / < prefix > .
              local_ep_group_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID for the endpoint group that contains
                  private subnets for the local side of the connection. Yo must
                  specify this parameter with the `peer_ep_group_id` parameter
                  unless in backward- compatible mode where `peer_cidrs` is
                  provided with a `subnet_id` for the VPN service.
              peer_ep_group_id:
                type:
                  - string
                  - 'null'
                format: uuid
                description: |-
                  The ID for the endpoint group that contains
                  private CIDRs in the form < net_address > / < prefix > for the
                  peer side of the connection. You must specify this parameter with
                  the `local_ep_group_id` parameter unless in backward-compatible
                  mode where `peer_cidrs` is provided with a `subnet_id` for the
                  VPN service.
              route_mode:
                type: string
                description: |-
                  The route mode. A valid value is `static`,
                  which is the default.
              mtu:
                type:
                  - string
                  - integer
                minimum: 0
                description: |-
                  The maximum transmission unit (MTU) value to
                  address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                  IPv6.
              initiator:
                type: string
                enum:
                  - bi-directional
                  - response-only
                description: |-
                  Indicates whether this VPN can only respond to
                  connections or both respond to and initiate connections. A valid
                  value is `response- only` or `bi-directional`. Default is
                  `bi-directional`.
              auth_mode:
                type: string
                enum:
                  - psk
                description: |-
                  The authentication mode. A valid value is
                  `psk`, which is the default.
              psk:
                type: string
                description: |-
                  The pre-shared key. A valid value is any string.
              dpd:
                type: string
                description: |-
                  A dictionary with dead peer detection (DPD)
                  protocol controls.
              admin_state_up:
                type:
                  - string
                  - boolean
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
              status:
                type: string
                description: |-
                  Indicates whether the IPsec connection is
                  currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                  `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                  `PENDING_DELETE`.
              vpnservice_id:
                type: string
                format: uuid
                description: |-
                  The ID of the VPN service.
              ikepolicy_id:
                type: string
                format: uuid
                description: |-
                  The ID of the IKE policy.
              ipsecpolicy_id:
                type: string
                format: uuid
                description: |-
                  The ID of the IPsec policy.
    VpnIpsec_Site_ConnectionUpdateRequest:
      type: object
      description: Request of the vpn/ipsec-site-connections/id:put operation
      properties:
        ipsec_site_connection:
          type: object
          properties:
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            local_id:
              type: string
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
            peer_address:
              type: string
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
            peer_id:
              type: string
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
            peer_cidrs:
              type: array
              items:
                type: string
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
            local_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
            peer_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            initiator:
              type: string
              enum:
                - bi-directional
                - response-only
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
            psk:
              type: string
              description: |-
                The pre-shared key. A valid value is any string.
            dpd:
              type: string
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
          description: |-
            An `ipsec_site_connection` object.
    VpnIpsec_Site_ConnectionUpdateResponse:
      type: object
      description: Response of the vpn/ipsec-site-connections/id:put operation
      properties:
        ipsec_site_connection:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec site-to-site connection.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            local_id:
              type: string
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
            peer_address:
              type: string
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
            peer_id:
              type: string
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
            peer_cidrs:
              type: array
              items:
                type: string
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
            local_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
            peer_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
            route_mode:
              type: string
              description: |-
                The route mode. A valid value is `static`,
                which is the default.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            initiator:
              type: string
              enum:
                - bi-directional
                - response-only
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
            auth_mode:
              type: string
              enum:
                - psk
              description: |-
                The authentication mode. A valid value is
                `psk`, which is the default.
            psk:
              type: string
              description: |-
                The pre-shared key. A valid value is any string.
            dpd:
              type: string
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                Indicates whether the IPsec connection is
                currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                `PENDING_DELETE`.
            vpnservice_id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN service.
            ikepolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IKE policy.
            ipsecpolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec policy.
          description: |-
            An `ipsec_site_connection` object.
    VpnIpsec_Site_ConnectionShowResponse:
      type: object
      description: Response of the vpn/ipsec-site-connections/id:get operation
      properties:
        ipsec_site_connection:
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec site-to-site connection.
            tenant_id:
              type: string
              maxLength: 255
              description: |-
                The ID of the project.
            name:
              type: string
              maxLength: 255
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
            description:
              type: string
              maxLength: 255
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
            local_id:
              type: string
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
            peer_address:
              type: string
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
            peer_id:
              type: string
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
            peer_cidrs:
              type: array
              items:
                type: string
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
            local_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
            peer_ep_group_id:
              type:
                - string
                - 'null'
              format: uuid
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
            route_mode:
              type: string
              description: |-
                The route mode. A valid value is `static`,
                which is the default.
            mtu:
              type:
                - string
                - integer
              minimum: 0
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
            initiator:
              type: string
              enum:
                - bi-directional
                - response-only
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
            auth_mode:
              type: string
              enum:
                - psk
              description: |-
                The authentication mode. A valid value is
                `psk`, which is the default.
            psk:
              type: string
              description: |-
                The pre-shared key. A valid value is any string.
            dpd:
              type: string
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
            admin_state_up:
              type:
                - string
                - boolean
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
            status:
              type: string
              description: |-
                Indicates whether the IPsec connection is
                currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                `PENDING_DELETE`.
            vpnservice_id:
              type: string
              format: uuid
              description: |-
                The ID of the VPN service.
            ikepolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IKE policy.
            ipsecpolicy_id:
              type: string
              format: uuid
              description: |-
                The ID of the IPsec policy.
          description: |-
            An `ipsec_site_connection` object.
  parameters:
    limit:
      in: query
      name: limit
      description: Requests a page size of items. Returns a number of items up to
        a limit value. Use the limit parameter to make an initial limited request
        and use the ID of the last-seen item from the response as the marker parameter
        value in a subsequent limited request.
      schema:
        type: integer
        minimum: 0
    marker:
      in: query
      name: marker
      description: The ID of the last-seen item. Use the limit parameter to make an
        initial limited request and use the ID of the last-seen item from the response
        as the marker parameter value in a subsequent limited request.
      schema:
        type: string
    page_reverse:
      in: query
      name: page_reverse
      description: Reverse the page direction
      schema:
        type: boolean
    sort_key:
      in: query
      name: sort_key
      description: Sort results by the attribute. This is an optional feature and
        may be silently ignored by the server.
      schema:
        type: array
        items:
          type: string
      style: form
      explode: true
    sort_dir:
      in: query
      name: sort_dir
      description: Sort direction. This is an optional feature and may be silently
        ignored by the server.
      schema:
        type: array
        items:
          type: string
          enum:
            - asc
            - desc
      style: form
      explode: true
    extensions_id:
      in: path
      name: id
      description: id parameter for /v2.0/extensions/{id} API
      schema:
        type: string
      required: true
    address_groups_id:
      in: query
      name: id
      description: id query parameter for /v2.0/address-groups API
      schema:
        type: string
        format: uuid
    address_groups_name:
      in: query
      name: name
      description: name query parameter for /v2.0/address-groups API
      schema:
        type: string
        maxLength: 255
    address_groups_description:
      in: query
      name: description
      description: description query parameter for /v2.0/address-groups API
      schema:
        type: string
        maxLength: 1024
    address_groups_project_id:
      in: query
      name: project_id
      description: project_id query parameter for /v2.0/address-groups API
      schema:
        type: string
        maxLength: 255
    address_groups_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/address-groups API
      schema:
        type: string
    address_groups_address_group_id:
      in: path
      name: id
      description: id parameter for /v2.0/address-groups/{id} API
      schema:
        type: string
      required: true
    address_scopes_id:
      in: query
      name: id
      description: id query parameter for /v2.0/address-scopes API
      schema:
        type: string
        format: uuid
    address_scopes_name:
      in: query
      name: name
      description: name query parameter for /v2.0/address-scopes API
      schema:
        type: string
        maxLength: 255
    address_scopes_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/address-scopes API
      schema:
        type: string
        maxLength: 255
    address_scopes_shared:
      in: query
      name: shared
      description: shared query parameter for /v2.0/address-scopes API
      schema:
        type:
          - string
          - boolean
    address_scopes_ip_version:
      in: query
      name: ip_version
      description: ip_version query parameter for /v2.0/address-scopes API
      schema:
        type:
          - string
          - integer
        enum:
          - 4
          - 6
    address_scopes_address_scope_id:
      in: path
      name: id
      description: id parameter for /v2.0/address-scopes/{id} API
      schema:
        type: string
      required: true
    agents_id:
      in: query
      name: id
      description: id query parameter for /v2.0/agents API
      schema:
        type: string
        format: uuid
    agents_agent_type:
      in: query
      name: agent_type
      description: agent_type query parameter for /v2.0/agents API
      schema:
        type: string
    agents_binary:
      in: query
      name: binary
      description: binary query parameter for /v2.0/agents API
      schema:
        type: string
    agents_topic:
      in: query
      name: topic
      description: topic query parameter for /v2.0/agents API
      schema:
        type: string
    agents_host:
      in: query
      name: host
      description: host query parameter for /v2.0/agents API
      schema:
        type: string
    agents_admin_state_up:
      in: query
      name: admin_state_up
      description: admin_state_up query parameter for /v2.0/agents API
      schema:
        type:
          - string
          - boolean
    agents_alive:
      in: query
      name: alive
      description: alive query parameter for /v2.0/agents API
      schema:
        type: string
    agents_description:
      in: query
      name: description
      description: description query parameter for /v2.0/agents API
      schema:
        type:
          - string
          - 'null'
        maxLength: 255
    agents_availability_zone:
      in: query
      name: availability_zone
      description: availability_zone query parameter for /v2.0/agents API
      schema:
        type: string
    agents_agent_id:
      in: path
      name: id
      description: id parameter for /v2.0/agents/{id} API
      schema:
        type: string
      required: true
    auto_allocated_topologies_auto_allocated_topology_id:
      in: path
      name: id
      description: id parameter for /v2.0/auto-allocated-topology/{id} API
      schema:
        type: string
      required: true
    availability_zones_name:
      in: query
      name: name
      description: name query parameter for /v2.0/availability_zones API
      schema:
        type: string
    availability_zones_resource:
      in: query
      name: resource
      description: resource query parameter for /v2.0/availability_zones API
      schema:
        type: string
    availability_zones_state:
      in: query
      name: state
      description: state query parameter for /v2.0/availability_zones API
      schema:
        type: string
    agents_dhcp-networks_agent_id:
      in: path
      name: agent_id
      description: agent_id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id}
        API
      schema:
        type: string
      required: true
    agents_dhcp-networks_id:
      in: path
      name: id
      description: id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} API
      schema:
        type: string
      required: true
    networks_dhcp-agents_network_id:
      in: path
      name: network_id
      description: network_id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id}
        API
      schema:
        type: string
      required: true
    networks_dhcp-agents_id:
      in: path
      name: id
      description: id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id} API
      schema:
        type: string
      required: true
    routers_id:
      in: query
      name: id
      description: id query parameter for /v2.0/routers API
      schema:
        type: string
        format: uuid
    routers_name:
      in: query
      name: name
      description: name query parameter for /v2.0/routers API
      schema:
        type: string
        maxLength: 255
    routers_admin_state_up:
      in: query
      name: admin_state_up
      description: admin_state_up query parameter for /v2.0/routers API
      schema:
        type:
          - string
          - boolean
    routers_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/routers API
      schema:
        type: string
        maxLength: 255
    routers_enable_ndp_proxy:
      in: query
      name: enable_ndp_proxy
      description: enable_ndp_proxy query parameter for /v2.0/routers API
      schema:
        type:
          - string
          - boolean
          - 'null'
    routers_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/routers API
      schema:
        type: string
    routers_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/routers API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    routers_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/routers API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    routers_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/routers API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    routers_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/routers API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    routers_description:
      in: query
      name: description
      description: description query parameter for /v2.0/routers API
      schema:
        type: string
        maxLength: 255
    routers_router_id:
      in: path
      name: id
      description: id parameter for /v2.0/routers/{id} API
      schema:
        type: string
      required: true
    flavors_id:
      in: query
      name: id
      description: id query parameter for /v2.0/flavors API
      schema:
        type: string
        format: uuid
    flavors_name:
      in: query
      name: name
      description: name query parameter for /v2.0/flavors API
      schema:
        type: string
        maxLength: 255
    flavors_description:
      in: query
      name: description
      description: description query parameter for /v2.0/flavors API
      schema:
        type:
          - string
          - 'null'
        maxLength: 1024
    flavors_service_type:
      in: query
      name: service_type
      description: service_type query parameter for /v2.0/flavors API
      schema:
        type: string
    flavors_enabled:
      in: query
      name: enabled
      description: enabled query parameter for /v2.0/flavors API
      schema:
        type:
          - string
          - boolean
          - 'null'
    flavors_flavor_id:
      in: path
      name: id
      description: id parameter for /v2.0/flavors/{id} API
      schema:
        type: string
      required: true
    service_profiles_id:
      in: query
      name: id
      description: id query parameter for /v2.0/service_profiles API
      schema:
        type: string
        format: uuid
    service_profiles_description:
      in: query
      name: description
      description: description query parameter for /v2.0/service_profiles API
      schema:
        type:
          - string
          - 'null'
        maxLength: 1024
    service_profiles_driver:
      in: query
      name: driver
      description: driver query parameter for /v2.0/service_profiles API
      schema:
        type: string
        maxLength: 1024
    service_profiles_enabled:
      in: query
      name: enabled
      description: enabled query parameter for /v2.0/service_profiles API
      schema:
        type:
          - string
          - boolean
          - 'null'
    service_profiles_service_profile_id:
      in: path
      name: id
      description: id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id}
        API
      schema:
        type: string
      required: true
    next_providers_next_provider_flavor_id:
      in: path
      name: flavor_id
      description: flavor_id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id}
        API
      schema:
        type: string
      required: true
    next_providers_next_provider_id:
      in: path
      name: id
      description: id parameter for /v2.0/flavors/{flavor_id}/next_providers/{id}
        API
      schema:
        type: string
      required: true
    service_profiles_service_profile_flavor_id:
      in: path
      name: flavor_id
      description: flavor_id parameter for /v2.0/flavors/{flavor_id}/service_profiles/{id}
        API
      schema:
        type: string
      required: true
    port_forwardings_port_forwarding_floatingip_id:
      in: path
      name: floatingip_id
      description: floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id}
        API
      schema:
        type: string
      required: true
    port_forwardings_id:
      in: query
      name: id
      description: id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings
        API
      schema:
        type: string
        format: uuid
    port_forwardings_external_port:
      in: query
      name: external_port
      description: external_port query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings
        API
      schema:
        type:
          - number
          - 'null'
        minimum: 1
        maximum: 65535
    port_forwardings_protocol:
      in: query
      name: protocol
      description: protocol query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings
        API
      schema:
        type: string
        enum:
          - dccp
          - icmp
          - ipv6-icmp
          - sctp
          - tcp
          - udp
    port_forwardings_internal_port_id:
      in: query
      name: internal_port_id
      description: internal_port_id query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings
        API
      schema:
        type: string
        format: uuid
    port_forwardings_description:
      in: query
      name: description
      description: description query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings
        API
      schema:
        type: string
        maxLength: 1024
    port_forwardings_external_port_range:
      in: query
      name: external_port_range
      description: external_port_range query parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings
        API
      schema:
        type: number
        minimum: 1
        maximum: 65535
    port_forwardings_port_forwarding_id:
      in: path
      name: id
      description: id parameter for /v2.0/floatingips/{floatingip_id}/port_forwardings/{id}
        API
      schema:
        type: string
      required: true
    floatingip_pools_floatingip_pool_id:
      in: path
      name: id
      description: id parameter for /v2.0/floatingip-pools/{id} API
      schema:
        type: string
      required: true
    floatingips_id:
      in: query
      name: id
      description: id query parameter for /v2.0/floatingips API
      schema:
        type: string
        format: uuid
    floatingips_floating_ip_address:
      in: query
      name: floating_ip_address
      description: floating_ip_address query parameter for /v2.0/floatingips API
      schema:
        type: string
    floatingips_floating_network_id:
      in: query
      name: floating_network_id
      description: floating_network_id query parameter for /v2.0/floatingips API
      schema:
        type: string
        format: uuid
    floatingips_router_id:
      in: query
      name: router_id
      description: router_id query parameter for /v2.0/floatingips API
      schema:
        type:
          - string
          - 'null'
        format: uuid
    floatingips_port_id:
      in: query
      name: port_id
      description: port_id query parameter for /v2.0/floatingips API
      schema:
        type:
          - string
          - 'null'
        format: uuid
    floatingips_fixed_ip_address:
      in: query
      name: fixed_ip_address
      description: fixed_ip_address query parameter for /v2.0/floatingips API
      schema:
        type: string
    floatingips_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/floatingips API
      schema:
        type: string
        maxLength: 255
    floatingips_status:
      in: query
      name: status
      description: status query parameter for /v2.0/floatingips API
      schema:
        type: string
    floatingips_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/floatingips API
      schema:
        type: string
    floatingips_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/floatingips API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    floatingips_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/floatingips API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    floatingips_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/floatingips API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    floatingips_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/floatingips API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    floatingips_description:
      in: query
      name: description
      description: description query parameter for /v2.0/floatingips API
      schema:
        type: string
        maxLength: 255
    floatingips_floatingip_id:
      in: path
      name: id
      description: id parameter for /v2.0/floatingips/{id} API
      schema:
        type: string
      required: true
    conntrack_helpers_conntrack_helper_router_id:
      in: path
      name: router_id
      description: router_id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id}
        API
      schema:
        type: string
      required: true
    conntrack_helpers_id:
      in: query
      name: id
      description: id query parameter for /v2.0/routers/{router_id}/conntrack_helpers
        API
      schema:
        type: string
        format: uuid
    conntrack_helpers_protocol:
      in: query
      name: protocol
      description: protocol query parameter for /v2.0/routers/{router_id}/conntrack_helpers
        API
      schema:
        type: string
        enum:
          - dccp
          - icmp
          - ipv6-icmp
          - sctp
          - tcp
          - udp
    conntrack_helpers_port:
      in: query
      name: port
      description: port query parameter for /v2.0/routers/{router_id}/conntrack_helpers
        API
      schema:
        type:
          - string
          - integer
        minimum: 1
        maximum: 65535
    conntrack_helpers_helper:
      in: query
      name: helper
      description: helper query parameter for /v2.0/routers/{router_id}/conntrack_helpers
        API
      schema:
        type: string
        maxLength: 64
    conntrack_helpers_conntrack_helper_id:
      in: path
      name: id
      description: id parameter for /v2.0/routers/{router_id}/conntrack_helpers/{id}
        API
      schema:
        type: string
      required: true
    ndp_proxies_name:
      in: query
      name: name
      description: name query parameter for /v2.0/ndp-proxies API
      schema:
        type: string
        maxLength: 255
    ndp_proxies_description:
      in: query
      name: description
      description: description query parameter for /v2.0/ndp-proxies API
      schema:
        type: string
        maxLength: 255
    ndp_proxies_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/ndp-proxies API
      schema:
        type: string
    ndp_proxies_ndp_proxy_id:
      in: path
      name: id
      description: id parameter for /v2.0/ndp-proxies/{id} API
      schema:
        type: string
      required: true
    agents_l3-routers_agent_id:
      in: path
      name: agent_id
      description: agent_id parameter for /v2.0/agents/{agent_id}/l3-routers/{id}
        API
      schema:
        type: string
      required: true
    agents_l3-routers_id:
      in: path
      name: id
      description: id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
      schema:
        type: string
      required: true
    routers_l3-agents_router_id:
      in: path
      name: router_id
      description: router_id parameter for /v2.0/routers/{router_id}/l3-agents/{id}
        API
      schema:
        type: string
      required: true
    routers_l3-agents_id:
      in: path
      name: id
      description: id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
      schema:
        type: string
      required: true
    local_ips_id:
      in: query
      name: id
      description: id query parameter for /v2.0/local-ips API
      schema:
        type: string
        format: uuid
    local_ips_name:
      in: query
      name: name
      description: name query parameter for /v2.0/local-ips API
      schema:
        type: string
        maxLength: 255
    local_ips_description:
      in: query
      name: description
      description: description query parameter for /v2.0/local-ips API
      schema:
        type: string
        maxLength: 255
    local_ips_project_id:
      in: query
      name: project_id
      description: project_id query parameter for /v2.0/local-ips API
      schema:
        type: string
        maxLength: 255
    local_ips_local_port_id:
      in: query
      name: local_port_id
      description: local_port_id query parameter for /v2.0/local-ips API
      schema:
        type: string
        format: uuid
    local_ips_network_id:
      in: query
      name: network_id
      description: network_id query parameter for /v2.0/local-ips API
      schema:
        type: string
        format: uuid
    local_ips_local_ip_address:
      in: query
      name: local_ip_address
      description: local_ip_address query parameter for /v2.0/local-ips API
      schema:
        type: string
    local_ips_ip_mode:
      in: query
      name: ip_mode
      description: ip_mode query parameter for /v2.0/local-ips API
      schema:
        type: string
        enum:
          - translate
          - passthrough
    local_ips_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/local-ips API
      schema:
        type: string
    local_ips_local_ip_id:
      in: path
      name: id
      description: id parameter for /v2.0/local-ips/{id} API
      schema:
        type: string
      required: true
    port_associations_port_association_local_ip_id:
      in: path
      name: local_ip_id
      description: local_ip_id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id}
        API
      schema:
        type: string
      required: true
    port_associations_local_ip_address:
      in: query
      name: local_ip_address
      description: local_ip_address query parameter for /v2.0/local_ips/{local_ip_id}/port_associations
        API
      schema:
        type: string
    port_associations_fixed_port_id:
      in: query
      name: fixed_port_id
      description: fixed_port_id query parameter for /v2.0/local_ips/{local_ip_id}/port_associations
        API
      schema:
        type: string
        format: uuid
    port_associations_fixed_ip:
      in: query
      name: fixed_ip
      description: fixed_ip query parameter for /v2.0/local_ips/{local_ip_id}/port_associations
        API
      schema:
        type: string
    port_associations_host:
      in: query
      name: host
      description: host query parameter for /v2.0/local_ips/{local_ip_id}/port_associations
        API
      schema:
        type: string
    port_associations_port_association_id:
      in: path
      name: id
      description: id parameter for /v2.0/local_ips/{local_ip_id}/port_associations/{id}
        API
      schema:
        type: string
      required: true
    logs_id:
      in: query
      name: id
      description: id query parameter for /v2.0/log/logs API
      schema:
        type: string
        format: uuid
    logs_project_id:
      in: query
      name: project_id
      description: project_id query parameter for /v2.0/log/logs API
      schema:
        type: string
        maxLength: 255
    logs_name:
      in: query
      name: name
      description: name query parameter for /v2.0/log/logs API
      schema:
        type: string
        maxLength: 255
    logs_resource_type:
      in: query
      name: resource_type
      description: resource_type query parameter for /v2.0/log/logs API
      schema:
        type: string
        maxLength: 255
    logs_resource_id:
      in: query
      name: resource_id
      description: resource_id query parameter for /v2.0/log/logs API
      schema:
        type:
          - string
          - 'null'
        format: uuid
    logs_event:
      in: query
      name: event
      description: event query parameter for /v2.0/log/logs API
      schema:
        type: string
        enum:
          - ACCEPT
          - DROP
          - ALL
    logs_target_id:
      in: query
      name: target_id
      description: target_id query parameter for /v2.0/log/logs API
      schema:
        type:
          - string
          - 'null'
        format: uuid
    logs_enabled:
      in: query
      name: enabled
      description: enabled query parameter for /v2.0/log/logs API
      schema:
        type:
          - string
          - boolean
    logs_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/log/logs API
      schema:
        type: string
    logs_description:
      in: query
      name: description
      description: description query parameter for /v2.0/log/logs API
      schema:
        type: string
        maxLength: 255
    logs_log_id:
      in: path
      name: id
      description: id parameter for /v2.0/log/logs/{id} API
      schema:
        type: string
      required: true
    loggable_resources_loggable_resource_id:
      in: path
      name: id
      description: id parameter for /v2.0/log/loggable-resources/{id} API
      schema:
        type: string
      required: true
    metering_labels_id:
      in: query
      name: id
      description: id query parameter for /v2.0/metering/metering-labels API
      schema:
        type: string
    metering_labels_name:
      in: query
      name: name
      description: name query parameter for /v2.0/metering/metering-labels API
      schema:
        type: string
        maxLength: 255
    metering_labels_description:
      in: query
      name: description
      description: description query parameter for /v2.0/metering/metering-labels
        API
      schema:
        type: string
        maxLength: 1024
    metering_labels_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/metering/metering-labels API
      schema:
        type: string
        maxLength: 255
    metering_labels_shared:
      in: query
      name: shared
      description: shared query parameter for /v2.0/metering/metering-labels API
      schema:
        type:
          - string
          - boolean
    metering_labels_metering_label_id:
      in: path
      name: id
      description: id parameter for /v2.0/metering/metering-labels/{id} API
      schema:
        type: string
      required: true
    metering_label_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/metering/metering-label-rules API
      schema:
        type: string
    metering_label_rules_metering_label_id:
      in: query
      name: metering_label_id
      description: metering_label_id query parameter for /v2.0/metering/metering-label-rules
        API
      schema:
        type: string
        format: uuid
    metering_label_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/metering/metering-label-rules
        API
      schema:
        type: string
        enum:
          - ingress
          - egress
    metering_label_rules_excluded:
      in: query
      name: excluded
      description: excluded query parameter for /v2.0/metering/metering-label-rules
        API
      schema:
        type:
          - string
          - boolean
    metering_label_rules_remote_ip_prefix:
      in: query
      name: remote_ip_prefix
      description: remote_ip_prefix query parameter for /v2.0/metering/metering-label-rules
        API
      schema:
        type: string
    metering_label_rules_source_ip_prefix:
      in: query
      name: source_ip_prefix
      description: |-
        The source IP prefix that the metering rule is associated with; in this
        context, source IP prefix represents the source IP of the network packet.
        Therefore, for an ingress rule, the source IP is the IP of the system
        accessing something inside OpenStack. On the other hand, for an egress
        rule, the source IP is the internal IP associated with some OpenStack VM.
        Moreover, instead of an IP, one can also use a CIDR as the source IP
        prefix.
      schema:
        type: string
    metering_label_rules_destination_ip_prefix:
      in: query
      name: destination_ip_prefix
      description: |-
        The destination IP prefix that the metering rule is associated with; in
        this context, destination IP prefix represents the destination IP of the
        network packet. Therefore, for an ingress rule, the destination IP is
        the internal IP associated with some OpenStack VM. On the other hand,
        for an egress rule, the destination IP prefix is the IP of some external
        system that an application running inside some OpenStack virtual machine
        is trying to access. Moreover, instead of an IP, one can also use a CIDR
        as the destination IP prefix.
      schema:
        type: string
    metering_label_rules_metering_label_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/metering/metering-label-rules/{id} API
      schema:
        type: string
      required: true
    network_ip_availabilities_network_id:
      in: query
      name: network_id
      description: network_id query parameter for /v2.0/network-ip-availabilities
        API
      schema:
        type: string
    network_ip_availabilities_network_name:
      in: query
      name: network_name
      description: network_name query parameter for /v2.0/network-ip-availabilities
        API
      schema:
        type: string
    network_ip_availabilities_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/network-ip-availabilities API
      schema:
        type: string
    network_ip_availabilities_ip_version:
      in: query
      name: ip_version
      description: ip_version query parameter for /v2.0/network-ip-availabilities
        API
      schema:
        type: string
    network_ip_availabilities_network_ip_availability_id:
      in: path
      name: id
      description: id parameter for /v2.0/network-ip-availabilities/{id} API
      schema:
        type: string
      required: true
    network_segment_ranges_id:
      in: query
      name: id
      description: id query parameter for /v2.0/network-segment-ranges API
      schema:
        type: string
        format: uuid
    network_segment_ranges_name:
      in: query
      name: name
      description: name query parameter for /v2.0/network-segment-ranges API
      schema:
        type: string
        maxLength: 255
    network_segment_ranges_project_id:
      in: query
      name: project_id
      description: project_id query parameter for /v2.0/network-segment-ranges API
      schema:
        type: string
        maxLength: 255
    network_segment_ranges_network_type:
      in: query
      name: network_type
      description: network_type query parameter for /v2.0/network-segment-ranges API
      schema:
        type: string
        enum:
          - vlan
          - vxlan
          - gre
          - geneve
    network_segment_ranges_physical_network:
      in: query
      name: physical_network
      description: physical_network query parameter for /v2.0/network-segment-ranges
        API
      schema:
        type: string
        maxLength: 64
    network_segment_ranges_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/network-segment-ranges
        API
      schema:
        type: string
    network_segment_ranges_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/network-segment-ranges API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    network_segment_ranges_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/network-segment-ranges API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    network_segment_ranges_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/network-segment-ranges API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    network_segment_ranges_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/network-segment-ranges API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    network_segment_ranges_description:
      in: query
      name: description
      description: description query parameter for /v2.0/network-segment-ranges API
      schema:
        type: string
        maxLength: 255
    network_segment_ranges_network_segment_range_id:
      in: path
      name: id
      description: id parameter for /v2.0/network-segment-ranges/{id} API
      schema:
        type: string
      required: true
    bindings_binding_port_id:
      in: path
      name: port_id
      description: port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
      schema:
        type: string
      required: true
    bindings_host:
      in: query
      name: host
      description: host query parameter for /v2.0/ports/{port_id}/bindings API
      schema:
        type: string
    bindings_vif_type:
      in: query
      name: vif_type
      description: vif_type query parameter for /v2.0/ports/{port_id}/bindings API
      schema:
        type: string
    bindings_vnic_type:
      in: query
      name: vnic_type
      description: vnic_type query parameter for /v2.0/ports/{port_id}/bindings API
      schema:
        type: string
        enum:
          - normal
          - direct
          - macvtap
          - baremetal
          - direct-physical
          - virtio-forwarder
          - smart-nic
          - vdpa
          - accelerator-direct
          - accelerator-direct-physical
          - remote-managed
    bindings_status:
      in: query
      name: status
      description: status query parameter for /v2.0/ports/{port_id}/bindings API
      schema:
        type: string
    bindings_binding_id:
      in: path
      name: id
      description: id parameter for /v2.0/ports/{port_id}/bindings/{id} API
      schema:
        type: string
      required: true
    policies_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/policies API
      schema:
        type: string
        format: uuid
    policies_name:
      in: query
      name: name
      description: name query parameter for /v2.0/qos/policies API
      schema:
        type: string
        maxLength: 255
    policies_shared:
      in: query
      name: shared
      description: shared query parameter for /v2.0/qos/policies API
      schema:
        type:
          - string
          - boolean
    policies_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/qos/policies API
      schema:
        type: string
        maxLength: 255
    policies_is_default:
      in: query
      name: is_default
      description: is_default query parameter for /v2.0/qos/policies API
      schema:
        type:
          - string
          - boolean
    policies_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/qos/policies API
      schema:
        type: string
    policies_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/qos/policies API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    policies_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/qos/policies API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    policies_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/qos/policies API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    policies_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/qos/policies API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    policies_description:
      in: query
      name: description
      description: description query parameter for /v2.0/qos/policies API
      schema:
        type: string
        maxLength: 255
    policies_policy_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/policies/{id} API
      schema:
        type: string
      required: true
    rule_types_all_rules:
      in: query
      name: all_rules
      description: all_rules query parameter for /v2.0/qos/rule-types API
      schema:
        type:
          - string
          - boolean
          - 'null'
    rule_types_all_supported:
      in: query
      name: all_supported
      description: all_supported query parameter for /v2.0/qos/rule-types API
      schema:
        type:
          - string
          - boolean
          - 'null'
    rule_types_rule_type_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/rule-types/{id} API
      schema:
        type: string
      required: true
    bandwidth_limit_rules_bandwidth_limit_rule_policy_id:
      in: path
      name: policy_id
      description: policy_id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id}
        API
      schema:
        type: string
      required: true
    bandwidth_limit_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules
        API
      schema:
        type: string
        format: uuid
    bandwidth_limit_rules_max_kbps:
      in: query
      name: max_kbps
      description: max_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    bandwidth_limit_rules_max_burst_kbps:
      in: query
      name: max_burst_kbps
      description: max_burst_kbps query parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    bandwidth_limit_rules_bandwidth_limit_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id}
        API
      schema:
        type: string
      required: true
    dscp_marking_rules_dscp_marking_rule_policy_id:
      in: path
      name: policy_id
      description: policy_id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id}
        API
      schema:
        type: string
      required: true
    dscp_marking_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules
        API
      schema:
        type: string
        format: uuid
    dscp_marking_rules_dscp_mark:
      in: query
      name: dscp_mark
      description: dscp_mark query parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules
        API
      schema:
        type:
          - string
          - integer
        enum:
          - 0
          - 8
          - 10
          - 12
          - 14
          - 16
          - 18
          - 20
          - 22
          - 24
          - 26
          - 28
          - 30
          - 32
          - 34
          - 36
          - 38
          - 40
          - 44
          - 46
          - 48
          - 56
    dscp_marking_rules_dscp_marking_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id}
        API
      schema:
        type: string
      required: true
    minimum_bandwidth_rules_minimum_bandwidth_rule_policy_id:
      in: path
      name: policy_id
      description: policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id}
        API
      schema:
        type: string
      required: true
    minimum_bandwidth_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules
        API
      schema:
        type: string
        format: uuid
    minimum_bandwidth_rules_min_kbps:
      in: query
      name: min_kbps
      description: min_kbps query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    minimum_bandwidth_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules
        API
      schema:
        type: string
        enum:
          - ingress
          - egress
    minimum_bandwidth_rules_minimum_bandwidth_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id}
        API
      schema:
        type: string
      required: true
    minimum_packet_rate_rules_minimum_packet_rate_rule_policy_id:
      in: path
      name: policy_id
      description: policy_id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id}
        API
      schema:
        type: string
      required: true
    minimum_packet_rate_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules
        API
      schema:
        type: string
        format: uuid
    minimum_packet_rate_rules_min_kpps:
      in: query
      name: min_kpps
      description: min_kpps query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    minimum_packet_rate_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules
        API
      schema:
        type: string
        enum:
          - any
          - ingress
          - egress
    minimum_packet_rate_rules_minimum_packet_rate_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id}
        API
      schema:
        type: string
      required: true
    alias_minimum_packet_rate_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/alias-minimum-packet-rate-rules
        API
      schema:
        type: string
        format: uuid
    alias_minimum_packet_rate_rules_min_kpps:
      in: query
      name: min_kpps
      description: min_kpps query parameter for /v2.0/qos/alias-minimum-packet-rate-rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    alias_minimum_packet_rate_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/qos/alias-minimum-packet-rate-rules
        API
      schema:
        type: string
        enum:
          - any
          - ingress
          - egress
    alias_minimum_packet_rate_rules_alias_minimum_packet_rate_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/alias-minimum-packet-rate-rules/{id}
        API
      schema:
        type: string
      required: true
    packet_rate_limit_rules_packet_rate_limit_rule_policy_id:
      in: path
      name: policy_id
      description: policy_id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id}
        API
      schema:
        type: string
      required: true
    packet_rate_limit_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules
        API
      schema:
        type: string
        format: uuid
    packet_rate_limit_rules_max_kpps:
      in: query
      name: max_kpps
      description: max_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    packet_rate_limit_rules_max_burst_kpps:
      in: query
      name: max_burst_kpps
      description: max_burst_kpps query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    packet_rate_limit_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules
        API
      schema:
        type: string
        enum:
          - ingress
          - egress
    packet_rate_limit_rules_packet_rate_limit_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id}
        API
      schema:
        type: string
      required: true
    alias_bandwidth_limit_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/alias-bandwidth-limit-rules API
      schema:
        type: string
        format: uuid
    alias_bandwidth_limit_rules_max_kbps:
      in: query
      name: max_kbps
      description: max_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    alias_bandwidth_limit_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/qos/alias-bandwidth-limit-rules
        API
      schema:
        type: string
        enum:
          - ingress
          - egress
    alias_bandwidth_limit_rules_max_burst_kbps:
      in: query
      name: max_burst_kbps
      description: max_burst_kbps query parameter for /v2.0/qos/alias-bandwidth-limit-rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    alias_bandwidth_limit_rules_alias_bandwidth_limit_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} API
      schema:
        type: string
      required: true
    alias_dscp_marking_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/alias-dscp-marking-rules API
      schema:
        type: string
        format: uuid
    alias_dscp_marking_rules_dscp_mark:
      in: query
      name: dscp_mark
      description: dscp_mark query parameter for /v2.0/qos/alias-dscp-marking-rules
        API
      schema:
        type:
          - string
          - integer
        enum:
          - 0
          - 8
          - 10
          - 12
          - 14
          - 16
          - 18
          - 20
          - 22
          - 24
          - 26
          - 28
          - 30
          - 32
          - 34
          - 36
          - 38
          - 40
          - 44
          - 46
          - 48
          - 56
    alias_dscp_marking_rules_alias_dscp_marking_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
      schema:
        type: string
      required: true
    alias_minimum_bandwidth_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/qos/alias-minimum-bandwidth-rules
        API
      schema:
        type: string
        format: uuid
    alias_minimum_bandwidth_rules_min_kbps:
      in: query
      name: min_kbps
      description: min_kbps query parameter for /v2.0/qos/alias-minimum-bandwidth-rules
        API
      schema:
        type:
          - string
          - integer
        minimum: 0
        maximum: 2147483647
    alias_minimum_bandwidth_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/qos/alias-minimum-bandwidth-rules
        API
      schema:
        type: string
        enum:
          - ingress
          - egress
    alias_minimum_bandwidth_rules_alias_minimum_bandwidth_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id} API
      schema:
        type: string
      required: true
    quotas_default_id:
      in: path
      name: id
      description: id parameter for /v2.0/quotas/{id}/default API
      schema:
        type: string
      required: true
    quotas_id:
      in: path
      name: id
      description: id parameter for /v2.0/quotas/{id} API
      schema:
        type: string
      required: true
    quotas_details_id:
      in: path
      name: id
      description: id parameter for /v2.0/quotas/{id}/details API
      schema:
        type: string
      required: true
    rbac_policies_id:
      in: query
      name: id
      description: id query parameter for /v2.0/rbac-policies API
      schema:
        type: string
        format: uuid
    rbac_policies_object_type:
      in: query
      name: object_type
      description: object_type query parameter for /v2.0/rbac-policies API
      schema:
        type: string
    rbac_policies_object_id:
      in: query
      name: object_id
      description: object_id query parameter for /v2.0/rbac-policies API
      schema:
        type: string
        format: uuid
    rbac_policies_target_tenant:
      in: query
      name: target_tenant
      description: target_tenant query parameter for /v2.0/rbac-policies API
      schema:
        type: string
        maxLength: 255
    rbac_policies_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/rbac-policies API
      schema:
        type: string
        maxLength: 255
    rbac_policies_action:
      in: query
      name: action
      description: action query parameter for /v2.0/rbac-policies API
      schema:
        type: string
        maxLength: 255
    rbac_policies_rbac_policy_id:
      in: path
      name: id
      description: id parameter for /v2.0/rbac-policies/{id} API
      schema:
        type: string
      required: true
    default_security_group_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/default-security-group-rules API
      schema:
        type: string
        format: uuid
    default_security_group_rules_description:
      in: query
      name: description
      description: description query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type: string
        maxLength: 1024
    default_security_group_rules_remote_group_id:
      in: query
      name: remote_group_id
      description: |-
        Filter the security group rule list result by the ID of the remote group
        that associates with this security group rule. This field can contains uuid
        of the security group or special word `PARENT` which means that in the
        real rule created from this template, uuid of the owner Security Group will
        be put as `remote_group_id`.
      schema:
        type: string
    default_security_group_rules_remote_address_group_id:
      in: query
      name: remote_address_group_id
      description: remote_address_group_id query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type: string
    default_security_group_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type: string
        enum:
          - ingress
          - egress
    default_security_group_rules_protocol:
      in: query
      name: protocol
      description: protocol query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type: string
    default_security_group_rules_port_range_min:
      in: query
      name: port_range_min
      description: port_range_min query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type:
          - integer
          - 'null'
    default_security_group_rules_port_range_max:
      in: query
      name: port_range_max
      description: port_range_max query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type:
          - integer
          - 'null'
    default_security_group_rules_ethertype:
      in: query
      name: ethertype
      description: ethertype query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type: string
        enum:
          - IPv4
          - IPv6
    default_security_group_rules_remote_ip_prefix:
      in: query
      name: remote_ip_prefix
      description: remote_ip_prefix query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type: string
    default_security_group_rules_used_in_default_sg:
      in: query
      name: used_in_default_sg
      description: used_in_default_sg query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type:
          - string
          - boolean
    default_security_group_rules_used_in_non_default_sg:
      in: query
      name: used_in_non_default_sg
      description: used_in_non_default_sg query parameter for /v2.0/default-security-group-rules
        API
      schema:
        type:
          - string
          - boolean
    default_security_group_rules_default_security_group_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/default-security-group-rules/{id} API
      schema:
        type: string
      required: true
    security_groups_id:
      in: query
      name: id
      description: id query parameter for /v2.0/security-groups API
      schema:
        type: string
        format: uuid
    security_groups_name:
      in: query
      name: name
      description: name query parameter for /v2.0/security-groups API
      schema:
        type: string
        maxLength: 255
    security_groups_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/security-groups API
      schema:
        type: string
        maxLength: 255
    security_groups_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/security-groups API
      schema:
        type: string
    security_groups_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/security-groups API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    security_groups_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/security-groups API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    security_groups_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/security-groups API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    security_groups_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/security-groups API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    security_groups_description:
      in: query
      name: description
      description: description query parameter for /v2.0/security-groups API
      schema:
        type: string
        maxLength: 255
    security_groups_shared:
      in: query
      name: shared
      description: shared query parameter for /v2.0/security-groups API
      schema:
        type:
          - string
          - boolean
    security_groups_security_group_id:
      in: path
      name: id
      description: id parameter for /v2.0/security-groups/{id} API
      schema:
        type: string
      required: true
    security_group_rules_id:
      in: query
      name: id
      description: id query parameter for /v2.0/security-group-rules API
      schema:
        type: string
        format: uuid
    security_group_rules_security_group_id:
      in: query
      name: security_group_id
      description: security_group_id query parameter for /v2.0/security-group-rules
        API
      schema:
        type: string
        maxLength: 36
    security_group_rules_remote_group_id:
      in: query
      name: remote_group_id
      description: remote_group_id query parameter for /v2.0/security-group-rules
        API
      schema:
        type: string
    security_group_rules_direction:
      in: query
      name: direction
      description: direction query parameter for /v2.0/security-group-rules API
      schema:
        type: string
        enum:
          - ingress
          - egress
    security_group_rules_protocol:
      in: query
      name: protocol
      description: protocol query parameter for /v2.0/security-group-rules API
      schema:
        type: string
    security_group_rules_port_range_min:
      in: query
      name: port_range_min
      description: port_range_min query parameter for /v2.0/security-group-rules API
      schema:
        type:
          - integer
          - 'null'
    security_group_rules_port_range_max:
      in: query
      name: port_range_max
      description: port_range_max query parameter for /v2.0/security-group-rules API
      schema:
        type:
          - integer
          - 'null'
    security_group_rules_ethertype:
      in: query
      name: ethertype
      description: ethertype query parameter for /v2.0/security-group-rules API
      schema:
        type: string
        enum:
          - IPv4
          - IPv6
    security_group_rules_remote_ip_prefix:
      in: query
      name: remote_ip_prefix
      description: remote_ip_prefix query parameter for /v2.0/security-group-rules
        API
      schema:
        type: string
    security_group_rules_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/security-group-rules API
      schema:
        type: string
        maxLength: 255
    security_group_rules_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/security-group-rules
        API
      schema:
        type: string
    security_group_rules_description:
      in: query
      name: description
      description: description query parameter for /v2.0/security-group-rules API
      schema:
        type: string
        maxLength: 255
    security_group_rules_normalized_cidr:
      in: query
      name: normalized_cidr
      description: normalized_cidr query parameter for /v2.0/security-group-rules
        API
      schema:
        type:
          - string
          - 'null'
    security_group_rules_remote_address_group_id:
      in: query
      name: remote_address_group_id
      description: remote_address_group_id query parameter for /v2.0/security-group-rules
        API
      schema:
        type: string
    security_group_rules_belongs_to_default_sg:
      in: query
      name: belongs_to_default_sg
      description: belongs_to_default_sg query parameter for /v2.0/security-group-rules
        API
      schema:
        type:
          - string
          - boolean
          - 'null'
    security_group_rules_security_group_rule_id:
      in: path
      name: id
      description: id parameter for /v2.0/security-group-rules/{id} API
      schema:
        type: string
      required: true
    segments_id:
      in: query
      name: id
      description: id query parameter for /v2.0/segments API
      schema:
        type: string
        format: uuid
    segments_network_id:
      in: query
      name: network_id
      description: network_id query parameter for /v2.0/segments API
      schema:
        type: string
        format: uuid
    segments_physical_network:
      in: query
      name: physical_network
      description: physical_network query parameter for /v2.0/segments API
      schema:
        type: string
        maxLength: 64
    segments_network_type:
      in: query
      name: network_type
      description: network_type query parameter for /v2.0/segments API
      schema:
        type: string
        maxLength: 32
    segments_name:
      in: query
      name: name
      description: name query parameter for /v2.0/segments API
      schema:
        type:
          - string
          - 'null'
        maxLength: 255
    segments_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/segments API
      schema:
        type: string
    segments_description:
      in: query
      name: description
      description: description query parameter for /v2.0/segments API
      schema:
        type: string
        maxLength: 255
    segments_segment_id:
      in: path
      name: id
      description: id parameter for /v2.0/segments/{id} API
      schema:
        type: string
      required: true
    service_providers_service_provider_id:
      in: path
      name: id
      description: id parameter for /v2.0/service-providers/{id} API
      schema:
        type: string
      required: true
    subnetpools_id:
      in: query
      name: id
      description: id query parameter for /v2.0/subnetpools API
      schema:
        type: string
        format: uuid
    subnetpools_name:
      in: query
      name: name
      description: name query parameter for /v2.0/subnetpools API
      schema:
        type: string
    subnetpools_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/subnetpools API
      schema:
        type: string
        maxLength: 255
    subnetpools_default_quota:
      in: query
      name: default_quota
      description: default_quota query parameter for /v2.0/subnetpools API
      schema:
        type:
          - string
          - integer
        minimum: 0
    subnetpools_ip_version:
      in: query
      name: ip_version
      description: ip_version query parameter for /v2.0/subnetpools API
      schema:
        type: string
    subnetpools_default_prefixlen:
      in: query
      name: default_prefixlen
      description: default_prefixlen query parameter for /v2.0/subnetpools API
      schema:
        type:
          - string
          - integer
        minimum: 0
    subnetpools_min_prefixlen:
      in: query
      name: min_prefixlen
      description: min_prefixlen query parameter for /v2.0/subnetpools API
      schema:
        type:
          - string
          - integer
        minimum: 0
    subnetpools_max_prefixlen:
      in: query
      name: max_prefixlen
      description: max_prefixlen query parameter for /v2.0/subnetpools API
      schema:
        type:
          - string
          - integer
        minimum: 0
    subnetpools_is_default:
      in: query
      name: is_default
      description: is_default query parameter for /v2.0/subnetpools API
      schema:
        type:
          - string
          - boolean
    subnetpools_shared:
      in: query
      name: shared
      description: shared query parameter for /v2.0/subnetpools API
      schema:
        type:
          - string
          - boolean
    subnetpools_address_scope_id:
      in: query
      name: address_scope_id
      description: address_scope_id query parameter for /v2.0/subnetpools API
      schema:
        type:
          - string
          - 'null'
        format: uuid
    subnetpools_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/subnetpools API
      schema:
        type: string
    subnetpools_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/subnetpools API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnetpools_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/subnetpools API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnetpools_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/subnetpools API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnetpools_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/subnetpools API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnetpools_description:
      in: query
      name: description
      description: description query parameter for /v2.0/subnetpools API
      schema:
        type: string
        maxLength: 255
    subnetpools_subnetpool_id:
      in: path
      name: id
      description: id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
      schema:
        type: string
      required: true
    ports_tags_port_id:
      in: path
      name: port_id
      description: port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
      schema:
        type: string
      required: true
    ports_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/ports/{port_id}/tags/{id} API
      schema:
        type: string
      required: true
    subnets_tags_subnet_id:
      in: path
      name: subnet_id
      description: subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
      schema:
        type: string
      required: true
    subnets_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
      schema:
        type: string
      required: true
    subnetpools_tags_subnetpool_id:
      in: path
      name: subnetpool_id
      description: subnetpool_id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id}
        API
      schema:
        type: string
      required: true
    subnetpools_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
      schema:
        type: string
      required: true
    networks_tags_network_id:
      in: path
      name: network_id
      description: network_id parameter for /v2.0/networks/{network_id}/tags/{id}
        API
      schema:
        type: string
      required: true
    networks_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/networks/{network_id}/tags/{id} API
      schema:
        type: string
      required: true
    routers_tags_router_id:
      in: path
      name: router_id
      description: router_id parameter for /v2.0/routers/{router_id}/tags/{id} API
      schema:
        type: string
      required: true
    routers_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/routers/{router_id}/tags/{id} API
      schema:
        type: string
      required: true
    floatingips_tags_floatingip_id:
      in: path
      name: floatingip_id
      description: floatingip_id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id}
        API
      schema:
        type: string
      required: true
    floatingips_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} API
      schema:
        type: string
      required: true
    policies_tags_policy_id:
      in: path
      name: policy_id
      description: policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} API
      schema:
        type: string
      required: true
    policies_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/policies/{policy_id}/tags/{id} API
      schema:
        type: string
      required: true
    security-groups_tags_security_group_id:
      in: path
      name: security_group_id
      description: security_group_id parameter for /v2.0/security-groups/{security_group_id}/tags/{id}
        API
      schema:
        type: string
      required: true
    security-groups_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/security-groups/{security_group_id}/tags/{id}
        API
      schema:
        type: string
      required: true
    trunks_tags_trunk_id:
      in: path
      name: trunk_id
      description: trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
      schema:
        type: string
      required: true
    trunks_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
      schema:
        type: string
      required: true
    network_segment_ranges_tags_network_segment_range_id:
      in: path
      name: network_segment_range_id
      description: network_segment_range_id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id}
        API
      schema:
        type: string
      required: true
    network_segment_ranges_tags_id:
      in: path
      name: id
      description: id parameter for /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id}
        API
      schema:
        type: string
      required: true
    networks_id:
      in: query
      name: id
      description: id query parameter for /v2.0/networks API
      schema:
        type: string
        format: uuid
    networks_name:
      in: query
      name: name
      description: name query parameter for /v2.0/networks API
      schema:
        type: string
        maxLength: 255
    networks_admin_state_up:
      in: query
      name: admin_state_up
      description: admin_state_up query parameter for /v2.0/networks API
      schema:
        type:
          - string
          - boolean
    networks_status:
      in: query
      name: status
      description: status query parameter for /v2.0/networks API
      schema:
        type: string
    networks_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/networks API
      schema:
        type: string
        maxLength: 255
    networks_shared:
      in: query
      name: shared
      description: shared query parameter for /v2.0/networks API
      schema:
        type:
          - string
          - boolean
    networks_router_external:
      in: query
      name: router:external
      description: router:external query parameter for /v2.0/networks API
      schema:
        type:
          - string
          - boolean
    networks_mtu:
      in: query
      name: mtu
      description: mtu query parameter for /v2.0/networks API
      schema:
        type:
          - string
          - integer
        minimum: 0
    networks_provider_network_type:
      in: query
      name: provider:network_type
      description: provider:network_type query parameter for /v2.0/networks API
      schema:
        type: string
        maxLength: 32
    networks_provider_physical_network:
      in: query
      name: provider:physical_network
      description: provider:physical_network query parameter for /v2.0/networks API
      schema:
        type: string
        maxLength: 64
    networks_provider_segmentation_id:
      in: query
      name: provider:segmentation_id
      description: provider:segmentation_id query parameter for /v2.0/networks API
      schema:
        type:
          - string
          - integer
    networks_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/networks API
      schema:
        type: string
    networks_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/networks API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    networks_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/networks API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    networks_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/networks API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    networks_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/networks API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    networks_is_default:
      in: query
      name: is_default
      description: is_default query parameter for /v2.0/networks API
      schema:
        type:
          - string
          - boolean
    networks_description:
      in: query
      name: description
      description: description query parameter for /v2.0/networks API
      schema:
        type: string
        maxLength: 255
    subnets_id:
      in: query
      name: id
      description: id query parameter for /v2.0/subnets API
      schema:
        type: string
        format: uuid
    subnets_name:
      in: query
      name: name
      description: name query parameter for /v2.0/subnets API
      schema:
        type: string
        maxLength: 255
    subnets_ip_version:
      in: query
      name: ip_version
      description: ip_version query parameter for /v2.0/subnets API
      schema:
        type:
          - string
          - integer
        enum:
          - 4
          - 6
    subnets_network_id:
      in: query
      name: network_id
      description: network_id query parameter for /v2.0/subnets API
      schema:
        type: string
        format: uuid
    subnets_subnetpool_id:
      in: query
      name: subnetpool_id
      description: subnetpool_id query parameter for /v2.0/subnets API
      schema:
        type:
          - string
          - 'null'
    subnets_cidr:
      in: query
      name: cidr
      description: cidr query parameter for /v2.0/subnets API
      schema:
        type:
          - string
          - 'null'
    subnets_gateway_ip:
      in: query
      name: gateway_ip
      description: gateway_ip query parameter for /v2.0/subnets API
      schema:
        type: string
    subnets_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/subnets API
      schema:
        type: string
        maxLength: 255
    subnets_enable_dhcp:
      in: query
      name: enable_dhcp
      description: enable_dhcp query parameter for /v2.0/subnets API
      schema:
        type:
          - string
          - boolean
    subnets_ipv6_ra_mode:
      in: query
      name: ipv6_ra_mode
      description: ipv6_ra_mode query parameter for /v2.0/subnets API
      schema:
        type: string
        enum:
          - dhcpv6-stateful
          - dhcpv6-stateless
          - slaac
    subnets_ipv6_address_mode:
      in: query
      name: ipv6_address_mode
      description: ipv6_address_mode query parameter for /v2.0/subnets API
      schema:
        type: string
        enum:
          - dhcpv6-stateful
          - dhcpv6-stateless
          - slaac
    subnets_shared:
      in: query
      name: shared
      description: shared query parameter for /v2.0/subnets API
      schema:
        type:
          - string
          - boolean
    subnets_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/subnets API
      schema:
        type: string
    subnets_router_external:
      in: query
      name: router:external
      description: |-
        The membership of a subnet to an external network.
      schema:
        type:
          - string
          - boolean
    subnets_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/subnets API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnets_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/subnets API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnets_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/subnets API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnets_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/subnets API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    subnets_description:
      in: query
      name: description
      description: description query parameter for /v2.0/subnets API
      schema:
        type: string
        maxLength: 255
    subnets_segment_id:
      in: query
      name: segment_id
      description: segment_id query parameter for /v2.0/subnets API
      schema:
        type:
          - string
          - 'null'
        format: uuid
    ports_id:
      in: query
      name: id
      description: id query parameter for /v2.0/ports API
      schema:
        type: string
        format: uuid
    ports_name:
      in: query
      name: name
      description: name query parameter for /v2.0/ports API
      schema:
        type: string
        maxLength: 255
    ports_network_id:
      in: query
      name: network_id
      description: network_id query parameter for /v2.0/ports API
      schema:
        type: string
        format: uuid
    ports_admin_state_up:
      in: query
      name: admin_state_up
      description: admin_state_up query parameter for /v2.0/ports API
      schema:
        type:
          - string
          - boolean
    ports_mac_address:
      in: query
      name: mac_address
      description: mac_address query parameter for /v2.0/ports API
      schema:
        type: string
    ports_fixed_ips:
      in: query
      name: fixed_ips
      description: fixed_ips query parameter for /v2.0/ports API
      schema:
        type: array
        description: The IP addresses for the port. If the port has multiple IP addresses,
          this field has multiple entries. Each entry consists of IP address (ip_address)
          and the subnet ID from which the IP address is assigned (subnet_id).
        items:
          type: string
      style: form
      explode: false
    ports_device_id:
      in: query
      name: device_id
      description: device_id query parameter for /v2.0/ports API
      schema:
        type: string
        maxLength: 255
    ports_device_owner:
      in: query
      name: device_owner
      description: device_owner query parameter for /v2.0/ports API
      schema:
        type: string
        maxLength: 255
    ports_tenant_id:
      in: query
      name: tenant_id
      description: tenant_id query parameter for /v2.0/ports API
      schema:
        type: string
        maxLength: 255
    ports_status:
      in: query
      name: status
      description: status query parameter for /v2.0/ports API
      schema:
        type: string
    ports_ip_allocation:
      in: query
      name: ip_allocation
      description: ip_allocation query parameter for /v2.0/ports API
      schema:
        type: string
    ports_binding_host_id:
      in: query
      name: binding:host_id
      description: binding:host_id query parameter for /v2.0/ports API
      schema:
        type: string
    ports_revision_number:
      in: query
      name: revision_number
      description: revision_number query parameter for /v2.0/ports API
      schema:
        type: string
    ports_tags:
      in: query
      name: tags
      description: tags query parameter for /v2.0/ports API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    ports_tags-any:
      in: query
      name: tags-any
      description: tags-any query parameter for /v2.0/ports API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    ports_not-tags:
      in: query
      name: not-tags
      description: not-tags query parameter for /v2.0/ports API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    ports_not-tags-any:
      in: query
      name: not-tags-any
      description: not-tags-any query parameter for /v2.0/ports API
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    ports_description:
      in: query
      name: description
      description: description query parameter for /v2.0/ports API
      schema:
        type: string
        maxLength: 255
    ports_security_groups:
      in: query
      name: security_groups
      description: security_groups query parameter for /v2.0/ports API
      schema:
        type: array
        items:
          type: string
          format: uuid
    networks_network_network_id:
      in: path
      name: network_id
      description: network_id parameter for /v2.0/networks/{network_id} API
      schema:
        type: string
      required: true
    subnets_subnet_subnet_id:
      in: path
      name: subnet_id
      description: subnet_id parameter for /v2.0/subnets/{subnet_id} API
      schema:
        type: string
      required: true
    ports_port_port_id:
      in: path
      name: port_id
      description: port_id parameter for /v2.0/ports/{port_id}/add_allowed_address_pairs
        API
      schema:
        type: string
      required: true
    ikepolicies_ikepolicy_id:
      in: path
      name: id
      description: id parameter for /v2.0/vpn/ikepolicies/{id} API
      schema:
        type: string
      required: true
    ipsecpolicies_ipsecpolicy_id:
      in: path
      name: id
      description: id parameter for /v2.0/vpn/ipsecpolicies/{id} API
      schema:
        type: string
      required: true
    endpoint_groups_endpoint_group_id:
      in: path
      name: id
      description: id parameter for /v2.0/vpn/endpoint-groups/{id} API
      schema:
        type: string
      required: true
    vpnservices_vpnservice_id:
      in: path
      name: id
      description: id parameter for /v2.0/vpn/vpnservices/{id} API
      schema:
        type: string
      required: true
    ipsec_site_connections_ipsec_site_connection_id:
      in: path
      name: id
      description: id parameter for /v2.0/vpn/ipsec-site-connections/{id} API
      schema:
        type: string
      required: true
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
tags:
  - name: extensions
  - name: address-groups
  - name: address-scopes
  - name: networking-agents
    description: |-
      Lists, shows details for, updates, and deletes agents.
  - name: auto-allocated-topology
  - name: availability_zones
  - name: dhcp-agent-scheduler
  - name: networks
  - name: routers
  - name: flavors
  - name: service_profiles
  - name: floatingips
  - name: floatingips-port-forwardings
  - name: floatingip-pools
  - name: routers-conntrack-helper
  - name: ndp-proxies
  - name: l3-agent-scheduler
  - name: local-ips
  - name: local_ips
  - name: log
  - name: metering
  - name: network-ip-availabilities
  - name: network-segment-ranges
  - name: port-bindings
  - name: qos
  - name: policies
  - name: quotas
  - name: rbac-policies
  - name: default-security-group-rules
  - name: security-groups
  - name: security-group-rules
  - name: segments
  - name: service-providers
  - name: subnetpools
  - name: ports
  - name: subnets
  - name: trunks
  - name: network_segment_ranges
  - name: vpn
security:
  - ApiKeyAuth: []
