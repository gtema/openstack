openapi: 3.1.0
info:
  description: |-
    None
  title: OpenStack Network API
  version: '2.27'
paths:
  /v2.0/address-groups:
    get:
      description: |-
        Lists address groups that the project has access to.

        Default policy settings return only the address groups owned by
        the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: address-groups:get
      parameters:
        - $ref: '#/components/parameters/address_groups_description'
        - $ref: '#/components/parameters/address_groups_id'
        - $ref: '#/components/parameters/address_groups_name'
        - $ref: '#/components/parameters/address_groups_project_id'
        - $ref: '#/components/parameters/address_groups_revision_number'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupsIndexResponse'
          description: Ok
      summary: List address groups
      tags:
        - address-groups
    post:
      description: |-
        Creates an address group.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: address-groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupsCreateResponse'
          description: Ok
      summary: Create address group
      tags:
        - address-groups
  /v2.0/address-groups/{id}:
    delete:
      description: |-
        Deletes an address group.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: address-groups/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete an address group
      tags:
        - address-groups
    get:
      description: |-
        Shows information for an address group.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: address-groups/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupShowResponse'
          description: Ok
      summary: Show address group
      tags:
        - address-groups
    parameters:
      - $ref: '#/components/parameters/address_groups_address_group_id'
    put:
      description: |-
        Updates an address group.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: address-groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupUpdateResponse'
          description: Ok
      summary: Update an address group
      tags:
        - address-groups
  /v2.0/address-groups/{id}/add_addresses:
    parameters:
      - $ref: '#/components/parameters/address_groups_address_group_id'
    put:
      operationId: address-groups/id/add_addresses:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupsAdd_AddressesAdd_AddressesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupShowResponse'
          description: Ok
      tags:
        - address-groups
  /v2.0/address-groups/{id}/remove_addresses:
    parameters:
      - $ref: '#/components/parameters/address_groups_address_group_id'
    put:
      operationId: address-groups/id/remove_addresses:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_GroupsRemove_AddressesRemove_AddressesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_GroupShowResponse'
          description: Ok
      tags:
        - address-groups
  /v2.0/address-scopes:
    get:
      description: |-
        Lists address scopes that the project has access to.

        Default policy settings return only the address scopes owned by
        the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: address-scopes:get
      parameters:
        - $ref: '#/components/parameters/address_scopes_id'
        - $ref: '#/components/parameters/address_scopes_ip_version'
        - $ref: '#/components/parameters/address_scopes_name'
        - $ref: '#/components/parameters/address_scopes_shared'
        - $ref: '#/components/parameters/address_scopes_tenant_id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopesIndexResponse'
          description: Ok
      summary: List address scopes
      tags:
        - address-scopes
    post:
      description: |-
        Creates an address scope.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: address-scopes:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_ScopesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopesCreateResponse'
          description: Ok
      summary: Create address scope
      tags:
        - address-scopes
  /v2.0/address-scopes/{id}:
    delete:
      description: |-
        Deletes an address scope.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: address-scopes/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete an address scope
      tags:
        - address-scopes
    get:
      description: |-
        Shows information for an address scope.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: address-scopes/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopeShowResponse'
          description: Ok
      summary: Show address scope
      tags:
        - address-scopes
    parameters:
      - $ref: '#/components/parameters/address_scopes_address_scope_id'
    put:
      description: |-
        Updates an address scope.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: address-scopes/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address_ScopeUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address_ScopeUpdateResponse'
          description: Ok
      summary: Update an address scope
      tags:
        - address-scopes
  /v2.0/agents:
    get:
      description: |-
        Lists all agents.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: agents:get
      parameters:
        - $ref: '#/components/parameters/agents_admin_state_up'
        - $ref: '#/components/parameters/agents_agent_type'
        - $ref: '#/components/parameters/agents_alive'
        - $ref: '#/components/parameters/agents_availability_zone'
        - $ref: '#/components/parameters/agents_binary'
        - $ref: '#/components/parameters/agents_description'
        - $ref: '#/components/parameters/agents_host'
        - $ref: '#/components/parameters/agents_id'
        - $ref: '#/components/parameters/agents_topic'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsIndexResponse'
          description: Ok
      summary: List all agents
      tags:
        - networking-agents
    post:
      operationId: agents:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsCreateResponse'
          description: Ok
      tags:
        - networking-agents
  /v2.0/agents/{agent_id}/dhcp-networks:
    get:
      description: |-
        Lists networks that a DHCP agent hosts.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: agents/agent_id/dhcp-networks:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworksIndexResponse'
          description: Ok
      summary: List networks hosted by a DHCP agent
      tags:
        - dhcp-agent-scheduler
    parameters:
      - $ref: '#/components/parameters/agents_dhcp-networks_agent_id'
    post:
      description: |-
        Add a network to a DHCP agent

        Normal response codes: 201

        Error response codes: 400, 403, 409, 404
      operationId: agents/agent_id/dhcp-networks:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsDhcp_NetworksCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworksCreateResponse'
          description: Ok
      summary: Schedule a network to a DHCP agent
      tags:
        - dhcp-agent-scheduler
  /v2.0/agents/{agent_id}/dhcp-networks/{id}:
    delete:
      description: |-
        Removes a network from a dhcp agent.

        Normal response codes: 204

        Error response codes: 401, 403, 404, 409
      operationId: agents/agent_id/dhcp-networks/id:delete
      responses:
        '204':
          description: Ok
      summary: Remove network from a DHCP agent
      tags:
        - dhcp-agent-scheduler
    get:
      operationId: agents/agent_id/dhcp-networks/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworkShowResponse'
          description: Ok
      tags:
        - dhcp-agent-scheduler
    parameters:
      - $ref: '#/components/parameters/agents_dhcp-networks_agent_id'
      - $ref: '#/components/parameters/agents_dhcp-networks_id'
    put:
      operationId: agents/agent_id/dhcp-networks/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsDhcp_NetworkUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsDhcp_NetworkUpdateResponse'
          description: Ok
      tags:
        - dhcp-agent-scheduler
  /v2.0/agents/{agent_id}/l3-routers:
    get:
      description: |-
        Lists routers that an l3 agent hosts.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: agents/agent_id/l3-routers:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsL3_RoutersIndexResponse'
          description: Ok
      summary: List routers hosted by an L3 agent
      tags:
        - l3-agent-scheduler
    parameters:
      - $ref: '#/components/parameters/agents_l3-routers_agent_id'
    post:
      description: |-
        Add a router to an l3 agent.

        Normal response codes: 201

        Error response codes: 400, 401, 404
      operationId: agents/agent_id/l3-routers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsL3_RoutersCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsL3_RoutersCreateResponse'
          description: Ok
      summary: Schedule router to an l3 agent
      tags:
        - l3-agent-scheduler
  /v2.0/agents/{agent_id}/l3-routers/{id}:
    delete:
      description: |-
        Removes a router from an l3 agent.

        Normal response codes: 204

        Error response codes: 401, 404
      operationId: agents/agent_id/l3-routers/id:delete
      responses:
        '204':
          description: Ok
      summary: Remove l3 router from an l3 agent
      tags:
        - l3-agent-scheduler
    get:
      operationId: agents/agent_id/l3-routers/id:get
      responses:
        '200':
          description: Ok
      tags:
        - l3-agent-scheduler
    parameters:
      - $ref: '#/components/parameters/agents_l3-routers_agent_id'
      - $ref: '#/components/parameters/agents_l3-routers_id'
    put:
      operationId: agents/agent_id/l3-routers/id:put
      responses:
        '200':
          description: Ok
      tags:
        - l3-agent-scheduler
  /v2.0/agents/{id}:
    delete:
      description: |-
        Agents that won’t be used anymore can be removed. Before deleting agents via
        API, the agent should be stopped/disabled.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: agents/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete agent
      tags:
        - networking-agents
    get:
      description: |-
        Shows details for an agent.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: agents/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentShowResponse'
          description: Ok
      summary: Show agent details
      tags:
        - networking-agents
    parameters:
      - $ref: '#/components/parameters/agents_agent_id'
    put:
      description: |-
        Updates an agent.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: agents/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentUpdateResponse'
          description: Ok
      summary: Update agent
      tags:
        - networking-agents
  /v2.0/auto-allocated-topology:
    get:
      operationId: auto-allocated-topology:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyIndexResponse'
          description: Ok
      tags:
        - auto-allocated-topology
    post:
      operationId: auto-allocated-topology:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auto_Allocated_TopologyCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyCreateResponse'
          description: Ok
      tags:
        - auto-allocated-topology
  /v2.0/auto-allocated-topology/{id}:
    delete:
      description: |-
        Deletes the auto allocated topology.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: auto-allocated-topology/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete the auto allocated topology
      tags:
        - auto-allocated-topology
    get:
      description: |-
        Shows details for an auto allocated topology.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: auto-allocated-topology/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyShowResponse'
          description: Ok
      summary: Show auto allocated topology details
      tags:
        - auto-allocated-topology
    parameters:
      - $ref: '#/components/parameters/auto_allocated_topologies_auto_allocated_topology_id'
    put:
      operationId: auto-allocated-topology/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auto_Allocated_TopologyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto_Allocated_TopologyUpdateResponse'
          description: Ok
      tags:
        - auto-allocated-topology
  /v2.0/availability_zones:
    get:
      description: |-
        Lists all availability zones.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: availability_zones:get
      parameters:
        - $ref: '#/components/parameters/availability_zones_name'
        - $ref: '#/components/parameters/availability_zones_resource'
        - $ref: '#/components/parameters/availability_zones_state'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Availability_ZonesIndexResponse'
          description: Ok
      summary: List all availability zones
      tags:
        - availability_zones
  /v2.0/default-security-group-rules:
    get:
      description: |-
        Lists a summary of all OpenStack Networking security group rules that are used
        for every newly created Security Group.

        The list provides the ID for each security group default rule.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: default-security-group-rules:get
      parameters:
        - $ref: '#/components/parameters/default_security_group_rules_description'
        - $ref: '#/components/parameters/default_security_group_rules_direction'
        - $ref: '#/components/parameters/default_security_group_rules_ethertype'
        - $ref: '#/components/parameters/default_security_group_rules_id'
        - $ref: '#/components/parameters/default_security_group_rules_port_range_max'
        - $ref: '#/components/parameters/default_security_group_rules_port_range_min'
        - $ref: '#/components/parameters/default_security_group_rules_protocol'
        - $ref: '#/components/parameters/default_security_group_rules_remote_address_group_id'
        - $ref: '#/components/parameters/default_security_group_rules_remote_group_id'
        - $ref: '#/components/parameters/default_security_group_rules_remote_ip_prefix'
        - $ref: '#/components/parameters/default_security_group_rules_used_in_default_sg'
        - $ref: '#/components/parameters/default_security_group_rules_used_in_non_default_sg'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RulesIndexResponse'
          description: Ok
      summary: List security group default rules
      tags:
        - default-security-group-rules
    post:
      description: |-
        Creates an Openstack Networking security group rule template.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: default-security-group-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default_Security_Group_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RulesCreateResponse'
          description: Ok
      summary: Create security group default rule
      tags:
        - default-security-group-rules
  /v2.0/default-security-group-rules/{id}:
    delete:
      description: |-
        Deletes an OpenStack Networking security group rule template.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: default-security-group-rules/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete security group default rule
      tags:
        - default-security-group-rules
    get:
      description: |-
        Shows detailed information for a security group default rule.

        The response body contains the following information about the
        security group rule:

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: default-security-group-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RuleShowResponse'
          description: Ok
      summary: Show security group default rule
      tags:
        - default-security-group-rules
    parameters:
      - $ref: '#/components/parameters/default_security_group_rules_default_security_group_rule_id'
    put:
      operationId: default-security-group-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Default_Security_Group_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Default_Security_Group_RuleUpdateResponse'
          description: Ok
      tags:
        - default-security-group-rules
  /v2.0/extensions:
    get:
      description: |-
        Lists available extensions.

        Lists available Networking API v2.0 extensions.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: extensions:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionsIndexResponse'
          description: Ok
      summary: List extensions
      tags:
        - extensions
  /v2.0/extensions/{id}:
    get:
      description: |-
        Shows details for an extension, by alias.
        The response shows the extension name and its alias. To show
        details for an extension, you specify the alias.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: extensions/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionShowResponse'
          description: Ok
      summary: Show extension details
      tags:
        - extensions
    parameters:
      - $ref: '#/components/parameters/extensions_id'
  /v2.0/flavors:
    get:
      description: |-
        Lists all flavors visible to the project.

        The list can be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: flavors:get
      parameters:
        - $ref: '#/components/parameters/flavors_description'
        - $ref: '#/components/parameters/flavors_enabled'
        - $ref: '#/components/parameters/flavors_id'
        - $ref: '#/components/parameters/flavors_name'
        - $ref: '#/components/parameters/flavors_service_type'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsIndexResponse'
          description: Ok
      summary: List flavors
      tags:
        - flavors
    post:
      description: |-
        Creates a flavor.

        This operation establishes a new flavor.

        The service_type to which the flavor applies is a required
        parameter. The corresponding service plugin must have been
        activated as part of the configuration.
        Check [Service providers](#list-service-providers) for how to see
        currently loaded service types. Additionally the service plugin
        needs to support the use of flavors.

        Creation currently limited to administrators. Other users will
        receive a `Forbidden 403` response code with a response body
        NeutronError message expressing that creation is disallowed by
        policy.

        Until one or more service profiles are associated with the flavor
        by the operator, attempts to use the flavor during resource
        creations will currently return a `Not Found 404` with a response
        body that indicates no service profile could be found.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: flavors:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsCreateResponse'
          description: Ok
      summary: Create flavor
      tags:
        - flavors
  /v2.0/flavors/{flavor_id}/next_providers:
    get:
      operationId: flavors/flavor_id/next_providers:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProvidersIndexResponse'
          description: Ok
      tags:
        - flavors
    parameters:
      - $ref: '#/components/parameters/next_providers_next_provider_flavor_id'
    post:
      operationId: flavors/flavor_id/next_providers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsNext_ProvidersCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProvidersCreateResponse'
          description: Ok
      tags:
        - flavors
  /v2.0/flavors/{flavor_id}/next_providers/{id}:
    delete:
      operationId: flavors/flavor_id/next_providers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - flavors
    get:
      operationId: flavors/flavor_id/next_providers/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProviderShowResponse'
          description: Ok
      tags:
        - flavors
    parameters:
      - $ref: '#/components/parameters/next_providers_next_provider_flavor_id'
      - $ref: '#/components/parameters/next_providers_next_provider_id'
    put:
      operationId: flavors/flavor_id/next_providers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsNext_ProviderUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsNext_ProviderUpdateResponse'
          description: Ok
      tags:
        - flavors
  /v2.0/flavors/{flavor_id}/service_profiles:
    get:
      operationId: flavors/flavor_id/service_profiles:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfilesIndexResponse'
          description: Ok
      tags:
        - flavors
    parameters:
      - $ref: '#/components/parameters/service_profiles_service_profile_flavor_id'
    post:
      description: |-
        Associate a flavor with a service profile.

        A flavor can be associated with more than one profile.

        Will return `409 Conflict` if association already exists.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404, 409
      operationId: flavors/flavor_id/service_profiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsService_ProfilesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfilesCreateResponse'
          description: Ok
      summary: Associate flavor with a service profile
      tags:
        - flavors
  /v2.0/flavors/{flavor_id}/service_profiles/{id}:
    delete:
      description: |-
        Disassociate a flavor from a service profile.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: flavors/flavor_id/service_profiles/id:delete
      responses:
        '204':
          description: Ok
      summary: Disassociate a flavor.
      tags:
        - flavors
    get:
      operationId: flavors/flavor_id/service_profiles/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfileShowResponse'
          description: Ok
      tags:
        - flavors
    parameters:
      - $ref: '#/components/parameters/service_profiles_service_profile_flavor_id'
      - $ref: '#/components/parameters/service_profiles_service_profile_id'
    put:
      operationId: flavors/flavor_id/service_profiles/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorsService_ProfileUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorsService_ProfileUpdateResponse'
          description: Ok
      tags:
        - flavors
  /v2.0/flavors/{id}:
    delete:
      description: |-
        Deletes a flavor.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: flavors/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete flavor
      tags:
        - flavors
    get:
      description: |-
        Shows details for a flavor.

        This operation returns a flavor object by ID. If you are not an
        administrative user and the flavor object is not visible to your
        project account, the service returns the HTTP `Forbidden (403)`
        response code.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: flavors/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorShowResponse'
          description: Ok
      summary: Show flavor details
      tags:
        - flavors
    parameters:
      - $ref: '#/components/parameters/flavors_flavor_id'
    put:
      description: |-
        Updates a flavor.

        The service_type cannot be updated as there may be associated
        service profiles and consumers depending on the value.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: flavors/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlavorUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorUpdateResponse'
          description: Ok
      summary: Update flavor
      tags:
        - flavors
  /v2.0/floatingip-pools:
    get:
      operationId: floatingip-pools:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolsIndexResponse'
          description: Ok
      tags:
        - floatingip-pools
    post:
      operationId: floatingip-pools:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Floatingip_PoolsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolsCreateResponse'
          description: Ok
      tags:
        - floatingip-pools
  /v2.0/floatingip-pools/{id}:
    delete:
      operationId: floatingip-pools/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingip-pools
    get:
      operationId: floatingip-pools/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolShowResponse'
          description: Ok
      tags:
        - floatingip-pools
    parameters:
      - $ref: '#/components/parameters/floatingip_pools_floatingip_pool_id'
    put:
      operationId: floatingip-pools/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Floatingip_PoolUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floatingip_PoolUpdateResponse'
          description: Ok
      tags:
        - floatingip-pools
  /v2.0/floatingips:
    get:
      description: |-
        Lists floating IPs visible to the user.

        Default policy settings return only the floating IPs owned by the user’s
        project, unless the user has admin role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        This example request lists floating IPs in JSON format:

        Normal response codes: 200

        Error response codes: 401
      operationId: floatingips:get
      parameters:
        - $ref: '#/components/parameters/floatingips_description'
        - $ref: '#/components/parameters/floatingips_fixed_ip_address'
        - $ref: '#/components/parameters/floatingips_floating_ip_address'
        - $ref: '#/components/parameters/floatingips_floating_network_id'
        - $ref: '#/components/parameters/floatingips_id'
        - $ref: '#/components/parameters/floatingips_not-tags'
        - $ref: '#/components/parameters/floatingips_not-tags-any'
        - $ref: '#/components/parameters/floatingips_port_id'
        - $ref: '#/components/parameters/floatingips_revision_number'
        - $ref: '#/components/parameters/floatingips_router_id'
        - $ref: '#/components/parameters/floatingips_status'
        - $ref: '#/components/parameters/floatingips_tags'
        - $ref: '#/components/parameters/floatingips_tags-any'
        - $ref: '#/components/parameters/floatingips_tenant_id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsIndexResponse'
          description: Ok
      summary: List floating IPs
      tags:
        - floatingips
    post:
      description: |-
        Creates a floating IP, and, if you specify port information, associates the floating IP with an internal port.

        To associate the floating IP with an internal port, specify the
        port ID attribute in the request body. If you do not specify a
        port ID in the request, you can issue a PUT request instead of a
        POST request.

        Default policy settings enable only administrative users to set
        floating IP addresses and some non-administrative users might
        require a floating IP address. If you do not specify a floating IP
        address in the request, the operation automatically allocates one.

        By default, this operation associates the floating IP address with
        a single fixed IP address that is configured on an OpenStack
        Networking port. If a port has multiple IP addresses, you must
        specify the `fixed_ip_address` attribute in the request body to
        associate a fixed IP address with the floating IP address.

        You can create floating IPs on only external networks. When you
        create a floating IP, you must specify the ID of the network on
        which you want to create the floating IP. Alternatively, you can
        create a floating IP on a subnet in the external network, based on
        the costs and quality of that subnet.

        You must configure an IP address with the internal OpenStack
        Networking port that is associated with the floating IP address.

        The operation returns the `Bad Request (400)` response code for one of
        reasons:

        If the port ID is not valid, this operation returns `404` response code.

        The operation returns the `Conflict (409)` response code for one of
        reasons:

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: floatingips:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsCreateResponse'
          description: Ok
      summary: Create floating IP
      tags:
        - floatingips
  /v2.0/floatingips/{floatingip_id}/port_forwardings:
    get:
      description: |-
        Lists floating IP port forwardings that the project has access to.

        Default policy settings return only the port forwardings associated to floating
        IPs owned by the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/port_forwardings_description'
        - $ref: '#/components/parameters/port_forwardings_external_port'
        - $ref: '#/components/parameters/port_forwardings_external_port_range'
        - $ref: '#/components/parameters/port_forwardings_id'
        - $ref: '#/components/parameters/port_forwardings_internal_port_id'
        - $ref: '#/components/parameters/port_forwardings_protocol'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingsIndexResponse'
          description: Ok
      summary: List floating IP port forwardings
      tags:
        - floatingips
    parameters:
      - $ref: '#/components/parameters/port_forwardings_port_forwarding_floatingip_id'
    post:
      description: |-
        Creates a floating IP port forwarding.

        Normal response codes: 201

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsPort_ForwardingsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingsCreateResponse'
          description: Ok
      summary: Create port forwarding
      tags:
        - floatingips
  /v2.0/floatingips/{floatingip_id}/port_forwardings/{id}:
    delete:
      description: |-
        Deletes a floating IP port forwarding.

        Normal response codes: 204

        Error response codes: 404
      operationId: floatingips/floatingip_id/port_forwardings/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a floating IP port forwarding
      tags:
        - floatingips-port-forwardings
    get:
      description: |-
        Shows information for a floating IP port forwarding.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingShowResponse'
          description: Ok
      summary: Show port forwarding
      tags:
        - floatingips-port-forwardings
    parameters:
      - $ref: '#/components/parameters/port_forwardings_port_forwarding_floatingip_id'
      - $ref: '#/components/parameters/port_forwardings_port_forwarding_id'
    put:
      description: |-
        Updates a floating IP port forwarding.

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: floatingips/floatingip_id/port_forwardings/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsPort_ForwardingUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsPort_ForwardingUpdateResponse'
          description: Ok
      summary: Update a port forwarding
      tags:
        - floatingips-port-forwardings
  /v2.0/floatingips/{floatingip_id}/tags:
    delete:
      operationId: floatingips/floatingip_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingips
    get:
      operationId: floatingips/floatingip_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsTagsIndexResponse'
          description: Ok
      tags:
        - floatingips
    parameters:
      - $ref: '#/components/parameters/floatingips_tags_floatingip_id'
    put:
      operationId: floatingips/floatingip_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipsTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipsTagsUpdate_AllResponse'
          description: Ok
      tags:
        - floatingips
  /v2.0/floatingips/{floatingip_id}/tags/{id}:
    delete:
      operationId: floatingips/floatingip_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - floatingips
    get:
      operationId: floatingips/floatingip_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - floatingips
    parameters:
      - $ref: '#/components/parameters/floatingips_tags_floatingip_id'
      - $ref: '#/components/parameters/floatingips_tags_id'
    put:
      operationId: floatingips/floatingip_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - floatingips
  /v2.0/floatingips/{id}:
    delete:
      description: |-
        Deletes a floating IP and, if present, its associated port.

        This example deletes a floating IP:

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: floatingips/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete floating IP
      tags:
        - floatingips
    get:
      description: |-
        Shows details for a floating IP.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        This example request shows details for a floating IP in JSON
        format. This example also filters the result by the
        `fixed_ip_address` and `floating_ip_address` fields.

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: floatingips/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipShowResponse'
          description: Ok
      summary: Show floating IP details
      tags:
        - floatingips
    parameters:
      - $ref: '#/components/parameters/floatingips_floatingip_id'
    put:
      description: |-
        Updates a floating IP and its association with an internal port.

        The association process is the same as the process for the create
        floating IP operation.

        To disassociate a floating IP from a port, set the `port_id`
        attribute to null or omit it from the request body.

        This example updates a floating IP:

        Depending on the request body that you submit, this request
        associates a port with or disassociates a port from a floating IP.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 409, 412
      operationId: floatingips/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatingipUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatingipUpdateResponse'
          description: Ok
      summary: Update floating IP
      tags:
        - floatingips
  /v2.0/local-ips:
    get:
      operationId: local-ips:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/local_ips_description'
        - $ref: '#/components/parameters/local_ips_id'
        - $ref: '#/components/parameters/local_ips_ip_mode'
        - $ref: '#/components/parameters/local_ips_local_ip_address'
        - $ref: '#/components/parameters/local_ips_local_port_id'
        - $ref: '#/components/parameters/local_ips_name'
        - $ref: '#/components/parameters/local_ips_network_id'
        - $ref: '#/components/parameters/local_ips_project_id'
        - $ref: '#/components/parameters/local_ips_revision_number'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsIndexResponse'
          description: Ok
      tags:
        - local-ips
    post:
      operationId: local-ips:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsCreateResponse'
          description: Ok
      tags:
        - local-ips
  /v2.0/local-ips/{id}:
    delete:
      operationId: local-ips/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - local-ips
    get:
      operationId: local-ips/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpShowResponse'
          description: Ok
      tags:
        - local-ips
    parameters:
      - $ref: '#/components/parameters/local_ips_local_ip_id'
    put:
      operationId: local-ips/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpUpdateResponse'
          description: Ok
      tags:
        - local-ips
  /v2.0/local_ips/{local_ip_id}/port_associations:
    get:
      description: |-
        Lists Associations for the given Local IP.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: local_ips/local_ip_id/port_associations:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/port_associations_fixed_ip'
        - $ref: '#/components/parameters/port_associations_fixed_port_id'
        - $ref: '#/components/parameters/port_associations_host'
        - $ref: '#/components/parameters/port_associations_local_ip_address'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationsIndexResponse'
          description: Ok
      summary: List Local IP Associations
      tags:
        - local_ips
    parameters:
      - $ref: '#/components/parameters/port_associations_port_association_local_ip_id'
    post:
      description: |-
        Creates a Local IP association with a given Port.
        If a Port has multiple fixed IPs user must specify which IP to use
        for association.

        The operation returns the `Conflict (409)` response code for one of
        reasons:

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: local_ips/local_ip_id/port_associations:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpsPort_AssociationsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationsCreateResponse'
          description: Ok
      summary: Create Local IP Association
      tags:
        - local_ips
  /v2.0/local_ips/{local_ip_id}/port_associations/{id}:
    delete:
      description: |-
        Deletes a Local IP association.

        Normal response codes: 204

        Error response codes: 400, 401, 403, 404
      operationId: local_ips/local_ip_id/port_associations/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete Local IP Association
      tags:
        - local_ips
    get:
      operationId: local_ips/local_ip_id/port_associations/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationShowResponse'
          description: Ok
      tags:
        - local_ips
    parameters:
      - $ref: '#/components/parameters/port_associations_port_association_id'
      - $ref: '#/components/parameters/port_associations_port_association_local_ip_id'
    put:
      operationId: local_ips/local_ip_id/port_associations/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Local_IpsPort_AssociationUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Local_IpsPort_AssociationUpdateResponse'
          description: Ok
      tags:
        - local_ips
  /v2.0/log/loggable-resources:
    get:
      description: |-
        Lists all resource log types are supporting.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: log/loggable-resources:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourcesIndexResponse'
          description: Ok
      summary: List loggable resources
      tags:
        - log
    post:
      operationId: log/loggable-resources:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLoggable_ResourcesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourcesCreateResponse'
          description: Ok
      tags:
        - log
  /v2.0/log/loggable-resources/{id}:
    delete:
      operationId: log/loggable-resources/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - log
    get:
      operationId: log/loggable-resources/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourceShowResponse'
          description: Ok
      tags:
        - log
    parameters:
      - $ref: '#/components/parameters/loggable_resources_loggable_resource_id'
    put:
      operationId: log/loggable-resources/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLoggable_ResourceUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLoggable_ResourceUpdateResponse'
          description: Ok
      tags:
        - log
  /v2.0/log/logs:
    get:
      description: |-
        Lists all log resources associated with your project.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        The list might be empty.

        Normal response codes: 200

        Error response codes: 401
      operationId: log/logs:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/logs_description'
        - $ref: '#/components/parameters/logs_enabled'
        - $ref: '#/components/parameters/logs_event'
        - $ref: '#/components/parameters/logs_id'
        - $ref: '#/components/parameters/logs_name'
        - $ref: '#/components/parameters/logs_project_id'
        - $ref: '#/components/parameters/logs_resource_id'
        - $ref: '#/components/parameters/logs_resource_type'
        - $ref: '#/components/parameters/logs_revision_number'
        - $ref: '#/components/parameters/logs_target_id'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogsIndexResponse'
          description: Ok
      summary: List logs
      tags:
        - log
    post:
      description: |-
        Creates a log resource.

        Creates a log resource by using the configuration that you define in
        the request object. A response object is returned. The object
        contains a unique ID.

        If the caller is not an administrative user, this call returns the
        HTTP `Forbidden (403)` response code.

        Users with an administrative role can create policies on behalf of
        other projects by specifying a project ID that is different than
        their own.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 409
      operationId: log/logs:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLogsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogsCreateResponse'
          description: Ok
      summary: Create log
      tags:
        - log
  /v2.0/log/logs/{id}:
    delete:
      description: |-
        Deletes a log resource.

        Normal response codes: 204

        Error response codes: 400, 401, 404, 412
      operationId: log/logs/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete log
      tags:
        - log
    get:
      description: |-
        Shows details log resource.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: log/logs/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogShowResponse'
          description: Ok
      summary: Show log
      tags:
        - log
    parameters:
      - $ref: '#/components/parameters/logs_log_id'
    put:
      description: |-
        Updates a log resource.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: log/logs/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLogUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogUpdateResponse'
          description: Ok
      summary: Update log
      tags:
        - log
  /v2.0/metering/metering-label-rules:
    get:
      description: |-
        Lists a summary of all L3 metering label rules that belong to the project.

        The list shows the ID for each metering label rule.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: metering/metering-label-rules:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/metering_label_rules_destination_ip_prefix'
        - $ref: '#/components/parameters/metering_label_rules_direction'
        - $ref: '#/components/parameters/metering_label_rules_excluded'
        - $ref: '#/components/parameters/metering_label_rules_id'
        - $ref: '#/components/parameters/metering_label_rules_metering_label_id'
        - $ref: '#/components/parameters/metering_label_rules_remote_ip_prefix'
        - $ref: '#/components/parameters/metering_label_rules_source_ip_prefix'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RulesIndexResponse'
          description: Ok
      summary: List metering label rules
      tags:
        - metering
    post:
      description: |-
        Creates an L3 metering label rule.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404, 409
      operationId: metering/metering-label-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_Label_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RulesCreateResponse'
          description: Ok
      summary: Create metering label rule
      tags:
        - metering
  /v2.0/metering/metering-label-rules/{id}:
    delete:
      description: |-
        Deletes an L3 metering label rule.

        Normal response codes: 204

        Error response codes: 401, 404
      operationId: metering/metering-label-rules/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete metering label rule
      tags:
        - metering
    get:
      description: |-
        Shows details for a metering label rule.

        The response body shows this information for each metering label rule:

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: metering/metering-label-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RuleShowResponse'
          description: Ok
      summary: Show metering label rule details
      tags:
        - metering
    parameters:
      - $ref: '#/components/parameters/metering_label_rules_metering_label_rule_id'
    put:
      operationId: metering/metering-label-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_Label_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_Label_RuleUpdateResponse'
          description: Ok
      tags:
        - metering
  /v2.0/metering/metering-labels:
    get:
      description: |-
        Lists all L3 metering labels that belong to the project.

        The list shows the ID for each metering label.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: metering/metering-labels:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/metering_labels_description'
        - $ref: '#/components/parameters/metering_labels_id'
        - $ref: '#/components/parameters/metering_labels_name'
        - $ref: '#/components/parameters/metering_labels_shared'
        - $ref: '#/components/parameters/metering_labels_tenant_id'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelsIndexResponse'
          description: Ok
      summary: List metering labels
      tags:
        - metering
    post:
      description: |-
        Creates an L3 metering label.

        Normal response codes: 201

        Error response codes: 400, 401, 403
      operationId: metering/metering-labels:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_LabelsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelsCreateResponse'
          description: Ok
      summary: Create metering label
      tags:
        - metering
  /v2.0/metering/metering-labels/{id}:
    delete:
      description: |-
        Deletes an L3 metering label.

        Normal response codes: 204

        Error response codes: 401, 404
      operationId: metering/metering-labels/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete metering label
      tags:
        - metering
    get:
      description: |-
        Shows details for a metering label.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: metering/metering-labels/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelShowResponse'
          description: Ok
      summary: Show metering label details
      tags:
        - metering
    parameters:
      - $ref: '#/components/parameters/metering_labels_metering_label_id'
    put:
      operationId: metering/metering-labels/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteringMetering_LabelUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeteringMetering_LabelUpdateResponse'
          description: Ok
      tags:
        - metering
  /v2.0/ndp-proxies:
    get:
      operationId: ndp-proxies:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/ndp_proxies_description'
        - $ref: '#/components/parameters/ndp_proxies_name'
        - $ref: '#/components/parameters/ndp_proxies_revision_number'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxiesIndexResponse'
          description: Ok
      tags:
        - ndp-proxies
    post:
      operationId: ndp-proxies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ndp_ProxiesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxiesCreateResponse'
          description: Ok
      tags:
        - ndp-proxies
  /v2.0/ndp-proxies/{id}:
    delete:
      operationId: ndp-proxies/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - ndp-proxies
    get:
      operationId: ndp-proxies/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxyShowResponse'
          description: Ok
      tags:
        - ndp-proxies
    parameters:
      - $ref: '#/components/parameters/ndp_proxies_ndp_proxy_id'
    put:
      operationId: ndp-proxies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ndp_ProxyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ndp_ProxyUpdateResponse'
          description: Ok
      tags:
        - ndp-proxies
  /v2.0/network-ip-availabilities:
    get:
      description: |-
        Lists network IP availability of all networks.

        By default policy configuration, only administrative users can retrieve
        IP availabilities. Otherwise, an empty list will be returned.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: network-ip-availabilities:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/network_ip_availabilities_ip_version'
        - $ref: '#/components/parameters/network_ip_availabilities_network_id'
        - $ref: '#/components/parameters/network_ip_availabilities_network_name'
        - $ref: '#/components/parameters/network_ip_availabilities_tenant_id'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilitiesIndexResponse'
          description: Ok
      summary: List Network IP Availability
      tags:
        - network-ip-availabilities
    post:
      operationId: network-ip-availabilities:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Ip_AvailabilitiesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilitiesCreateResponse'
          description: Ok
      tags:
        - network-ip-availabilities
  /v2.0/network-ip-availabilities/{id}:
    delete:
      operationId: network-ip-availabilities/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - network-ip-availabilities
    get:
      description: |-
        Shows network IP availability details for a network.

        By default policy configuration, only administrative users can retrieve
        IP availability. Otherwise, `Not Found (404)` will be returned.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: network-ip-availabilities/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilityShowResponse'
          description: Ok
      summary: Show Network IP Availability
      tags:
        - network-ip-availabilities
    parameters:
      - $ref: '#/components/parameters/network_ip_availabilities_network_ip_availability_id'
    put:
      operationId: network-ip-availabilities/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Ip_AvailabilityUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Ip_AvailabilityUpdateResponse'
          description: Ok
      tags:
        - network-ip-availabilities
  /v2.0/network-segment-ranges:
    get:
      operationId: network-segment-ranges:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/network_segment_ranges_description'
        - $ref: '#/components/parameters/network_segment_ranges_id'
        - $ref: '#/components/parameters/network_segment_ranges_name'
        - $ref: '#/components/parameters/network_segment_ranges_network_type'
        - $ref: '#/components/parameters/network_segment_ranges_not-tags'
        - $ref: '#/components/parameters/network_segment_ranges_not-tags-any'
        - $ref: '#/components/parameters/network_segment_ranges_physical_network'
        - $ref: '#/components/parameters/network_segment_ranges_project_id'
        - $ref: '#/components/parameters/network_segment_ranges_revision_number'
        - $ref: '#/components/parameters/network_segment_ranges_tags'
        - $ref: '#/components/parameters/network_segment_ranges_tags-any'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesIndexResponse'
          description: Ok
      tags:
        - network-segment-ranges
    post:
      operationId: network-segment-ranges:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Segment_RangesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesCreateResponse'
          description: Ok
      tags:
        - network-segment-ranges
  /v2.0/network-segment-ranges/{id}:
    delete:
      operationId: network-segment-ranges/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - network-segment-ranges
    get:
      operationId: network-segment-ranges/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangeShowResponse'
          description: Ok
      tags:
        - network-segment-ranges
    parameters:
      - $ref: '#/components/parameters/network_segment_ranges_network_segment_range_id'
    put:
      operationId: network-segment-ranges/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Segment_RangeUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangeUpdateResponse'
          description: Ok
      tags:
        - network-segment-ranges
  /v2.0/network_segment_ranges/{network_segment_range_id}/tags:
    delete:
      operationId: network_segment_ranges/network_segment_range_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - network_segment_ranges
    get:
      operationId: network_segment_ranges/network_segment_range_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesTagsIndexResponse'
          description: Ok
      tags:
        - network_segment_ranges
    parameters:
      - $ref: '#/components/parameters/network_segment_ranges_tags_network_segment_range_id'
    put:
      operationId: network_segment_ranges/network_segment_range_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network_Segment_RangesTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Segment_RangesTagsUpdate_AllResponse'
          description: Ok
      tags:
        - network_segment_ranges
  /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id}:
    delete:
      operationId: 
        network_segment_ranges/network_segment_range_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - network_segment_ranges
    get:
      operationId: network_segment_ranges/network_segment_range_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - network_segment_ranges
    parameters:
      - $ref: '#/components/parameters/network_segment_ranges_tags_id'
      - $ref: '#/components/parameters/network_segment_ranges_tags_network_segment_range_id'
    put:
      operationId: network_segment_ranges/network_segment_range_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - network_segment_ranges
  /v2.0/networks:
    get:
      description: |-
        Lists networks to which the project has access.

        Default policy settings return only networks that the project who submits the
        request owns, unless an administrative user submits the request. In addition,
        networks shared with the project who submits the request are also returned.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        You can also use the `tags`, `tags-any`, `not-tags`, `not-tags-any`
        query parameter to filter the response with tags. For information,
        see [REST API Impact](http://specs.openstack.org/openstack/neutron-specs/specs/mitaka/add-tags-to-core-resources.html#rest-api-impact).

        Normal response codes: 200

        Error response codes: 401
      operationId: networks:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/networks_admin_state_up'
        - $ref: '#/components/parameters/networks_description'
        - $ref: '#/components/parameters/networks_id'
        - $ref: '#/components/parameters/networks_is_default'
        - $ref: '#/components/parameters/networks_mtu'
        - $ref: '#/components/parameters/networks_name'
        - $ref: '#/components/parameters/networks_not-tags'
        - $ref: '#/components/parameters/networks_not-tags-any'
        - $ref: '#/components/parameters/networks_provider_network_type'
        - $ref: '#/components/parameters/networks_provider_physical_network'
        - $ref: '#/components/parameters/networks_provider_segmentation_id'
        - $ref: '#/components/parameters/networks_qinq'
        - $ref: '#/components/parameters/networks_revision_number'
        - $ref: '#/components/parameters/networks_router_external'
        - $ref: '#/components/parameters/networks_shared'
        - $ref: '#/components/parameters/networks_status'
        - $ref: '#/components/parameters/networks_tags'
        - $ref: '#/components/parameters/networks_tags-any'
        - $ref: '#/components/parameters/networks_tenant_id'
        - $ref: '#/components/parameters/networks_vlan_transparent'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksIndexResponse'
          description: Ok
      summary: List networks
      tags:
        - networks
    post:
      description: |-
        Creates a network.

        A request body is optional. An administrative user can specify
        another project ID, which is the project that owns the network, in
        the request body.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: networks:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksCreateResponse'
          description: Ok
      summary: Create network
      tags:
        - networks
  /v2.0/networks/{network_id}:
    delete:
      description: |-
        Deletes a network and its associated resources.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: networks/network_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete network
      tags:
        - networks
    get:
      description: |-
        Shows details for a network.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: networks/network_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkShowResponse'
          description: Ok
      summary: Show network details
      tags:
        - networks
    parameters:
      - $ref: '#/components/parameters/networks_network_network_id'
    put:
      description: |-
        Updates a network.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: networks/network_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkUpdateResponse'
          description: Ok
      summary: Update network
      tags:
        - networks
  /v2.0/networks/{network_id}/dhcp-agents:
    get:
      description: |-
        Lists DHCP agents hosting a network.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: networks/network_id/dhcp-agents:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentsIndexResponse'
          description: Ok
      summary: List DHCP agents hosting a network
      tags:
        - networks
    parameters:
      - $ref: '#/components/parameters/networks_dhcp-agents_network_id'
    post:
      operationId: networks/network_id/dhcp-agents:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksDhcp_AgentsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentsCreateResponse'
          description: Ok
      tags:
        - networks
  /v2.0/networks/{network_id}/dhcp-agents/{id}:
    delete:
      operationId: networks/network_id/dhcp-agents/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - networks
    get:
      operationId: networks/network_id/dhcp-agents/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentShowResponse'
          description: Ok
      tags:
        - networks
    parameters:
      - $ref: '#/components/parameters/networks_dhcp-agents_id'
      - $ref: '#/components/parameters/networks_dhcp-agents_network_id'
    put:
      operationId: networks/network_id/dhcp-agents/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksDhcp_AgentUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksDhcp_AgentUpdateResponse'
          description: Ok
      tags:
        - networks
  /v2.0/networks/{network_id}/tags:
    delete:
      operationId: networks/network_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - networks
    get:
      operationId: networks/network_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksTagsIndexResponse'
          description: Ok
      tags:
        - networks
    parameters:
      - $ref: '#/components/parameters/networks_tags_network_id'
    put:
      operationId: networks/network_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworksTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksTagsUpdate_AllResponse'
          description: Ok
      tags:
        - networks
  /v2.0/networks/{network_id}/tags/{id}:
    delete:
      operationId: networks/network_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - networks
    get:
      operationId: networks/network_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - networks
    parameters:
      - $ref: '#/components/parameters/networks_tags_id'
      - $ref: '#/components/parameters/networks_tags_network_id'
    put:
      operationId: networks/network_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - networks
  /v2.0/policies/{policy_id}/packet_rate_limit_rules:
    get:
      operationId: policies/policy_id/packet_rate_limit_rules:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/packet_rate_limit_rules_direction'
        - $ref: '#/components/parameters/packet_rate_limit_rules_id'
        - $ref: '#/components/parameters/packet_rate_limit_rules_max_burst_kpps'
        - $ref: '#/components/parameters/packet_rate_limit_rules_max_kpps'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RulesIndexResponse'
          description: Ok
      tags:
        - policies
    parameters:
      - $ref: '#/components/parameters/packet_rate_limit_rules_packet_rate_limit_rule_policy_id'
    post:
      operationId: policies/policy_id/packet_rate_limit_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RulesCreateResponse'
          description: Ok
      tags:
        - policies
  /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id}:
    delete:
      operationId: policies/policy_id/packet_rate_limit_rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - policies
    get:
      operationId: policies/policy_id/packet_rate_limit_rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RuleShowResponse'
          description: Ok
      tags:
        - policies
    parameters:
      - $ref: '#/components/parameters/packet_rate_limit_rules_packet_rate_limit_rule_id'
      - $ref: '#/components/parameters/packet_rate_limit_rules_packet_rate_limit_rule_policy_id'
    put:
      operationId: policies/policy_id/packet_rate_limit_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPacket_Rate_Limit_RuleUpdateResponse'
          description: Ok
      tags:
        - policies
  /v2.0/policies/{policy_id}/tags:
    delete:
      operationId: policies/policy_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - policies
    get:
      operationId: policies/policy_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesTagsIndexResponse'
          description: Ok
      tags:
        - policies
    parameters:
      - $ref: '#/components/parameters/policies_tags_policy_id'
    put:
      operationId: policies/policy_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesTagsUpdate_AllResponse'
          description: Ok
      tags:
        - policies
  /v2.0/policies/{policy_id}/tags/{id}:
    delete:
      operationId: policies/policy_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - policies
    get:
      operationId: policies/policy_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - policies
    parameters:
      - $ref: '#/components/parameters/policies_tags_id'
      - $ref: '#/components/parameters/policies_tags_policy_id'
    put:
      operationId: policies/policy_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - policies
  /v2.0/ports:
    get:
      description: |-
        Lists ports to which the user has access.

        Default policy settings return only those ports that are owned by
        the project of the user who submits the request, unless the request is submitted
        by a user with administrative rights.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        If the `ip-substring-filtering` extension is enabled, the Neutron API
        supports IP address substring filtering on the `fixed_ips` attribute.
        If you specify an IP address substring (`ip_address_substr`) in
        an entry of the `fixed_ips` attribute, the Neutron API will list all
        ports that have an IP address matching the substring.

        Normal response codes: 200

        Error response codes: 401
      operationId: ports:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/ports_admin_state_up'
        - $ref: '#/components/parameters/ports_binding_host_id'
        - $ref: '#/components/parameters/ports_description'
        - $ref: '#/components/parameters/ports_device_id'
        - $ref: '#/components/parameters/ports_device_owner'
        - $ref: '#/components/parameters/ports_fixed_ips'
        - $ref: '#/components/parameters/ports_id'
        - $ref: '#/components/parameters/ports_ip_allocation'
        - $ref: '#/components/parameters/ports_mac_address'
        - $ref: '#/components/parameters/ports_name'
        - $ref: '#/components/parameters/ports_network_id'
        - $ref: '#/components/parameters/ports_not-tags'
        - $ref: '#/components/parameters/ports_not-tags-any'
        - $ref: '#/components/parameters/ports_revision_number'
        - $ref: '#/components/parameters/ports_security_groups'
        - $ref: '#/components/parameters/ports_status'
        - $ref: '#/components/parameters/ports_tags'
        - $ref: '#/components/parameters/ports_tags-any'
        - $ref: '#/components/parameters/ports_tenant_id'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsIndexResponse'
          description: Ok
      summary: List ports
      tags:
        - ports
    post:
      description: |-
        Creates a port on a network.

        To define the network in which to create the port, specify the
        `network_id` attribute in the request body.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: ports:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsCreateResponse'
          description: Ok
      summary: Create port
      tags:
        - ports
  /v2.0/ports/{port_id}:
    delete:
      description: |-
        Deletes a port.

        Any IP addresses that are associated with the port are returned to
        the respective subnets allocation pools.

        Normal response codes: 204

        Error response codes: 401, 403, 404, 412
      operationId: ports/port_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete port
      tags:
        - ports
    get:
      description: |-
        Shows details for a port.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: ports/port_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortShowResponse'
          description: Ok
      summary: Show port details
      tags:
        - ports
    parameters:
      - $ref: '#/components/parameters/ports_port_port_id'
    put:
      description: |-
        Updates a port.

        You can update information for a port, such as its symbolic name
        and associated IPs. When you update IPs for a port, any previously
        associated IPs are removed, returned to the respective subnet
        allocation pools, and replaced by the IPs in the request body.
        Therefore, this operation replaces the `fixed_ip` attribute when
        you specify it in the request body. If the updated IP addresses are
        not valid or are already in use, the operation fails and the
        existing IP addresses are not removed from the port.

        When you update security groups for a port and the operation
        succeeds, any associated security groups are removed and replaced
        by the security groups in the request body. Therefore, this
        operation replaces the `security_groups` attribute when you
        specify it in the request body. If the security groups are not
        valid, the operation fails and the existing security groups are not
        removed from the port.

        When you update `binding:profile` of a port with null it is treated as {}
        in the response.

        The `binding:vnic_type` attribute can be updated on unbound ports only.
        If the port is already bound, the update operation of the attribute returns
        the `Conflict (409)` response code.

        Only admins and users with a specific role can update the data plane status
        (default role: `data_plane_integrator`).

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 412
      operationId: ports/port_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortUpdateResponse'
          description: Ok
      summary: Update port
      tags:
        - ports
  /v2.0/ports/{port_id}/add_allowed_address_pairs:
    parameters:
      - $ref: '#/components/parameters/ports_port_port_id'
    put:
      description: |-
        Atomically adds a set of allowed_address_pairs to the port’s already
        existing allowed_address_pairs.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: ports/port_id/add_allowed_address_pairs:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsResponse'
          description: Ok
      summary: Add allowed_address_pairs to port
      tags:
        - ports
  /v2.0/ports/{port_id}/bindings:
    get:
      description: |-
        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: ports/port_id/bindings:get
      parameters:
        - $ref: '#/components/parameters/bindings_host'
        - $ref: '#/components/parameters/bindings_status'
        - $ref: '#/components/parameters/bindings_vif_type'
        - $ref: '#/components/parameters/bindings_vnic_type'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingsIndexResponse'
          description: Ok
      summary: Show Port Binding of a Port
      tags:
        - port-bindings
    parameters:
      - $ref: '#/components/parameters/bindings_binding_port_id'
    post:
      operationId: ports/port_id/bindings:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsBindingsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingsCreateResponse'
          description: Ok
      tags:
        - port-bindings
  /v2.0/ports/{port_id}/bindings/{id}:
    delete:
      description: |-
        Normal response codes: 204

        Error response codes: 401, 403, 404, 412
      operationId: ports/port_id/bindings/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete Port Binding
      tags:
        - port-bindings
    get:
      operationId: ports/port_id/bindings/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingShowResponse'
          description: Ok
      tags:
        - port-bindings
    parameters:
      - $ref: '#/components/parameters/bindings_binding_id'
      - $ref: '#/components/parameters/bindings_binding_port_id'
    put:
      operationId: ports/port_id/bindings/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsBindingUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingUpdateResponse'
          description: Ok
      tags:
        - port-bindings
  /v2.0/ports/{port_id}/bindings/{id}/activate:
    parameters:
      - $ref: '#/components/parameters/bindings_binding_id'
      - $ref: '#/components/parameters/bindings_binding_port_id'
    put:
      description: |-
        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: ports/port_id/bindings/id/activate:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsBindingsActivateActivateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsBindingShowResponse'
          description: Ok
      summary: Activate Port binding
      tags:
        - port-bindings
  /v2.0/ports/{port_id}/tags:
    delete:
      operationId: ports/port_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - ports
    get:
      operationId: ports/port_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsTagsIndexResponse'
          description: Ok
      tags:
        - ports
    parameters:
      - $ref: '#/components/parameters/ports_tags_port_id'
    put:
      operationId: ports/port_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortsTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortsTagsUpdate_AllResponse'
          description: Ok
      tags:
        - ports
  /v2.0/ports/{port_id}/tags/{id}:
    delete:
      operationId: ports/port_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - ports
    get:
      operationId: ports/port_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - ports
    parameters:
      - $ref: '#/components/parameters/ports_tags_id'
      - $ref: '#/components/parameters/ports_tags_port_id'
    put:
      operationId: ports/port_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - ports
  /v2.0/qos/alias-bandwidth-limit-rules:
    get:
      operationId: qos/alias-bandwidth-limit-rules:get
      parameters:
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_direction'
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_id'
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_max_burst_kbps'
        - $ref: '#/components/parameters/alias_bandwidth_limit_rules_max_kbps'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RulesIndexResponse'
          description: Ok
      tags:
        - qos
    post:
      operationId: qos/alias-bandwidth-limit-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RulesCreateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/alias-bandwidth-limit-rules/{id}:
    delete:
      operationId: qos/alias-bandwidth-limit-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    get:
      operationId: qos/alias-bandwidth-limit-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RuleShowResponse'
          description: Ok
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/alias_bandwidth_limit_rules_alias_bandwidth_limit_rule_id'
    put:
      operationId: qos/alias-bandwidth-limit-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Bandwidth_Limit_RuleUpdateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/alias-dscp-marking-rules:
    get:
      operationId: qos/alias-dscp-marking-rules:get
      parameters:
        - $ref: '#/components/parameters/alias_dscp_marking_rules_dscp_mark'
        - $ref: '#/components/parameters/alias_dscp_marking_rules_id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RulesIndexResponse'
          description: Ok
      tags:
        - qos
    post:
      operationId: qos/alias-dscp-marking-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Dscp_Marking_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RulesCreateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/alias-dscp-marking-rules/{id}:
    delete:
      operationId: qos/alias-dscp-marking-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    get:
      operationId: qos/alias-dscp-marking-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RuleShowResponse'
          description: Ok
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/alias_dscp_marking_rules_alias_dscp_marking_rule_id'
    put:
      operationId: qos/alias-dscp-marking-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Dscp_Marking_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Dscp_Marking_RuleUpdateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/alias-minimum-bandwidth-rules:
    get:
      operationId: qos/alias-minimum-bandwidth-rules:get
      parameters:
        - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_direction'
        - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_id'
        - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_min_kbps'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RulesIndexResponse'
          description: Ok
      tags:
        - qos
    post:
      operationId: qos/alias-minimum-bandwidth-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RulesCreateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/alias-minimum-bandwidth-rules/{id}:
    delete:
      operationId: qos/alias-minimum-bandwidth-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    get:
      operationId: qos/alias-minimum-bandwidth-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RuleShowResponse'
          description: Ok
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/alias_minimum_bandwidth_rules_alias_minimum_bandwidth_rule_id'
    put:
      operationId: qos/alias-minimum-bandwidth-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Bandwidth_RuleUpdateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/alias-minimum-packet-rate-rules:
    get:
      operationId: qos/alias-minimum-packet-rate-rules:get
      parameters:
        - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_direction'
        - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_id'
        - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_min_kpps'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RulesIndexResponse'
          description: Ok
      tags:
        - qos
    post:
      operationId: qos/alias-minimum-packet-rate-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RulesCreateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/alias-minimum-packet-rate-rules/{id}:
    delete:
      operationId: qos/alias-minimum-packet-rate-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    get:
      operationId: qos/alias-minimum-packet-rate-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RuleShowResponse'
          description: Ok
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/alias_minimum_packet_rate_rules_alias_minimum_packet_rate_rule_id'
    put:
      operationId: qos/alias-minimum-packet-rate-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosAlias_Minimum_Packet_Rate_RuleUpdateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/policies:
    get:
      description: |-
        Lists all QoS policies associated with your project. One policy can contain
        more than one rule type.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: qos/policies:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/policies_description'
        - $ref: '#/components/parameters/policies_id'
        - $ref: '#/components/parameters/policies_is_default'
        - $ref: '#/components/parameters/policies_name'
        - $ref: '#/components/parameters/policies_not-tags'
        - $ref: '#/components/parameters/policies_not-tags-any'
        - $ref: '#/components/parameters/policies_revision_number'
        - $ref: '#/components/parameters/policies_shared'
        - $ref: '#/components/parameters/policies_tags'
        - $ref: '#/components/parameters/policies_tags-any'
        - $ref: '#/components/parameters/policies_tenant_id'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesIndexResponse'
          description: Ok
      summary: List QoS policies
      tags:
        - qos
    post:
      description: |-
        Creates a QoS policy.

        Creates a QoS policy by using the configuration that you define in
        the request object.
        A response object is returned. The object contains a unique ID.

        By the default policy configuration, if the caller is not an administrative
        user, this call returns the HTTP `Forbidden (403)` response code.

        Users with an administrative role can create policies on behalf of
        other projects by specifying a project ID that is different than
        their own.

        Normal response codes: 201

        Error response codes: 401, 403, 404, 409
      operationId: qos/policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesCreateResponse'
          description: Ok
      summary: Create QoS policy
      tags:
        - qos
  /v2.0/qos/policies/{id}:
    delete:
      description: |-
        Deletes a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404, 412
      operationId: qos/policies/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete QoS policy
      tags:
        - qos
    get:
      description: |-
        Shows details for a QoS policy. One policy can contain more than one rule type.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPolicyShowResponse'
          description: Ok
      summary: Show QoS policy details
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
    put:
      description: |-
        Updates a QoS policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: qos/policies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPolicyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPolicyUpdateResponse'
          description: Ok
      summary: Update QoS policy
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules:
    get:
      description: |-
        Lists all bandwidth limit rules for a QoS policy.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules:get
      parameters:
        - $ref: '#/components/parameters/bandwidth_limit_rules_id'
        - $ref: '#/components/parameters/bandwidth_limit_rules_max_burst_kbps'
        - $ref: '#/components/parameters/bandwidth_limit_rules_max_kbps'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RulesIndexResponse'
          description: Ok
      summary: List bandwidth limit rules for QoS policy
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/bandwidth_limit_rules_bandwidth_limit_rule_policy_id'
    post:
      description: |-
        Creates a bandwidth limit rule for a QoS policy.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: qos/policies/policy_id/bandwidth_limit_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RulesCreateResponse'
          description: Ok
      summary: Create bandwidth limit rule
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id}:
    delete:
      description: |-
        Deletes a bandwidth limit rule for a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete bandwidth limit rule
      tags:
        - qos
    get:
      description: |-
        Shows details for a bandwidth limit rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RuleShowResponse'
          description: Ok
      summary: Show bandwidth limit rule details
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/bandwidth_limit_rules_bandwidth_limit_rule_id'
      - $ref: '#/components/parameters/bandwidth_limit_rules_bandwidth_limit_rule_policy_id'
    put:
      description: |-
        Updates a bandwidth limit rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/bandwidth_limit_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesBandwidth_Limit_RuleUpdateResponse'
          description: Ok
      summary: Update bandwidth limit rule
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/dscp_marking_rules:
    get:
      description: |-
        Lists all DSCP marking rules for a QoS policy.

        The list may be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules:get
      parameters:
        - $ref: '#/components/parameters/dscp_marking_rules_dscp_mark'
        - $ref: '#/components/parameters/dscp_marking_rules_id'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RulesIndexResponse'
          description: Ok
      summary: List DSCP marking rules for QoS policy
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/dscp_marking_rules_dscp_marking_rule_policy_id'
    post:
      description: |-
        Creates a DSCP marking rule for a QoS policy.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: qos/policies/policy_id/dscp_marking_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesDscp_Marking_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RulesCreateResponse'
          description: Ok
      summary: Create DSCP marking rule
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id}:
    delete:
      description: |-
        Deletes a DSCP marking rule for a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete DSCP marking rule
      tags:
        - qos
    get:
      description: |-
        Shows details for a DSCP marking rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RuleShowResponse'
          description: Ok
      summary: Show DSCP marking rule details
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/dscp_marking_rules_dscp_marking_rule_id'
      - $ref: '#/components/parameters/dscp_marking_rules_dscp_marking_rule_policy_id'
    put:
      description: |-
        Updates a DSCP marking rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/dscp_marking_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesDscp_Marking_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesDscp_Marking_RuleUpdateResponse'
          description: Ok
      summary: Update DSCP marking rule
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules:
    get:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/minimum_packet_rate_rules_direction'
        - $ref: '#/components/parameters/minimum_packet_rate_rules_id'
        - $ref: '#/components/parameters/minimum_packet_rate_rules_min_kpps'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RulesIndexResponse'
          description: Ok
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/minimum_packet_rate_rules_minimum_packet_rate_rule_policy_id'
    post:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RulesCreateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id}:
    delete:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    get:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RuleShowResponse'
          description: Ok
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/minimum_packet_rate_rules_minimum_packet_rate_rule_id'
      - $ref: '#/components/parameters/minimum_packet_rate_rules_minimum_packet_rate_rule_policy_id'
    put:
      operationId: qos/policies/policy_id/minimum-packet-rate-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Packet_Rate_RuleUpdateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules:
    get:
      description: |-
        Lists all minimum bandwidth rules for a QoS policy.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/minimum_bandwidth_rules:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/minimum_bandwidth_rules_direction'
        - $ref: '#/components/parameters/minimum_bandwidth_rules_id'
        - $ref: '#/components/parameters/minimum_bandwidth_rules_min_kbps'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RulesIndexResponse'
          description: Ok
      summary: List minimum bandwidth rules for QoS policy
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/minimum_bandwidth_rules_minimum_bandwidth_rule_policy_id'
    post:
      description: |-
        Creates a minimum bandwidth rule for a QoS policy.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: qos/policies/policy_id/minimum_bandwidth_rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RulesCreateResponse'
          description: Ok
      summary: Create minimum bandwidth rule
      tags:
        - qos
  /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id}:
    delete:
      description: |-
        Deletes a minimum bandwidth rule for a QoS policy.

        Normal response codes: 204

        Error response codes: 400, 401, 404
      operationId: qos/policies/policy_id/minimum_bandwidth_rules/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete minimum bandwidth rule
      tags:
        - qos
    get:
      description: |-
        Shows details for a minimum bandwidth rule for a QoS policy.

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/policies/policy_id/minimum_bandwidth_rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RuleShowResponse'
          description: Ok
      summary: Show minimum bandwidth rule details
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/minimum_bandwidth_rules_minimum_bandwidth_rule_id'
      - $ref: '#/components/parameters/minimum_bandwidth_rules_minimum_bandwidth_rule_policy_id'
    put:
      description: |-
        Updates a minimum bandwidth rule for a QoS policy.

        Note that the rule cannot be updated, and the update is rejected with error
        code 501, if there is any bound port referring to the rule via the qos policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 501
      operationId: qos/policies/policy_id/minimum_bandwidth_rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosPoliciesMinimum_Bandwidth_RuleUpdateResponse'
          description: Ok
      summary: Update minimum bandwidth rule
      tags:
        - qos
  /v2.0/qos/rule-types:
    get:
      description: |-
        Lists available qos rule types.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: qos/rule-types:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/rule_types_all_rules'
        - $ref: '#/components/parameters/rule_types_all_supported'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypesIndexResponse'
          description: Ok
      summary: List QoS rule types
      tags:
        - qos
    post:
      operationId: qos/rule-types:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosRule_TypesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypesCreateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/qos/rule-types/{id}:
    delete:
      operationId: qos/rule-types/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - qos
    get:
      description: |-
        Shows details for an available QoS rule type.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: qos/rule-types/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypeShowResponse'
          description: Ok
      summary: Show QoS rule type details
      tags:
        - qos
    parameters:
      - $ref: '#/components/parameters/rule_types_rule_type_id'
    put:
      operationId: qos/rule-types/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QosRule_TypeUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QosRule_TypeUpdateResponse'
          description: Ok
      tags:
        - qos
  /v2.0/quotas:
    get:
      description: |-
        Lists quotas for projects with non-default quota values.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasIndexResponse'
          description: Ok
      summary: List quotas for projects with non-default quota values
      tags:
        - quotas
  /v2.0/quotas/{id}:
    delete:
      description: |-
        Resets quotas to default values for a project.

        Normal response codes: 204

        Error response codes: 401, 403, 404
      operationId: quotas/id:delete
      responses:
        '204':
          description: Ok
      summary: Reset quota for a project
      tags:
        - quotas
    get:
      description: |-
        Lists quotas for a project.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaShowResponse'
          description: Ok
      summary: List quotas for a project
      tags:
        - quotas
    parameters:
      - $ref: '#/components/parameters/quotas_id'
    put:
      description: |-
        Updates quotas for a project. Use when non-default quotas are desired.

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaUpdateResponse'
          description: Ok
      summary: Update quota for a project
      tags:
        - quotas
  /v2.0/quotas/{id}/default:
    get:
      description: |-
        Lists default quotas for a project.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: quotas/id/default:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasDefaultDefaultResponse'
          description: Ok
      summary: List default quotas for a project
      tags:
        - quotas
    parameters:
      - $ref: '#/components/parameters/quotas_default_id'
  /v2.0/quotas/{id}/details:
    get:
      operationId: quotas/id/details:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotasDetailsDetailsResponse'
          description: Ok
      tags:
        - quotas
    parameters:
      - $ref: '#/components/parameters/quotas_details_id'
  /v2.0/rbac-policies:
    get:
      description: |-
        List RBAC policies that belong to a given tenant.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: rbac-policies:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/rbac_policies_action'
        - $ref: '#/components/parameters/rbac_policies_id'
        - $ref: '#/components/parameters/rbac_policies_object_id'
        - $ref: '#/components/parameters/rbac_policies_object_type'
        - $ref: '#/components/parameters/rbac_policies_target_tenant'
        - $ref: '#/components/parameters/rbac_policies_tenant_id'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PoliciesIndexResponse'
          description: Ok
      summary: List RBAC policies
      tags:
        - rbac-policies
    post:
      description: |-
        Create RBAC policy for given tenant.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: rbac-policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rbac_PoliciesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PoliciesCreateResponse'
          description: Ok
      summary: Create RBAC policy
      tags:
        - rbac-policies
  /v2.0/rbac-policies/{id}:
    delete:
      description: |-
        Delete an RBAC policy.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: rbac-policies/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete RBAC policy
      tags:
        - rbac-policies
    get:
      description: |-
        Show details for a given RBAC policy.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: rbac-policies/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PolicyShowResponse'
          description: Ok
      summary: Show RBAC policy details
      tags:
        - rbac-policies
    parameters:
      - $ref: '#/components/parameters/rbac_policies_rbac_policy_id'
    put:
      description: |-
        Update RBAC policy for given tenant.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: rbac-policies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rbac_PolicyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rbac_PolicyUpdateResponse'
          description: Ok
      summary: Update RBAC policy
      tags:
        - rbac-policies
  /v2.0/routers:
    get:
      description: |-
        Lists logical routers that the project who submits the request can access.

        Default policy settings return only those routers that the project
        who submits the request owns, unless an administrative user submits
        the request.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: routers:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/routers_admin_state_up'
        - $ref: '#/components/parameters/routers_description'
        - $ref: '#/components/parameters/routers_enable_ndp_proxy'
        - $ref: '#/components/parameters/routers_id'
        - $ref: '#/components/parameters/routers_name'
        - $ref: '#/components/parameters/routers_not-tags'
        - $ref: '#/components/parameters/routers_not-tags-any'
        - $ref: '#/components/parameters/routers_revision_number'
        - $ref: '#/components/parameters/routers_tags'
        - $ref: '#/components/parameters/routers_tags-any'
        - $ref: '#/components/parameters/routers_tenant_id'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersIndexResponse'
          description: Ok
      summary: List routers
      tags:
        - routers
    post:
      description: |-
        Creates a logical router.

        This operation creates a logical router. The logical router does
        not have any internal interface and it is not associated with any
        subnet. You can optionally specify an external gateway for a router
        at create time. The external gateway for the router must be plugged
        into an external network. An external network has its
        `router:external` extended field set to `true`. To specify an
        external gateway, the ID of the external network must be passed
        in the `network_id` parameter of the `external_gateway_info`
        attribute in the request body.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: routers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersCreateResponse'
          description: Ok
      summary: Create router
      tags:
        - routers
  /v2.0/routers/{id}:
    delete:
      description: |-
        Deletes a logical router and, if present, its external gateway interface.

        This operation fails if the router has attached interfaces.
        Use the remove router interface operation to remove all router
        interfaces before you delete the router.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: routers/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete router
      tags:
        - routers
    get:
      description: |-
        Shows details for a router.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: routers/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
          description: Ok
      summary: Show router details
      tags:
        - routers
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Updates a logical router.

        This operation does not enable the update of router interfaces.
        To update a router interface, use the add router interface and
        remove router interface operations.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouterUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterUpdateResponse'
          description: Ok
      summary: Update router
      tags:
        - routers
  /v2.0/routers/{id}/add_external_gateways:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Add external gateways to a router in addition to the ones it already
        has.

        Multiple gateways attached to the same network can be added to the
        same router.

        The add/update/remove external gateways operations extend the use of
        `router.external_gateway_info` to manage multiple external gateways.
        The full set of external gateways is exposed in the read-only
        `router.external_gateways` parameter. `router.external_gateways`
        contains a list of `external_gateway_info` structures like:

        The first item (index 0) of the `external_gateways` list is special if a
        router does not have any gateway ports yet:

        The order of the the rest of the list (indexes 1, 2, …) is irrelevant
        and ignored.

        The first external gateway can be managed in two
        ways: via `router.external_gateway_info` or via
        `add/update/remove_external_gateways`. The other external gateways
        can only be managed via `add/update/remove_external_gateways`.

        The format of the request body is the same as the format of the read-only
        `router.external_gateways` parameter, but wrapped as follows:

        The response codes and response body are the same as to the update of
        the router. That is the whole router object is returned including the
        `external_gateway_info` and `external_gateways` parameters which
        represents the result of the operation.

        Changes in `router.external_gateway_info` are reflected
        in `router.external_gateways` and vice versa. Updating
        `external_gateway_info` also updates the first element of
        `external_gateways` and it leaves the rest of `external_gateways`
        unchanged. Setting `external_gateway_info` to an empty value removes
        a single gateway and one of the extra gateways takes its place instead.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/add_external_gateways:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersAdd_External_GatewaysAdd_External_GatewaysRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
          description: Ok
      summary: Add external gateways to router
      tags:
        - routers
  /v2.0/routers/{id}/add_extraroutes:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Atomically adds a set of extra routes to the router’s already existing
        extra routes.

        This operation is a variation on updating the router’s `routes`
        parameter. In all ways it works the same, except the extra routes sent
        in the request body do not replace the existing set of extra routes.
        Instead the extra routes sent are added to the existing set of
        extra routes.

        The use of the add_extraroutes/remove_extraroutes member actions
        is preferred to updating the `routes` attribute in all cases when
        concurrent updates to the set of extra routes are possible.

        The addition’s corner cases behave the following way:

        The format of the request body is the same as the format of a PUT
        request to the router changing the `routes` parameter only.

        The response codes and response body are the same as to the update of
        the `routes` parameter. That is the whole router object is returned
        including the `routes` parameter which represents the result of the
        addition.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/add_extraroutes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersAdd_ExtraroutesAdd_ExtraroutesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersAdd_ExtraroutesAdd_ExtraroutesResponse'
          description: Ok
      summary: Add extra routes to router
      tags:
        - routers
  /v2.0/routers/{id}/add_router_interface:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Adds an internal interface to a logical router.
        This means a specified subnet is attached to a router
        as an internal router interface.

        Specify the ID of a subnet or port in the request body:

        When you specify an IPv6 subnet, this operation adds the subnet to
        an existing internal port with same network ID, on the router. If
        a port with the same network ID does not exist, this operation
        creates a port on the router for that subnet.

        The limitation of one IPv4 subnet per router port remains, though a
        port can contain any number of IPv6 subnets that belong to the same
        network ID.

        When you use the `port-create` command to add a port and then
        call `router-interface-add` with this port ID, this operation
        adds the port to the router if the following conditions are met:

        If you specify both subnet ID and port ID,
        this operation returns the `Bad Request (400)` response code.

        If the port is already in use, this operation returns the
        `Conflict (409)` response code.

        This operation returns a port ID that is either:

        After you run this operation, the operation sets:

        Normal response codes: 200

        Error response codes: 400, 401, 404, 409
      operationId: routers/id/add_router_interface:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersAdd_Router_InterfaceAdd_Router_InterfaceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersAdd_Router_InterfaceAdd_Router_InterfaceResponse'
          description: Ok
      summary: Add interface to router
      tags:
        - routers
  /v2.0/routers/{id}/remove_external_gateways:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Remove some external gateways from router.

        For general information on the add/update/remove external gateways
        operations see `add_external_gateways` above.

        The format of the request body is the same as the format of the read-only
        `router.external_gateways` parameter, but wrapped as follows:

        However the request body can be partial. Only the `network_id`
        and `external_fixed_ips` fields from the `external_gateway_info`
        structure is used in order to match the specific gateway ports.
        The `enable_snat` key can be present but its value is ignored.

        Please note that setting `external_gateway_info` to an empty value
        also resets `external_gateways` to the empty list.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/remove_external_gateways:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersRemove_External_GatewaysRemove_External_GatewaysRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
          description: Ok
      summary: Remove external gateways from router
      tags:
        - routers
  /v2.0/routers/{id}/remove_extraroutes:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Atomically removes a set of extra routes from the router’s already
        existing extra routes.

        This operation is a variation on updating the router’s `routes`
        parameter. In all ways it works the same, except the extra routes sent
        in the request body do not replace the existing set of extra routes.
        Instead the the extra routes sent are removed from the existing set of
        extra routes.

        The use of the add_extraroutes/remove_extraroutes member actions
        is preferred to updating the `routes` attribute in all cases when
        concurrent updates to the set of extra routes are possible.

        The removal’s corner cases behave the following way:

        The format of the request body is the same as the format of a PUT
        request to the router changing the `routes` parameter only. However
        the routes sent are not meant to overwrite the whole `routes`
        parameter, but they are meant to be removed from the existing set.

        The response codes and response body are the same as to the update of
        the `routes` parameter. That is the whole router object is returned
        including the `routes` parameter which represents the result of the
        removal.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/remove_extraroutes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersRemove_ExtraroutesRemove_ExtraroutesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersRemove_ExtraroutesRemove_ExtraroutesResponse'
          description: Ok
      summary: Remove extra routes from router
      tags:
        - routers
  /v2.0/routers/{id}/remove_router_interface:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Deletes an internal interface from a logical router.

        This operation deletes an internal router interface, which detaches
        a subnet from the router. If this subnet ID is the last subnet on
        the port, this operation deletes the port itself. You must specify
        either a subnet ID or port ID in the request body; the
        operation uses this value to identify which router interface to
        deletes.

        You can also specify both a subnet ID and port ID. If you
        specify both IDs, the subnet ID must correspond to the subnet
        ID of the first IP address on the port. Otherwise, this operation
        returns the `Conflict (409)` response code with information about
        the affected router and interface.

        If you try to delete the router interface for subnets that are used
        by one or more `routes`, this operation returns the `Conflict (409)`
        response. In this case, you first need to delete such routes from
        the router.

        If the router or the subnet and port do not exist or are not
        visible to you, this operation returns the `Not Found (404)`
        response code. As a consequence of this operation, the operation
        removes the port connecting the router with the subnet from the
        subnet for the network.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 409
      operationId: routers/id/remove_router_interface:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersRemove_Router_InterfaceRemove_Router_InterfaceRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersRemove_Router_InterfaceRemove_Router_InterfaceResponse'
          description: Ok
      summary: Remove interface from router
      tags:
        - routers
  /v2.0/routers/{id}/update_external_gateways:
    parameters:
      - $ref: '#/components/parameters/routers_router_id'
    put:
      description: |-
        Update some external gateways of router.

        For general information on the add/update/remove external gateways
        operations see `add_external_gateways` above.

        The external gateways to be updated are identified by the `network_ids`
        found in the PUT request. The `external_fixed_ips`, `enable_snat`,
        fields can be updated. The `network_id` field cannot be updated - any
        changes will cause a gateway port to be removed and recreated.

        The format of the request body is the same as the format of the read-only
        `router.external_gateways` parameter, but wrapped as follows:

        The `enable_snat` field does not have any effect for extra gateways except
        for the first external gateway in the list.

        The `network_id` field is used to identify a particular gateway port along
        with the `external_fixed_ips` field. Specifying just the `network_id` field
        is ambiguous: Neutron will attempt to find the matching gateway port but if
        there are multiple matches it will return an error response code.

        The `enable_snat` field can be omitted from the request. Specifying
        `external_fixed_ips` will result in matching ports based on those
        fixed IPs. If a gateway port has a subset of the specified fixed IPs,
        then the set of IPs will be updated to match the ones in the request.
        Alternatively, if a gateway port has a superset of fixed IPs from the
        request the IPs will be removed from the gateway port.

        The response codes and response body are the same as to the update of
        the router. That is the whole router object is returned including the
        `external_gateway_info` and `external_gateways` parameters which
        represents the result of the operation.

        Please note that updating `external_gateway_info` also updates
        the first element of `external_gateways` and it leaves the rest of
        `external_gateways` unchanged.

        Normal response codes: 200

        Error response codes: 400, 401, 404, 412
      operationId: routers/id/update_external_gateways:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersUpdate_External_GatewaysUpdate_External_GatewaysRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouterShowResponse'
          description: Ok
      summary: Update external gateways of router
      tags:
        - routers
  /v2.0/routers/{router_id}/conntrack_helpers:
    get:
      description: |-
        Lists router conntrack helpers associated with a router.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers:get
      parameters:
        - $ref: '#/components/parameters/conntrack_helpers_helper'
        - $ref: '#/components/parameters/conntrack_helpers_id'
        - $ref: '#/components/parameters/conntrack_helpers_port'
        - $ref: '#/components/parameters/conntrack_helpers_protocol'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelpersIndexResponse'
          description: Ok
      summary: List router conntrack helpers
      tags:
        - routers-conntrack-helper
    parameters:
      - $ref: '#/components/parameters/conntrack_helpers_conntrack_helper_router_id'
    post:
      description: |-
        Creates a router conntrack helper.

        Normal response codes: 201

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersConntrack_HelpersCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelpersCreateResponse'
          description: Ok
      summary: Create conntrack helper
      tags:
        - routers-conntrack-helper
  /v2.0/routers/{router_id}/conntrack_helpers/{id}:
    delete:
      description: |-
        Deletes a router conntrack helper.

        Normal response codes: 204

        Error response codes: 404
      operationId: routers/router_id/conntrack_helpers/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete a conntrack helper
      tags:
        - routers-conntrack-helper
    get:
      description: |-
        Shows information for a router conntrack helper.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelperShowResponse'
          description: Ok
      summary: Show conntrack helper
      tags:
        - routers-conntrack-helper
    parameters:
      - $ref: '#/components/parameters/conntrack_helpers_conntrack_helper_id'
      - $ref: '#/components/parameters/conntrack_helpers_conntrack_helper_router_id'
    put:
      description: |-
        Updates a router conntrack helper.

        Normal response codes: 200

        Error response codes: 400, 404
      operationId: routers/router_id/conntrack_helpers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersConntrack_HelperUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersConntrack_HelperUpdateResponse'
          description: Ok
      summary: Update a conntrack helper
      tags:
        - routers-conntrack-helper
  /v2.0/routers/{router_id}/l3-agents:
    get:
      description: |-
        Lists l3 agents hosting a specific router.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: routers/router_id/l3-agents:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersL3_AgentsIndexResponse'
          description: Ok
      summary: List L3 agents hosting a router
      tags:
        - routers
    parameters:
      - $ref: '#/components/parameters/routers_l3-agents_router_id'
    post:
      operationId: routers/router_id/l3-agents:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersL3_AgentsCreateRequest'
      responses:
        '201':
          description: Ok
      tags:
        - routers
  /v2.0/routers/{router_id}/l3-agents/{id}:
    delete:
      operationId: routers/router_id/l3-agents/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers
    get:
      operationId: routers/router_id/l3-agents/id:get
      responses:
        '200':
          description: Ok
      tags:
        - routers
    parameters:
      - $ref: '#/components/parameters/routers_l3-agents_id'
      - $ref: '#/components/parameters/routers_l3-agents_router_id'
    put:
      operationId: routers/router_id/l3-agents/id:put
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersL3_AgentUpdateResponse'
          description: Ok
      tags:
        - routers
  /v2.0/routers/{router_id}/tags:
    delete:
      operationId: routers/router_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers
    get:
      operationId: routers/router_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersTagsIndexResponse'
          description: Ok
      tags:
        - routers
    parameters:
      - $ref: '#/components/parameters/routers_tags_router_id'
    put:
      operationId: routers/router_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutersTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutersTagsUpdate_AllResponse'
          description: Ok
      tags:
        - routers
  /v2.0/routers/{router_id}/tags/{id}:
    delete:
      operationId: routers/router_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - routers
    get:
      operationId: routers/router_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - routers
    parameters:
      - $ref: '#/components/parameters/routers_tags_id'
      - $ref: '#/components/parameters/routers_tags_router_id'
    put:
      operationId: routers/router_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - routers
  /v2.0/security-group-rules:
    get:
      description: |-
        Lists a summary of all OpenStack Networking security group rules that the project can access.

        The list provides the ID for each security group rule.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: security-group-rules:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/security_group_rules_belongs_to_default_sg'
        - $ref: '#/components/parameters/security_group_rules_description'
        - $ref: '#/components/parameters/security_group_rules_direction'
        - $ref: '#/components/parameters/security_group_rules_ethertype'
        - $ref: '#/components/parameters/security_group_rules_id'
        - $ref: '#/components/parameters/security_group_rules_normalized_cidr'
        - $ref: '#/components/parameters/security_group_rules_port_range_max'
        - $ref: '#/components/parameters/security_group_rules_port_range_min'
        - $ref: '#/components/parameters/security_group_rules_protocol'
        - $ref: '#/components/parameters/security_group_rules_remote_address_group_id'
        - $ref: '#/components/parameters/security_group_rules_remote_group_id'
        - $ref: '#/components/parameters/security_group_rules_remote_ip_prefix'
        - $ref: '#/components/parameters/security_group_rules_revision_number'
        - $ref: '#/components/parameters/security_group_rules_security_group_id'
        - $ref: '#/components/parameters/security_group_rules_tenant_id'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RulesIndexResponse'
          description: Ok
      summary: List security group rules
      tags:
        - security-group-rules
    post:
      description: |-
        Creates an OpenStack Networking security group rule.

        Normal response codes: 201

        Error response codes: 400, 401, 404, 409
      operationId: security-group-rules:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_Group_RulesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RulesCreateResponse'
          description: Ok
      summary: Create security group rule
      tags:
        - security-group-rules
  /v2.0/security-group-rules/{id}:
    delete:
      description: |-
        Deletes a rule from an OpenStack Networking security group.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: security-group-rules/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete security group rule
      tags:
        - security-group-rules
    get:
      description: |-
        Shows detailed information for a security group rule.

        The response body contains the following information about the
        security group rule:

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: security-group-rules/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RuleShowResponse'
          description: Ok
      summary: Show security group rule
      tags:
        - security-group-rules
    parameters:
      - $ref: '#/components/parameters/security_group_rules_security_group_rule_id'
    put:
      operationId: security-group-rules/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_Group_RuleUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Group_RuleUpdateResponse'
          description: Ok
      tags:
        - security-group-rules
  /v2.0/security-groups:
    get:
      description: |-
        Lists OpenStack Networking security groups to which the project has access.

        The response is an array of `security_group` objects which contains a list of
        `security_group_rules` objects.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: security-groups:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/security_groups_description'
        - $ref: '#/components/parameters/security_groups_id'
        - $ref: '#/components/parameters/security_groups_name'
        - $ref: '#/components/parameters/security_groups_not-tags'
        - $ref: '#/components/parameters/security_groups_not-tags-any'
        - $ref: '#/components/parameters/security_groups_revision_number'
        - $ref: '#/components/parameters/security_groups_shared'
        - $ref: '#/components/parameters/security_groups_tags'
        - $ref: '#/components/parameters/security_groups_tags-any'
        - $ref: '#/components/parameters/security_groups_tenant_id'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsIndexResponse'
          description: Ok
      summary: List security groups
      tags:
        - security-groups
    post:
      description: |-
        Creates an OpenStack Networking security group.

        This operation creates a security group with default security group
        rules for the IPv4 and IPv6 ether types.

        Normal response codes: 201

        Error response codes: 400, 401, 409
      operationId: security-groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_GroupsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsCreateResponse'
          description: Ok
      summary: Create security group
      tags:
        - security-groups
  /v2.0/security-groups/{id}:
    delete:
      description: |-
        Deletes an OpenStack Networking security group.

        This operation deletes an OpenStack Networking security group and
        its associated security group rules, provided that a port is not
        associated with the security group. If a port is associated with the security
        group 409 (Conflict) is returned.

        This operation does not require a request body. This operation does
        not return a response body.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: security-groups/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete security group
      tags:
        - security-groups
    get:
      description: |-
        Shows details for a security group.

        The associated security group rules are contained in the response.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: security-groups/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupShowResponse'
          description: Ok
      summary: Show security group
      tags:
        - security-groups
    parameters:
      - $ref: '#/components/parameters/security_groups_security_group_id'
    put:
      description: |-
        Updates a security group.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: security-groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_GroupUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupUpdateResponse'
          description: Ok
      summary: Update security group
      tags:
        - security-groups
  /v2.0/security-groups/{security_group_id}/tags:
    delete:
      operationId: security-groups/security_group_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - security-groups
    get:
      operationId: security-groups/security_group_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsTagsIndexResponse'
          description: Ok
      tags:
        - security-groups
    parameters:
      - $ref: '#/components/parameters/security-groups_tags_security_group_id'
    put:
      operationId: security-groups/security_group_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security_GroupsTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_GroupsTagsUpdate_AllResponse'
          description: Ok
      tags:
        - security-groups
  /v2.0/security-groups/{security_group_id}/tags/{id}:
    delete:
      operationId: security-groups/security_group_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - security-groups
    get:
      operationId: security-groups/security_group_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - security-groups
    parameters:
      - $ref: '#/components/parameters/security-groups_tags_id'
      - $ref: '#/components/parameters/security-groups_tags_security_group_id'
    put:
      operationId: security-groups/security_group_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - security-groups
  /v2.0/segments:
    get:
      description: |-
        Lists segments to which the project has access.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: segments:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/segments_description'
        - $ref: '#/components/parameters/segments_id'
        - $ref: '#/components/parameters/segments_name'
        - $ref: '#/components/parameters/segments_network_id'
        - $ref: '#/components/parameters/segments_network_type'
        - $ref: '#/components/parameters/segments_physical_network'
        - $ref: '#/components/parameters/segments_revision_number'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsIndexResponse'
          description: Ok
      summary: List segments
      tags:
        - segments
    post:
      description: |-
        Creates a segment.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: segments:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentsCreateResponse'
          description: Ok
      summary: Create segment
      tags:
        - segments
  /v2.0/segments/{id}:
    delete:
      description: |-
        Deletes a segment and its associated resources.

        Normal response codes: 204

        Error response codes: 401, 404, 409, 412
      operationId: segments/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete segment
      tags:
        - segments
    get:
      description: |-
        Shows details for a segment.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: segments/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentShowResponse'
          description: Ok
      summary: Show segment details
      tags:
        - segments
    parameters:
      - $ref: '#/components/parameters/segments_segment_id'
    put:
      description: |-
        Updates a segment.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: segments/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentUpdateResponse'
          description: Ok
      summary: Update segment
      tags:
        - segments
  /v2.0/service-providers:
    get:
      description: |-
        Lists service providers and their associated service types.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: service-providers:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProvidersIndexResponse'
          description: Ok
      summary: List service providers
      tags:
        - service-providers
    post:
      operationId: service-providers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProvidersCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProvidersCreateResponse'
          description: Ok
      tags:
        - service-providers
  /v2.0/service-providers/{id}:
    delete:
      operationId: service-providers/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - service-providers
    get:
      operationId: service-providers/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProviderShowResponse'
          description: Ok
      tags:
        - service-providers
    parameters:
      - $ref: '#/components/parameters/service_providers_service_provider_id'
    put:
      operationId: service-providers/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProviderUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProviderUpdateResponse'
          description: Ok
      tags:
        - service-providers
  /v2.0/service_profiles:
    get:
      description: |-
        Lists all service profiles visible for the tenant account.

        The list can be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: service_profiles:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/service_profiles_description'
        - $ref: '#/components/parameters/service_profiles_driver'
        - $ref: '#/components/parameters/service_profiles_enabled'
        - $ref: '#/components/parameters/service_profiles_id'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfilesIndexResponse'
          description: Ok
      summary: List service profiles
      tags:
        - service_profiles
    post:
      description: |-
        Creates a service profile.

        This operation establishes a new service profile that can be
        associated with one or more flavors.

        Either metadata or a driver is required.

        If a driver is specified but does not exist, call will return a
        `Not found 404` error with the response body explaining that the
        driver could not be found.

        Creation currently limited to administrators. Other users will
        receive a `Forbidden 403` response code with a response body
        NeutronError message expressing that creation is disallowed by
        policy.

        If the API cannot fulfill the request due to insufficient data or
        data that is not valid, the service returns the HTTP `Bad Request
        (400)` response code with information about the failure in the
        response body. Validation errors require that you correct the error
        and submit the request again.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: service_profiles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProfilesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfilesCreateResponse'
          description: Ok
      summary: Create service profile
      tags:
        - service_profiles
  /v2.0/service_profiles/{id}:
    delete:
      description: |-
        Deletes a service profile.

        Attempting to delete a service profile that is currently associated
        with a flavor will return a `Conflict 409` with a response body
        containing an in use message.

        Either metadata or a driver is required.

        Normal response codes: 204

        Error response codes: 401, 403, 404, 409
      operationId: service_profiles/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete service profile
      tags:
        - service_profiles
    get:
      description: |-
        Shows details for a service profile.

        This operation returns a service profile object by ID. If you are
        not an administrative user and the object is not visible to your
        tenant account, the service returns the HTTP `Forbidden (403)`
        response code.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: service_profiles/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfileShowResponse'
          description: Ok
      summary: Show service profile details
      tags:
        - service_profiles
    parameters:
      - $ref: '#/components/parameters/service_profiles_service_profile_id'
    put:
      description: |-
        Updates a service profile.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404
      operationId: service_profiles/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service_ProfileUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service_ProfileUpdateResponse'
          description: Ok
      summary: Update service profile
      tags:
        - service_profiles
  /v2.0/subnetpools:
    get:
      description: |-
        Lists subnet pools that the project has access to.

        Default policy settings return only the subnet pools owned by
        the project of the user submitting the request, unless the
        user has administrative role.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: subnetpools:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/subnetpools_address_scope_id'
        - $ref: '#/components/parameters/subnetpools_default_prefixlen'
        - $ref: '#/components/parameters/subnetpools_default_quota'
        - $ref: '#/components/parameters/subnetpools_description'
        - $ref: '#/components/parameters/subnetpools_id'
        - $ref: '#/components/parameters/subnetpools_ip_version'
        - $ref: '#/components/parameters/subnetpools_is_default'
        - $ref: '#/components/parameters/subnetpools_max_prefixlen'
        - $ref: '#/components/parameters/subnetpools_min_prefixlen'
        - $ref: '#/components/parameters/subnetpools_name'
        - $ref: '#/components/parameters/subnetpools_not-tags'
        - $ref: '#/components/parameters/subnetpools_not-tags-any'
        - $ref: '#/components/parameters/subnetpools_revision_number'
        - $ref: '#/components/parameters/subnetpools_shared'
        - $ref: '#/components/parameters/subnetpools_tags'
        - $ref: '#/components/parameters/subnetpools_tags-any'
        - $ref: '#/components/parameters/subnetpools_tenant_id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsIndexResponse'
          description: Ok
      summary: List subnet pools
      tags:
        - subnetpools
    post:
      description: |-
        Creates a subnet pool.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404
      operationId: subnetpools:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsCreateResponse'
          description: Ok
      summary: Create subnet pool
      tags:
        - subnetpools
  /v2.0/subnetpools/{id}:
    delete:
      description: |-
        Deletes a subnet pool.

        The operation fails if any subnets allocated from the subnet pool
        are still in use.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: subnetpools/id:delete
      responses:
        '204':
          description: Ok
      summary: Delete subnet pool
      tags:
        - subnetpools
    get:
      description: |-
        Shows information for a subnet pool.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: subnetpools/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolShowResponse'
          description: Ok
      summary: Show subnet pool
      tags:
        - subnetpools
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    put:
      description: |-
        Updates a subnet pool.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: subnetpools/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolUpdateResponse'
          description: Ok
      summary: Update subnet pool
      tags:
        - subnetpools
  /v2.0/subnetpools/{id}/add_prefixes:
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    put:
      description: |-
        Adds prefixes to a subnet pool.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 412
      operationId: subnetpools/id/add_prefixes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsAdd_PrefixesAdd_PrefixesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsAdd_PrefixesAdd_PrefixesResponse'
          description: Ok
      summary: Add prefixes
      tags:
        - subnetpools
  /v2.0/subnetpools/{id}/onboard_network_subnets:
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    put:
      description: |-
        Onboard network subnets to a subnet pool.

        Normal response codes: 200

        Error response codes: 400
      operationId: subnetpools/id/onboard_network_subnets:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsResponse'
          description: Ok
      summary: Onboard subnets
      tags:
        - subnetpools
  /v2.0/subnetpools/{id}/remove_prefixes:
    parameters:
      - $ref: '#/components/parameters/subnetpools_subnetpool_id'
    put:
      description: |-
        Remove prefixes from a subnet pool.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 409, 412
      operationId: subnetpools/id/remove_prefixes:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsRemove_PrefixesRemove_PrefixesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsRemove_PrefixesRemove_PrefixesResponse'
          description: Ok
      summary: Remove prefixes
      tags:
        - subnetpools
  /v2.0/subnetpools/{subnetpool_id}/tags:
    delete:
      operationId: subnetpools/subnetpool_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnetpools
    get:
      operationId: subnetpools/subnetpool_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsTagsIndexResponse'
          description: Ok
      tags:
        - subnetpools
    parameters:
      - $ref: '#/components/parameters/subnetpools_tags_subnetpool_id'
    put:
      operationId: subnetpools/subnetpool_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetpoolsTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetpoolsTagsUpdate_AllResponse'
          description: Ok
      tags:
        - subnetpools
  /v2.0/subnetpools/{subnetpool_id}/tags/{id}:
    delete:
      operationId: subnetpools/subnetpool_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnetpools
    get:
      operationId: subnetpools/subnetpool_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - subnetpools
    parameters:
      - $ref: '#/components/parameters/subnetpools_tags_id'
      - $ref: '#/components/parameters/subnetpools_tags_subnetpool_id'
    put:
      operationId: subnetpools/subnetpool_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - subnetpools
  /v2.0/subnets:
    get:
      description: |-
        Lists subnets that the project has access to.

        Default policy settings return only subnets owned by the
        project of the user submitting the request, unless the
        user has administrative role. You can control which attributes
        are returned by using the fields query parameter. You can filter
        results by using query string parameters.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401
      operationId: subnets:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
        - $ref: '#/components/parameters/subnets_cidr'
        - $ref: '#/components/parameters/subnets_description'
        - $ref: '#/components/parameters/subnets_enable_dhcp'
        - $ref: '#/components/parameters/subnets_gateway_ip'
        - $ref: '#/components/parameters/subnets_id'
        - $ref: '#/components/parameters/subnets_ip_version'
        - $ref: '#/components/parameters/subnets_ipv6_address_mode'
        - $ref: '#/components/parameters/subnets_ipv6_ra_mode'
        - $ref: '#/components/parameters/subnets_name'
        - $ref: '#/components/parameters/subnets_network_id'
        - $ref: '#/components/parameters/subnets_not-tags'
        - $ref: '#/components/parameters/subnets_not-tags-any'
        - $ref: '#/components/parameters/subnets_revision_number'
        - $ref: '#/components/parameters/subnets_router_external'
        - $ref: '#/components/parameters/subnets_segment_id'
        - $ref: '#/components/parameters/subnets_shared'
        - $ref: '#/components/parameters/subnets_subnetpool_id'
        - $ref: '#/components/parameters/subnets_tags'
        - $ref: '#/components/parameters/subnets_tags-any'
        - $ref: '#/components/parameters/subnets_tenant_id'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsIndexResponse'
          description: Ok
      summary: List subnets
      tags:
        - subnets
    post:
      description: |-
        Creates a subnet on a network.

        OpenStack Networking does not try to derive the correct IP version
        from the CIDR. If you do not specify the `gateway_ip` attribute,
        OpenStack Networking allocates an address from the CIDR for the
        gateway for the subnet.

        To specify a subnet without a gateway, set the `gateway_ip`
        attribute to `null` in the request body. If you do not specify
        the `allocation_pools` attribute, OpenStack Networking
        automatically allocates pools for covering all IP addresses in the
        CIDR, excluding the address reserved for the subnet gateway.
        Otherwise, you can explicitly specify allocation pools as shown in
        the following example.

        When you specify both the `allocation_pools` and `gateway_ip`
        attributes, you must ensure that the gateway IP does not overlap
        with the allocation pools; otherwise, the call returns the
        `Conflict (409)` response code.

        A subnet can have one or more name servers and host routes. Hosts
        in this subnet use the name servers. Devices with IP addresses from
        this subnet, not including the local subnet route, use the host
        routes.

        Specify the `ipv6_ra_mode` and `ipv6_address_mode` attributes
        to create subnets that support IPv6 configurations, such as
        stateless address autoconfiguration (SLAAC), DHCPv6 stateful, and
        DHCPv6 stateless configurations.

        A subnet can optionally be associated with a network segment when
        it is created by specifying the `segment_id` of a valid segment
        on the specified network. A network with subnets associated in this
        way is called a routed network. On any given network, all of the
        subnets must be associated with segments or none of them can be.
        Neutron enforces this invariant. Currently, routed networks are
        only supported for provider networks.

        Normal response codes: 201

        Error response codes: 400, 401, 403, 404, 409
      operationId: subnets:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsCreateResponse'
          description: Ok
      summary: Create subnet
      tags:
        - subnets
  /v2.0/subnets/{subnet_id}:
    delete:
      description: |-
        Deletes a subnet.

        The operation fails if subnet IP addresses are still allocated.

        Normal response codes: 204

        Error response codes: 401, 404, 412
      operationId: subnets/subnet_id:delete
      responses:
        '204':
          description: Ok
      summary: Delete subnet
      tags:
        - subnets
    get:
      description: |-
        Shows details for a subnet.

        Use the fields query parameter to filter the results.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 404
      operationId: subnets/subnet_id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetShowResponse'
          description: Ok
      summary: Show subnet details
      tags:
        - subnets
    parameters:
      - $ref: '#/components/parameters/subnets_subnet_subnet_id'
    put:
      description: |-
        Updates a subnet.

        Some attributes, such as IP version (ip_version), CIDR (cidr), and
        segment (segment_id) cannot be updated. Attempting to update these
        attributes results in a `400 Bad Request` error.

        Normal response codes: 200

        Error response codes: 400, 401, 403, 404, 412
      operationId: subnets/subnet_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetUpdateResponse'
          description: Ok
      summary: Update subnet
      tags:
        - subnets
  /v2.0/subnets/{subnet_id}/tags:
    delete:
      operationId: subnets/subnet_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnets
    get:
      operationId: subnets/subnet_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsTagsIndexResponse'
          description: Ok
      tags:
        - subnets
    parameters:
      - $ref: '#/components/parameters/subnets_tags_subnet_id'
    put:
      operationId: subnets/subnet_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetsTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetsTagsUpdate_AllResponse'
          description: Ok
      tags:
        - subnets
  /v2.0/subnets/{subnet_id}/tags/{id}:
    delete:
      operationId: subnets/subnet_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - subnets
    get:
      operationId: subnets/subnet_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - subnets
    parameters:
      - $ref: '#/components/parameters/subnets_tags_id'
      - $ref: '#/components/parameters/subnets_tags_subnet_id'
    put:
      operationId: subnets/subnet_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - subnets
  /v2.0/trunks/{trunk_id}/tags:
    delete:
      operationId: trunks/trunk_id/tags:delete
      responses:
        '204':
          description: Ok
      tags:
        - trunks
    get:
      operationId: trunks/trunk_id/tags:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksTagsIndexResponse'
          description: Ok
      tags:
        - trunks
    parameters:
      - $ref: '#/components/parameters/trunks_tags_trunk_id'
    put:
      operationId: trunks/trunk_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrunksTagsUpdate_AllRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrunksTagsUpdate_AllResponse'
          description: Ok
      tags:
        - trunks
  /v2.0/trunks/{trunk_id}/tags/{id}:
    delete:
      operationId: trunks/trunk_id/tags/id:delete
      responses:
        '204':
          description: Ok
      tags:
        - trunks
    get:
      operationId: trunks/trunk_id/tags/id:get
      responses:
        '204':
          description: Ok
      tags:
        - trunks
    parameters:
      - $ref: '#/components/parameters/trunks_tags_id'
      - $ref: '#/components/parameters/trunks_tags_trunk_id'
    put:
      operationId: trunks/trunk_id/tags/id:put
      responses:
        '201':
          description: Ok
      tags:
        - trunks
  /v2.0/vpn/endpoint-groups:
    get:
      description: |-
        Lists VPN endpoint groups.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/endpoint-groups:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupsIndexResponse'
          description: Ok
      summary: List VPN endpoint groups
      tags:
        - vpn
    post:
      description: |-
        Creates a VPN endpoint group.

        The endpoint group contains one or more endpoints of a specific
        type that you can use to create a VPN connections.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/endpoint-groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnEndpoint_GroupsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupsCreateResponse'
          description: Ok
      summary: Create VPN endpoint group
      tags:
        - vpn
  /v2.0/vpn/endpoint-groups/{id}:
    delete:
      description: |-
        Removes a VPN endpoint group.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/endpoint-groups/id:delete
      responses:
        '204':
          description: Ok
      summary: Remove VPN endpoint group
      tags:
        - vpn
    get:
      description: |-
        Shows details for a VPN endpoint group.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/endpoint-groups/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupShowResponse'
          description: Ok
      summary: Show VPN endpoint group
      tags:
        - vpn
    parameters:
      - $ref: '#/components/parameters/endpoint_groups_endpoint_group_id'
    put:
      description: |-
        Updates settings for a VPN endpoint group.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/endpoint-groups/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnEndpoint_GroupUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnEndpoint_GroupUpdateResponse'
          description: Ok
      summary: Update VPN endpoint group
      tags:
        - vpn
  /v2.0/vpn/ikepolicies:
    get:
      description: |-
        Lists IKE policies.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/ikepolicies:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepoliciesIndexResponse'
          description: Ok
      summary: List IKE policies
      tags:
        - vpn
    post:
      description: |-
        Creates an IKE policy.

        The IKE policy is used for phases one and two negotiation of the
        VPN connection. You can specify both the authentication and
        encryption algorithms for connections.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/ikepolicies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIkepoliciesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepoliciesCreateResponse'
          description: Ok
      summary: Create IKE policy
      tags:
        - vpn
  /v2.0/vpn/ikepolicies/{id}:
    delete:
      description: |-
        Removes an IKE policy.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/ikepolicies/id:delete
      responses:
        '204':
          description: Ok
      summary: Remove IKE policy
      tags:
        - vpn
    get:
      description: |-
        Shows details for an IKE policy.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/ikepolicies/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepolicyShowResponse'
          description: Ok
      summary: Show IKE policy details
      tags:
        - vpn
    parameters:
      - $ref: '#/components/parameters/ikepolicies_ikepolicy_id'
    put:
      description: |-
        Updates policy settings in an IKE policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/ikepolicies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIkepolicyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIkepolicyUpdateResponse'
          description: Ok
      summary: Update IKE policy
      tags:
        - vpn
  /v2.0/vpn/ipsec-site-connections:
    get:
      description: |-
        Lists all IPsec connections.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/ipsec-site-connections:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionsIndexResponse'
          description: Ok
      summary: List IPsec connections
      tags:
        - vpn
    post:
      description: |-
        Creates a site-to-site IPsec connection for a service.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/ipsec-site-connections:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsec_Site_ConnectionsCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionsCreateResponse'
          description: Ok
      summary: Create IPsec connection
      tags:
        - vpn
  /v2.0/vpn/ipsec-site-connections/{id}:
    delete:
      description: |-
        Removes an IPsec connection.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/ipsec-site-connections/id:delete
      responses:
        '204':
          description: Ok
      summary: Remove IPsec connection
      tags:
        - vpn
    get:
      description: |-
        Shows details for an IPsec connection.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/ipsec-site-connections/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionShowResponse'
          description: Ok
      summary: Show IPsec connection
      tags:
        - vpn
    parameters:
      - $ref: '#/components/parameters/ipsec_site_connections_ipsec_site_connection_id'
    put:
      description: |-
        Updates connection settings for an IPsec connection.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/ipsec-site-connections/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsec_Site_ConnectionUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsec_Site_ConnectionUpdateResponse'
          description: Ok
      summary: Update IPsec connection
      tags:
        - vpn
  /v2.0/vpn/ipsecpolicies:
    get:
      description: |-
        Lists all IPsec policies.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/ipsecpolicies:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpoliciesIndexResponse'
          description: Ok
      summary: List IPsec policies
      tags:
        - vpn
    post:
      description: |-
        Creates an IP security (IPsec) policy.

        The IPsec policy specifies the authentication and encryption
        algorithms and encapsulation mode to use for the established VPN
        connection.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/ipsecpolicies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsecpoliciesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpoliciesCreateResponse'
          description: Ok
      summary: Create IPsec policy
      tags:
        - vpn
  /v2.0/vpn/ipsecpolicies/{id}:
    delete:
      description: |-
        Removes an IPsec policy.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/ipsecpolicies/id:delete
      responses:
        '204':
          description: Ok
      summary: Remove IPsec policy
      tags:
        - vpn
    get:
      description: |-
        Shows details for an IPsec policy.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/ipsecpolicies/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpolicyShowResponse'
          description: Ok
      summary: Show IPsec policy
      tags:
        - vpn
    parameters:
      - $ref: '#/components/parameters/ipsecpolicies_ipsecpolicy_id'
    put:
      description: |-
        Updates policy settings in an IPsec policy.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/ipsecpolicies/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnIpsecpolicyUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnIpsecpolicyUpdateResponse'
          description: Ok
      summary: Update IPsec policy
      tags:
        - vpn
  /v2.0/vpn/vpnservices:
    get:
      description: |-
        Lists all VPN services.

        The list might be empty.

        Standard query parameters are supported on the URI.
        For more information, see [Filtering and Column Selection](#filtering).

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Pagination query parameters are supported if Neutron configuration supports
        it by overriding `allow_pagination=false`.
        For more information, see [Pagination](#pagination).

        Sorting query parameters are supported if Neutron configuration supports
        it with `allow_sorting=true`.
        For more information, see [Sorting](#sorting).

        Normal response codes: 200

        Error response codes: 401, 403
      operationId: vpn/vpnservices:get
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/marker'
        - $ref: '#/components/parameters/page_reverse'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/sort_key'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnservicesIndexResponse'
          description: Ok
      summary: List VPN services
      tags:
        - vpn
    post:
      description: |-
        Creates a VPN service.

        The service is associated with a router. After you create the
        service, it can contain multiple VPN connections.

        An optional `flavor_id` attribute can be passed to enable dynamic
        selection of an appropriate provider if configured by the operator.
        It is only available when `vpn-flavors` extension is enabled.
        The basic selection algorithm chooses the provider in the first
        service profile currently associated with flavor. This option can
        only be set in `POST` operation.

        Normal response codes: 201

        Error response codes: 400, 401
      operationId: vpn/vpnservices:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnVpnservicesCreateRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnservicesCreateResponse'
          description: Ok
      summary: Create VPN service
      tags:
        - vpn
  /v2.0/vpn/vpnservices/{id}:
    delete:
      description: |-
        Removes a VPN service.

        If the service has connections, the request is rejected.

        Normal response codes: 204

        Error response codes: 401, 404, 409
      operationId: vpn/vpnservices/id:delete
      responses:
        '204':
          description: Ok
      summary: Remove VPN service
      tags:
        - vpn
    get:
      description: |-
        Shows details for a VPN service.

        If the user is not an administrative user and the VPN service
        object does not belong to the tenant account for the user, the
        operation returns the `Forbidden (403)` response code.

        Use the `fields` query parameter to control which fields are returned
        in the response body.
        For more information, see [Fields](#fields).

        Normal response codes: 200

        Error response codes: 401, 403, 404
      operationId: vpn/vpnservices/id:get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnserviceShowResponse'
          description: Ok
      summary: Show VPN service details
      tags:
        - vpn
    parameters:
      - $ref: '#/components/parameters/vpnservices_vpnservice_id'
    put:
      description: |-
        Updates a VPN service.

        Updates the attributes of a VPN service. You cannot update a
        service with a `PENDING_*` status.

        Normal response codes: 200

        Error response codes: 400, 401, 404
      operationId: vpn/vpnservices/id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VpnVpnserviceUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VpnVpnserviceUpdateResponse'
          description: Ok
      summary: Update VPN service
      tags:
        - vpn
components:
  parameters:
    address_groups_address_group_id:
      description: id parameter for /v2.0/address-groups/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    address_groups_description:
      description: description query parameter for /v2.0/address-groups API
      in: query
      name: description
      schema:
        maxLength: 1024
        type: string
    address_groups_id:
      description: id query parameter for /v2.0/address-groups API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    address_groups_name:
      description: name query parameter for /v2.0/address-groups API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    address_groups_project_id:
      description: project_id query parameter for /v2.0/address-groups API
      in: query
      name: project_id
      schema:
        maxLength: 255
        type: string
    address_groups_revision_number:
      description: revision_number query parameter for /v2.0/address-groups API
      in: query
      name: revision_number
      schema:
        type: string
    address_scopes_address_scope_id:
      description: id parameter for /v2.0/address-scopes/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    address_scopes_id:
      description: id query parameter for /v2.0/address-scopes API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    address_scopes_ip_version:
      description: ip_version query parameter for /v2.0/address-scopes API
      in: query
      name: ip_version
      schema:
        enum:
          - 4
          - 6
        type:
          - integer
          - string
    address_scopes_name:
      description: name query parameter for /v2.0/address-scopes API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    address_scopes_shared:
      description: shared query parameter for /v2.0/address-scopes API
      in: query
      name: shared
      schema:
        type:
          - boolean
          - string
    address_scopes_tenant_id:
      description: tenant_id query parameter for /v2.0/address-scopes API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    agents_admin_state_up:
      description: admin_state_up query parameter for /v2.0/agents API
      in: query
      name: admin_state_up
      schema:
        type:
          - boolean
          - string
    agents_agent_id:
      description: id parameter for /v2.0/agents/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    agents_agent_type:
      description: agent_type query parameter for /v2.0/agents API
      in: query
      name: agent_type
      schema:
        type: string
    agents_alive:
      description: alive query parameter for /v2.0/agents API
      in: query
      name: alive
      schema:
        type: string
    agents_availability_zone:
      description: availability_zone query parameter for /v2.0/agents API
      in: query
      name: availability_zone
      schema:
        type: string
    agents_binary:
      description: binary query parameter for /v2.0/agents API
      in: query
      name: binary
      schema:
        type: string
    agents_description:
      description: description query parameter for /v2.0/agents API
      in: query
      name: description
      schema:
        maxLength: 255
        type:
          - 'null'
          - string
    agents_dhcp-networks_agent_id:
      description: agent_id parameter for 
        /v2.0/agents/{agent_id}/dhcp-networks/{id} API
      in: path
      name: agent_id
      required: true
      schema:
        type: string
    agents_dhcp-networks_id:
      description: id parameter for /v2.0/agents/{agent_id}/dhcp-networks/{id} 
        API
      in: path
      name: id
      required: true
      schema:
        type: string
    agents_host:
      description: host query parameter for /v2.0/agents API
      in: query
      name: host
      schema:
        type: string
    agents_id:
      description: id query parameter for /v2.0/agents API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    agents_l3-routers_agent_id:
      description: agent_id parameter for 
        /v2.0/agents/{agent_id}/l3-routers/{id} API
      in: path
      name: agent_id
      required: true
      schema:
        type: string
    agents_l3-routers_id:
      description: id parameter for /v2.0/agents/{agent_id}/l3-routers/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    agents_topic:
      description: topic query parameter for /v2.0/agents API
      in: query
      name: topic
      schema:
        type: string
    alias_bandwidth_limit_rules_alias_bandwidth_limit_rule_id:
      description: id parameter for /v2.0/qos/alias-bandwidth-limit-rules/{id} 
        API
      in: path
      name: id
      required: true
      schema:
        type: string
    alias_bandwidth_limit_rules_direction:
      description: direction query parameter for 
        /v2.0/qos/alias-bandwidth-limit-rules API
      in: query
      name: direction
      schema:
        enum:
          - egress
          - ingress
        type: string
    alias_bandwidth_limit_rules_id:
      description: id query parameter for /v2.0/qos/alias-bandwidth-limit-rules 
        API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    alias_bandwidth_limit_rules_max_burst_kbps:
      description: max_burst_kbps query parameter for 
        /v2.0/qos/alias-bandwidth-limit-rules API
      in: query
      name: max_burst_kbps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    alias_bandwidth_limit_rules_max_kbps:
      description: max_kbps query parameter for 
        /v2.0/qos/alias-bandwidth-limit-rules API
      in: query
      name: max_kbps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    alias_dscp_marking_rules_alias_dscp_marking_rule_id:
      description: id parameter for /v2.0/qos/alias-dscp-marking-rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    alias_dscp_marking_rules_dscp_mark:
      description: dscp_mark query parameter for 
        /v2.0/qos/alias-dscp-marking-rules API
      in: query
      name: dscp_mark
      schema:
        enum:
          - 0
          - 10
          - 12
          - 14
          - 16
          - 18
          - 20
          - 22
          - 24
          - 26
          - 28
          - 30
          - 32
          - 34
          - 36
          - 38
          - 40
          - 44
          - 46
          - 48
          - 56
          - 8
        type:
          - integer
          - string
    alias_dscp_marking_rules_id:
      description: id query parameter for /v2.0/qos/alias-dscp-marking-rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    alias_minimum_bandwidth_rules_alias_minimum_bandwidth_rule_id:
      description: id parameter for /v2.0/qos/alias-minimum-bandwidth-rules/{id}
        API
      in: path
      name: id
      required: true
      schema:
        type: string
    alias_minimum_bandwidth_rules_direction:
      description: direction query parameter for 
        /v2.0/qos/alias-minimum-bandwidth-rules API
      in: query
      name: direction
      schema:
        enum:
          - egress
          - ingress
        type: string
    alias_minimum_bandwidth_rules_id:
      description: id query parameter for 
        /v2.0/qos/alias-minimum-bandwidth-rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    alias_minimum_bandwidth_rules_min_kbps:
      description: min_kbps query parameter for 
        /v2.0/qos/alias-minimum-bandwidth-rules API
      in: query
      name: min_kbps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    alias_minimum_packet_rate_rules_alias_minimum_packet_rate_rule_id:
      description: id parameter for 
        /v2.0/qos/alias-minimum-packet-rate-rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    alias_minimum_packet_rate_rules_direction:
      description: direction query parameter for 
        /v2.0/qos/alias-minimum-packet-rate-rules API
      in: query
      name: direction
      schema:
        enum:
          - any
          - egress
          - ingress
        type: string
    alias_minimum_packet_rate_rules_id:
      description: id query parameter for 
        /v2.0/qos/alias-minimum-packet-rate-rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    alias_minimum_packet_rate_rules_min_kpps:
      description: min_kpps query parameter for 
        /v2.0/qos/alias-minimum-packet-rate-rules API
      in: query
      name: min_kpps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    auto_allocated_topologies_auto_allocated_topology_id:
      description: id parameter for /v2.0/auto-allocated-topology/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    availability_zones_name:
      description: name query parameter for /v2.0/availability_zones API
      in: query
      name: name
      schema:
        type: string
    availability_zones_resource:
      description: resource query parameter for /v2.0/availability_zones API
      in: query
      name: resource
      schema:
        type: string
    availability_zones_state:
      description: state query parameter for /v2.0/availability_zones API
      in: query
      name: state
      schema:
        type: string
    bandwidth_limit_rules_bandwidth_limit_rule_id:
      description: id parameter for 
        /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    bandwidth_limit_rules_bandwidth_limit_rule_policy_id:
      description: policy_id parameter for 
        /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules/{id} API
      in: path
      name: policy_id
      required: true
      schema:
        type: string
    bandwidth_limit_rules_id:
      description: id query parameter for 
        /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    bandwidth_limit_rules_max_burst_kbps:
      description: max_burst_kbps query parameter for 
        /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
      in: query
      name: max_burst_kbps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    bandwidth_limit_rules_max_kbps:
      description: max_kbps query parameter for 
        /v2.0/qos/policies/{policy_id}/bandwidth_limit_rules API
      in: query
      name: max_kbps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    bindings_binding_id:
      description: id parameter for /v2.0/ports/{port_id}/bindings/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    bindings_binding_port_id:
      description: port_id parameter for /v2.0/ports/{port_id}/bindings/{id} API
      in: path
      name: port_id
      required: true
      schema:
        type: string
    bindings_host:
      description: host query parameter for /v2.0/ports/{port_id}/bindings API
      in: query
      name: host
      schema:
        type: string
    bindings_status:
      description: status query parameter for /v2.0/ports/{port_id}/bindings API
      in: query
      name: status
      schema:
        type: string
    bindings_vif_type:
      description: vif_type query parameter for /v2.0/ports/{port_id}/bindings 
        API
      in: query
      name: vif_type
      schema:
        type: string
    bindings_vnic_type:
      description: vnic_type query parameter for /v2.0/ports/{port_id}/bindings 
        API
      in: query
      name: vnic_type
      schema:
        enum:
          - accelerator-direct
          - accelerator-direct-physical
          - baremetal
          - direct
          - direct-physical
          - macvtap
          - normal
          - remote-managed
          - smart-nic
          - vdpa
          - virtio-forwarder
        type: string
    conntrack_helpers_conntrack_helper_id:
      description: id parameter for 
        /v2.0/routers/{router_id}/conntrack_helpers/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    conntrack_helpers_conntrack_helper_router_id:
      description: router_id parameter for 
        /v2.0/routers/{router_id}/conntrack_helpers/{id} API
      in: path
      name: router_id
      required: true
      schema:
        type: string
    conntrack_helpers_helper:
      description: helper query parameter for 
        /v2.0/routers/{router_id}/conntrack_helpers API
      in: query
      name: helper
      schema:
        maxLength: 64
        type: string
    conntrack_helpers_id:
      description: id query parameter for 
        /v2.0/routers/{router_id}/conntrack_helpers API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    conntrack_helpers_port:
      description: port query parameter for 
        /v2.0/routers/{router_id}/conntrack_helpers API
      in: query
      name: port
      schema:
        maximum: 65535
        minimum: 1
        type:
          - integer
          - string
    conntrack_helpers_protocol:
      description: protocol query parameter for 
        /v2.0/routers/{router_id}/conntrack_helpers API
      in: query
      name: protocol
      schema:
        enum:
          - dccp
          - icmp
          - ipv6-icmp
          - sctp
          - tcp
          - udp
        type: string
    default_security_group_rules_default_security_group_rule_id:
      description: id parameter for /v2.0/default-security-group-rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    default_security_group_rules_description:
      description: description query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: description
      schema:
        maxLength: 1024
        type: string
    default_security_group_rules_direction:
      description: direction query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: direction
      schema:
        enum:
          - egress
          - ingress
        type: string
    default_security_group_rules_ethertype:
      description: ethertype query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: ethertype
      schema:
        enum:
          - IPv4
          - IPv6
        type: string
    default_security_group_rules_id:
      description: id query parameter for /v2.0/default-security-group-rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    default_security_group_rules_port_range_max:
      description: port_range_max query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: port_range_max
      schema:
        type:
          - integer
          - 'null'
    default_security_group_rules_port_range_min:
      description: port_range_min query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: port_range_min
      schema:
        type:
          - integer
          - 'null'
    default_security_group_rules_protocol:
      description: protocol query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: protocol
      schema:
        type: string
    default_security_group_rules_remote_address_group_id:
      description: remote_address_group_id query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: remote_address_group_id
      schema:
        type: string
    default_security_group_rules_remote_group_id:
      description: |-
        Filter the security group rule list result by the ID of the remote group
        that associates with this security group rule. This field can contains uuid
        of the security group or special word `PARENT` which means that in the
        real rule created from this template, uuid of the owner Security Group will
        be put as `remote_group_id`.
      in: query
      name: remote_group_id
      schema:
        type: string
    default_security_group_rules_remote_ip_prefix:
      description: remote_ip_prefix query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: remote_ip_prefix
      schema:
        type: string
    default_security_group_rules_used_in_default_sg:
      description: used_in_default_sg query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: used_in_default_sg
      schema:
        type:
          - boolean
          - string
    default_security_group_rules_used_in_non_default_sg:
      description: used_in_non_default_sg query parameter for 
        /v2.0/default-security-group-rules API
      in: query
      name: used_in_non_default_sg
      schema:
        type:
          - boolean
          - string
    dscp_marking_rules_dscp_mark:
      description: dscp_mark query parameter for 
        /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
      in: query
      name: dscp_mark
      schema:
        enum:
          - 0
          - 10
          - 12
          - 14
          - 16
          - 18
          - 20
          - 22
          - 24
          - 26
          - 28
          - 30
          - 32
          - 34
          - 36
          - 38
          - 40
          - 44
          - 46
          - 48
          - 56
          - 8
        type:
          - integer
          - string
    dscp_marking_rules_dscp_marking_rule_id:
      description: id parameter for 
        /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    dscp_marking_rules_dscp_marking_rule_policy_id:
      description: policy_id parameter for 
        /v2.0/qos/policies/{policy_id}/dscp_marking_rules/{id} API
      in: path
      name: policy_id
      required: true
      schema:
        type: string
    dscp_marking_rules_id:
      description: id query parameter for 
        /v2.0/qos/policies/{policy_id}/dscp_marking_rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    endpoint_groups_endpoint_group_id:
      description: id parameter for /v2.0/vpn/endpoint-groups/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    extensions_id:
      description: id parameter for /v2.0/extensions/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    flavors_description:
      description: description query parameter for /v2.0/flavors API
      in: query
      name: description
      schema:
        maxLength: 1024
        type:
          - 'null'
          - string
    flavors_enabled:
      description: enabled query parameter for /v2.0/flavors API
      in: query
      name: enabled
      schema:
        type:
          - boolean
          - 'null'
          - string
    flavors_flavor_id:
      description: id parameter for /v2.0/flavors/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    flavors_id:
      description: id query parameter for /v2.0/flavors API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    flavors_name:
      description: name query parameter for /v2.0/flavors API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    flavors_service_type:
      description: service_type query parameter for /v2.0/flavors API
      in: query
      name: service_type
      schema:
        type: string
    floatingip_pools_floatingip_pool_id:
      description: id parameter for /v2.0/floatingip-pools/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    floatingips_description:
      description: description query parameter for /v2.0/floatingips API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    floatingips_fixed_ip_address:
      description: fixed_ip_address query parameter for /v2.0/floatingips API
      in: query
      name: fixed_ip_address
      schema:
        type:
          - 'null'
          - string
    floatingips_floating_ip_address:
      description: floating_ip_address query parameter for /v2.0/floatingips API
      in: query
      name: floating_ip_address
      schema:
        type:
          - 'null'
          - string
    floatingips_floating_network_id:
      description: floating_network_id query parameter for /v2.0/floatingips API
      in: query
      name: floating_network_id
      schema:
        format: uuid
        type: string
    floatingips_floatingip_id:
      description: id parameter for /v2.0/floatingips/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    floatingips_id:
      description: id query parameter for /v2.0/floatingips API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    floatingips_not-tags:
      description: not-tags query parameter for /v2.0/floatingips API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    floatingips_not-tags-any:
      description: not-tags-any query parameter for /v2.0/floatingips API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    floatingips_port_id:
      description: port_id query parameter for /v2.0/floatingips API
      in: query
      name: port_id
      schema:
        format: uuid
        type:
          - 'null'
          - string
    floatingips_revision_number:
      description: revision_number query parameter for /v2.0/floatingips API
      in: query
      name: revision_number
      schema:
        type: string
    floatingips_router_id:
      description: router_id query parameter for /v2.0/floatingips API
      in: query
      name: router_id
      schema:
        format: uuid
        type:
          - 'null'
          - string
    floatingips_status:
      description: status query parameter for /v2.0/floatingips API
      in: query
      name: status
      schema:
        type: string
    floatingips_tags:
      description: tags query parameter for /v2.0/floatingips API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    floatingips_tags-any:
      description: tags-any query parameter for /v2.0/floatingips API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    floatingips_tags_floatingip_id:
      description: floatingip_id parameter for 
        /v2.0/floatingips/{floatingip_id}/tags/{id} API
      in: path
      name: floatingip_id
      required: true
      schema:
        type: string
    floatingips_tags_id:
      description: id parameter for /v2.0/floatingips/{floatingip_id}/tags/{id} 
        API
      in: path
      name: id
      required: true
      schema:
        type: string
    floatingips_tenant_id:
      description: tenant_id query parameter for /v2.0/floatingips API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    ikepolicies_ikepolicy_id:
      description: id parameter for /v2.0/vpn/ikepolicies/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    ipsec_site_connections_ipsec_site_connection_id:
      description: id parameter for /v2.0/vpn/ipsec-site-connections/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    ipsecpolicies_ipsecpolicy_id:
      description: id parameter for /v2.0/vpn/ipsecpolicies/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    limit:
      description: Requests a page size of items. Returns a number of items up 
        to a limit value. Use the limit parameter to make an initial limited 
        request and use the ID of the last-seen item from the response as the 
        marker parameter value in a subsequent limited request.
      in: query
      name: limit
      schema:
        minimum: 0
        type: integer
    local_ips_description:
      description: description query parameter for /v2.0/local-ips API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    local_ips_id:
      description: id query parameter for /v2.0/local-ips API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    local_ips_ip_mode:
      description: ip_mode query parameter for /v2.0/local-ips API
      in: query
      name: ip_mode
      schema:
        enum:
          - passthrough
          - translate
        type: string
    local_ips_local_ip_address:
      description: local_ip_address query parameter for /v2.0/local-ips API
      in: query
      name: local_ip_address
      schema:
        type:
          - 'null'
          - string
    local_ips_local_ip_id:
      description: id parameter for /v2.0/local-ips/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    local_ips_local_port_id:
      description: local_port_id query parameter for /v2.0/local-ips API
      in: query
      name: local_port_id
      schema:
        format: uuid
        type: string
    local_ips_name:
      description: name query parameter for /v2.0/local-ips API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    local_ips_network_id:
      description: network_id query parameter for /v2.0/local-ips API
      in: query
      name: network_id
      schema:
        format: uuid
        type: string
    local_ips_project_id:
      description: project_id query parameter for /v2.0/local-ips API
      in: query
      name: project_id
      schema:
        maxLength: 255
        type: string
    local_ips_revision_number:
      description: revision_number query parameter for /v2.0/local-ips API
      in: query
      name: revision_number
      schema:
        type: string
    loggable_resources_loggable_resource_id:
      description: id parameter for /v2.0/log/loggable-resources/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    logs_description:
      description: description query parameter for /v2.0/log/logs API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    logs_enabled:
      description: enabled query parameter for /v2.0/log/logs API
      in: query
      name: enabled
      schema:
        type:
          - boolean
          - string
    logs_event:
      description: event query parameter for /v2.0/log/logs API
      in: query
      name: event
      schema:
        enum:
          - ACCEPT
          - ALL
          - DROP
        type: string
    logs_id:
      description: id query parameter for /v2.0/log/logs API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    logs_log_id:
      description: id parameter for /v2.0/log/logs/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    logs_name:
      description: name query parameter for /v2.0/log/logs API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    logs_project_id:
      description: project_id query parameter for /v2.0/log/logs API
      in: query
      name: project_id
      schema:
        maxLength: 255
        type: string
    logs_resource_id:
      description: resource_id query parameter for /v2.0/log/logs API
      in: query
      name: resource_id
      schema:
        format: uuid
        type:
          - 'null'
          - string
    logs_resource_type:
      description: resource_type query parameter for /v2.0/log/logs API
      in: query
      name: resource_type
      schema:
        maxLength: 255
        type: string
    logs_revision_number:
      description: revision_number query parameter for /v2.0/log/logs API
      in: query
      name: revision_number
      schema:
        type: string
    logs_target_id:
      description: target_id query parameter for /v2.0/log/logs API
      in: query
      name: target_id
      schema:
        format: uuid
        type:
          - 'null'
          - string
    marker:
      description: The ID of the last-seen item. Use the limit parameter to make
        an initial limited request and use the ID of the last-seen item from the
        response as the marker parameter value in a subsequent limited request.
      in: query
      name: marker
      schema:
        type: string
    metering_label_rules_destination_ip_prefix:
      description: |-
        The destination IP prefix that the metering rule is associated with; in
        this context, destination IP prefix represents the destination IP of the
        network packet. Therefore, for an ingress rule, the destination IP is
        the internal IP associated with some OpenStack VM. On the other hand,
        for an egress rule, the destination IP prefix is the IP of some external
        system that an application running inside some OpenStack virtual machine
        is trying to access. Moreover, instead of an IP, one can also use a CIDR
        as the destination IP prefix.
      in: query
      name: destination_ip_prefix
      schema:
        type: string
    metering_label_rules_direction:
      description: direction query parameter for 
        /v2.0/metering/metering-label-rules API
      in: query
      name: direction
      schema:
        enum:
          - egress
          - ingress
        type: string
    metering_label_rules_excluded:
      description: excluded query parameter for 
        /v2.0/metering/metering-label-rules API
      in: query
      name: excluded
      schema:
        type:
          - boolean
          - string
    metering_label_rules_id:
      description: id query parameter for /v2.0/metering/metering-label-rules 
        API
      in: query
      name: id
      schema:
        type: string
    metering_label_rules_metering_label_id:
      description: metering_label_id query parameter for 
        /v2.0/metering/metering-label-rules API
      in: query
      name: metering_label_id
      schema:
        format: uuid
        type: string
    metering_label_rules_metering_label_rule_id:
      description: id parameter for /v2.0/metering/metering-label-rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    metering_label_rules_remote_ip_prefix:
      description: remote_ip_prefix query parameter for 
        /v2.0/metering/metering-label-rules API
      in: query
      name: remote_ip_prefix
      schema:
        type: string
    metering_label_rules_source_ip_prefix:
      description: |-
        The source IP prefix that the metering rule is associated with; in this
        context, source IP prefix represents the source IP of the network packet.
        Therefore, for an ingress rule, the source IP is the IP of the system
        accessing something inside OpenStack. On the other hand, for an egress
        rule, the source IP is the internal IP associated with some OpenStack VM.
        Moreover, instead of an IP, one can also use a CIDR as the source IP
        prefix.
      in: query
      name: source_ip_prefix
      schema:
        type: string
    metering_labels_description:
      description: description query parameter for 
        /v2.0/metering/metering-labels API
      in: query
      name: description
      schema:
        maxLength: 1024
        type: string
    metering_labels_id:
      description: id query parameter for /v2.0/metering/metering-labels API
      in: query
      name: id
      schema:
        type: string
    metering_labels_metering_label_id:
      description: id parameter for /v2.0/metering/metering-labels/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    metering_labels_name:
      description: name query parameter for /v2.0/metering/metering-labels API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    metering_labels_shared:
      description: shared query parameter for /v2.0/metering/metering-labels API
      in: query
      name: shared
      schema:
        type:
          - boolean
          - string
    metering_labels_tenant_id:
      description: tenant_id query parameter for /v2.0/metering/metering-labels 
        API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    minimum_bandwidth_rules_direction:
      description: direction query parameter for 
        /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
      in: query
      name: direction
      schema:
        enum:
          - egress
          - ingress
        type: string
    minimum_bandwidth_rules_id:
      description: id query parameter for 
        /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    minimum_bandwidth_rules_min_kbps:
      description: min_kbps query parameter for 
        /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules API
      in: query
      name: min_kbps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    minimum_bandwidth_rules_minimum_bandwidth_rule_id:
      description: id parameter for 
        /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    minimum_bandwidth_rules_minimum_bandwidth_rule_policy_id:
      description: policy_id parameter for 
        /v2.0/qos/policies/{policy_id}/minimum_bandwidth_rules/{id} API
      in: path
      name: policy_id
      required: true
      schema:
        type: string
    minimum_packet_rate_rules_direction:
      description: direction query parameter for 
        /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
      in: query
      name: direction
      schema:
        enum:
          - any
          - egress
          - ingress
        type: string
    minimum_packet_rate_rules_id:
      description: id query parameter for 
        /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    minimum_packet_rate_rules_min_kpps:
      description: min_kpps query parameter for 
        /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules API
      in: query
      name: min_kpps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    minimum_packet_rate_rules_minimum_packet_rate_rule_id:
      description: id parameter for 
        /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    minimum_packet_rate_rules_minimum_packet_rate_rule_policy_id:
      description: policy_id parameter for 
        /v2.0/qos/policies/{policy_id}/minimum-packet-rate-rules/{id} API
      in: path
      name: policy_id
      required: true
      schema:
        type: string
    ndp_proxies_description:
      description: description query parameter for /v2.0/ndp-proxies API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    ndp_proxies_name:
      description: name query parameter for /v2.0/ndp-proxies API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    ndp_proxies_ndp_proxy_id:
      description: id parameter for /v2.0/ndp-proxies/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    ndp_proxies_revision_number:
      description: revision_number query parameter for /v2.0/ndp-proxies API
      in: query
      name: revision_number
      schema:
        type: string
    network_ip_availabilities_ip_version:
      description: ip_version query parameter for 
        /v2.0/network-ip-availabilities API
      in: query
      name: ip_version
      schema:
        type: string
    network_ip_availabilities_network_id:
      description: network_id query parameter for 
        /v2.0/network-ip-availabilities API
      in: query
      name: network_id
      schema:
        type: string
    network_ip_availabilities_network_ip_availability_id:
      description: id parameter for /v2.0/network-ip-availabilities/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    network_ip_availabilities_network_name:
      description: network_name query parameter for 
        /v2.0/network-ip-availabilities API
      in: query
      name: network_name
      schema:
        type: string
    network_ip_availabilities_tenant_id:
      description: tenant_id query parameter for /v2.0/network-ip-availabilities
        API
      in: query
      name: tenant_id
      schema:
        type: string
    network_segment_ranges_description:
      description: description query parameter for /v2.0/network-segment-ranges 
        API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    network_segment_ranges_id:
      description: id query parameter for /v2.0/network-segment-ranges API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    network_segment_ranges_name:
      description: name query parameter for /v2.0/network-segment-ranges API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    network_segment_ranges_network_segment_range_id:
      description: id parameter for /v2.0/network-segment-ranges/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    network_segment_ranges_network_type:
      description: network_type query parameter for /v2.0/network-segment-ranges
        API
      in: query
      name: network_type
      schema:
        enum:
          - geneve
          - gre
          - vlan
          - vxlan
        type: string
    network_segment_ranges_not-tags:
      description: not-tags query parameter for /v2.0/network-segment-ranges API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    network_segment_ranges_not-tags-any:
      description: not-tags-any query parameter for /v2.0/network-segment-ranges
        API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    network_segment_ranges_physical_network:
      description: physical_network query parameter for 
        /v2.0/network-segment-ranges API
      in: query
      name: physical_network
      schema:
        maxLength: 64
        type: string
    network_segment_ranges_project_id:
      description: project_id query parameter for /v2.0/network-segment-ranges 
        API
      in: query
      name: project_id
      schema:
        maxLength: 255
        type: string
    network_segment_ranges_revision_number:
      description: revision_number query parameter for 
        /v2.0/network-segment-ranges API
      in: query
      name: revision_number
      schema:
        type: string
    network_segment_ranges_tags:
      description: tags query parameter for /v2.0/network-segment-ranges API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    network_segment_ranges_tags-any:
      description: tags-any query parameter for /v2.0/network-segment-ranges API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    network_segment_ranges_tags_id:
      description: id parameter for 
        /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    network_segment_ranges_tags_network_segment_range_id:
      description: network_segment_range_id parameter for 
        /v2.0/network_segment_ranges/{network_segment_range_id}/tags/{id} API
      in: path
      name: network_segment_range_id
      required: true
      schema:
        type: string
    networks_admin_state_up:
      description: admin_state_up query parameter for /v2.0/networks API
      in: query
      name: admin_state_up
      schema:
        type:
          - boolean
          - string
    networks_description:
      description: description query parameter for /v2.0/networks API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    networks_dhcp-agents_id:
      description: id parameter for /v2.0/networks/{network_id}/dhcp-agents/{id}
        API
      in: path
      name: id
      required: true
      schema:
        type: string
    networks_dhcp-agents_network_id:
      description: network_id parameter for 
        /v2.0/networks/{network_id}/dhcp-agents/{id} API
      in: path
      name: network_id
      required: true
      schema:
        type: string
    networks_id:
      description: id query parameter for /v2.0/networks API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    networks_is_default:
      description: is_default query parameter for /v2.0/networks API
      in: query
      name: is_default
      schema:
        type:
          - boolean
          - string
    networks_mtu:
      description: mtu query parameter for /v2.0/networks API
      in: query
      name: mtu
      schema:
        minimum: 0
        type:
          - integer
          - string
    networks_name:
      description: name query parameter for /v2.0/networks API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    networks_network_network_id:
      description: network_id parameter for /v2.0/networks/{network_id} API
      in: path
      name: network_id
      required: true
      schema:
        type: string
    networks_not-tags:
      description: not-tags query parameter for /v2.0/networks API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    networks_not-tags-any:
      description: not-tags-any query parameter for /v2.0/networks API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    networks_provider_network_type:
      description: provider:network_type query parameter for /v2.0/networks API
      in: query
      name: provider:network_type
      schema:
        maxLength: 32
        type: string
    networks_provider_physical_network:
      description: provider:physical_network query parameter for /v2.0/networks 
        API
      in: query
      name: provider:physical_network
      schema:
        maxLength: 64
        type: string
    networks_provider_segmentation_id:
      description: provider:segmentation_id query parameter for /v2.0/networks 
        API
      in: query
      name: provider:segmentation_id
      schema:
        type:
          - integer
          - string
    networks_qinq:
      description: qinq query parameter for /v2.0/networks API
      in: query
      name: qinq
      schema:
        type:
          - boolean
          - string
    networks_revision_number:
      description: revision_number query parameter for /v2.0/networks API
      in: query
      name: revision_number
      schema:
        type: string
    networks_router_external:
      description: router:external query parameter for /v2.0/networks API
      in: query
      name: router:external
      schema:
        type:
          - boolean
          - string
    networks_shared:
      description: shared query parameter for /v2.0/networks API
      in: query
      name: shared
      schema:
        type:
          - boolean
          - string
    networks_status:
      description: status query parameter for /v2.0/networks API
      in: query
      name: status
      schema:
        type: string
    networks_tags:
      description: tags query parameter for /v2.0/networks API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    networks_tags-any:
      description: tags-any query parameter for /v2.0/networks API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    networks_tags_id:
      description: id parameter for /v2.0/networks/{network_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    networks_tags_network_id:
      description: network_id parameter for 
        /v2.0/networks/{network_id}/tags/{id} API
      in: path
      name: network_id
      required: true
      schema:
        type: string
    networks_tenant_id:
      description: tenant_id query parameter for /v2.0/networks API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    networks_vlan_transparent:
      description: vlan_transparent query parameter for /v2.0/networks API
      in: query
      name: vlan_transparent
      schema:
        type:
          - boolean
          - string
    next_providers_next_provider_flavor_id:
      description: flavor_id parameter for 
        /v2.0/flavors/{flavor_id}/next_providers/{id} API
      in: path
      name: flavor_id
      required: true
      schema:
        type: string
    next_providers_next_provider_id:
      description: id parameter for 
        /v2.0/flavors/{flavor_id}/next_providers/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    packet_rate_limit_rules_direction:
      description: direction query parameter for 
        /v2.0/policies/{policy_id}/packet_rate_limit_rules API
      in: query
      name: direction
      schema:
        enum:
          - egress
          - ingress
        type: string
    packet_rate_limit_rules_id:
      description: id query parameter for 
        /v2.0/policies/{policy_id}/packet_rate_limit_rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    packet_rate_limit_rules_max_burst_kpps:
      description: max_burst_kpps query parameter for 
        /v2.0/policies/{policy_id}/packet_rate_limit_rules API
      in: query
      name: max_burst_kpps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    packet_rate_limit_rules_max_kpps:
      description: max_kpps query parameter for 
        /v2.0/policies/{policy_id}/packet_rate_limit_rules API
      in: query
      name: max_kpps
      schema:
        maximum: 2147483647
        minimum: 0
        type:
          - integer
          - string
    packet_rate_limit_rules_packet_rate_limit_rule_id:
      description: id parameter for 
        /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    packet_rate_limit_rules_packet_rate_limit_rule_policy_id:
      description: policy_id parameter for 
        /v2.0/policies/{policy_id}/packet_rate_limit_rules/{id} API
      in: path
      name: policy_id
      required: true
      schema:
        type: string
    page_reverse:
      description: Reverse the page direction
      in: query
      name: page_reverse
      schema:
        type: boolean
    policies_description:
      description: description query parameter for /v2.0/qos/policies API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    policies_id:
      description: id query parameter for /v2.0/qos/policies API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    policies_is_default:
      description: is_default query parameter for /v2.0/qos/policies API
      in: query
      name: is_default
      schema:
        type:
          - boolean
          - string
    policies_name:
      description: name query parameter for /v2.0/qos/policies API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    policies_not-tags:
      description: not-tags query parameter for /v2.0/qos/policies API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    policies_not-tags-any:
      description: not-tags-any query parameter for /v2.0/qos/policies API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    policies_policy_id:
      description: id parameter for /v2.0/qos/policies/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    policies_revision_number:
      description: revision_number query parameter for /v2.0/qos/policies API
      in: query
      name: revision_number
      schema:
        type: string
    policies_shared:
      description: shared query parameter for /v2.0/qos/policies API
      in: query
      name: shared
      schema:
        type:
          - boolean
          - string
    policies_tags:
      description: tags query parameter for /v2.0/qos/policies API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    policies_tags-any:
      description: tags-any query parameter for /v2.0/qos/policies API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    policies_tags_id:
      description: id parameter for /v2.0/policies/{policy_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    policies_tags_policy_id:
      description: policy_id parameter for /v2.0/policies/{policy_id}/tags/{id} 
        API
      in: path
      name: policy_id
      required: true
      schema:
        type: string
    policies_tenant_id:
      description: tenant_id query parameter for /v2.0/qos/policies API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    port_associations_fixed_ip:
      description: fixed_ip query parameter for 
        /v2.0/local_ips/{local_ip_id}/port_associations API
      in: query
      name: fixed_ip
      schema:
        type:
          - 'null'
          - string
    port_associations_fixed_port_id:
      description: fixed_port_id query parameter for 
        /v2.0/local_ips/{local_ip_id}/port_associations API
      in: query
      name: fixed_port_id
      schema:
        format: uuid
        type: string
    port_associations_host:
      description: host query parameter for 
        /v2.0/local_ips/{local_ip_id}/port_associations API
      in: query
      name: host
      schema:
        type: string
    port_associations_local_ip_address:
      description: local_ip_address query parameter for 
        /v2.0/local_ips/{local_ip_id}/port_associations API
      in: query
      name: local_ip_address
      schema:
        type: string
    port_associations_port_association_id:
      description: id parameter for 
        /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    port_associations_port_association_local_ip_id:
      description: local_ip_id parameter for 
        /v2.0/local_ips/{local_ip_id}/port_associations/{id} API
      in: path
      name: local_ip_id
      required: true
      schema:
        type: string
    port_forwardings_description:
      description: description query parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings API
      in: query
      name: description
      schema:
        maxLength: 1024
        type: string
    port_forwardings_external_port:
      description: external_port query parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings API
      in: query
      name: external_port
      schema:
        maximum: 65535
        minimum: 1
        type:
          - 'null'
          - number
    port_forwardings_external_port_range:
      description: external_port_range query parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings API
      in: query
      name: external_port_range
      schema:
        maximum: 65535
        minimum: 1
        type: number
    port_forwardings_id:
      description: id query parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    port_forwardings_internal_port_id:
      description: internal_port_id query parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings API
      in: query
      name: internal_port_id
      schema:
        format: uuid
        type: string
    port_forwardings_port_forwarding_floatingip_id:
      description: floatingip_id parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
      in: path
      name: floatingip_id
      required: true
      schema:
        type: string
    port_forwardings_port_forwarding_id:
      description: id parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    port_forwardings_protocol:
      description: protocol query parameter for 
        /v2.0/floatingips/{floatingip_id}/port_forwardings API
      in: query
      name: protocol
      schema:
        enum:
          - dccp
          - icmp
          - ipv6-icmp
          - sctp
          - tcp
          - udp
        type: string
    ports_admin_state_up:
      description: admin_state_up query parameter for /v2.0/ports API
      in: query
      name: admin_state_up
      schema:
        type:
          - boolean
          - string
    ports_binding_host_id:
      description: binding:host_id query parameter for /v2.0/ports API
      in: query
      name: binding:host_id
      schema:
        type: string
    ports_description:
      description: description query parameter for /v2.0/ports API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    ports_device_id:
      description: device_id query parameter for /v2.0/ports API
      in: query
      name: device_id
      schema:
        maxLength: 255
        type: string
    ports_device_owner:
      description: device_owner query parameter for /v2.0/ports API
      in: query
      name: device_owner
      schema:
        maxLength: 255
        type: string
    ports_fixed_ips:
      description: fixed_ips query parameter for /v2.0/ports API
      explode: false
      in: query
      name: fixed_ips
      schema:
        description: The IP addresses for the port. If the port has multiple IP 
          addresses, this field has multiple entries. Each entry consists of IP 
          address (ip_address) and the subnet ID from which the IP address is 
          assigned (subnet_id).
        items:
          type: string
        type: array
      style: form
    ports_id:
      description: id query parameter for /v2.0/ports API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    ports_ip_allocation:
      description: ip_allocation query parameter for /v2.0/ports API
      in: query
      name: ip_allocation
      schema:
        type: string
    ports_mac_address:
      description: mac_address query parameter for /v2.0/ports API
      in: query
      name: mac_address
      schema:
        type: string
    ports_name:
      description: name query parameter for /v2.0/ports API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    ports_network_id:
      description: network_id query parameter for /v2.0/ports API
      in: query
      name: network_id
      schema:
        format: uuid
        type: string
    ports_not-tags:
      description: not-tags query parameter for /v2.0/ports API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    ports_not-tags-any:
      description: not-tags-any query parameter for /v2.0/ports API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    ports_port_port_id:
      description: port_id parameter for 
        /v2.0/ports/{port_id}/add_allowed_address_pairs API
      in: path
      name: port_id
      required: true
      schema:
        type: string
    ports_revision_number:
      description: revision_number query parameter for /v2.0/ports API
      in: query
      name: revision_number
      schema:
        type: string
    ports_security_groups:
      description: security_groups query parameter for /v2.0/ports API
      in: query
      name: security_groups
      schema:
        items:
          format: uuid
          type: string
        type: array
    ports_status:
      description: status query parameter for /v2.0/ports API
      in: query
      name: status
      schema:
        type: string
    ports_tags:
      description: tags query parameter for /v2.0/ports API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    ports_tags-any:
      description: tags-any query parameter for /v2.0/ports API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    ports_tags_id:
      description: id parameter for /v2.0/ports/{port_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    ports_tags_port_id:
      description: port_id parameter for /v2.0/ports/{port_id}/tags/{id} API
      in: path
      name: port_id
      required: true
      schema:
        type: string
    ports_tenant_id:
      description: tenant_id query parameter for /v2.0/ports API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    quotas_default_id:
      description: id parameter for /v2.0/quotas/{id}/default API
      in: path
      name: id
      required: true
      schema:
        type: string
    quotas_details_id:
      description: id parameter for /v2.0/quotas/{id}/details API
      in: path
      name: id
      required: true
      schema:
        type: string
    quotas_id:
      description: id parameter for /v2.0/quotas/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    rbac_policies_action:
      description: action query parameter for /v2.0/rbac-policies API
      in: query
      name: action
      schema:
        maxLength: 255
        type: string
    rbac_policies_id:
      description: id query parameter for /v2.0/rbac-policies API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    rbac_policies_object_id:
      description: object_id query parameter for /v2.0/rbac-policies API
      in: query
      name: object_id
      schema:
        format: uuid
        type: string
    rbac_policies_object_type:
      description: object_type query parameter for /v2.0/rbac-policies API
      in: query
      name: object_type
      schema:
        type: string
    rbac_policies_rbac_policy_id:
      description: id parameter for /v2.0/rbac-policies/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    rbac_policies_target_tenant:
      description: target_tenant query parameter for /v2.0/rbac-policies API
      in: query
      name: target_tenant
      schema:
        maxLength: 255
        type: string
    rbac_policies_tenant_id:
      description: tenant_id query parameter for /v2.0/rbac-policies API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    routers_admin_state_up:
      description: admin_state_up query parameter for /v2.0/routers API
      in: query
      name: admin_state_up
      schema:
        type:
          - boolean
          - string
    routers_description:
      description: description query parameter for /v2.0/routers API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    routers_enable_ndp_proxy:
      description: enable_ndp_proxy query parameter for /v2.0/routers API
      in: query
      name: enable_ndp_proxy
      schema:
        type:
          - boolean
          - 'null'
          - string
    routers_id:
      description: id query parameter for /v2.0/routers API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    routers_l3-agents_id:
      description: id parameter for /v2.0/routers/{router_id}/l3-agents/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    routers_l3-agents_router_id:
      description: router_id parameter for 
        /v2.0/routers/{router_id}/l3-agents/{id} API
      in: path
      name: router_id
      required: true
      schema:
        type: string
    routers_name:
      description: name query parameter for /v2.0/routers API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    routers_not-tags:
      description: not-tags query parameter for /v2.0/routers API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    routers_not-tags-any:
      description: not-tags-any query parameter for /v2.0/routers API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    routers_revision_number:
      description: revision_number query parameter for /v2.0/routers API
      in: query
      name: revision_number
      schema:
        type: string
    routers_router_id:
      description: id parameter for /v2.0/routers/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    routers_tags:
      description: tags query parameter for /v2.0/routers API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    routers_tags-any:
      description: tags-any query parameter for /v2.0/routers API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    routers_tags_id:
      description: id parameter for /v2.0/routers/{router_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    routers_tags_router_id:
      description: router_id parameter for /v2.0/routers/{router_id}/tags/{id} 
        API
      in: path
      name: router_id
      required: true
      schema:
        type: string
    routers_tenant_id:
      description: tenant_id query parameter for /v2.0/routers API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    rule_types_all_rules:
      description: all_rules query parameter for /v2.0/qos/rule-types API
      in: query
      name: all_rules
      schema:
        type:
          - boolean
          - 'null'
          - string
    rule_types_all_supported:
      description: all_supported query parameter for /v2.0/qos/rule-types API
      in: query
      name: all_supported
      schema:
        type:
          - boolean
          - 'null'
          - string
    rule_types_rule_type_id:
      description: id parameter for /v2.0/qos/rule-types/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    security-groups_tags_id:
      description: id parameter for 
        /v2.0/security-groups/{security_group_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    security-groups_tags_security_group_id:
      description: security_group_id parameter for 
        /v2.0/security-groups/{security_group_id}/tags/{id} API
      in: path
      name: security_group_id
      required: true
      schema:
        type: string
    security_group_rules_belongs_to_default_sg:
      description: belongs_to_default_sg query parameter for 
        /v2.0/security-group-rules API
      in: query
      name: belongs_to_default_sg
      schema:
        type:
          - boolean
          - 'null'
          - string
    security_group_rules_description:
      description: description query parameter for /v2.0/security-group-rules 
        API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    security_group_rules_direction:
      description: direction query parameter for /v2.0/security-group-rules API
      in: query
      name: direction
      schema:
        enum:
          - egress
          - ingress
        type: string
    security_group_rules_ethertype:
      description: ethertype query parameter for /v2.0/security-group-rules API
      in: query
      name: ethertype
      schema:
        enum:
          - IPv4
          - IPv6
        type: string
    security_group_rules_id:
      description: id query parameter for /v2.0/security-group-rules API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    security_group_rules_normalized_cidr:
      description: normalized_cidr query parameter for 
        /v2.0/security-group-rules API
      in: query
      name: normalized_cidr
      schema:
        type:
          - 'null'
          - string
    security_group_rules_port_range_max:
      description: port_range_max query parameter for /v2.0/security-group-rules
        API
      in: query
      name: port_range_max
      schema:
        type:
          - integer
          - 'null'
    security_group_rules_port_range_min:
      description: port_range_min query parameter for /v2.0/security-group-rules
        API
      in: query
      name: port_range_min
      schema:
        type:
          - integer
          - 'null'
    security_group_rules_protocol:
      description: protocol query parameter for /v2.0/security-group-rules API
      in: query
      name: protocol
      schema:
        type: string
    security_group_rules_remote_address_group_id:
      description: remote_address_group_id query parameter for 
        /v2.0/security-group-rules API
      in: query
      name: remote_address_group_id
      schema:
        type: string
    security_group_rules_remote_group_id:
      description: remote_group_id query parameter for 
        /v2.0/security-group-rules API
      in: query
      name: remote_group_id
      schema:
        type: string
    security_group_rules_remote_ip_prefix:
      description: remote_ip_prefix query parameter for 
        /v2.0/security-group-rules API
      in: query
      name: remote_ip_prefix
      schema:
        type: string
    security_group_rules_revision_number:
      description: revision_number query parameter for 
        /v2.0/security-group-rules API
      in: query
      name: revision_number
      schema:
        type: string
    security_group_rules_security_group_id:
      description: security_group_id query parameter for 
        /v2.0/security-group-rules API
      in: query
      name: security_group_id
      schema:
        maxLength: 36
        type: string
    security_group_rules_security_group_rule_id:
      description: id parameter for /v2.0/security-group-rules/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    security_group_rules_tenant_id:
      description: tenant_id query parameter for /v2.0/security-group-rules API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    security_groups_description:
      description: description query parameter for /v2.0/security-groups API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    security_groups_id:
      description: id query parameter for /v2.0/security-groups API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    security_groups_name:
      description: name query parameter for /v2.0/security-groups API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    security_groups_not-tags:
      description: not-tags query parameter for /v2.0/security-groups API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    security_groups_not-tags-any:
      description: not-tags-any query parameter for /v2.0/security-groups API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    security_groups_revision_number:
      description: revision_number query parameter for /v2.0/security-groups API
      in: query
      name: revision_number
      schema:
        type: string
    security_groups_security_group_id:
      description: id parameter for /v2.0/security-groups/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    security_groups_shared:
      description: shared query parameter for /v2.0/security-groups API
      in: query
      name: shared
      schema:
        type:
          - boolean
          - string
    security_groups_tags:
      description: tags query parameter for /v2.0/security-groups API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    security_groups_tags-any:
      description: tags-any query parameter for /v2.0/security-groups API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    security_groups_tenant_id:
      description: tenant_id query parameter for /v2.0/security-groups API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    segments_description:
      description: description query parameter for /v2.0/segments API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    segments_id:
      description: id query parameter for /v2.0/segments API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    segments_name:
      description: name query parameter for /v2.0/segments API
      in: query
      name: name
      schema:
        maxLength: 255
        type:
          - 'null'
          - string
    segments_network_id:
      description: network_id query parameter for /v2.0/segments API
      in: query
      name: network_id
      schema:
        format: uuid
        type: string
    segments_network_type:
      description: network_type query parameter for /v2.0/segments API
      in: query
      name: network_type
      schema:
        maxLength: 32
        type: string
    segments_physical_network:
      description: physical_network query parameter for /v2.0/segments API
      in: query
      name: physical_network
      schema:
        maxLength: 64
        type: string
    segments_revision_number:
      description: revision_number query parameter for /v2.0/segments API
      in: query
      name: revision_number
      schema:
        type: string
    segments_segment_id:
      description: id parameter for /v2.0/segments/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    service_profiles_description:
      description: description query parameter for /v2.0/service_profiles API
      in: query
      name: description
      schema:
        maxLength: 1024
        type:
          - 'null'
          - string
    service_profiles_driver:
      description: driver query parameter for /v2.0/service_profiles API
      in: query
      name: driver
      schema:
        maxLength: 1024
        type: string
    service_profiles_enabled:
      description: enabled query parameter for /v2.0/service_profiles API
      in: query
      name: enabled
      schema:
        type:
          - boolean
          - 'null'
          - string
    service_profiles_id:
      description: id query parameter for /v2.0/service_profiles API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    service_profiles_service_profile_flavor_id:
      description: flavor_id parameter for 
        /v2.0/flavors/{flavor_id}/service_profiles/{id} API
      in: path
      name: flavor_id
      required: true
      schema:
        type: string
    service_profiles_service_profile_id:
      description: id parameter for 
        /v2.0/flavors/{flavor_id}/service_profiles/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    service_providers_service_provider_id:
      description: id parameter for /v2.0/service-providers/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    sort_dir:
      description: Sort direction. This is an optional feature and may be 
        silently ignored by the server.
      explode: true
      in: query
      name: sort_dir
      schema:
        items:
          enum:
            - asc
            - desc
          type: string
        type: array
      style: form
    sort_key:
      description: Sort results by the attribute. This is an optional feature 
        and may be silently ignored by the server.
      explode: true
      in: query
      name: sort_key
      schema:
        items:
          type: string
        type: array
      style: form
    subnetpools_address_scope_id:
      description: address_scope_id query parameter for /v2.0/subnetpools API
      in: query
      name: address_scope_id
      schema:
        format: uuid
        type:
          - 'null'
          - string
    subnetpools_default_prefixlen:
      description: default_prefixlen query parameter for /v2.0/subnetpools API
      in: query
      name: default_prefixlen
      schema:
        minimum: 0
        type:
          - integer
          - string
    subnetpools_default_quota:
      description: default_quota query parameter for /v2.0/subnetpools API
      in: query
      name: default_quota
      schema:
        minimum: 0
        type:
          - integer
          - string
    subnetpools_description:
      description: description query parameter for /v2.0/subnetpools API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    subnetpools_id:
      description: id query parameter for /v2.0/subnetpools API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    subnetpools_ip_version:
      description: ip_version query parameter for /v2.0/subnetpools API
      in: query
      name: ip_version
      schema:
        type: string
    subnetpools_is_default:
      description: is_default query parameter for /v2.0/subnetpools API
      in: query
      name: is_default
      schema:
        type:
          - boolean
          - string
    subnetpools_max_prefixlen:
      description: max_prefixlen query parameter for /v2.0/subnetpools API
      in: query
      name: max_prefixlen
      schema:
        minimum: 0
        type:
          - integer
          - string
    subnetpools_min_prefixlen:
      description: min_prefixlen query parameter for /v2.0/subnetpools API
      in: query
      name: min_prefixlen
      schema:
        minimum: 0
        type:
          - integer
          - string
    subnetpools_name:
      description: name query parameter for /v2.0/subnetpools API
      in: query
      name: name
      schema:
        type: string
    subnetpools_not-tags:
      description: not-tags query parameter for /v2.0/subnetpools API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    subnetpools_not-tags-any:
      description: not-tags-any query parameter for /v2.0/subnetpools API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    subnetpools_revision_number:
      description: revision_number query parameter for /v2.0/subnetpools API
      in: query
      name: revision_number
      schema:
        type: string
    subnetpools_shared:
      description: shared query parameter for /v2.0/subnetpools API
      in: query
      name: shared
      schema:
        type:
          - boolean
          - string
    subnetpools_subnetpool_id:
      description: id parameter for /v2.0/subnetpools/{id}/remove_prefixes API
      in: path
      name: id
      required: true
      schema:
        type: string
    subnetpools_tags:
      description: tags query parameter for /v2.0/subnetpools API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    subnetpools_tags-any:
      description: tags-any query parameter for /v2.0/subnetpools API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    subnetpools_tags_id:
      description: id parameter for /v2.0/subnetpools/{subnetpool_id}/tags/{id} 
        API
      in: path
      name: id
      required: true
      schema:
        type: string
    subnetpools_tags_subnetpool_id:
      description: subnetpool_id parameter for 
        /v2.0/subnetpools/{subnetpool_id}/tags/{id} API
      in: path
      name: subnetpool_id
      required: true
      schema:
        type: string
    subnetpools_tenant_id:
      description: tenant_id query parameter for /v2.0/subnetpools API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    subnets_cidr:
      description: cidr query parameter for /v2.0/subnets API
      in: query
      name: cidr
      schema:
        type:
          - 'null'
          - string
    subnets_description:
      description: description query parameter for /v2.0/subnets API
      in: query
      name: description
      schema:
        maxLength: 255
        type: string
    subnets_enable_dhcp:
      description: enable_dhcp query parameter for /v2.0/subnets API
      in: query
      name: enable_dhcp
      schema:
        type:
          - boolean
          - string
    subnets_gateway_ip:
      description: gateway_ip query parameter for /v2.0/subnets API
      in: query
      name: gateway_ip
      schema:
        type:
          - 'null'
          - string
    subnets_id:
      description: id query parameter for /v2.0/subnets API
      in: query
      name: id
      schema:
        format: uuid
        type: string
    subnets_ip_version:
      description: ip_version query parameter for /v2.0/subnets API
      in: query
      name: ip_version
      schema:
        enum:
          - 4
          - 6
        type:
          - integer
          - string
    subnets_ipv6_address_mode:
      description: ipv6_address_mode query parameter for /v2.0/subnets API
      in: query
      name: ipv6_address_mode
      schema:
        enum:
          - dhcpv6-stateful
          - dhcpv6-stateless
          - slaac
        type: string
    subnets_ipv6_ra_mode:
      description: ipv6_ra_mode query parameter for /v2.0/subnets API
      in: query
      name: ipv6_ra_mode
      schema:
        enum:
          - dhcpv6-stateful
          - dhcpv6-stateless
          - slaac
        type: string
    subnets_name:
      description: name query parameter for /v2.0/subnets API
      in: query
      name: name
      schema:
        maxLength: 255
        type: string
    subnets_network_id:
      description: network_id query parameter for /v2.0/subnets API
      in: query
      name: network_id
      schema:
        format: uuid
        type: string
    subnets_not-tags:
      description: not-tags query parameter for /v2.0/subnets API
      explode: false
      in: query
      name: not-tags
      schema:
        items:
          type: string
        type: array
      style: form
    subnets_not-tags-any:
      description: not-tags-any query parameter for /v2.0/subnets API
      explode: false
      in: query
      name: not-tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    subnets_revision_number:
      description: revision_number query parameter for /v2.0/subnets API
      in: query
      name: revision_number
      schema:
        type: string
    subnets_router_external:
      description: |-
        The membership of a subnet to an external network.
      in: query
      name: router:external
      schema:
        type:
          - boolean
          - string
    subnets_segment_id:
      description: segment_id query parameter for /v2.0/subnets API
      in: query
      name: segment_id
      schema:
        format: uuid
        type:
          - 'null'
          - string
    subnets_shared:
      description: shared query parameter for /v2.0/subnets API
      in: query
      name: shared
      schema:
        type:
          - boolean
          - string
    subnets_subnet_subnet_id:
      description: subnet_id parameter for /v2.0/subnets/{subnet_id} API
      in: path
      name: subnet_id
      required: true
      schema:
        type: string
    subnets_subnetpool_id:
      description: subnetpool_id query parameter for /v2.0/subnets API
      in: query
      name: subnetpool_id
      schema:
        type:
          - 'null'
          - string
    subnets_tags:
      description: tags query parameter for /v2.0/subnets API
      explode: false
      in: query
      name: tags
      schema:
        items:
          type: string
        type: array
      style: form
    subnets_tags-any:
      description: tags-any query parameter for /v2.0/subnets API
      explode: false
      in: query
      name: tags-any
      schema:
        items:
          type: string
        type: array
      style: form
    subnets_tags_id:
      description: id parameter for /v2.0/subnets/{subnet_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    subnets_tags_subnet_id:
      description: subnet_id parameter for /v2.0/subnets/{subnet_id}/tags/{id} 
        API
      in: path
      name: subnet_id
      required: true
      schema:
        type: string
    subnets_tenant_id:
      description: tenant_id query parameter for /v2.0/subnets API
      in: query
      name: tenant_id
      schema:
        maxLength: 255
        type: string
    trunks_tags_id:
      description: id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
    trunks_tags_trunk_id:
      description: trunk_id parameter for /v2.0/trunks/{trunk_id}/tags/{id} API
      in: path
      name: trunk_id
      required: true
      schema:
        type: string
    vpnservices_vpnservice_id:
      description: id parameter for /v2.0/vpn/vpnservices/{id} API
      in: path
      name: id
      required: true
      schema:
        type: string
  schemas:
    Address_GroupShowResponse:
      description: Response of the address-groups/id:get operation
      properties:
        address_group:
          description: |-
            An `address group` object.
          properties:
            addresses:
              description: |-
                A list of IP addresses.
              items:
                type: string
              type: array
            created_at:
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            id:
              description: |-
                The ID of the address group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            revision_number:
              type: integer
            updated_at:
              type: string
          type: object
      type: object
    Address_GroupUpdateRequest:
      description: Request of the address-groups/id:put operation
      properties:
        address_group:
          description: |-
            An `address group` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
          type: object
      type: object
    Address_GroupUpdateResponse:
      description: Response of the address-groups/id:put operation
      properties:
        address_group:
          description: |-
            An `address group` object.
          properties:
            addresses:
              description: |-
                A list of IP addresses.
              items:
                type: string
              type: array
            created_at:
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            id:
              description: |-
                The ID of the address group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            revision_number:
              type: integer
            updated_at:
              type: string
          type: object
      type: object
    Address_GroupsAdd_AddressesAdd_AddressesRequest:
      properties:
        address_group:
          properties:
            addresses:
              description: A list of IP addresses.
              items:
                type: string
              type: array
          type: object
      type: object
    Address_GroupsCreateRequest:
      description: Request of the address-groups:post operation
      properties:
        address_group:
          description: |-
            An `address group` object.
          properties:
            addresses:
              description: |-
                A list of IP addresses.
              items:
                type: string
              type: array
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            project_id:
              maxLength: 255
              type: string
          type: object
      type: object
    Address_GroupsCreateResponse:
      description: Response of the address-groups:post operation
      properties:
        address_group:
          description: |-
            An `address group` object.
          properties:
            addresses:
              description: |-
                A list of IP addresses.
              items:
                type: string
              type: array
            created_at:
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            id:
              description: |-
                The ID of the address group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            revision_number:
              type: integer
            updated_at:
              type: string
          type: object
      type: object
    Address_GroupsIndexResponse:
      description: Response of the address-groups:get operation
      properties:
        address_groups:
          description: |-
            A list of `address group` objects.
          items:
            properties:
              addresses:
                description: |-
                  A list of IP addresses.
                items:
                  type: string
                type: array
              created_at:
                type: string
              description:
                maxLength: 1024
                type: string
              id:
                description: |-
                  The ID of the address group.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              project_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              revision_number:
                type: integer
              updated_at:
                type: string
            type: object
          type: array
      type: object
    Address_GroupsRemove_AddressesRemove_AddressesRequest:
      properties:
        address_group:
          properties:
            addresses:
              description: A list of IP addresses.
              items:
                type: string
              type: array
          type: object
      type: object
    Address_ScopeShowResponse:
      description: Response of the address-scopes/id:get operation
      properties:
        address_scope:
          description: |-
            An `address scope` object.
          properties:
            id:
              description: |-
                The ID of the address scope.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    Address_ScopeUpdateRequest:
      description: Request of the address-scopes/id:put operation
      properties:
        address_scope:
          description: |-
            An `address scope` object.
          properties:
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
          type: object
      type: object
    Address_ScopeUpdateResponse:
      description: Response of the address-scopes/id:put operation
      properties:
        address_scope:
          description: |-
            An `address scope` object.
          properties:
            id:
              description: |-
                The ID of the address scope.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    Address_ScopesCreateRequest:
      description: Request of the address-scopes:post operation
      properties:
        address_scope:
          description: |-
            An `address scope` object.
          properties:
            ip_version:
              description: |-
                The IP protocol version. Valid value is `4` or `6`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
          type: object
      type: object
    Address_ScopesCreateResponse:
      description: Response of the address-scopes:post operation
      properties:
        address_scope:
          description: |-
            An `address scope` object.
          properties:
            id:
              description: |-
                The ID of the address scope.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    Address_ScopesIndexResponse:
      description: Response of the address-scopes:get operation
      properties:
        address_scopes:
          description: |-
            A list of `address scope` objects.
          items:
            properties:
              id:
                description: |-
                  The ID of the address scope.
                format: uuid
                type: string
              ip_version:
                description: |-
                  The IP protocol version. Valid value is `4` or
                  `6`. Default is `4`.
                enum:
                  - 4
                  - 6
                type:
                  - integer
                  - string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              shared:
                description: |-
                  Indicates whether this resource is shared across all projects.
                type:
                  - boolean
                  - string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
            type: object
          type: array
      type: object
    AgentShowResponse:
      description: Response of the agents/id:get operation
      properties:
        agent:
          description: |-
            An `agent` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            agent_type:
              description: |-
                The type of agent such as `Open vSwitch agent` or `DHCP agent`.
              type: string
            alive:
              description: |-
                Indicates the agent is alive and running.
              type: boolean
            availability_zone:
              description: |-
                The availability zone of the agent.
              type: string
            binary:
              description: |-
                The executable command used to start the agent such as
                `neutron-openvswitch-agent` or `neutron-dhcp-agent`.
              type: string
            configurations:
              description: |-
                An object containing configuration specific key/value pairs; the semantics
                of which are determined by the binary name and type.
              type: object
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type:
                - 'null'
                - string
            heartbeat_timestamp:
              description: |-
                Time at which the last heartbeat was received.
              type: string
            host:
              description: |-
                The hostname of the system the agent is running on.
              type: string
            id:
              description: |-
                The ID of the resource.
              format: uuid
              type: string
            resources_synced:
              description: |-
                The value `null` means no resource view synchronization to Placement
                was attempted. `true` / `false` values signify the success of
                the last synchronization attempt. Therefore the relevant resources
                in Placement can only be considered up to date if this attribute is
                `true`. This attribute is read-only, it is only supposed to be
                updated internally, but it is readable for debugging purposes. Not all
                agent types track resources via Placement, therefore the value `null`
                does not necessarily means there is an error in the system.
              type: string
            started_at:
              description: |-
                Time at which the agent was started.
              type: string
            topic:
              description: |-
                The name of AMQP topic the agent is listening on such as
                `dhcp_agent`. A special value of `N/A` is used when the
                agent doesn’t use an AMQP topic.
              type: string
          type: object
      type: object
    AgentUpdateRequest:
      description: Request of the agents/id:put operation
      properties:
        agent:
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type:
                - 'null'
                - string
          type: object
      type: object
    AgentUpdateResponse:
      description: Response of the agents/id:put operation
      properties:
        agent:
          description: |-
            An `agent` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            agent_type:
              description: |-
                The type of agent such as `Open vSwitch agent` or `DHCP agent`.
              type: string
            alive:
              description: |-
                Indicates the agent is alive and running.
              type: boolean
            availability_zone:
              description: |-
                The availability zone of the agent.
              type: string
            binary:
              description: |-
                The executable command used to start the agent such as
                `neutron-openvswitch-agent` or `neutron-dhcp-agent`.
              type: string
            configurations:
              description: |-
                An object containing configuration specific key/value pairs; the semantics
                of which are determined by the binary name and type.
              type: object
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type:
                - 'null'
                - string
            heartbeat_timestamp:
              description: |-
                Time at which the last heartbeat was received.
              type: string
            host:
              description: |-
                The hostname of the system the agent is running on.
              type: string
            id:
              description: |-
                The ID of the resource.
              format: uuid
              type: string
            resources_synced:
              description: |-
                The value `null` means no resource view synchronization to Placement
                was attempted. `true` / `false` values signify the success of
                the last synchronization attempt. Therefore the relevant resources
                in Placement can only be considered up to date if this attribute is
                `true`. This attribute is read-only, it is only supposed to be
                updated internally, but it is readable for debugging purposes. Not all
                agent types track resources via Placement, therefore the value `null`
                does not necessarily means there is an error in the system.
              type: string
            started_at:
              description: |-
                Time at which the agent was started.
              type: string
            topic:
              description: |-
                The name of AMQP topic the agent is listening on such as
                `dhcp_agent`. A special value of `N/A` is used when the
                agent doesn’t use an AMQP topic.
              type: string
          type: object
      type: object
    AgentsCreateRequest:
      description: Request of the agents:post operation
      properties:
        agent:
          properties: {}
          type: object
      type: object
    AgentsCreateResponse:
      description: Response of the agents:post operation
      properties:
        agent:
          properties:
            admin_state_up:
              type:
                - boolean
                - string
            agent_type:
              type: string
            alive:
              type: boolean
            availability_zone:
              type: string
            binary:
              type: string
            configurations:
              type: object
            created_at:
              type: string
            description:
              maxLength: 255
              type:
                - 'null'
                - string
            heartbeat_timestamp:
              type: string
            host:
              type: string
            id:
              format: uuid
              type: string
            resources_synced:
              type: string
            started_at:
              type: string
            topic:
              type: string
          type: object
      type: object
    AgentsDhcp_NetworkShowResponse:
      description: Response of the agents/agent_id/dhcp-networks/id:get 
        operation
      type: object
    AgentsDhcp_NetworkUpdateRequest:
      description: Request of the agents/agent_id/dhcp-networks/id:put operation
      type: object
    AgentsDhcp_NetworkUpdateResponse:
      description: Response of the agents/agent_id/dhcp-networks/id:put 
        operation
      type: object
    AgentsDhcp_NetworksCreateRequest:
      description: Request of the agents/agent_id/dhcp-networks:post operation
      type: object
    AgentsDhcp_NetworksCreateResponse:
      description: Response of the agents/agent_id/dhcp-networks:post operation
      type: object
    AgentsDhcp_NetworksIndexResponse:
      description: Response of the agents/agent_id/dhcp-networks:get operation
      type: object
    AgentsIndexResponse:
      description: Response of the agents:get operation
      properties:
        agents:
          description: |-
            A list of `agent` objects.
          items:
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type:
                  - boolean
                  - string
              agent_type:
                description: |-
                  The type of agent such as `Open vSwitch agent` or `DHCP agent`.
                type: string
              alive:
                description: |-
                  Indicates the agent is alive and running.
                type: boolean
              availability_zone:
                description: |-
                  The availability zone of the agent.
                type: string
              binary:
                description: |-
                  The executable command used to start the agent such as
                  `neutron-openvswitch-agent` or `neutron-dhcp-agent`.
                type: string
              configurations:
                description: |-
                  An object containing configuration specific key/value pairs; the semantics
                  of which are determined by the binary name and type.
                type: object
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type:
                  - 'null'
                  - string
              heartbeat_timestamp:
                description: |-
                  Time at which the last heartbeat was received.
                type: string
              host:
                description: |-
                  The hostname of the system the agent is running on.
                type: string
              id:
                description: |-
                  The ID of the resource.
                format: uuid
                type: string
              resources_synced:
                description: |-
                  The value `null` means no resource view synchronization to Placement
                  was attempted. `true` / `false` values signify the success of
                  the last synchronization attempt. Therefore the relevant resources
                  in Placement can only be considered up to date if this attribute is
                  `true`. This attribute is read-only, it is only supposed to be
                  updated internally, but it is readable for debugging purposes. Not all
                  agent types track resources via Placement, therefore the value `null`
                  does not necessarily means there is an error in the system.
                type: string
              started_at:
                description: |-
                  Time at which the agent was started.
                type: string
              topic:
                description: |-
                  The name of AMQP topic the agent is listening on such as
                  `dhcp_agent`. A special value of `N/A` is used when the
                  agent doesn’t use an AMQP topic.
                type: string
            type: object
          type: array
      type: object
    AgentsL3_RouterShowResponse:
      description: Response of the agents/agent_id/l3-routers/id:get operation
      type: object
    AgentsL3_RouterUpdateRequest:
      description: Request of the agents/agent_id/l3-routers/id:put operation
      type: object
    AgentsL3_RouterUpdateResponse:
      description: Response of the agents/agent_id/l3-routers/id:put operation
      type: object
    AgentsL3_RoutersCreateRequest:
      properties:
        router_id:
          description: |-
            The ID of the router.
          format: uuid
          type: string
      type: object
    AgentsL3_RoutersCreateResponse:
      description: Response of the agents/agent_id/l3-routers:post operation
      type: object
    AgentsL3_RoutersIndexResponse:
      properties:
        routers:
          description: |-
            A list of `router` objects.
          items:
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type: boolean
              availability_zone_hints:
                description: |-
                  The availability zone candidates for the router.
                  It is available when `router_availability_zone` extension is enabled.
                items:
                  type: string
                type: array
              availability_zones:
                description: |-
                  The availability zone(s) for the router.
                  It is available when `router_availability_zone` extension is enabled.
                items:
                  type: string
                type: array
              description:
                description: |-
                  A human-readable description for the resource.
                type: string
              distributed:
                description: |-
                  `true` indicates a distributed router.
                  It is available when `dvr` extension is enabled.
                type: boolean
              external_gateway_info:
                description: |-
                  The external gateway information of the router.
                  If the router has an external gateway, this would be a dict with
                  `network_id`, `enable_snat`, `external_fixed_ips`,
                  `qos_policy_id`, `enable_default_route_ecmp` and
                  `enable_default_route_bfd`.
                  Otherwise, this would be `null`.
                properties:
                  enable_snat:
                    type: boolean
                  external_fixed_ips:
                    items:
                      properties:
                        ip_address:
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                          type: string
                        subnet_id:
                          format: uuid
                          type: string
                      type: object
                    type: array
                  network_id:
                    format: uuid
                    type: string
                type: object
              flavor_id:
                description: |-
                  The ID of the flavor associated with the router.
                format: uuid
                type: string
              ha:
                description: |-
                  `true` indicates a highly-available router.
                  It is available when `l3-ha` extension is enabled.
                type: boolean
              id:
                description: |-
                  The ID of the router.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              project_id:
                description: |-
                  The ID of the project.
                format: uuid
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              routes:
                description: |-
                  The extra routes configuration for L3 router.
                  A list of dictionaries with `destination` and `nexthop` parameters.
                  It is available when `extraroute` extension is enabled.
                items:
                  properties:
                    destination:
                      description: |-
                        The destination CIDR.
                      type: string
                    next_hop:
                      type: string
                  type: object
                type: array
              service_type_id:
                description: |-
                  The ID of the service type associated with the router.
                format: uuid
                type: string
              status:
                description: |-
                  The router status.
                type: string
              tenant_id:
                description: |-
                  The ID of the project.
                format: uuid
                type: string
            type: object
          type: array
      type: object
    Auto_Allocated_TopologyCreateRequest:
      description: Request of the auto-allocated-topology:post operation
      properties:
        auto_allocated_topology:
          properties: {}
          type: object
      type: object
    Auto_Allocated_TopologyCreateResponse:
      description: Response of the auto-allocated-topology:post operation
      properties:
        auto_allocated_topology:
          properties:
            id:
              format: uuid
              type: string
            tenant_id:
              format: uuid
              type: string
          type: object
      type: object
    Auto_Allocated_TopologyIndexResponse:
      description: Response of the auto-allocated-topology:get operation
      properties:
        auto_allocated_topologies:
          items:
            properties:
              id:
                format: uuid
                type: string
              tenant_id:
                format: uuid
                type: string
            type: object
          type: array
      type: object
    Auto_Allocated_TopologyShowResponse:
      description: Response of the auto-allocated-topology/id:get operation
      properties:
        auto_allocated_topology:
          properties:
            id:
              description: |-
                The ID of the network for the auto allocated topology.
              format: uuid
              type: string
            tenant_id:
              description: |-
                The ID of the project owning the auto allocated topology.
              format: uuid
              type: string
          type: object
      type: object
    Auto_Allocated_TopologyUpdateRequest:
      description: Request of the auto-allocated-topology/id:put operation
      properties:
        auto_allocated_topology:
          properties: {}
          type: object
      type: object
    Auto_Allocated_TopologyUpdateResponse:
      description: Response of the auto-allocated-topology/id:put operation
      properties:
        auto_allocated_topology:
          properties:
            id:
              format: uuid
              type: string
            tenant_id:
              format: uuid
              type: string
          type: object
      type: object
    Availability_ZonesIndexResponse:
      description: Response of the availability_zones:get operation
      properties:
        availability_zones:
          description: |-
            A list of `availability zone` objects.
          items:
            properties:
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              resource:
                description: |-
                  The resource type of the availability zone. The supported resource types
                  are `network` and `router`.
                type: string
              state:
                description: |-
                  The state of the availability zone, which is either `available` or
                  `unavailable`.
                type: string
            type: object
          type: array
      type: object
    Default_Security_Group_RuleShowResponse:
      description: Response of the default-security-group-rules/id:get operation
      properties:
        default_security_group_rule:
          description: |-
            A `default_security_group_rule` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
              enum:
                - IPv4
                - IPv6
              type: string
            id:
              description: |-
                The ID of the security group default rule.
              format: uuid
              type: string
            port_range_max:
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
              type:
                - integer
                - 'null'
            port_range_min:
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
              type:
                - integer
                - 'null'
            protocol:
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
              type: string
            remote_address_group_id:
              description: |-
                The remote address group UUID to associate with this
                security group rule.
              type: string
            remote_group_id:
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
              type: string
            remote_ip_prefix:
              description: |-
                The remote IP prefix that is matched by this security group rule.
              type: string
            used_in_default_sg:
              description: |-
                Whether this security group rule template should be used in default
                security group created automatically for each new project. Default value
                is `False`.
              type:
                - boolean
                - string
            used_in_non_default_sg:
              description: |-
                Whether this security group rule template should be used in custom
                security groups created by project user. Default value is `True`.
              type:
                - boolean
                - string
          type: object
      type: object
    Default_Security_Group_RuleUpdateRequest:
      description: Request of the default-security-group-rules/id:put operation
      properties:
        default_security_group_rule:
          properties: {}
          type: object
      type: object
    Default_Security_Group_RuleUpdateResponse:
      description: Response of the default-security-group-rules/id:put operation
      properties:
        default_security_group_rule:
          properties:
            description:
              maxLength: 1024
              type: string
            direction:
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              enum:
                - IPv4
                - IPv6
              type: string
            id:
              format: uuid
              type: string
            port_range_max:
              type:
                - integer
                - 'null'
            port_range_min:
              type:
                - integer
                - 'null'
            protocol:
              type: string
            remote_address_group_id:
              type: string
            remote_group_id:
              type: string
            remote_ip_prefix:
              type: string
            used_in_default_sg:
              type:
                - boolean
                - string
            used_in_non_default_sg:
              type:
                - boolean
                - string
          type: object
      type: object
    Default_Security_Group_RulesCreateRequest:
      description: Request of the default-security-group-rules:post operation
      properties:
        default_security_group_rule:
          description: |-
            A `default_security_group_rule` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 1024
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
              enum:
                - IPv4
                - IPv6
              type: string
            port_range_max:
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
              type:
                - integer
                - 'null'
            port_range_min:
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
              type:
                - integer
                - 'null'
            protocol:
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
              type: string
            remote_address_group_id:
              type: string
            remote_group_id:
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
              type: string
            remote_ip_prefix:
              description: |-
                The remote IP prefix that is matched by this security group rule.
              type: string
            tenant_id:
              maxLength: 255
              type: string
            used_in_default_sg:
              description: |-
                Whether this security group rule template should be used in default
                security group created automatically for each new project. Default value
                is `False`.
              type:
                - boolean
                - string
            used_in_non_default_sg:
              description: |-
                Whether this security group rule template should be used in custom
                security groups created by project user. Default value is `True`.
              type:
                - boolean
                - string
          type: object
      type: object
    Default_Security_Group_RulesCreateResponse:
      description: Response of the default-security-group-rules:post operation
      properties:
        default_security_group_rule:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
              enum:
                - IPv4
                - IPv6
              type: string
            id:
              description: |-
                The ID of the security group default rule.
              format: uuid
              type: string
            port_range_max:
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
              type:
                - integer
                - 'null'
            port_range_min:
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
              type:
                - integer
                - 'null'
            protocol:
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
              type: string
            remote_address_group_id:
              description: |-
                The remote address group UUID to associate with this
                security group rule.
              type: string
            remote_group_id:
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
              type: string
            remote_ip_prefix:
              description: |-
                The remote IP prefix that is matched by this security group rule.
              type: string
            used_in_default_sg:
              description: |-
                Whether this security group rule template should be used in default
                security group created automatically for each new project. Default value
                is `False`.
              type:
                - boolean
                - string
            used_in_non_default_sg:
              description: |-
                Whether this security group rule template should be used in custom
                security groups created by project user. Default value is `True`.
              type:
                - boolean
                - string
          type: object
      type: object
    Default_Security_Group_RulesIndexResponse:
      description: Response of the default-security-group-rules:get operation
      properties:
        default_security_group_rules:
          items:
            properties:
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 1024
                type: string
              direction:
                description: |-
                  Ingress or egress, which is the direction in
                  which the security group rule is applied.
                enum:
                  - egress
                  - ingress
                type: string
              ethertype:
                description: |-
                  Must be IPv4 or IPv6, and addresses represented
                  in CIDR must match the ingress or egress rules.
                enum:
                  - IPv4
                  - IPv6
                type: string
              id:
                description: |-
                  The ID of the security group default rule.
                format: uuid
                type: string
              port_range_max:
                description: |-
                  The maximum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                  the `port_range_min` attribute value. If the protocol is ICMP,
                  this value must be an ICMP code.
                type:
                  - integer
                  - 'null'
              port_range_min:
                description: |-
                  The minimum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be less than or equal to
                  the `port_range_max` attribute value. If the protocol is ICMP,
                  this value must be an ICMP type.
                type:
                  - integer
                  - 'null'
              protocol:
                description: |-
                  The IP protocol can be represented by a string, an integer, or `null`.
                  Valid string or integer values are `any` or `0`, `ah` or `51`,
                  `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                  `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                  `ipip` or `4`, `ipv6-encap` or `41`,
                  `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                  `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                  `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                  `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                  `vrrp` or `112`. Additionally, any integer value between [0-255] is
                  also valid. The string `any` (or integer `0`) means `all` IP
                  protocols. See the constants in `neutron_lib.constants` for the most
                  up-to-date list of supported strings.
                type: string
              remote_address_group_id:
                description: |-
                  The remote address group UUID to associate with this
                  security group rule.
                type: string
              remote_group_id:
                type: string
              remote_ip_prefix:
                description: |-
                  The remote IP prefix that is matched by this security group rule.
                type: string
              used_in_default_sg:
                description: |-
                  Whether this security group rule template should be used in default
                  security group created automatically for each new project. Default value
                  is `False`.
                type:
                  - boolean
                  - string
              used_in_non_default_sg:
                description: |-
                  Whether this security group rule template should be used in custom
                  security groups created by project user. Default value is `True`.
                type:
                  - boolean
                  - string
            type: object
          type: array
      type: object
    ExtensionShowResponse:
      description: Response of the extensions/id:get operation
      properties:
        extension:
          description: |-
            An `extension` object.
          properties:
            alias:
              description: |-
                The alias for the extension. For example “quotas” or
                “security-group”.
              type: string
            description:
              description: |-
                The human-readable description for the resource.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            namespace:
              description: A URL pointing to the namespace for this extension.
              type: string
            updated:
              description: |-
                The date and timestamp when the extension was
                last updated.
              format: date-time
              type: string
          type: object
      type: object
    ExtensionsIndexResponse:
      description: Response of the extensions:get operation
      properties:
        extensions:
          description: |-
            A list of `extension` objects.
          items:
            properties:
              alias:
                description: |-
                  The alias for the extension. For example “quotas” or
                  “security-group”.
                type: string
              description:
                description: |-
                  The human-readable description for the resource.
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              namespace:
                description: A URL pointing to the namespace for this extension.
                type: string
              updated:
                description: |-
                  The date and timestamp when the extension was
                  last updated.
                format: date-time
                type: string
            type: object
          type: array
      type: object
    FlavorShowResponse:
      description: Response of the flavors/id:get operation
      properties:
        flavor:
          description: |-
            A `flavor` object.
          properties:
            description:
              description: |-
                The human-readable description for the flavor.
              maxLength: 1024
              type:
                - 'null'
                - string
            enabled:
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The ID of the flavor.
              format: uuid
              type: string
            name:
              description: |-
                Name of the flavor.
              maxLength: 255
              type: string
            service_profiles:
              description: |-
                Service profile UUIDs associated with this flavor.
              items:
                format: uuid
                type: string
              type: array
            service_type:
              description: |-
                Service type for the flavor. Example: FIREWALL.
              type: string
          type: object
      type: object
    FlavorUpdateRequest:
      description: Request of the flavors/id:put operation
      properties:
        flavor:
          description: |-
            A `flavor` object.
          properties:
            description:
              description: |-
                The human-readable description for the flavor.
              maxLength: 1024
              type:
                - 'null'
                - string
            enabled:
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
              type:
                - boolean
                - 'null'
                - string
            name:
              description: |-
                Name of the flavor.
              maxLength: 255
              type: string
            service_profiles:
              items:
                format: uuid
                type: string
              type: array
          type: object
      type: object
    FlavorUpdateResponse:
      description: Response of the flavors/id:put operation
      properties:
        flavor:
          description: |-
            A `flavor` object.
          properties:
            description:
              description: |-
                The human-readable description for the flavor.
              maxLength: 1024
              type:
                - 'null'
                - string
            enabled:
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The ID of the flavor.
              format: uuid
              type: string
            name:
              description: |-
                Name of the flavor.
              maxLength: 255
              type: string
            service_profiles:
              description: |-
                Service profile UUIDs associated with this flavor.
              items:
                format: uuid
                type: string
              type: array
            service_type:
              description: |-
                Service type for the flavor. Example: FIREWALL.
              type: string
          type: object
      type: object
    FlavorsCreateRequest:
      description: Request of the flavors:post operation
      properties:
        flavor:
          description: |-
            A `flavor` object.
          properties:
            description:
              description: |-
                The human-readable description for the flavor.
              maxLength: 1024
              type:
                - 'null'
                - string
            enabled:
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
              type:
                - boolean
                - 'null'
                - string
            name:
              description: |-
                Name of the flavor.
              maxLength: 255
              type: string
            service_profiles:
              items:
                format: uuid
                type: string
              type: array
            service_type:
              description: |-
                Service type for the flavor. Example: FIREWALL.
              type: string
          type: object
      type: object
    FlavorsCreateResponse:
      description: Response of the flavors:post operation
      properties:
        flavor:
          description: |-
            A `flavor` object.
          properties:
            description:
              description: |-
                The human-readable description for the flavor.
              maxLength: 1024
              type:
                - 'null'
                - string
            enabled:
              description: |-
                Indicates whether the flavor is enabled or not. Default is true.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The ID of the flavor.
              format: uuid
              type: string
            name:
              description: |-
                Name of the flavor.
              maxLength: 255
              type: string
            service_profiles:
              description: |-
                Service profile UUIDs associated with this flavor.
              items:
                format: uuid
                type: string
              type: array
            service_type:
              description: |-
                Service type for the flavor. Example: FIREWALL.
              type: string
          type: object
      type: object
    FlavorsIndexResponse:
      description: Response of the flavors:get operation
      properties:
        flavors:
          description: |-
            A list of `flavor` objects.
          items:
            properties:
              description:
                description: |-
                  The human-readable description for the flavor.
                maxLength: 1024
                type:
                  - 'null'
                  - string
              enabled:
                description: |-
                  Indicates whether the flavor is enabled or not. Default is true.
                type:
                  - boolean
                  - 'null'
                  - string
              id:
                description: |-
                  The ID of the flavor.
                format: uuid
                type: string
              name:
                description: |-
                  Name of the flavor.
                maxLength: 255
                type: string
              service_profiles:
                description: |-
                  Service profile UUIDs associated with this flavor.
                items:
                  format: uuid
                  type: string
                type: array
              service_type:
                description: |-
                  Service type for the flavor. Example: FIREWALL.
                type: string
            type: object
          type: array
      type: object
    FlavorsNext_ProviderShowResponse:
      description: Response of the flavors/flavor_id/next_providers/id:get 
        operation
      properties:
        next_provider:
          properties:
            driver:
              type: string
            metainfo:
              type: string
            provider:
              type: string
          type: object
      type: object
    FlavorsNext_ProviderUpdateRequest:
      description: Request of the flavors/flavor_id/next_providers/id:put 
        operation
      properties:
        next_provider:
          properties: {}
          type: object
      type: object
    FlavorsNext_ProviderUpdateResponse:
      description: Response of the flavors/flavor_id/next_providers/id:put 
        operation
      properties:
        next_provider:
          properties:
            driver:
              type: string
            metainfo:
              type: string
            provider:
              type: string
          type: object
      type: object
    FlavorsNext_ProvidersCreateRequest:
      description: Request of the flavors/flavor_id/next_providers:post 
        operation
      properties:
        next_provider:
          properties: {}
          type: object
      type: object
    FlavorsNext_ProvidersCreateResponse:
      description: Response of the flavors/flavor_id/next_providers:post 
        operation
      properties:
        next_provider:
          properties:
            driver:
              type: string
            metainfo:
              type: string
            provider:
              type: string
          type: object
      type: object
    FlavorsNext_ProvidersIndexResponse:
      description: Response of the flavors/flavor_id/next_providers:get 
        operation
      properties:
        next_providers:
          items:
            properties:
              driver:
                type: string
              metainfo:
                type: string
              provider:
                type: string
            type: object
          type: array
      type: object
    FlavorsService_ProfileShowResponse:
      description: Response of the flavors/flavor_id/service_profiles/id:get 
        operation
      properties:
        service_profile:
          properties:
            id:
              format: uuid
              type: string
          type: object
      type: object
    FlavorsService_ProfileUpdateRequest:
      description: Request of the flavors/flavor_id/service_profiles/id:put 
        operation
      properties:
        service_profile:
          properties: {}
          type: object
      type: object
    FlavorsService_ProfileUpdateResponse:
      description: Response of the flavors/flavor_id/service_profiles/id:put 
        operation
      properties:
        service_profile:
          properties:
            id:
              format: uuid
              type: string
          type: object
      type: object
    FlavorsService_ProfilesCreateRequest:
      description: Request of the flavors/flavor_id/service_profiles:post 
        operation
      properties:
        service_profile:
          description: |-
            A `service_profile` object.
          properties:
            id:
              description: |-
                The UUID of the service profile.
              format: uuid
              type: string
          type: object
      type: object
    FlavorsService_ProfilesCreateResponse:
      description: Response of the flavors/flavor_id/service_profiles:post 
        operation
      properties:
        service_profile:
          description: |-
            A `service_profile` object.
          properties:
            id:
              description: |-
                The ID of the resource.
              format: uuid
              type: string
          type: object
      type: object
    FlavorsService_ProfilesIndexResponse:
      description: Response of the flavors/flavor_id/service_profiles:get 
        operation
      properties:
        service_profiles:
          items:
            properties:
              id:
                format: uuid
                type: string
            type: object
          type: array
      type: object
    FloatingipShowResponse:
      description: Response of the floatingips/id:get operation
      properties:
        floatingip:
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              maxLength: 255
              type: string
            fixed_ip_address:
              description: |-
                The fixed IP address that is associated with the
                floating IP address.
              type:
                - 'null'
                - string
            floating_ip_address:
              description: |-
                The floating IP address.
              type:
                - 'null'
                - string
            floating_network_id:
              description: |-
                The ID of the network associated with the
                floating IP.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the floating IP address.
              format: uuid
              type: string
            port_details:
              description: |-
                The information of the port that this floating IP associates with.
                In particular, if the floating IP is associated with a port, this field
                contains some attributes of the associated port, including `name`,
                `network_id`, `mac_address`, `admin_state_up`, `status`,
                `device_id` and `device_owner`. If the floating IP is not associated
                with a port, this field is `null`.
              properties:
                admin_state_up:
                  description: The administrative state of the resource, which 
                    is up (`true`) or down (`false`).
                  type: boolean
                device_id:
                  description: The ID of the device that uses this port. For 
                    example, a server instance or a logical router.
                  type: string
                device_owner:
                  description: The entity type that uses this port. For example,
                    `compute:nova` (server instance), `network:dhcp` (DHCP 
                    agent) or `network:router_interface` (router interface).
                  type: string
                mac_address:
                  description: The MAC address of the port. If the port uses the
                    `direct-physical` `vnic_type` then the value of this field 
                    is overwritten with the MAC address provided in the active 
                    binding:profile if any.
                  type: string
                name:
                  description: Human-readable name of the resource.
                  type: string
                network_id:
                  description: The ID of the attached network.
                  format: uuid
                  type: string
                status:
                  description: |-
                    The status of the floating IP. Values are
                    `ACTIVE`, `DOWN` and `ERROR`.
                  type: string
              type: object
            port_forwardings:
              description: |-
                The associated port forwarding resources for the floating IP. If the
                floating IP has multiple port forwarding resources, this field has
                multiple entries. Each entry consists of network IP protocol
                (`protocol`), the fixed IP address of internal neutron port
                (`internal_ip_address`), the TCP or UDP port or port range used by
                internal neutron port (`internal_port`) or (`internal_port_range`)
                and the TCP or UDP port or port range used by floating IP
                (`external_port`) or (`external_port_range`).
              items:
                properties:
                  description:
                    description: A text describing the rule, which helps users 
                      to manage/find easily theirs rules.
                    type: string
                  external_port:
                    description: The TCP/UDP/other protocol port number of the 
                      port forwarding’s floating IP address.
                    type:
                      - 'null'
                      - number
                  external_port_range:
                    description: The TCP/UDP/other protocol port range of the 
                      port forwarding’s floating IP address.
                    type: number
                  id:
                    description: The ID of the floating IP port forwarding.
                    format: uuid
                    type: string
                  internal_ip_address:
                    description: The fixed IPv4 address of the Neutron port 
                      associated to the floating IP port forwarding.
                    type: string
                  internal_port:
                    description: The TCP/UDP/other protocol port number of the 
                      Neutron port fixed IP address associated to the floating 
                      ip port forwarding.
                    type:
                      - 'null'
                      - number
                  internal_port_id:
                    description: The ID of the Neutron port associated to the 
                      floating IP port forwarding.
                    format: uuid
                    type: string
                  internal_port_range:
                    description: The TCP/UDP/other protocol port range of the 
                      Neutron port fixed IP address associated to the floating 
                      ip port forwarding.
                    type: number
                  protocol:
                    description: The IP protocol used in the floating IP port 
                      forwarding.
                    type: string
                type: object
              type: array
            port_id:
              description: |-
                The ID of a port associated with the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router_id:
              description: |-
                The ID of the router for the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            status:
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    FloatingipUpdateRequest:
      description: Request of the floatingips/id:put operation
      properties:
        floatingip:
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            fixed_ip_address:
              description: |-
                The fixed IP address that is associated with the floating IP.
                If an internal port has multiple associated IP addresses,
                the service chooses the first IP address unless you explicitly
                define a fixed IP address in the `fixed_ip_address` parameter.
              type:
                - 'null'
                - string
            port_id:
              description: |-
                The ID of a port associated with the floating IP.
                To associate the floating IP with a fixed IP,
                you must specify the ID of the internal port.
                To disassociate the floating IP, `null` should be specified.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              format: uuid
              type:
                - 'null'
                - string
          type: object
      type: object
    FloatingipUpdateResponse:
      description: Response of the floatingips/id:put operation
      properties:
        floatingip:
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              maxLength: 255
              type: string
            fixed_ip_address:
              description: |-
                The fixed IP address that is associated with the
                floating IP address.
              type:
                - 'null'
                - string
            floating_ip_address:
              description: |-
                The floating IP address.
              type:
                - 'null'
                - string
            floating_network_id:
              description: |-
                The ID of the network associated with the
                floating IP.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the floating IP address.
              format: uuid
              type: string
            port_details:
              description: |-
                The information of the port that this floating IP associates with.
                In particular, if the floating IP is associated with a port, this field
                contains some attributes of the associated port, including `name`,
                `network_id`, `mac_address`, `admin_state_up`, `status`,
                `device_id` and `device_owner`. If the floating IP is not associated
                with a port, this field is `null`.
              properties:
                admin_state_up:
                  description: The administrative state of the resource, which 
                    is up (`true`) or down (`false`).
                  type: boolean
                device_id:
                  description: The ID of the device that uses this port. For 
                    example, a server instance or a logical router.
                  type: string
                device_owner:
                  description: The entity type that uses this port. For example,
                    `compute:nova` (server instance), `network:dhcp` (DHCP 
                    agent) or `network:router_interface` (router interface).
                  type: string
                mac_address:
                  description: The MAC address of the port. If the port uses the
                    `direct-physical` `vnic_type` then the value of this field 
                    is overwritten with the MAC address provided in the active 
                    binding:profile if any.
                  type: string
                name:
                  description: Human-readable name of the resource.
                  type: string
                network_id:
                  description: The ID of the attached network.
                  format: uuid
                  type: string
                status:
                  description: |-
                    The status of the floating IP. Values are
                    `ACTIVE`, `DOWN` and `ERROR`.
                  type: string
              type: object
            port_forwardings:
              description: |-
                The associated port forwarding resources for the floating IP. If the
                floating IP has multiple port forwarding resources, this field has
                multiple entries. Each entry consists of network IP protocol
                (`protocol`), the fixed IP address of internal neutron port
                (`internal_ip_address`), the TCP or UDP port or port range used by
                internal neutron port (`internal_port`) or (`internal_port_range`)
                and the TCP or UDP port or port range used by floating IP
                (`external_port`) or (`external_port_range`).
              items:
                properties:
                  description:
                    description: A text describing the rule, which helps users 
                      to manage/find easily theirs rules.
                    type: string
                  external_port:
                    description: The TCP/UDP/other protocol port number of the 
                      port forwarding’s floating IP address.
                    type:
                      - 'null'
                      - number
                  external_port_range:
                    description: The TCP/UDP/other protocol port range of the 
                      port forwarding’s floating IP address.
                    type: number
                  id:
                    description: The ID of the floating IP port forwarding.
                    format: uuid
                    type: string
                  internal_ip_address:
                    description: The fixed IPv4 address of the Neutron port 
                      associated to the floating IP port forwarding.
                    type: string
                  internal_port:
                    description: The TCP/UDP/other protocol port number of the 
                      Neutron port fixed IP address associated to the floating 
                      ip port forwarding.
                    type:
                      - 'null'
                      - number
                  internal_port_id:
                    description: The ID of the Neutron port associated to the 
                      floating IP port forwarding.
                    format: uuid
                    type: string
                  internal_port_range:
                    description: The TCP/UDP/other protocol port range of the 
                      Neutron port fixed IP address associated to the floating 
                      ip port forwarding.
                    type: number
                  protocol:
                    description: The IP protocol used in the floating IP port 
                      forwarding.
                    type: string
                type: object
              type: array
            port_id:
              description: |-
                The ID of a port associated with the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router_id:
              description: |-
                The ID of the router for the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            status:
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    Floatingip_PoolShowResponse:
      description: Response of the floatingip-pools/id:get operation
      properties:
        floatingip_pool:
          properties:
            cidr:
              type:
                - 'null'
                - string
            network_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            subnet_id:
              format: uuid
              type: string
            subnet_name:
              maxLength: 255
              type: string
          type: object
      type: object
    Floatingip_PoolUpdateRequest:
      description: Request of the floatingip-pools/id:put operation
      properties:
        floatingip_pool:
          properties: {}
          type: object
      type: object
    Floatingip_PoolUpdateResponse:
      description: Response of the floatingip-pools/id:put operation
      properties:
        floatingip_pool:
          properties:
            cidr:
              type:
                - 'null'
                - string
            network_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            subnet_id:
              format: uuid
              type: string
            subnet_name:
              maxLength: 255
              type: string
          type: object
      type: object
    Floatingip_PoolsCreateRequest:
      description: Request of the floatingip-pools:post operation
      properties:
        floatingip_pool:
          properties: {}
          type: object
      type: object
    Floatingip_PoolsCreateResponse:
      description: Response of the floatingip-pools:post operation
      properties:
        floatingip_pool:
          properties:
            cidr:
              type:
                - 'null'
                - string
            network_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            subnet_id:
              format: uuid
              type: string
            subnet_name:
              maxLength: 255
              type: string
          type: object
      type: object
    Floatingip_PoolsIndexResponse:
      description: Response of the floatingip-pools:get operation
      properties:
        floatingip_pools:
          items:
            properties:
              cidr:
                type:
                  - 'null'
                  - string
              network_id:
                format: uuid
                type: string
              project_id:
                maxLength: 255
                type: string
              subnet_id:
                format: uuid
                type: string
              subnet_name:
                maxLength: 255
                type: string
            type: object
          type: array
      type: object
    FloatingipsCreateRequest:
      description: Request of the floatingips:post operation
      properties:
        floatingip:
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              maxLength: 255
              type: string
            fixed_ip_address:
              description: |-
                The fixed IP address that is associated with the floating IP.
                If an internal port has multiple associated IP addresses,
                the service chooses the first IP address unless you explicitly
                define a fixed IP address in the `fixed_ip_address` parameter.
              type:
                - 'null'
                - string
            floating_ip_address:
              description: |-
                The floating IP address.
              type:
                - 'null'
                - string
            floating_network_id:
              description: |-
                The ID of the network associated with the
                floating IP.
              format: uuid
              type: string
            port_id:
              description: |-
                The ID of a port associated with the floating IP.
                To associate the floating IP with a fixed IP at creation time,
                you must specify the identifier of the internal port.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            subnet_id:
              description: |-
                The subnet ID on which you want to create the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          required:
            - floating_network_id
          type: object
      type: object
    FloatingipsCreateResponse:
      description: Response of the floatingips:post operation
      properties:
        floatingip:
          description: |-
            A `floatingip` object. When you associate a
            floating IP address with a VM, the instance has the same public IP
            address each time that it boots, basically to maintain a
            consistent IP address for maintaining DNS assignment.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              maxLength: 255
              type: string
            fixed_ip_address:
              description: |-
                The fixed IP address that is associated with the
                floating IP address.
              type:
                - 'null'
                - string
            floating_ip_address:
              description: |-
                The floating IP address.
              type:
                - 'null'
                - string
            floating_network_id:
              description: |-
                The ID of the network associated with the
                floating IP.
              format: uuid
              type: string
            id:
              description: |-
                The ID of the floating IP address.
              format: uuid
              type: string
            port_details:
              description: |-
                The information of the port that this floating IP associates with.
                In particular, if the floating IP is associated with a port, this field
                contains some attributes of the associated port, including `name`,
                `network_id`, `mac_address`, `admin_state_up`, `status`,
                `device_id` and `device_owner`. If the floating IP is not associated
                with a port, this field is `null`.
              properties:
                admin_state_up:
                  description: The administrative state of the resource, which 
                    is up (`true`) or down (`false`).
                  type: boolean
                device_id:
                  description: The ID of the device that uses this port. For 
                    example, a server instance or a logical router.
                  type: string
                device_owner:
                  description: The entity type that uses this port. For example,
                    `compute:nova` (server instance), `network:dhcp` (DHCP 
                    agent) or `network:router_interface` (router interface).
                  type: string
                mac_address:
                  description: The MAC address of the port. If the port uses the
                    `direct-physical` `vnic_type` then the value of this field 
                    is overwritten with the MAC address provided in the active 
                    binding:profile if any.
                  type: string
                name:
                  description: Human-readable name of the resource.
                  type: string
                network_id:
                  description: The ID of the attached network.
                  format: uuid
                  type: string
                status:
                  description: |-
                    The status of the floating IP. Values are
                    `ACTIVE`, `DOWN` and `ERROR`.
                  type: string
              type: object
            port_forwardings:
              description: |-
                The associated port forwarding resources for the floating IP. If the
                floating IP has multiple port forwarding resources, this field has
                multiple entries. Each entry consists of network IP protocol
                (`protocol`), the fixed IP address of internal neutron port
                (`internal_ip_address`), the TCP or UDP port or port range used by
                internal neutron port (`internal_port`) or (`internal_port_range`)
                and the TCP or UDP port or port range used by floating IP
                (`external_port`) or (`external_port_range`).
              items:
                properties:
                  description:
                    description: A text describing the rule, which helps users 
                      to manage/find easily theirs rules.
                    type: string
                  external_port:
                    description: The TCP/UDP/other protocol port number of the 
                      port forwarding’s floating IP address.
                    type:
                      - 'null'
                      - number
                  external_port_range:
                    description: The TCP/UDP/other protocol port range of the 
                      port forwarding’s floating IP address.
                    type: number
                  id:
                    description: The ID of the floating IP port forwarding.
                    format: uuid
                    type: string
                  internal_ip_address:
                    description: The fixed IPv4 address of the Neutron port 
                      associated to the floating IP port forwarding.
                    type: string
                  internal_port:
                    description: The TCP/UDP/other protocol port number of the 
                      Neutron port fixed IP address associated to the floating 
                      ip port forwarding.
                    type:
                      - 'null'
                      - number
                  internal_port_id:
                    description: The ID of the Neutron port associated to the 
                      floating IP port forwarding.
                    format: uuid
                    type: string
                  internal_port_range:
                    description: The TCP/UDP/other protocol port range of the 
                      Neutron port fixed IP address associated to the floating 
                      ip port forwarding.
                    type: number
                  protocol:
                    description: The IP protocol used in the floating IP port 
                      forwarding.
                    type: string
                type: object
              type: array
            port_id:
              description: |-
                The ID of a port associated with the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router_id:
              description: |-
                The ID of the router for the floating IP.
              format: uuid
              type:
                - 'null'
                - string
            status:
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    FloatingipsIndexResponse:
      description: Response of the floatingips:get operation
      properties:
        floatingips:
          description: |-
            A list of `floatingip` objects.
          items:
            properties:
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              dns_domain:
                description: |-
                  A valid DNS domain.
                format: hostname
                maxLength: 255
                type: string
              dns_name:
                description: |-
                  A valid DNS name.
                maxLength: 255
                type: string
              fixed_ip_address:
                description: |-
                  The fixed IP address that is associated with the
                  floating IP address.
                type:
                  - 'null'
                  - string
              floating_ip_address:
                description: |-
                  The floating IP address.
                type:
                  - 'null'
                  - string
              floating_network_id:
                description: |-
                  The ID of the network associated with the
                  floating IP.
                format: uuid
                type: string
              id:
                description: |-
                  The ID of the floating IP address.
                format: uuid
                type: string
              port_details:
                description: |-
                  The information of the port that this floating IP associates with.
                  In particular, if the floating IP is associated with a port, this field
                  contains some attributes of the associated port, including `name`,
                  `network_id`, `mac_address`, `admin_state_up`, `status`,
                  `device_id` and `device_owner`. If the floating IP is not associated
                  with a port, this field is `null`.
                properties:
                  admin_state_up:
                    description: The administrative state of the resource, which
                      is up (`true`) or down (`false`).
                    type: boolean
                  device_id:
                    description: The ID of the device that uses this port. For 
                      example, a server instance or a logical router.
                    type: string
                  device_owner:
                    description: The entity type that uses this port. For 
                      example, `compute:nova` (server instance), `network:dhcp` 
                      (DHCP agent) or `network:router_interface` (router 
                      interface).
                    type: string
                  mac_address:
                    description: The MAC address of the port. If the port uses 
                      the `direct-physical` `vnic_type` then the value of this 
                      field is overwritten with the MAC address provided in the 
                      active binding:profile if any.
                    type: string
                  name:
                    description: Human-readable name of the resource.
                    type: string
                  network_id:
                    description: The ID of the attached network.
                    format: uuid
                    type: string
                  status:
                    description: |-
                      The status of the floating IP. Values are
                      `ACTIVE`, `DOWN` and `ERROR`.
                    type: string
                type: object
              port_forwardings:
                description: |-
                  The associated port forwarding resources for the floating IP. If the
                  floating IP has multiple port forwarding resources, this field has
                  multiple entries. Each entry consists of network IP protocol
                  (`protocol`), the fixed IP address of internal neutron port
                  (`internal_ip_address`), the TCP or UDP port or port range used by
                  internal neutron port (`internal_port`) or (`internal_port_range`)
                  and the TCP or UDP port or port range used by floating IP
                  (`external_port`) or (`external_port_range`).
                items:
                  properties:
                    description:
                      description: A text describing the rule, which helps users
                        to manage/find easily theirs rules.
                      type: string
                    external_port:
                      description: The TCP/UDP/other protocol port number of the
                        port forwarding’s floating IP address.
                      type:
                        - 'null'
                        - number
                    external_port_range:
                      description: The TCP/UDP/other protocol port range of the 
                        port forwarding’s floating IP address.
                      type: number
                    id:
                      description: The ID of the floating IP port forwarding.
                      format: uuid
                      type: string
                    internal_ip_address:
                      description: The fixed IPv4 address of the Neutron port 
                        associated to the floating IP port forwarding.
                      type: string
                    internal_port:
                      description: The TCP/UDP/other protocol port number of the
                        Neutron port fixed IP address associated to the floating
                        ip port forwarding.
                      type:
                        - 'null'
                        - number
                    internal_port_id:
                      description: The ID of the Neutron port associated to the 
                        floating IP port forwarding.
                      format: uuid
                      type: string
                    internal_port_range:
                      description: The TCP/UDP/other protocol port range of the 
                        Neutron port fixed IP address associated to the floating
                        ip port forwarding.
                      type: number
                    protocol:
                      description: The IP protocol used in the floating IP port 
                        forwarding.
                      type: string
                  type: object
                type: array
              port_id:
                description: |-
                  The ID of a port associated with the floating IP.
                format: uuid
                type:
                  - 'null'
                  - string
              qos_policy_id:
                description: |-
                  The ID of the QoS policy associated with the floating IP.
                format: uuid
                type:
                  - 'null'
                  - string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              router_id:
                description: |-
                  The ID of the router for the floating IP.
                format: uuid
                type:
                  - 'null'
                  - string
              status:
                type: string
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    FloatingipsPort_ForwardingShowResponse:
      description: Response of the 
        floatingips/floatingip_id/port_forwardings/id:get operation
      properties:
        port_forwarding:
          description: |-
            A `floating IP port forwarding` object.
          properties:
            description:
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
              maxLength: 1024
              type: string
            external_port:
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            external_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type: number
            id:
              description: |-
                The ID of the floating IP port forwarding.
              format: uuid
              type: string
            internal_ip_address:
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
              type: string
            internal_port:
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            internal_port_id:
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
              format: uuid
              type: string
            internal_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type: number
            protocol:
              description: |-
                The IP protocol used in the floating IP port forwarding.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    FloatingipsPort_ForwardingUpdateRequest:
      description: Request of the 
        floatingips/floatingip_id/port_forwardings/id:put operation
      properties:
        port_forwarding:
          description: |-
            A `floating IP port forwarding` object.
          properties:
            description:
              maxLength: 1024
              type: string
            external_port:
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            external_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type: number
            internal_ip_address:
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
              type: string
            internal_port:
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            internal_port_id:
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
              format: uuid
              type: string
            internal_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type: number
            protocol:
              description: |-
                The IP protocol used in the floating IP port forwarding.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    FloatingipsPort_ForwardingUpdateResponse:
      description: Response of the 
        floatingips/floatingip_id/port_forwardings/id:put operation
      properties:
        port_forwarding:
          description: |-
            A `floating IP port forwarding` object.
          properties:
            description:
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
              maxLength: 1024
              type: string
            external_port:
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            external_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type: number
            id:
              description: |-
                The ID of the floating IP port forwarding.
              format: uuid
              type: string
            internal_ip_address:
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
              type: string
            internal_port:
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            internal_port_id:
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
              format: uuid
              type: string
            internal_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type: number
            protocol:
              description: |-
                The IP protocol used in the floating IP port forwarding.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    FloatingipsPort_ForwardingsCreateRequest:
      description: Request of the 
        floatingips/floatingip_id/port_forwardings:post operation
      properties:
        port_forwarding:
          description: |-
            A `floating IP port forwarding` object.
          properties:
            description:
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
              maxLength: 1024
              type: string
            external_port:
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            external_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type: number
            internal_ip_address:
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
              type: string
            internal_port:
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            internal_port_id:
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
              format: uuid
              type: string
            internal_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type: number
            project_id:
              maxLength: 255
              type: string
            protocol:
              description: |-
                The IP protocol used in the floating IP port forwarding.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    FloatingipsPort_ForwardingsCreateResponse:
      description: Response of the 
        floatingips/floatingip_id/port_forwardings:post operation
      properties:
        port_forwarding:
          description: |-
            A `floating IP port forwarding` object.
          properties:
            description:
              description: |-
                A text describing the rule, which helps users to
                manage/find easily theirs rules.
              maxLength: 1024
              type: string
            external_port:
              description: |-
                The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            external_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                address.
              maximum: 65535
              minimum: 1
              type: number
            id:
              description: |-
                The ID of the floating IP port forwarding.
              format: uuid
              type: string
            internal_ip_address:
              description: |-
                The fixed IPv4 address of the Neutron port associated to the floating IP
                port forwarding.
              type: string
            internal_port:
              description: |-
                The TCP/UDP/other protocol port number of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type:
                - 'null'
                - number
            internal_port_id:
              description: |-
                The ID of the Neutron port associated to the floating IP port forwarding.
              format: uuid
              type: string
            internal_port_range:
              description: |-
                The TCP/UDP/other protocol port range of the Neutron port fixed IP
                address associated to the floating ip port forwarding.
              maximum: 65535
              minimum: 1
              type: number
            protocol:
              description: |-
                The IP protocol used in the floating IP port forwarding.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    FloatingipsPort_ForwardingsIndexResponse:
      description: Response of the 
        floatingips/floatingip_id/port_forwardings:get operation
      properties:
        port_forwardings:
          description: |-
            A list of `floating IP port forwardings` objects.
          items:
            properties:
              description:
                description: |-
                  A text describing the rule, which helps users to
                  manage/find easily theirs rules.
                maxLength: 1024
                type: string
              external_port:
                description: |-
                  The TCP/UDP/other protocol port number of the port forwarding’s floating IP
                  address.
                maximum: 65535
                minimum: 1
                type:
                  - 'null'
                  - number
              external_port_range:
                description: |-
                  The TCP/UDP/other protocol port range of the port forwarding’s floating IP
                  address.
                maximum: 65535
                minimum: 1
                type: number
              id:
                description: |-
                  The ID of the floating IP port forwarding.
                format: uuid
                type: string
              internal_ip_address:
                description: |-
                  The fixed IPv4 address of the Neutron port associated to the floating IP
                  port forwarding.
                type: string
              internal_port:
                description: |-
                  The TCP/UDP/other protocol port number of the Neutron port fixed IP
                  address associated to the floating ip port forwarding.
                maximum: 65535
                minimum: 1
                type:
                  - 'null'
                  - number
              internal_port_id:
                description: |-
                  The ID of the Neutron port associated to the floating IP port forwarding.
                format: uuid
                type: string
              internal_port_range:
                description: |-
                  The TCP/UDP/other protocol port range of the Neutron port fixed IP
                  address associated to the floating ip port forwarding.
                maximum: 65535
                minimum: 1
                type: number
              protocol:
                description: |-
                  The IP protocol used in the floating IP port forwarding.
                enum:
                  - dccp
                  - icmp
                  - ipv6-icmp
                  - sctp
                  - tcp
                  - udp
                type: string
            type: object
          type: array
      type: object
    FloatingipsTagUpdateRequest:
      description: Request of the floatingips/floatingip_id/tags/id:put 
        operation
      type: object
    FloatingipsTagUpdateResponse:
      description: Response of the floatingips/floatingip_id/tags/id:put 
        operation
      type: object
    FloatingipsTagsIndexResponse:
      description: Response of the floatingips/floatingip_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    FloatingipsTagsUpdate_AllRequest:
      description: Request of the floatingips/floatingip_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    FloatingipsTagsUpdate_AllResponse:
      description: Response of the floatingips/floatingip_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    Local_IpShowResponse:
      description: Response of the local-ips/id:get operation
      properties:
        local_ip:
          properties:
            created_at:
              type: string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            ip_mode:
              enum:
                - passthrough
                - translate
              type: string
            local_ip_address:
              type:
                - 'null'
                - string
            local_port_id:
              format: uuid
              type: string
            name:
              maxLength: 255
              type: string
            network_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            updated_at:
              type: string
          type: object
      type: object
    Local_IpUpdateRequest:
      description: Request of the local-ips/id:put operation
      properties:
        local_ip:
          properties:
            description:
              maxLength: 255
              type: string
            name:
              maxLength: 255
              type: string
          type: object
      type: object
    Local_IpUpdateResponse:
      description: Response of the local-ips/id:put operation
      properties:
        local_ip:
          properties:
            created_at:
              type: string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            ip_mode:
              enum:
                - passthrough
                - translate
              type: string
            local_ip_address:
              type:
                - 'null'
                - string
            local_port_id:
              format: uuid
              type: string
            name:
              maxLength: 255
              type: string
            network_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            updated_at:
              type: string
          type: object
      type: object
    Local_IpsCreateRequest:
      description: Request of the local-ips:post operation
      properties:
        local_ip:
          properties:
            description:
              maxLength: 255
              type: string
            ip_mode:
              enum:
                - passthrough
                - translate
              type: string
            local_ip_address:
              type:
                - 'null'
                - string
            local_port_id:
              format: uuid
              type: string
            name:
              maxLength: 255
              type: string
            network_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
          type: object
      type: object
    Local_IpsCreateResponse:
      description: Response of the local-ips:post operation
      properties:
        local_ip:
          properties:
            created_at:
              type: string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            ip_mode:
              enum:
                - passthrough
                - translate
              type: string
            local_ip_address:
              type:
                - 'null'
                - string
            local_port_id:
              format: uuid
              type: string
            name:
              maxLength: 255
              type: string
            network_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            updated_at:
              type: string
          type: object
      type: object
    Local_IpsIndexResponse:
      description: Response of the local-ips:get operation
      properties:
        local_ips:
          items:
            properties:
              created_at:
                type: string
              description:
                maxLength: 255
                type: string
              id:
                format: uuid
                type: string
              ip_mode:
                enum:
                  - passthrough
                  - translate
                type: string
              local_ip_address:
                type:
                  - 'null'
                  - string
              local_port_id:
                format: uuid
                type: string
              name:
                maxLength: 255
                type: string
              network_id:
                format: uuid
                type: string
              project_id:
                maxLength: 255
                type: string
              revision_number:
                type: integer
              updated_at:
                type: string
            type: object
          type: array
      type: object
    Local_IpsPort_AssociationShowResponse:
      description: Response of the 
        local_ips/local_ip_id/port_associations/id:get operation
      properties:
        port_association:
          properties:
            fixed_ip:
              type:
                - 'null'
                - string
            fixed_port_id:
              format: uuid
              type: string
            host:
              type: string
            local_ip_address:
              type: string
            local_ip_id:
              type: string
          type: object
      type: object
    Local_IpsPort_AssociationUpdateRequest:
      description: Request of the local_ips/local_ip_id/port_associations/id:put
        operation
      properties:
        port_association:
          properties: {}
          type: object
      type: object
    Local_IpsPort_AssociationUpdateResponse:
      description: Response of the 
        local_ips/local_ip_id/port_associations/id:put operation
      properties:
        port_association:
          properties:
            fixed_ip:
              type:
                - 'null'
                - string
            fixed_port_id:
              format: uuid
              type: string
            host:
              type: string
            local_ip_address:
              type: string
            local_ip_id:
              type: string
          type: object
      type: object
    Local_IpsPort_AssociationsCreateRequest:
      description: Request of the local_ips/local_ip_id/port_associations:post 
        operation
      properties:
        port_association:
          properties:
            fixed_ip:
              description: |-
                The requested IP of the port associated with the Local IP.
              type:
                - 'null'
                - string
            fixed_port_id:
              description: |-
                The requested ID of the port associated with the Local IP.
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
          type: object
      type: object
    Local_IpsPort_AssociationsCreateResponse:
      description: Response of the local_ips/local_ip_id/port_associations:post 
        operation
      properties:
        port_association:
          properties:
            fixed_ip:
              description: |-
                The IP of the port associated with the Local IP.
              type:
                - 'null'
                - string
            fixed_port_id:
              description: |-
                The ID of the port associated with the Local IP.
              format: uuid
              type: string
            host:
              description: |-
                The host of the port associated with the Local IP.
              type: string
            local_ip_address:
              type: string
            local_ip_id:
              description: |-
                The ID of the associated Local IP.
              type: string
          type: object
      type: object
    Local_IpsPort_AssociationsIndexResponse:
      description: Response of the local_ips/local_ip_id/port_associations:get 
        operation
      properties:
        port_associations:
          items:
            properties:
              fixed_ip:
                description: |-
                  The IP of the port associated with the Local IP.
                type:
                  - 'null'
                  - string
              fixed_port_id:
                description: |-
                  The ID of the port associated with the Local IP.
                format: uuid
                type: string
              host:
                description: |-
                  The host of the port associated with the Local IP.
                type: string
              local_ip_address:
                description: |-
                  The actual IP address of the Local IP.
                type: string
              local_ip_id:
                description: |-
                  The ID of the Local IP.
                type: string
            type: object
          type: array
      type: object
    LogLogShowResponse:
      description: Response of the log/logs/id:get operation
      properties:
        log:
          description: |-
            A `log` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            enabled:
              description: |-
                Indicates whether this log object is enabled or disabled.
              type:
                - boolean
                - string
            event:
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
              enum:
                - ACCEPT
                - ALL
                - DROP
              type: string
            id:
              description: |-
                The ID of the log object.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            resource_id:
              description: |-
                The ID of resource log (e.g security group ID).
              format: uuid
              type:
                - 'null'
                - string
            resource_type:
              description: |-
                The resource log type such as ‘security_group’.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            target_id:
              description: |-
                The ID of resource target log such as port ID.
              format: uuid
              type:
                - 'null'
                - string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    LogLogUpdateRequest:
      description: Request of the log/logs/id:put operation
      properties:
        log:
          description: |-
            A `log` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            enabled:
              description: |-
                Indicates whether this log object is enabled or disabled.
              type:
                - boolean
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
          type: object
      type: object
    LogLogUpdateResponse:
      description: Response of the log/logs/id:put operation
      properties:
        log:
          description: |-
            A `log` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            enabled:
              description: |-
                Indicates whether this log object is enabled or disabled.
              type:
                - boolean
                - string
            event:
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
              enum:
                - ACCEPT
                - ALL
                - DROP
              type: string
            id:
              description: |-
                The ID of the log object.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            resource_id:
              description: |-
                The ID of resource log (e.g security group ID).
              format: uuid
              type:
                - 'null'
                - string
            resource_type:
              description: |-
                The resource log type such as ‘security_group’.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            target_id:
              description: |-
                The ID of resource target log such as port ID.
              format: uuid
              type:
                - 'null'
                - string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    LogLoggable_ResourceShowResponse:
      description: Response of the log/loggable-resources/id:get operation
      properties:
        loggable_resource:
          properties:
            type:
              type: string
          type: object
      type: object
    LogLoggable_ResourceUpdateRequest:
      description: Request of the log/loggable-resources/id:put operation
      properties:
        loggable_resource:
          properties: {}
          type: object
      type: object
    LogLoggable_ResourceUpdateResponse:
      description: Response of the log/loggable-resources/id:put operation
      properties:
        loggable_resource:
          properties:
            type:
              type: string
          type: object
      type: object
    LogLoggable_ResourcesCreateRequest:
      description: Request of the log/loggable-resources:post operation
      properties:
        loggable_resource:
          properties: {}
          type: object
      type: object
    LogLoggable_ResourcesCreateResponse:
      description: Response of the log/loggable-resources:post operation
      properties:
        loggable_resource:
          properties:
            type:
              type: string
          type: object
      type: object
    LogLoggable_ResourcesIndexResponse:
      description: Response of the log/loggable-resources:get operation
      properties:
        loggable_resources:
          description: |-
            A list of `loggable_resource` object.
          items:
            properties:
              type:
                description: |-
                  The resource log type such as ‘security_group’.
                type: string
            type: object
          type: array
      type: object
    LogLogsCreateRequest:
      description: Request of the log/logs:post operation
      properties:
        log:
          description: |-
            A `log` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            enabled:
              description: |-
                Indicates whether this log object is enabled or disabled.
                Default is true.
              type:
                - boolean
                - string
            event:
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
                Default is `ALL`.
              enum:
                - ACCEPT
                - ALL
                - DROP
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
            resource_id:
              description: |-
                The ID of resource log (e.g security group ID).
              format: uuid
              type:
                - 'null'
                - string
            resource_type:
              description: |-
                The resource log type such as ‘security_group’.
              maxLength: 255
              type: string
            target_id:
              description: |-
                The ID of resource target log such as port ID.
              format: uuid
              type:
                - 'null'
                - string
          type: object
      type: object
    LogLogsCreateResponse:
      description: Response of the log/logs:post operation
      properties:
        log:
          description: |-
            A `log` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            enabled:
              description: |-
                Indicates whether this log object is enabled or disabled.
              type:
                - boolean
                - string
            event:
              description: |-
                Type of security events to log.
                `ACCEPT`, `DROP`, or `ALL`.
              enum:
                - ACCEPT
                - ALL
                - DROP
              type: string
            id:
              description: |-
                The ID of the log object.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            project_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            resource_id:
              description: |-
                The ID of resource log (e.g security group ID).
              format: uuid
              type:
                - 'null'
                - string
            resource_type:
              description: |-
                The resource log type such as ‘security_group’.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            target_id:
              description: |-
                The ID of resource target log such as port ID.
              format: uuid
              type:
                - 'null'
                - string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    LogLogsIndexResponse:
      description: Response of the log/logs:get operation
      properties:
        logs:
          description: |-
            A list of `log` objects.
          items:
            properties:
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              enabled:
                description: |-
                  Indicates whether this log object is enabled or disabled.
                type:
                  - boolean
                  - string
              event:
                description: |-
                  Type of security events to log.
                  `ACCEPT`, `DROP`, or `ALL`.
                enum:
                  - ACCEPT
                  - ALL
                  - DROP
                type: string
              id:
                description: |-
                  The ID of the log object.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              project_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              resource_id:
                description: |-
                  The ID of resource log (e.g security group ID).
                format: uuid
                type:
                  - 'null'
                  - string
              resource_type:
                description: |-
                  The resource log type such as ‘security_group’.
                maxLength: 255
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              target_id:
                description: |-
                  The ID of resource target log such as port ID.
                format: uuid
                type:
                  - 'null'
                  - string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    MeteringMetering_LabelShowResponse:
      description: Response of the metering/metering-labels/id:get operation
      properties:
        metering_label:
          description: |-
            A `metering_label` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            id:
              description: |-
                The ID of the metering label.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this metering label is shared
                across all projects.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_LabelUpdateRequest:
      description: Request of the metering/metering-labels/id:put operation
      properties:
        metering_label:
          properties: {}
          type: object
      type: object
    MeteringMetering_LabelUpdateResponse:
      description: Response of the metering/metering-labels/id:put operation
      properties:
        metering_label:
          properties:
            description:
              maxLength: 1024
              type: string
            id:
              type: string
            name:
              maxLength: 255
              type: string
            shared:
              type:
                - boolean
                - string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_Label_RuleShowResponse:
      description: Response of the metering/metering-label-rules/id:get 
        operation
      properties:
        metering_label_rule:
          properties:
            destination_ip_prefix:
              type: string
            direction:
              enum:
                - egress
                - ingress
              type: string
            excluded:
              type:
                - boolean
                - string
            id:
              type: string
            metering_label_id:
              format: uuid
              type: string
            remote_ip_prefix:
              type: string
            source_ip_prefix:
              type: string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_Label_RuleUpdateRequest:
      description: Request of the metering/metering-label-rules/id:put operation
      properties:
        metering_label_rule:
          properties:
            destination_ip_prefix:
              type: string
            source_ip_prefix:
              type: string
          type: object
      type: object
    MeteringMetering_Label_RuleUpdateResponse:
      description: Response of the metering/metering-label-rules/id:put 
        operation
      properties:
        metering_label_rule:
          properties:
            destination_ip_prefix:
              type: string
            direction:
              enum:
                - egress
                - ingress
              type: string
            excluded:
              type:
                - boolean
                - string
            id:
              type: string
            metering_label_id:
              format: uuid
              type: string
            remote_ip_prefix:
              type: string
            source_ip_prefix:
              type: string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_Label_RulesCreateRequest:
      description: Request of the metering/metering-label-rules:post operation
      properties:
        metering_label_rule:
          description: |-
            A `metering_label_rule` object.
          properties:
            destination_ip_prefix:
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the metering rule is applied.
              enum:
                - egress
                - ingress
              type: string
            excluded:
              description: |-
                Indicates whether to count the traffic of a specific IP address with the
                `remote_ip_prefix`, `source_ip_prefix`, or `destination_ip_prefix`
                values. Default is `false`.
              type:
                - boolean
                - string
            metering_label_id:
              description: |-
                The metering label ID associated with this
                metering rule.
              format: uuid
              type: string
            remote_ip_prefix:
              description: |-
                (deprecated) The source IP prefix that is matched by this metering rule. By
                source IP prefix, one should read the internal/private IPs used in
                OpenStack.
              type: string
            source_ip_prefix:
              type: string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_Label_RulesCreateResponse:
      description: Response of the metering/metering-label-rules:post operation
      properties:
        metering_label_rule:
          description: |-
            A `metering_label_rule` object.
          properties:
            destination_ip_prefix:
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the metering rule is applied.
              enum:
                - egress
                - ingress
              type: string
            excluded:
              description: |-
                Indicates whether to count the traffic of a specific IP address with the
                `remote_ip_prefix`, `source_ip_prefix`, or `destination_ip_prefix`
                values.
              type:
                - boolean
                - string
            id:
              description: |-
                The ID of the metering label rule.
              type: string
            metering_label_id:
              description: |-
                The metering label ID associated with this
                metering rule.
              format: uuid
              type: string
            remote_ip_prefix:
              description: |-
                (deprecated) The source IP prefix that is matched by this metering rule. By
                source IP prefix, one should read the internal/private IPs used in
                OpenStack.
              type: string
            source_ip_prefix:
              type: string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_Label_RulesIndexResponse:
      description: Response of the metering/metering-label-rules:get operation
      properties:
        metering_label_rules:
          description: |-
            A list of `metering_label_rule` objects.
          items:
            properties:
              destination_ip_prefix:
                type: string
              direction:
                description: |-
                  Ingress or egress, which is the direction in
                  which the metering rule is applied.
                enum:
                  - egress
                  - ingress
                type: string
              excluded:
                description: |-
                  Indicates whether to count the traffic of a specific IP address with the
                  `remote_ip_prefix`, `source_ip_prefix`, or `destination_ip_prefix`
                  values.
                type:
                  - boolean
                  - string
              id:
                description: |-
                  The ID of the metering label rule.
                type: string
              metering_label_id:
                description: |-
                  The metering label ID associated with this
                  metering rule.
                format: uuid
                type: string
              remote_ip_prefix:
                description: |-
                  (deprecated) The source IP prefix that is matched by this metering rule. By
                  source IP prefix, one should read the internal/private IPs used in
                  OpenStack.
                type: string
              source_ip_prefix:
                type: string
              tenant_id:
                maxLength: 255
                type: string
            type: object
          type: array
      type: object
    MeteringMetering_LabelsCreateRequest:
      description: Request of the metering/metering-labels:post operation
      properties:
        metering_label:
          description: |-
            A `metering_label` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 1024
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this metering label is shared
                across all projects.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_LabelsCreateResponse:
      description: Response of the metering/metering-labels:post operation
      properties:
        metering_label:
          description: |-
            A `metering_label` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 1024
              type: string
            id:
              description: |-
                The ID of the metering label.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            shared:
              description: |-
                Indicates whether this metering label is shared
                across all projects.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    MeteringMetering_LabelsIndexResponse:
      description: Response of the metering/metering-labels:get operation
      properties:
        metering_labels:
          description: |-
            A list of `metering_label` objects.
          items:
            properties:
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 1024
                type: string
              id:
                description: |-
                  The ID of the metering label.
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              shared:
                description: |-
                  Indicates whether this metering label is shared
                  across all projects.
                type:
                  - boolean
                  - string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
            type: object
          type: array
      type: object
    Ndp_ProxiesCreateRequest:
      description: Request of the ndp-proxies:post operation
      properties:
        ndp_proxy:
          properties:
            description:
              maxLength: 255
              type: string
            ip_address:
              type:
                - 'null'
                - string
            name:
              maxLength: 255
              type: string
            port_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            router_id:
              format: uuid
              type: string
          type: object
      type: object
    Ndp_ProxiesCreateResponse:
      description: Response of the ndp-proxies:post operation
      properties:
        ndp_proxy:
          properties:
            created_at:
              type: string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            ip_address:
              type:
                - 'null'
                - string
            name:
              maxLength: 255
              type: string
            port_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            router_id:
              format: uuid
              type: string
            updated_at:
              type: string
          type: object
      type: object
    Ndp_ProxiesIndexResponse:
      description: Response of the ndp-proxies:get operation
      properties:
        ndp_proxies:
          items:
            properties:
              created_at:
                type: string
              description:
                maxLength: 255
                type: string
              id:
                format: uuid
                type: string
              ip_address:
                type:
                  - 'null'
                  - string
              name:
                maxLength: 255
                type: string
              port_id:
                format: uuid
                type: string
              project_id:
                maxLength: 255
                type: string
              revision_number:
                type: integer
              router_id:
                format: uuid
                type: string
              updated_at:
                type: string
            type: object
          type: array
      type: object
    Ndp_ProxyShowResponse:
      description: Response of the ndp-proxies/id:get operation
      properties:
        ndp_proxy:
          properties:
            created_at:
              type: string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            ip_address:
              type:
                - 'null'
                - string
            name:
              maxLength: 255
              type: string
            port_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            router_id:
              format: uuid
              type: string
            updated_at:
              type: string
          type: object
      type: object
    Ndp_ProxyUpdateRequest:
      description: Request of the ndp-proxies/id:put operation
      properties:
        ndp_proxy:
          properties:
            description:
              maxLength: 255
              type: string
            name:
              maxLength: 255
              type: string
          type: object
      type: object
    Ndp_ProxyUpdateResponse:
      description: Response of the ndp-proxies/id:put operation
      properties:
        ndp_proxy:
          properties:
            created_at:
              type: string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            ip_address:
              type:
                - 'null'
                - string
            name:
              maxLength: 255
              type: string
            port_id:
              format: uuid
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            router_id:
              format: uuid
              type: string
            updated_at:
              type: string
          type: object
      type: object
    NetworkShowResponse:
      description: Response of the networks/network_id:get operation
      properties:
        network:
          description: |-
            A `network` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidate for the network.
              items:
                type: string
              type: array
            availability_zones:
              description: |-
                The availability zone for the network.
              items:
                type: string
              type: array
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the network.
              format: uuid
              type: string
            ipv4_address_scope:
              description: |-
                The ID of the IPv4 address scope that the network is associated with.
              type: string
            ipv6_address_scope:
              description: |-
                The ID of the IPv6 address scope that the network is associated with.
              type: string
            is_default:
              description: |-
                The network is default pool or not.
              type:
                - boolean
                - string
            l2_adjacency:
              description: |-
                Indicates whether L2 connectivity is available throughout
                the `network`.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the network.
              maxLength: 255
              type: string
            port_security_enabled:
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
              type:
                - boolean
                - string
            provider:network_type:
              description: |-
                The type of physical network that this network is mapped to.
                For example, `flat`, `vlan`, `vxlan`, or `gre`.
                Valid values depend on a networking back-end.
              maxLength: 32
              type: string
            provider:physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            provider:segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            qinq:
              type:
                - boolean
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the network.
              format: uuid
              type:
                - 'null'
                - string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router:external:
              description: |-
                Defines whether the network may be used for creation of floating IPs. Only
                networks with this flag may be an external gateway for routers.
                The network must have an external routing facility that is not managed by
                the networking service. If the network is updated from external to internal
                the unused floating IPs of this network are automatically deleted when
                extension `floatingip-autodelete-internal` is present.
              type:
                - boolean
                - string
            segments:
              description: |-
                A list of provider `segment` objects.
              items:
                properties:
                  provider:network_type:
                    type: string
                  provider:physical_network:
                    type: string
                  provider:segmentation_id:
                    type: integer
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this network is shared across all tenants. By default,
                only administrative users can change this value.
              type:
                - boolean
                - string
            status:
              description: |-
                The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
              type: string
            subnets:
              description: |-
                The associated subnets.
              items:
                format: uuid
                type: string
              type: array
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
            vlan_transparent:
              description: |-
                Indicates the VLAN transparency mode of the network, which is
                VLAN transparent (`true`) or not VLAN transparent (`false`).
              type:
                - boolean
                - string
          type: object
      type: object
    NetworkUpdateRequest:
      description: Request of the networks/network_id:put operation
      properties:
        network:
          description: |-
            A `network` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            is_default:
              description: |-
                The network is default or not.
              type:
                - boolean
                - string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the network.
              maxLength: 255
              type: string
            port_security_enabled:
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
              type:
                - boolean
                - string
            provider:network_type:
              description: |-
                The type of physical network that this network is mapped to.
                For example, `flat`, `vlan`, `vxlan`, or `gre`.
                Valid values depend on a networking back-end.
              maxLength: 32
              type: string
            provider:physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            provider:segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the network.
              format: uuid
              type:
                - 'null'
                - string
            router:external:
              description: |-
                Indicates whether the network has an external routing facility that’s not
                managed by the networking service.
              type:
                - boolean
                - string
            segments:
              description: |-
                A list of provider `segment` objects.
              items:
                properties:
                  provider:network_type:
                    type: string
                  provider:physical_network:
                    type: string
                  provider:segmentation_id:
                    type: integer
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
          type: object
      type: object
    NetworkUpdateResponse:
      description: Response of the networks/network_id:put operation
      properties:
        network:
          description: |-
            A `network` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidate for the network.
              items:
                type: string
              type: array
            availability_zones:
              description: |-
                The availability zone for the network.
              items:
                type: string
              type: array
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the network.
              format: uuid
              type: string
            ipv4_address_scope:
              description: |-
                The ID of the IPv4 address scope that the network is associated with.
              type: string
            ipv6_address_scope:
              description: |-
                The ID of the IPv6 address scope that the network is associated with.
              type: string
            is_default:
              description: |-
                The network is default pool or not.
              type:
                - boolean
                - string
            l2_adjacency:
              description: |-
                Indicates whether L2 connectivity is available throughout
                the `network`.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the network.
              maxLength: 255
              type: string
            port_security_enabled:
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
              type:
                - boolean
                - string
            provider:network_type:
              description: |-
                The type of physical network that this network is mapped to.
                For example, `flat`, `vlan`, `vxlan`, or `gre`.
                Valid values depend on a networking back-end.
              maxLength: 32
              type: string
            provider:physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            provider:segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            qinq:
              type:
                - boolean
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the network.
              format: uuid
              type:
                - 'null'
                - string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router:external:
              description: |-
                Defines whether the network may be used for creation of floating IPs. Only
                networks with this flag may be an external gateway for routers.
                The network must have an external routing facility that is not managed by
                the networking service. If the network is updated from external to internal
                the unused floating IPs of this network are automatically deleted when
                extension `floatingip-autodelete-internal` is present.
              type:
                - boolean
                - string
            segments:
              description: |-
                A list of provider `segment` objects.
              items:
                properties:
                  provider:network_type:
                    type: string
                  provider:physical_network:
                    type: string
                  provider:segmentation_id:
                    type: integer
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this network is shared across all tenants. By default,
                only administrative users can change this value.
              type:
                - boolean
                - string
            status:
              description: |-
                The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
              type: string
            subnets:
              description: |-
                The associated subnets.
              items:
                format: uuid
                type: string
              type: array
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
            vlan_transparent:
              type:
                - boolean
                - string
          type: object
      type: object
    Network_Ip_AvailabilitiesCreateRequest:
      description: Request of the network-ip-availabilities:post operation
      properties:
        network_ip_availability:
          properties: {}
          type: object
      type: object
    Network_Ip_AvailabilitiesCreateResponse:
      description: Response of the network-ip-availabilities:post operation
      properties:
        network_ip_availability:
          properties:
            network_id:
              type: string
            network_name:
              type: string
            subnet_ip_availability:
              type: string
            tenant_id:
              type: string
            total_ips:
              type: string
            used_ips:
              type: string
          type: object
      type: object
    Network_Ip_AvailabilitiesIndexResponse:
      description: Response of the network-ip-availabilities:get operation
      properties:
        network_ip_availabilities:
          description: |-
            The `network_ip_availabilities` object.
          items:
            properties:
              network_id:
                description: |-
                  The ID of the network whose IP availability detail is reported.
                type: string
              network_name:
                description: |-
                  Human-readable name of the network.
                type: string
              subnet_ip_availability:
                description: |-
                  A list of dictionaries showing subnet IP availability.
                  It contains information for every subnet associated to the network.
                type: string
              tenant_id:
                description: |-
                  The ID of the project.
                type: string
              total_ips:
                description: |-
                  The total number of IP addresses in a network.
                type: string
              used_ips:
                description: |-
                  The number of used IP addresses of all subnets in
                  a network.
                type: string
            type: object
          type: array
      type: object
    Network_Ip_AvailabilityShowResponse:
      description: Response of the network-ip-availabilities/id:get operation
      properties:
        network_ip_availability:
          description: |-
            A `network_ip_availability` object.
          properties:
            network_id:
              description: |-
                The ID of the network whose IP availability detail is reported.
              type: string
            network_name:
              description: |-
                Human-readable name of the network.
              type: string
            subnet_ip_availability:
              description: |-
                A list of dictionaries showing subnet IP availability.
                It contains information for every subnet associated to the network.
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              type: string
            total_ips:
              description: |-
                The total number of IP addresses in a network.
              type: string
            used_ips:
              description: |-
                The number of used IP addresses of all subnets in
                a network.
              type: string
          type: object
      type: object
    Network_Ip_AvailabilityUpdateRequest:
      description: Request of the network-ip-availabilities/id:put operation
      properties:
        network_ip_availability:
          properties: {}
          type: object
      type: object
    Network_Ip_AvailabilityUpdateResponse:
      description: Response of the network-ip-availabilities/id:put operation
      properties:
        network_ip_availability:
          properties:
            network_id:
              type: string
            network_name:
              type: string
            subnet_ip_availability:
              type: string
            tenant_id:
              type: string
            total_ips:
              type: string
            used_ips:
              type: string
          type: object
      type: object
    Network_Segment_RangeShowResponse:
      description: Response of the network-segment-ranges/id:get operation
      properties:
        network_segment_range:
          properties:
            available:
              type: string
            created_at:
              type: string
            default:
              type:
                - boolean
                - string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            maximum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            minimum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            name:
              maxLength: 255
              type: string
            network_type:
              enum:
                - geneve
                - gre
                - vlan
                - vxlan
              type: string
            physical_network:
              maxLength: 64
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            shared:
              type:
                - boolean
                - string
            tags:
              items:
                type: string
              type: array
            updated_at:
              type: string
            used:
              type: string
          type: object
      type: object
    Network_Segment_RangeUpdateRequest:
      description: Request of the network-segment-ranges/id:put operation
      properties:
        network_segment_range:
          properties:
            description:
              maxLength: 255
              type: string
            maximum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            minimum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            name:
              maxLength: 255
              type: string
          type: object
      type: object
    Network_Segment_RangeUpdateResponse:
      description: Response of the network-segment-ranges/id:put operation
      properties:
        network_segment_range:
          properties:
            available:
              type: string
            created_at:
              type: string
            default:
              type:
                - boolean
                - string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            maximum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            minimum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            name:
              maxLength: 255
              type: string
            network_type:
              enum:
                - geneve
                - gre
                - vlan
                - vxlan
              type: string
            physical_network:
              maxLength: 64
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            shared:
              type:
                - boolean
                - string
            tags:
              items:
                type: string
              type: array
            updated_at:
              type: string
            used:
              type: string
          type: object
      type: object
    Network_Segment_RangesCreateRequest:
      description: Request of the network-segment-ranges:post operation
      properties:
        network_segment_range:
          properties:
            description:
              maxLength: 255
              type: string
            maximum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            minimum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            name:
              maxLength: 255
              type: string
            network_type:
              enum:
                - geneve
                - gre
                - vlan
                - vxlan
              type: string
            physical_network:
              maxLength: 64
              type: string
            project_id:
              maxLength: 255
              type: string
            shared:
              type:
                - boolean
                - string
          type: object
      type: object
    Network_Segment_RangesCreateResponse:
      description: Response of the network-segment-ranges:post operation
      properties:
        network_segment_range:
          properties:
            available:
              type: string
            created_at:
              type: string
            default:
              type:
                - boolean
                - string
            description:
              maxLength: 255
              type: string
            id:
              format: uuid
              type: string
            maximum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            minimum:
              maximum: 4294967295
              minimum: 1
              type:
                - integer
                - string
            name:
              maxLength: 255
              type: string
            network_type:
              enum:
                - geneve
                - gre
                - vlan
                - vxlan
              type: string
            physical_network:
              maxLength: 64
              type: string
            project_id:
              maxLength: 255
              type: string
            revision_number:
              type: integer
            shared:
              type:
                - boolean
                - string
            tags:
              items:
                type: string
              type: array
            updated_at:
              type: string
            used:
              type: string
          type: object
      type: object
    Network_Segment_RangesIndexResponse:
      description: Response of the network-segment-ranges:get operation
      properties:
        network_segment_ranges:
          items:
            properties:
              available:
                type: string
              created_at:
                type: string
              default:
                type:
                  - boolean
                  - string
              description:
                maxLength: 255
                type: string
              id:
                format: uuid
                type: string
              maximum:
                maximum: 4294967295
                minimum: 1
                type:
                  - integer
                  - string
              minimum:
                maximum: 4294967295
                minimum: 1
                type:
                  - integer
                  - string
              name:
                maxLength: 255
                type: string
              network_type:
                enum:
                  - geneve
                  - gre
                  - vlan
                  - vxlan
                type: string
              physical_network:
                maxLength: 64
                type: string
              project_id:
                maxLength: 255
                type: string
              revision_number:
                type: integer
              shared:
                type:
                  - boolean
                  - string
              tags:
                items:
                  type: string
                type: array
              updated_at:
                type: string
              used:
                type: string
            type: object
          type: array
      type: object
    Network_Segment_RangesTagUpdateRequest:
      description: Request of the 
        network_segment_ranges/network_segment_range_id/tags/id:put operation
      type: object
    Network_Segment_RangesTagUpdateResponse:
      description: Response of the 
        network_segment_ranges/network_segment_range_id/tags/id:put operation
      type: object
    Network_Segment_RangesTagsIndexResponse:
      description: Response of the 
        network_segment_ranges/network_segment_range_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    Network_Segment_RangesTagsUpdate_AllRequest:
      description: Request of the 
        network_segment_ranges/network_segment_range_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    Network_Segment_RangesTagsUpdate_AllResponse:
      description: Response of the 
        network_segment_ranges/network_segment_range_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    NetworksCreateRequest:
      description: Request of the networks:post operation
      properties:
        network:
          description: |-
            A `network` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidate for the network.
              items:
                type: string
              type: array
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            ha:
              type:
                - boolean
                - string
            is_default:
              description: |-
                The network is default or not.
              type:
                - boolean
                - string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the network.
              maxLength: 255
              type: string
            port_security_enabled:
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
              type:
                - boolean
                - string
            provider:network_type:
              description: |-
                The type of physical network that this network should be mapped to.
                For example, `flat`, `vlan`, `vxlan`, or `gre`.
                Valid values depend on a networking back-end.
              maxLength: 32
              type: string
            provider:physical_network:
              description: |-
                The physical network where this network should be implemented.
                The Networking API v2.0 does not provide a way to list available
                physical networks. For example, the Open vSwitch plug-in configuration
                file defines a symbolic name that maps to specific bridges on each
                compute host.
              maxLength: 64
              type: string
            provider:segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
              type:
                - integer
                - string
            qinq:
              type:
                - boolean
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the network.
              format: uuid
              type:
                - 'null'
                - string
            router:external:
              description: |-
                Indicates whether the network has an external routing facility that’s not
                managed by the networking service.
              type:
                - boolean
                - string
            segments:
              description: |-
                A list of provider `segment` objects.
              items:
                properties:
                  provider:network_type:
                    type: string
                  provider:physical_network:
                    type: string
                  provider:segmentation_id:
                    type: integer
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
            vlan_transparent:
              description: |-
                Indicates the VLAN transparency mode of the network, which is
                VLAN transparent (`true`) or not VLAN transparent (`false`).
              type:
                - boolean
                - string
          type: object
      type: object
    NetworksCreateResponse:
      description: Response of the networks:post operation
      properties:
        network:
          description: |-
            A `network` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the network, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidate for the network.
              items:
                type: string
              type: array
            availability_zones:
              description: |-
                The availability zone for the network.
              items:
                type: string
              type: array
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the network.
              format: uuid
              type: string
            ipv4_address_scope:
              description: |-
                The ID of the IPv4 address scope that the network is associated with.
              type: string
            ipv6_address_scope:
              description: |-
                The ID of the IPv6 address scope that the network is associated with.
              type: string
            is_default:
              description: |-
                The network is default pool or not.
              type:
                - boolean
                - string
            l2_adjacency:
              description: |-
                Indicates whether L2 connectivity is available throughout
                the `network`.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the network.
              maxLength: 255
              type: string
            port_security_enabled:
              description: |-
                The port security status of the network. Valid values are
                enabled (`true`) and disabled (`false`).
                This value is used as the default value of `port_security_enabled`
                field of a newly created port.
              type:
                - boolean
                - string
            provider:network_type:
              description: |-
                The type of physical network that this network is mapped to.
                For example, `flat`, `vlan`, `vxlan`, or `gre`.
                Valid values depend on a networking back-end.
              maxLength: 32
              type: string
            provider:physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            provider:segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            qinq:
              type:
                - boolean
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the network.
              format: uuid
              type:
                - 'null'
                - string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router:external:
              description: |-
                Defines whether the network may be used for creation of floating IPs. Only
                networks with this flag may be an external gateway for routers.
                The network must have an external routing facility that is not managed by
                the networking service. If the network is updated from external to internal
                the unused floating IPs of this network are automatically deleted when
                extension `floatingip-autodelete-internal` is present.
              type:
                - boolean
                - string
            segments:
              description: |-
                A list of provider `segment` objects.
              items:
                properties:
                  provider:network_type:
                    type: string
                  provider:physical_network:
                    type: string
                  provider:segmentation_id:
                    type: integer
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this network is shared across all tenants. By default,
                only administrative users can change this value.
              type:
                - boolean
                - string
            status:
              description: |-
                The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
              type: string
            subnets:
              description: |-
                The associated subnets.
              items:
                format: uuid
                type: string
              type: array
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
            vlan_transparent:
              description: |-
                Indicates the VLAN transparency mode of the network, which is
                VLAN transparent (`true`) or not VLAN transparent (`false`).
              type:
                - boolean
                - string
          type: object
      type: object
    NetworksDhcp_AgentShowResponse:
      description: Response of the networks/network_id/dhcp-agents/id:get 
        operation
      type: object
    NetworksDhcp_AgentUpdateRequest:
      description: Request of the networks/network_id/dhcp-agents/id:put 
        operation
      type: object
    NetworksDhcp_AgentUpdateResponse:
      description: Response of the networks/network_id/dhcp-agents/id:put 
        operation
      type: object
    NetworksDhcp_AgentsCreateRequest:
      description: Request of the networks/network_id/dhcp-agents:post operation
      type: object
    NetworksDhcp_AgentsCreateResponse:
      description: Response of the networks/network_id/dhcp-agents:post 
        operation
      type: object
    NetworksDhcp_AgentsIndexResponse:
      description: Response of the networks/network_id/dhcp-agents:get operation
      type: object
    NetworksIndexResponse:
      description: Response of the networks:get operation
      properties:
        networks:
          description: |-
            A list of `network` objects.
          items:
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the network, which is
                  up (`true`) or down (`false`).
                type:
                  - boolean
                  - string
              availability_zone_hints:
                description: |-
                  The availability zone candidate for the network.
                items:
                  type: string
                type: array
              availability_zones:
                description: |-
                  The availability zone for the network.
                items:
                  type: string
                type: array
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              dns_domain:
                description: |-
                  A valid DNS domain.
                format: hostname
                maxLength: 255
                type: string
              id:
                description: |-
                  The ID of the network.
                format: uuid
                type: string
              ipv4_address_scope:
                description: |-
                  The ID of the IPv4 address scope that the network is associated with.
                type: string
              ipv6_address_scope:
                description: |-
                  The ID of the IPv6 address scope that the network is associated with.
                type: string
              is_default:
                description: |-
                  The network is default pool or not.
                type:
                  - boolean
                  - string
              l2_adjacency:
                description: |-
                  Indicates whether L2 connectivity is available throughout
                  the `network`.
                type: string
              mtu:
                description: |-
                  The maximum transmission unit (MTU) value to
                  address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                  IPv6.
                minimum: 0
                type:
                  - integer
                  - string
              name:
                description: |-
                  Human-readable name of the network.
                maxLength: 255
                type: string
              port_security_enabled:
                description: |-
                  The port security status of the network. Valid values are
                  enabled (`true`) and disabled (`false`).
                  This value is used as the default value of `port_security_enabled`
                  field of a newly created port.
                type:
                  - boolean
                  - string
              provider:network_type:
                description: |-
                  The type of physical network that this network is mapped to.
                  For example, `flat`, `vlan`, `vxlan`, or `gre`.
                  Valid values depend on a networking back-end.
                maxLength: 32
                type: string
              provider:physical_network:
                description: |-
                  The physical network where this network/segment is implemented.
                maxLength: 64
                type: string
              provider:segmentation_id:
                description: |-
                  The ID of the isolated segment on the physical network.
                  The `network_type` attribute defines the segmentation model.
                  For example, if the `network_type` value is vlan, this ID is a vlan
                  identifier. If the `network_type` value is gre, this ID is a gre key.
                  `Note` that only the segmentation-id of VLAN type networks can be
                  changed!
                type:
                  - integer
                  - string
              qinq:
                type:
                  - boolean
                  - string
              qos_policy_id:
                description: |-
                  The ID of the QoS policy associated with the network.
                format: uuid
                type:
                  - 'null'
                  - string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              router:external:
                description: |-
                  Defines whether the network may be used for creation of floating IPs. Only
                  networks with this flag may be an external gateway for routers.
                  The network must have an external routing facility that is not managed by
                  the networking service. If the network is updated from external to internal
                  the unused floating IPs of this network are automatically deleted when
                  extension `floatingip-autodelete-internal` is present.
                type:
                  - boolean
                  - string
              segments:
                description: |-
                  A list of provider `segment` objects.
                items:
                  properties:
                    provider:network_type:
                      type: string
                    provider:physical_network:
                      type: string
                    provider:segmentation_id:
                      type: integer
                  type: object
                type: array
              shared:
                description: |-
                  Indicates whether this network is shared across all tenants. By default,
                  only administrative users can change this value.
                type:
                  - boolean
                  - string
              status:
                description: |-
                  The network status. Values are `ACTIVE`, `DOWN`, `BUILD` or `ERROR`.
                type: string
              subnets:
                description: |-
                  The associated subnets.
                items:
                  format: uuid
                  type: string
                type: array
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
              vlan_transparent:
                description: |-
                  Indicates the VLAN transparency mode of the network, which is
                  VLAN transparent (`true`) or not VLAN transparent (`false`).
                type:
                  - boolean
                  - string
            type: object
          type: array
      type: object
    NetworksTagUpdateRequest:
      description: Request of the networks/network_id/tags/id:put operation
      type: object
    NetworksTagUpdateResponse:
      description: Response of the networks/network_id/tags/id:put operation
      type: object
    NetworksTagsIndexResponse:
      description: Response of the networks/network_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    NetworksTagsUpdate_AllRequest:
      description: Request of the networks/network_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    NetworksTagsUpdate_AllResponse:
      description: Response of the networks/network_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    PoliciesPacket_Rate_Limit_RuleShowResponse:
      description: Response of the 
        policies/policy_id/packet_rate_limit_rules/id:get operation
      properties:
        packet_rate_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            max_burst_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    PoliciesPacket_Rate_Limit_RuleUpdateRequest:
      description: Request of the 
        policies/policy_id/packet_rate_limit_rules/id:put operation
      properties:
        packet_rate_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            max_burst_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    PoliciesPacket_Rate_Limit_RuleUpdateResponse:
      description: Response of the 
        policies/policy_id/packet_rate_limit_rules/id:put operation
      properties:
        packet_rate_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            max_burst_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    PoliciesPacket_Rate_Limit_RulesCreateRequest:
      description: Request of the 
        policies/policy_id/packet_rate_limit_rules:post operation
      properties:
        packet_rate_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            max_burst_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    PoliciesPacket_Rate_Limit_RulesCreateResponse:
      description: Response of the 
        policies/policy_id/packet_rate_limit_rules:post operation
      properties:
        packet_rate_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            max_burst_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    PoliciesPacket_Rate_Limit_RulesIndexResponse:
      description: Response of the 
        policies/policy_id/packet_rate_limit_rules:get operation
      properties:
        packet_rate_limit_rules:
          items:
            properties:
              direction:
                enum:
                  - egress
                  - ingress
                type: string
              id:
                format: uuid
                type: string
              max_burst_kpps:
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
              max_kpps:
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
            type: object
          type: array
      type: object
    PoliciesTagUpdateRequest:
      description: Request of the policies/policy_id/tags/id:put operation
      type: object
    PoliciesTagUpdateResponse:
      description: Response of the policies/policy_id/tags/id:put operation
      type: object
    PoliciesTagsIndexResponse:
      description: Response of the policies/policy_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    PoliciesTagsUpdate_AllRequest:
      description: Request of the policies/policy_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    PoliciesTagsUpdate_AllResponse:
      description: Response of the policies/policy_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    PortShowResponse:
      description: Response of the ports/port_id:get operation
      properties:
        port:
          description: |-
            A `port` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            allowed_address_pairs:
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
              items:
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
                type: object
              type: array
            binding:host_id:
              description: |-
                The ID of the host where the port resides.
              type: string
            binding:profile:
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
              type:
                - 'null'
                - object
            binding:vif_details:
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
              type: object
            binding:vif_type:
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
              type: string
            binding:vnic_type:
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            data_plane_status:
              description: |-
                Status of the underlying data plane of a port.
              enum:
                - 
                - ACTIVE
                - DOWN
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            device_id:
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
              maxLength: 255
              type: string
            device_owner:
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
              maxLength: 255
              type: string
            device_profile:
              maxLength: 255
              type:
                - 'null'
                - string
            dns_assignment:
              description: |-
                Data assigned to a port by the Networking internal DNS including the
                `hostname`, `ip_address` and `fqdn`.
              items:
                properties:
                  fqdn:
                    format: hostname
                    type: string
                  hostname:
                    format: hostname
                    type: string
                  ip_address:
                    type: string
                type: object
              type: array
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              format: hostname
              maxLength: 255
              type: string
            extra_dhcp_opts:
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
              items:
                extraProperties: true
                type: object
              type:
                - array
                - 'null'
              x-openstack:
                todo: implementme
            fixed_ips:
              description: |-
                The IP addresses for the port. If the port has multiple IP addresses,
                this field has multiple entries. Each entry consists of IP address
                (`ip_address`) and the subnet ID from which the IP address
                is assigned (`subnet_id`).
              items:
                properties:
                  ip_address:
                    description: IP Address
                    type: string
                  subnet_id:
                    description: The subnet ID from which the IP address is 
                      assigned
                    type: string
                type: object
              type: array
            hints:
              description: |-
                Admin-only. The following values control Open vSwitch’s Userspace Tx
                packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
              type:
                - 'null'
                - object
            id:
              description: |-
                The ID of the resource.
              format: uuid
              type: string
            ip_allocation:
              description: |-
                Indicates when ports use either `deferred`, `immediate` or no IP
                allocation (`none`).
              type: string
            mac_address:
              description: |-
                The MAC address of the port. If the port uses the `direct-physical`
                `vnic_type` then the value of this field is overwritten with the MAC
                address provided in the active binding:profile if any.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            numa_affinity_policy:
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
              enum:
                - 
                - legacy
                - preferred
                - required
                - socket
              type: string
            port_security_enabled:
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
              type:
                - boolean
                - string
            propagate_uplink_status:
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
              type:
                - boolean
                - string
            qos_network_policy_id:
              description: |-
                The ID of the QoS policy of the network where this port is plugged.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the port.
              format: uuid
              type:
                - 'null'
                - string
            resource_request:
              description: |-
                Expose Placement resources (i.e.: `minimum-bandwidth`) and
                traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                Nova and Placement. A `resource_request` object contains
                `request_groups` and `same_subtree` keys. `request_groups` is a list
                of dicts, where each dict represents one group of resources and traits
                that needs to be fulfilled from a single resource provider. Every dict in
                the list must contain `id`, `required` and `resources` keys. The
                `id` field is a string which represents a unique UUID that is generated
                for each group by combining the `port_id` and UUIDs of the QoS rules
                contributing to the group via the UUID5 method. `required` key contains
                the traits (generated from the `vnic_type` and the `physnet`) required
                by the port, and a `resources` key contains a mapping of requested
                resource class name and requested amount from the QoS policy.
                `same_subtree` key contains a list of `id` values from every resource
                group.
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_groups:
              description: |-
                The IDs of security groups applied to the port.
              items:
                format: uuid
                type: string
              type: array
            status:
              description: |-
                The port status. Values are `ACTIVE`, `DOWN`,
                `BUILD` and `ERROR`.
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
              uniqueItems: true
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    PortUpdateRequest:
      description: Request of the ports/port_id:put operation
      properties:
        port:
          description: |-
            A `port` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
              type:
                - boolean
                - string
            allowed_address_pairs:
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
              items:
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
                type: object
              type: array
            binding:host_id:
              description: |-
                The ID of the host where the port resides.
                The default is an empty string.
              type: string
            binding:profile:
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                This field is only meant for machine-machine communication for compute
                services like Nova, Ironic or Zun to pass information to a Neutron
                back-end. It should not be used by multiple services concurrently or by
                cloud end users. The existing counterexamples
                (`capabilities: [switchdev]` for Open vSwitch hardware offload and
                `trusted=true` for Trusted Virtual Functions) are due to be cleaned up.
                The networking API does not define a specific format of this field.
                The default is an empty dictionary.
                If you update it with null then it is treated like {} in the response.
                Since the port-mac-address-override extension the `device_mac_address`
                field of the binding:profile can be used to provide the MAC address of the
                physical device a direct-physical port is being bound to. If provided, then
                the `mac_address` field of the port resource will be updated to the MAC
                from the active binding.
              type:
                - 'null'
                - object
            binding:vnic_type:
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
                The default is `normal`.
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
            data_plane_status:
              description: |-
                Status of the underlying data plane of a port.
              enum:
                - 
                - ACTIVE
                - DOWN
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            device_id:
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
              maxLength: 255
              type: string
            device_owner:
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
              maxLength: 255
              type: string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              format: hostname
              maxLength: 255
              type: string
            extra_dhcp_opts:
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
              items:
                extraProperties: true
                type: object
              type:
                - array
                - 'null'
              x-openstack:
                todo: implementme
            fixed_ips:
              description: |-
                The IP addresses for the port.
                If you would like to assign multiple IP addresses for the port,
                specify multiple entries in this field.
                Each entry consists of IP address (`ip_address`) and the subnet ID
                from which the IP address is assigned (`subnet_id`).

                * If you specify both a subnet ID and an IP address, OpenStack Networking
                  tries to allocate the IP address on that subnet to the port.
                * If you specify only a subnet ID, OpenStack Networking allocates
                  an available IP from that subnet to the port.
                * If you specify only an IP address, OpenStack Networking
                  tries to allocate the IP address if the address is a valid IP
                  for any of the subnets on the specified network.
              items:
                properties:
                  ip_address:
                    description: IP Address
                    type: string
                  subnet_id:
                    description: The subnet ID from which the IP address is 
                      assigned
                    type: string
                type: object
              type: array
            hints:
              description: |-
                Admin-only. A dict, at the top level keyed by mechanism driver
                aliases (as defined in setup.cfg). To following values can be used to
                control Open vSwitch’s Userspace Tx packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash"}}}`
                * `{"openvswitch": {"other_config": {"tx-steering": "thread"}}}`

                If omitted the default is defined by Open vSwitch.
                The field cannot be longer than 4095 characters.
              type:
                - 'null'
                - object
            mac_address:
              description: |-
                The MAC address of the port.
                By default, only administrative users and users with advsvc role
                can change this value.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            numa_affinity_policy:
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
              enum:
                - 
                - legacy
                - preferred
                - required
                - socket
              type: string
            port_security_enabled:
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
              type:
                - boolean
                - string
            qos_policy_id:
              description: |-
                QoS policy associated with the port.
              format: uuid
              type:
                - 'null'
                - string
            security_groups:
              description: |-
                The IDs of security groups applied to the port.
              items:
                format: uuid
                type: string
              type: array
          type: object
      type: object
    PortUpdateResponse:
      description: Response of the ports/port_id:put operation
      properties:
        port:
          description: |-
            A `port` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            allowed_address_pairs:
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
              items:
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
                type: object
              type: array
            binding:host_id:
              description: |-
                The ID of the host where the port resides.
              type: string
            binding:profile:
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
              type:
                - 'null'
                - object
            binding:vif_details:
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
              type: object
            binding:vif_type:
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
              type: string
            binding:vnic_type:
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            data_plane_status:
              description: |-
                Status of the underlying data plane of a port.
              enum:
                - 
                - ACTIVE
                - DOWN
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            device_id:
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
              maxLength: 255
              type: string
            device_owner:
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
              maxLength: 255
              type: string
            device_profile:
              maxLength: 255
              type:
                - 'null'
                - string
            dns_assignment:
              description: |-
                Data assigned to a port by the Networking internal DNS including the
                `hostname`, `ip_address` and `fqdn`.
              items:
                properties:
                  fqdn:
                    format: hostname
                    type: string
                  hostname:
                    format: hostname
                    type: string
                  ip_address:
                    type: string
                type: object
              type: array
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              format: hostname
              maxLength: 255
              type: string
            extra_dhcp_opts:
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
              items:
                extraProperties: true
                type: object
              type:
                - array
                - 'null'
              x-openstack:
                todo: implementme
            fixed_ips:
              description: |-
                The IP addresses for the port. If the port has multiple IP addresses,
                this field has multiple entries. Each entry consists of IP address
                (`ip_address`) and the subnet ID from which the IP address
                is assigned (`subnet_id`).
              items:
                properties:
                  ip_address:
                    description: IP Address
                    type: string
                  subnet_id:
                    description: The subnet ID from which the IP address is 
                      assigned
                    type: string
                type: object
              type: array
            hints:
              description: |-
                Admin-only. The following values control Open vSwitch’s Userspace Tx
                packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
              type:
                - 'null'
                - object
            id:
              description: |-
                The ID of the resource.
              format: uuid
              type: string
            ip_allocation:
              description: |-
                Indicates when ports use either `deferred`, `immediate` or no IP
                allocation (`none`).
              type: string
            mac_address:
              description: |-
                The MAC address of the port. If the port uses the `direct-physical`
                `vnic_type` then the value of this field is overwritten with the MAC
                address provided in the active binding:profile if any.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            numa_affinity_policy:
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
              enum:
                - 
                - legacy
                - preferred
                - required
                - socket
              type: string
            port_security_enabled:
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
              type:
                - boolean
                - string
            propagate_uplink_status:
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
              type:
                - boolean
                - string
            qos_network_policy_id:
              description: |-
                The ID of the QoS policy of the network where this port is plugged.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the port.
              format: uuid
              type:
                - 'null'
                - string
            resource_request:
              description: |-
                Expose Placement resources (i.e.: `minimum-bandwidth`) and
                traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                Nova and Placement. A `resource_request` object contains
                `request_groups` and `same_subtree` keys. `request_groups` is a list
                of dicts, where each dict represents one group of resources and traits
                that needs to be fulfilled from a single resource provider. Every dict in
                the list must contain `id`, `required` and `resources` keys. The
                `id` field is a string which represents a unique UUID that is generated
                for each group by combining the `port_id` and UUIDs of the QoS rules
                contributing to the group via the UUID5 method. `required` key contains
                the traits (generated from the `vnic_type` and the `physnet`) required
                by the port, and a `resources` key contains a mapping of requested
                resource class name and requested amount from the QoS policy.
                `same_subtree` key contains a list of `id` values from every resource
                group.
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_groups:
              description: |-
                The IDs of security groups applied to the port.
              items:
                format: uuid
                type: string
              type: array
            status:
              description: |-
                The port status. Values are `ACTIVE`, `DOWN`,
                `BUILD` and `ERROR`.
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
              uniqueItems: true
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsRequest:
      description: Request of the ports/port_id/add_allowed_address_pairs:put 
        operation
      type: object
    PortsAdd_Allowed_Address_PairsAdd_Allowed_Address_PairsResponse:
      description: Response of the ports/port_id/add_allowed_address_pairs:put 
        operation
      type: object
    PortsBindingShowResponse:
      description: Response of the ports/port_id/bindings/id:get operation
      properties:
        binding:
          properties:
            host:
              description: |-
                The hostname of the system the agent is running on.
              type: string
            profile:
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
              type:
                - 'null'
                - object
            project_id:
              maxLength: 255
              type: string
            status:
              type: string
            vif_details:
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
              type: string
            vif_type:
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
              type: string
            vnic_type:
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
          type: object
      type: object
    PortsBindingUpdateRequest:
      description: Request of the ports/port_id/bindings/id:put operation
      properties:
        binding:
          properties:
            host:
              type: string
            profile:
              type:
                - 'null'
                - object
            vnic_type:
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
          type: object
      type: object
    PortsBindingUpdateResponse:
      description: Response of the ports/port_id/bindings/id:put operation
      properties:
        binding:
          properties:
            host:
              type: string
            profile:
              type:
                - 'null'
                - object
            project_id:
              maxLength: 255
              type: string
            status:
              type: string
            vif_details:
              type: string
            vif_type:
              type: string
            vnic_type:
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
          type: object
      type: object
    PortsBindingsActivateActivateRequest:
      properties:
        host:
          description: |-
            The hostname of the system the agent is running on.
          type: string
      type: object
    PortsBindingsCreateRequest:
      description: Request of the ports/port_id/bindings:post operation
      properties:
        binding:
          properties:
            host:
              type: string
            profile:
              type:
                - 'null'
                - object
            project_id:
              maxLength: 255
              type: string
            vnic_type:
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
          type: object
      type: object
    PortsBindingsCreateResponse:
      description: Response of the ports/port_id/bindings:post operation
      properties:
        binding:
          properties:
            host:
              type: string
            profile:
              type:
                - 'null'
                - object
            project_id:
              maxLength: 255
              type: string
            status:
              type: string
            vif_details:
              type: string
            vif_type:
              type: string
            vnic_type:
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
          type: object
      type: object
    PortsBindingsIndexResponse:
      description: Response of the ports/port_id/bindings:get operation
      properties:
        bindings:
          description: |-
            A `binding` object.
          items:
            properties:
              host:
                description: |-
                  The hostname of the system the agent is running on.
                type: string
              profile:
                description: |-
                  A dictionary that enables the application running on the specific host to
                  pass and receive vif port information specific to the networking back-end.
                  The networking API does not define a specific format of this field.
                  If the update request is null this response field will be {}.
                type:
                  - 'null'
                  - object
              project_id:
                maxLength: 255
                type: string
              status:
                type: string
              vif_details:
                description: |-
                  A dictionary which contains additional information on the port.
                  Currently the following fields are defined: `port_filter` and
                  `ovs_hybrid_plug`.
                  `port_filter` is a boolean indicating the networking service
                  provides port filtering features such as security group and/or
                  anti MAC/IP spoofing.
                  `ovs_hybrid_plug` is a boolean used to inform an API consumer
                  like nova that the hybrid plugging strategy for OVS should be used.
                type: string
              vif_type:
                description: |-
                  The type of which mechanism is used for the port.
                  An API consumer like nova can use this to determine an appropriate way to
                  attach a device (for example an interface of a virtual server) to the port.
                  Available values currently defined includes
                  `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                  `vhostuser`, `distributed` and `other`.
                  There are also special values: `unbound` and `binding_failed`.
                  `unbound` means the port is
                  not bound to a networking back-end. `binding_failed` means an error
                  that the port failed to be bound to a networking back-end.
                type: string
              vnic_type:
                description: |-
                  The type of vNIC which this port should be attached to. This is used to
                  determine which mechanism driver(s) to be used to bind the port.
                  The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                  `direct-physical`, `virtio-forwarder`, `smart-nic`
                  and `remote-managed`.
                  What type of vNIC is actually available depends on deployments.
                enum:
                  - accelerator-direct
                  - accelerator-direct-physical
                  - baremetal
                  - direct
                  - direct-physical
                  - macvtap
                  - normal
                  - remote-managed
                  - smart-nic
                  - vdpa
                  - virtio-forwarder
                type: string
            type: object
          type: array
      type: object
    PortsCreateRequest:
      description: Request of the ports:post operation
      properties:
        port:
          description: |-
            A `port` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
              type:
                - boolean
                - string
            allowed_address_pairs:
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
              items:
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
                type: object
              type: array
            binding:host_id:
              description: |-
                The ID of the host where the port resides.
                The default is an empty string.
              type: string
            binding:profile:
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                This field is only meant for machine-machine communication for compute
                services like Nova, Ironic or Zun to pass information to a Neutron
                back-end. It should not be used by multiple services concurrently or by
                cloud end users. The existing counterexamples
                (`capabilities: [switchdev]` for Open vSwitch hardware offload and
                `trusted=true` for Trusted Virtual Functions) are due to be cleaned up.
                The networking API does not define a specific format of this field.
                The default is an empty dictionary.
                If you update it with null then it is treated like {} in the response.
                Since the port-mac-address-override extension the `device_mac_address`
                field of the binding:profile can be used to provide the MAC address of the
                physical device a direct-physical port is being bound to. If provided, then
                the `mac_address` field of the port resource will be updated to the MAC
                from the active binding.
              type:
                - 'null'
                - object
            binding:vnic_type:
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
                The default is `normal`.
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            device_id:
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
              maxLength: 255
              type: string
            device_owner:
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
              maxLength: 255
              type: string
            device_profile:
              maxLength: 255
              type:
                - 'null'
                - string
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              format: hostname
              maxLength: 255
              type: string
            extra_dhcp_opts:
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
              items:
                extraProperties: true
                type: object
              type:
                - array
                - 'null'
              x-openstack:
                todo: implementme
            fixed_ips:
              description: |-
                The IP addresses for the port.
                If you would like to assign multiple IP addresses for the port,
                specify multiple entries in this field.
                Each entry consists of IP address (`ip_address`) and the subnet ID
                from which the IP address is assigned (`subnet_id`).

                * If you specify both a subnet ID and an IP address, OpenStack Networking
                  tries to allocate the IP address on that subnet to the port.
                * If you specify only a subnet ID, OpenStack Networking allocates
                  an available IP from that subnet to the port.
                * If you specify only an IP address, OpenStack Networking
                  tries to allocate the IP address if the address is a valid IP
                  for any of the subnets on the specified network.
              items:
                properties:
                  ip_address:
                    description: IP Address
                    type: string
                  subnet_id:
                    description: The subnet ID from which the IP address is 
                      assigned
                    type: string
                type: object
              type: array
            hints:
              description: |-
                Admin-only. A dict, at the top level keyed by mechanism driver
                aliases (as defined in setup.cfg). To following values can be used to
                control Open vSwitch’s Userspace Tx packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash"}}}`
                * `{"openvswitch": {"other_config": {"tx-steering": "thread"}}}`

                If omitted the default is defined by Open vSwitch.
                The field cannot be longer than 4095 characters.
              type:
                - 'null'
                - object
            mac_address:
              description: |-
                The MAC address of the port.
                If unspecified, a MAC address is automatically generated.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            numa_affinity_policy:
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
              enum:
                - 
                - legacy
                - preferred
                - required
                - socket
              type: string
            port_security_enabled:
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
              type:
                - boolean
                - string
            propagate_uplink_status:
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
              type:
                - boolean
                - string
            qos_policy_id:
              description: |-
                QoS policy associated with the port.
              format: uuid
              type:
                - 'null'
                - string
            security_groups:
              description: |-
                The IDs of security groups applied to the port.
              items:
                format: uuid
                type: string
              type: array
            tags:
              items:
                type: string
              type: array
              uniqueItems: true
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
          type: object
      type: object
    PortsCreateResponse:
      description: Response of the ports:post operation
      properties:
        port:
          description: |-
            A `port` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            allowed_address_pairs:
              description: |-
                A set of zero or more allowed address pair objects each where address pair
                object contains an `ip_address` and `mac_address`. While the
                `ip_address` is required, the `mac_address` will be taken from the
                port if not specified. The value of `ip_address` can be an IP Address
                or a CIDR (if supported by the underlying extension plugin).
                A server connected to the port can send a packet with source address which
                matches one of the specified allowed address pairs.
              items:
                properties:
                  ip_address:
                    type: string
                  max_address:
                    type: string
                type: object
              type: array
            binding:host_id:
              description: |-
                The ID of the host where the port resides.
              type: string
            binding:profile:
              description: |-
                A dictionary that enables the application running on the specific host to
                pass and receive vif port information specific to the networking back-end.
                The networking API does not define a specific format of this field.
                If the update request is null this response field will be {}.
              type:
                - 'null'
                - object
            binding:vif_details:
              description: |-
                A dictionary which contains additional information on the port.
                Currently the following fields are defined: `port_filter` and
                `ovs_hybrid_plug`.
                `port_filter` is a boolean indicating the networking service
                provides port filtering features such as security group and/or
                anti MAC/IP spoofing.
                `ovs_hybrid_plug` is a boolean used to inform an API consumer
                like nova that the hybrid plugging strategy for OVS should be used.
              type: object
            binding:vif_type:
              description: |-
                The type of which mechanism is used for the port.
                An API consumer like nova can use this to determine an appropriate way to
                attach a device (for example an interface of a virtual server) to the port.
                Available values currently defined includes
                `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                `vhostuser`, `distributed` and `other`.
                There are also special values: `unbound` and `binding_failed`.
                `unbound` means the port is
                not bound to a networking back-end. `binding_failed` means an error
                that the port failed to be bound to a networking back-end.
              type: string
            binding:vnic_type:
              description: |-
                The type of vNIC which this port should be attached to. This is used to
                determine which mechanism driver(s) to be used to bind the port.
                The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                `direct-physical`, `virtio-forwarder`, `smart-nic`
                and `remote-managed`.
                What type of vNIC is actually available depends on deployments.
              enum:
                - accelerator-direct
                - accelerator-direct-physical
                - baremetal
                - direct
                - direct-physical
                - macvtap
                - normal
                - remote-managed
                - smart-nic
                - vdpa
                - virtio-forwarder
              type: string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            data_plane_status:
              description: |-
                Status of the underlying data plane of a port.
              enum:
                - 
                - ACTIVE
                - DOWN
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            device_id:
              description: |-
                The ID of the device that uses this port.
                For example, a server instance or a logical router.
              maxLength: 255
              type: string
            device_owner:
              description: |-
                The entity type that uses this port.
                For example, `compute:nova` (server instance), `network:dhcp`
                (DHCP agent) or `network:router_interface` (router interface).
              maxLength: 255
              type: string
            device_profile:
              maxLength: 255
              type:
                - 'null'
                - string
            dns_assignment:
              description: |-
                Data assigned to a port by the Networking internal DNS including the
                `hostname`, `ip_address` and `fqdn`.
              items:
                properties:
                  fqdn:
                    format: hostname
                    type: string
                  hostname:
                    format: hostname
                    type: string
                  ip_address:
                    type: string
                type: object
              type: array
            dns_domain:
              description: |-
                A valid DNS domain.
              format: hostname
              maxLength: 255
              type: string
            dns_name:
              description: |-
                A valid DNS name.
              format: hostname
              maxLength: 255
              type: string
            extra_dhcp_opts:
              description: |-
                A set of zero or more extra DHCP option pairs. An
                option pair consists of an option value and name.
              items:
                extraProperties: true
                type: object
              type:
                - array
                - 'null'
              x-openstack:
                todo: implementme
            fixed_ips:
              description: |-
                The IP addresses for the port. If the port has multiple IP addresses,
                this field has multiple entries. Each entry consists of IP address
                (`ip_address`) and the subnet ID from which the IP address
                is assigned (`subnet_id`).
              items:
                properties:
                  ip_address:
                    description: IP Address
                    type: string
                  subnet_id:
                    description: The subnet ID from which the IP address is 
                      assigned
                    type: string
                type: object
              type: array
            hints:
              description: |-
                Admin-only. The following values control Open vSwitch’s Userspace Tx
                packet steering feature:

                * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
              type:
                - 'null'
                - object
            id:
              description: |-
                The ID of the resource.
              format: uuid
              type: string
            ip_allocation:
              description: |-
                Indicates when ports use either `deferred`, `immediate` or no IP
                allocation (`none`).
              type: string
            mac_address:
              description: |-
                The MAC address of the port. If the port uses the `direct-physical`
                `vnic_type` then the value of this field is overwritten with the MAC
                address provided in the active binding:profile if any.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            numa_affinity_policy:
              description: |-
                The port NUMA affinity policy requested during the virtual machine
                scheduling. Values: `None`, `required`, `preferred` or `legacy`.
              enum:
                - 
                - legacy
                - preferred
                - required
                - socket
              type: string
            port_security_enabled:
              description: |-
                The port security status. A valid value is
                enabled (`true`) or disabled (`false`).
                If port security is enabled for the port,
                security group rules and anti-spoofing rules are applied to
                the traffic on the port. If disabled, no such rules are applied.
              type:
                - boolean
                - string
            propagate_uplink_status:
              description: |-
                The uplink status propagation of the port. Valid values are
                enabled (`true`) and disabled (`false`).
              type:
                - boolean
                - string
            qos_network_policy_id:
              description: |-
                The ID of the QoS policy of the network where this port is plugged.
              format: uuid
              type:
                - 'null'
                - string
            qos_policy_id:
              description: |-
                The ID of the QoS policy associated with the port.
              format: uuid
              type:
                - 'null'
                - string
            resource_request:
              description: |-
                Expose Placement resources (i.e.: `minimum-bandwidth`) and
                traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                Nova and Placement. A `resource_request` object contains
                `request_groups` and `same_subtree` keys. `request_groups` is a list
                of dicts, where each dict represents one group of resources and traits
                that needs to be fulfilled from a single resource provider. Every dict in
                the list must contain `id`, `required` and `resources` keys. The
                `id` field is a string which represents a unique UUID that is generated
                for each group by combining the `port_id` and UUIDs of the QoS rules
                contributing to the group via the UUID5 method. `required` key contains
                the traits (generated from the `vnic_type` and the `physnet`) required
                by the port, and a `resources` key contains a mapping of requested
                resource class name and requested amount from the QoS policy.
                `same_subtree` key contains a list of `id` values from every resource
                group.
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_groups:
              description: |-
                The IDs of security groups applied to the port.
              items:
                format: uuid
                type: string
              type: array
            status:
              description: |-
                The port status. Values are `ACTIVE`, `DOWN`,
                `BUILD` and `ERROR`.
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
              uniqueItems: true
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    PortsIndexResponse:
      description: Response of the ports:get operation
      properties:
        ports:
          description: |-
            A list of `port` objects.
          items:
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type:
                  - boolean
                  - string
              allowed_address_pairs:
                description: |-
                  A set of zero or more allowed address pair objects each where address pair
                  object contains an `ip_address` and `mac_address`. While the
                  `ip_address` is required, the `mac_address` will be taken from the
                  port if not specified. The value of `ip_address` can be an IP Address
                  or a CIDR (if supported by the underlying extension plugin).
                  A server connected to the port can send a packet with source address which
                  matches one of the specified allowed address pairs.
                items:
                  properties:
                    ip_address:
                      type: string
                    max_address:
                      type: string
                  type: object
                type: array
              binding:host_id:
                description: |-
                  The ID of the host where the port resides.
                type: string
              binding:profile:
                description: |-
                  A dictionary that enables the application running on the specific host to
                  pass and receive vif port information specific to the networking back-end.
                  The networking API does not define a specific format of this field.
                  If the update request is null this response field will be {}.
                type:
                  - 'null'
                  - object
              binding:vif_details:
                description: |-
                  A dictionary which contains additional information on the port.
                  Currently the following fields are defined: `port_filter` and
                  `ovs_hybrid_plug`.
                  `port_filter` is a boolean indicating the networking service
                  provides port filtering features such as security group and/or
                  anti MAC/IP spoofing.
                  `ovs_hybrid_plug` is a boolean used to inform an API consumer
                  like nova that the hybrid plugging strategy for OVS should be used.
                type: object
              binding:vif_type:
                description: |-
                  The type of which mechanism is used for the port.
                  An API consumer like nova can use this to determine an appropriate way to
                  attach a device (for example an interface of a virtual server) to the port.
                  Available values currently defined includes
                  `ovs`, `bridge`, `macvtap`, `hw_veb`, `hostdev_physical`,
                  `vhostuser`, `distributed` and `other`.
                  There are also special values: `unbound` and `binding_failed`.
                  `unbound` means the port is
                  not bound to a networking back-end. `binding_failed` means an error
                  that the port failed to be bound to a networking back-end.
                type: string
              binding:vnic_type:
                description: |-
                  The type of vNIC which this port should be attached to. This is used to
                  determine which mechanism driver(s) to be used to bind the port.
                  The valid values are `normal`, `macvtap`, `direct`, `baremetal`,
                  `direct-physical`, `virtio-forwarder`, `smart-nic`
                  and `remote-managed`.
                  What type of vNIC is actually available depends on deployments.
                enum:
                  - accelerator-direct
                  - accelerator-direct-physical
                  - baremetal
                  - direct
                  - direct-physical
                  - macvtap
                  - normal
                  - remote-managed
                  - smart-nic
                  - vdpa
                  - virtio-forwarder
                type: string
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              data_plane_status:
                description: |-
                  Status of the underlying data plane of a port.
                enum:
                  - 
                  - ACTIVE
                  - DOWN
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              device_id:
                description: |-
                  The ID of the device that uses this port.
                  For example, a server instance or a logical router.
                maxLength: 255
                type: string
              device_owner:
                description: |-
                  The entity type that uses this port.
                  For example, `compute:nova` (server instance), `network:dhcp`
                  (DHCP agent) or `network:router_interface` (router interface).
                maxLength: 255
                type: string
              device_profile:
                maxLength: 255
                type:
                  - 'null'
                  - string
              dns_assignment:
                description: |-
                  Data assigned to a port by the Networking internal DNS including the
                  `hostname`, `ip_address` and `fqdn`.
                items:
                  properties:
                    fqdn:
                      format: hostname
                      type: string
                    hostname:
                      format: hostname
                      type: string
                    ip_address:
                      type: string
                  type: object
                type: array
              dns_domain:
                description: |-
                  A valid DNS domain.
                format: hostname
                maxLength: 255
                type: string
              dns_name:
                description: |-
                  A valid DNS name.
                format: hostname
                maxLength: 255
                type: string
              extra_dhcp_opts:
                description: |-
                  A set of zero or more extra DHCP option pairs. An
                  option pair consists of an option value and name.
                items:
                  extraProperties: true
                  type: object
                type:
                  - array
                  - 'null'
                x-openstack:
                  todo: implementme
              fixed_ips:
                description: |-
                  The IP addresses for the port. If the port has multiple IP addresses,
                  this field has multiple entries. Each entry consists of IP address
                  (`ip_address`) and the subnet ID from which the IP address
                  is assigned (`subnet_id`).
                items:
                  properties:
                    ip_address:
                      description: IP Address
                      type: string
                    subnet_id:
                      description: The subnet ID from which the IP address is 
                        assigned
                      type: string
                  type: object
                type: array
              hints:
                description: |-
                  Admin-only. The following values control Open vSwitch’s Userspace Tx
                  packet steering feature:

                  * `{"openvswitch": {"other_config": {"tx-steering": "hash|thread"}}}`
                type:
                  - 'null'
                  - object
              id:
                description: |-
                  The ID of the resource.
                format: uuid
                type: string
              ip_allocation:
                description: |-
                  Indicates when ports use either `deferred`, `immediate` or no IP
                  allocation (`none`).
                type: string
              mac_address:
                description: |-
                  The MAC address of the port. If the port uses the `direct-physical`
                  `vnic_type` then the value of this field is overwritten with the MAC
                  address provided in the active binding:profile if any.
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              network_id:
                description: |-
                  The ID of the attached network.
                format: uuid
                type: string
              numa_affinity_policy:
                description: |-
                  The port NUMA affinity policy requested during the virtual machine
                  scheduling. Values: `None`, `required`, `preferred` or `legacy`.
                enum:
                  - 
                  - legacy
                  - preferred
                  - required
                  - socket
                type: string
              port_security_enabled:
                description: |-
                  The port security status. A valid value is
                  enabled (`true`) or disabled (`false`).
                  If port security is enabled for the port,
                  security group rules and anti-spoofing rules are applied to
                  the traffic on the port. If disabled, no such rules are applied.
                type:
                  - boolean
                  - string
              propagate_uplink_status:
                description: |-
                  The uplink status propagation of the port. Valid values are
                  enabled (`true`) and disabled (`false`).
                type:
                  - boolean
                  - string
              qos_network_policy_id:
                description: |-
                  The ID of the QoS policy of the network where this port is plugged.
                format: uuid
                type:
                  - 'null'
                  - string
              qos_policy_id:
                description: |-
                  The ID of the QoS policy associated with the port.
                format: uuid
                type:
                  - 'null'
                  - string
              resource_request:
                description: |-
                  Expose Placement resources (i.e.: `minimum-bandwidth`) and
                  traits (i.e.: `vnic-type`, `physnet`) requested by a port to
                  Nova and Placement. A `resource_request` object contains
                  `request_groups` and `same_subtree` keys. `request_groups` is a list
                  of dicts, where each dict represents one group of resources and traits
                  that needs to be fulfilled from a single resource provider. Every dict in
                  the list must contain `id`, `required` and `resources` keys. The
                  `id` field is a string which represents a unique UUID that is generated
                  for each group by combining the `port_id` and UUIDs of the QoS rules
                  contributing to the group via the UUID5 method. `required` key contains
                  the traits (generated from the `vnic_type` and the `physnet`) required
                  by the port, and a `resources` key contains a mapping of requested
                  resource class name and requested amount from the QoS policy.
                  `same_subtree` key contains a list of `id` values from every resource
                  group.
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              security_groups:
                description: |-
                  The IDs of security groups applied to the port.
                items:
                  format: uuid
                  type: string
                type: array
              status:
                description: |-
                  The port status. Values are `ACTIVE`, `DOWN`,
                  `BUILD` and `ERROR`.
                type: string
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
                uniqueItems: true
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    PortsTagUpdateRequest:
      description: Request of the ports/port_id/tags/id:put operation
      type: object
    PortsTagUpdateResponse:
      description: Response of the ports/port_id/tags/id:put operation
      type: object
    PortsTagsIndexResponse:
      description: Response of the ports/port_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    PortsTagsUpdate_AllRequest:
      description: Request of the ports/port_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    PortsTagsUpdate_AllResponse:
      description: Response of the ports/port_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    QosAlias_Bandwidth_Limit_RuleShowResponse:
      description: Response of the qos/alias-bandwidth-limit-rules/id:get 
        operation
      properties:
        alias_bandwidth_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            max_burst_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Bandwidth_Limit_RuleUpdateRequest:
      description: Request of the qos/alias-bandwidth-limit-rules/id:put 
        operation
      properties:
        alias_bandwidth_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            max_burst_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosAlias_Bandwidth_Limit_RuleUpdateResponse:
      description: Response of the qos/alias-bandwidth-limit-rules/id:put 
        operation
      properties:
        alias_bandwidth_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            max_burst_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Bandwidth_Limit_RulesCreateRequest:
      description: Request of the qos/alias-bandwidth-limit-rules:post operation
      properties:
        alias_bandwidth_limit_rule:
          properties: {}
          type: object
      type: object
    QosAlias_Bandwidth_Limit_RulesCreateResponse:
      description: Response of the qos/alias-bandwidth-limit-rules:post 
        operation
      properties:
        alias_bandwidth_limit_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            max_burst_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Bandwidth_Limit_RulesIndexResponse:
      description: Response of the qos/alias-bandwidth-limit-rules:get operation
      properties:
        alias_bandwidth_limit_rules:
          items:
            properties:
              direction:
                enum:
                  - egress
                  - ingress
                type: string
              id:
                format: uuid
                type: string
              max_burst_kbps:
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
              max_kbps:
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
              tenant_id:
                type: string
            type: object
          type: array
      type: object
    QosAlias_Dscp_Marking_RuleShowResponse:
      description: Response of the qos/alias-dscp-marking-rules/id:get operation
      properties:
        alias_dscp_marking_rule:
          properties:
            dscp_mark:
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
            id:
              format: uuid
              type: string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Dscp_Marking_RuleUpdateRequest:
      description: Request of the qos/alias-dscp-marking-rules/id:put operation
      properties:
        alias_dscp_marking_rule:
          properties:
            dscp_mark:
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
          type: object
      type: object
    QosAlias_Dscp_Marking_RuleUpdateResponse:
      description: Response of the qos/alias-dscp-marking-rules/id:put operation
      properties:
        alias_dscp_marking_rule:
          properties:
            dscp_mark:
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
            id:
              format: uuid
              type: string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Dscp_Marking_RulesCreateRequest:
      description: Request of the qos/alias-dscp-marking-rules:post operation
      properties:
        alias_dscp_marking_rule:
          properties: {}
          type: object
      type: object
    QosAlias_Dscp_Marking_RulesCreateResponse:
      description: Response of the qos/alias-dscp-marking-rules:post operation
      properties:
        alias_dscp_marking_rule:
          properties:
            dscp_mark:
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
            id:
              format: uuid
              type: string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Dscp_Marking_RulesIndexResponse:
      description: Response of the qos/alias-dscp-marking-rules:get operation
      properties:
        alias_dscp_marking_rules:
          items:
            properties:
              dscp_mark:
                enum:
                  - 0
                  - 10
                  - 12
                  - 14
                  - 16
                  - 18
                  - 20
                  - 22
                  - 24
                  - 26
                  - 28
                  - 30
                  - 32
                  - 34
                  - 36
                  - 38
                  - 40
                  - 44
                  - 46
                  - 48
                  - 56
                  - 8
                type:
                  - integer
                  - string
              id:
                format: uuid
                type: string
              tenant_id:
                type: string
            type: object
          type: array
      type: object
    QosAlias_Minimum_Bandwidth_RuleShowResponse:
      description: Response of the qos/alias-minimum-bandwidth-rules/id:get 
        operation
      properties:
        alias_minimum_bandwidth_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Minimum_Bandwidth_RuleUpdateRequest:
      description: Request of the qos/alias-minimum-bandwidth-rules/id:put 
        operation
      properties:
        alias_minimum_bandwidth_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            min_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosAlias_Minimum_Bandwidth_RuleUpdateResponse:
      description: Response of the qos/alias-minimum-bandwidth-rules/id:put 
        operation
      properties:
        alias_minimum_bandwidth_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Minimum_Bandwidth_RulesCreateRequest:
      description: Request of the qos/alias-minimum-bandwidth-rules:post 
        operation
      properties:
        alias_minimum_bandwidth_rule:
          properties: {}
          type: object
      type: object
    QosAlias_Minimum_Bandwidth_RulesCreateResponse:
      description: Response of the qos/alias-minimum-bandwidth-rules:post 
        operation
      properties:
        alias_minimum_bandwidth_rule:
          properties:
            direction:
              enum:
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kbps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            tenant_id:
              type: string
          type: object
      type: object
    QosAlias_Minimum_Bandwidth_RulesIndexResponse:
      description: Response of the qos/alias-minimum-bandwidth-rules:get 
        operation
      properties:
        alias_minimum_bandwidth_rules:
          items:
            properties:
              direction:
                enum:
                  - egress
                  - ingress
                type: string
              id:
                format: uuid
                type: string
              min_kbps:
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
              tenant_id:
                type: string
            type: object
          type: array
      type: object
    QosAlias_Minimum_Packet_Rate_RuleShowResponse:
      description: Response of the qos/alias-minimum-packet-rate-rules/id:get 
        operation
      properties:
        alias_minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosAlias_Minimum_Packet_Rate_RuleUpdateRequest:
      description: Request of the qos/alias-minimum-packet-rate-rules/id:put 
        operation
      properties:
        alias_minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosAlias_Minimum_Packet_Rate_RuleUpdateResponse:
      description: Response of the qos/alias-minimum-packet-rate-rules/id:put 
        operation
      properties:
        alias_minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosAlias_Minimum_Packet_Rate_RulesCreateRequest:
      description: Request of the qos/alias-minimum-packet-rate-rules:post 
        operation
      properties:
        alias_minimum_packet_rate_rule:
          properties: {}
          type: object
      type: object
    QosAlias_Minimum_Packet_Rate_RulesCreateResponse:
      description: Response of the qos/alias-minimum-packet-rate-rules:post 
        operation
      properties:
        alias_minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosAlias_Minimum_Packet_Rate_RulesIndexResponse:
      description: Response of the qos/alias-minimum-packet-rate-rules:get 
        operation
      properties:
        alias_minimum_packet_rate_rules:
          items:
            properties:
              direction:
                enum:
                  - any
                  - egress
                  - ingress
                type: string
              id:
                format: uuid
                type: string
              min_kpps:
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
            type: object
          type: array
      type: object
    QosPoliciesBandwidth_Limit_RuleShowResponse:
      description: Response of the 
        qos/policies/policy_id/bandwidth_limit_rules/id:get operation
      properties:
        bandwidth_limit_rule:
          description: |-
            A `bandwidth_limit_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
              enum:
                - egress
                - ingress
              type: string
            id:
              description: |-
                The ID of the QoS Bandwidth limit rule.
              format: uuid
              type: string
            max_burst_kbps:
              description: |-
                The maximum burst size (in kilobits).
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesBandwidth_Limit_RuleUpdateRequest:
      description: Request of the 
        qos/policies/policy_id/bandwidth_limit_rules/id:put operation
      properties:
        bandwidth_limit_rule:
          description: |-
            A `bandwidth_limit_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
              enum:
                - egress
                - ingress
              type: string
            max_burst_kbps:
              description: |-
                The maximum burst size (in kilobits). Default is `0`.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesBandwidth_Limit_RuleUpdateResponse:
      description: Response of the 
        qos/policies/policy_id/bandwidth_limit_rules/id:put operation
      properties:
        bandwidth_limit_rule:
          description: |-
            A `bandwidth_limit_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
              enum:
                - egress
                - ingress
              type: string
            id:
              description: |-
                The ID of the QoS Bandwidth limit rule.
              format: uuid
              type: string
            max_burst_kbps:
              description: |-
                The maximum burst size (in kilobits).
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesBandwidth_Limit_RulesCreateRequest:
      description: Request of the 
        qos/policies/policy_id/bandwidth_limit_rules:post operation
      properties:
        bandwidth_limit_rule:
          description: |-
            A `bandwidth_limit_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
              enum:
                - egress
                - ingress
              type: string
            max_burst_kbps:
              description: |-
                The maximum burst size (in kilobits). Default is `0`.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesBandwidth_Limit_RulesCreateResponse:
      description: Response of the 
        qos/policies/policy_id/bandwidth_limit_rules:post operation
      properties:
        bandwidth_limit_rule:
          description: |-
            A `bandwidth_limit_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
              enum:
                - egress
                - ingress
              type: string
            id:
              description: |-
                The ID of the QoS Bandwidth limit rule.
              format: uuid
              type: string
            max_burst_kbps:
              description: |-
                The maximum burst size (in kilobits).
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
            max_kbps:
              description: |-
                The maximum KBPS (kilobits per second) value. If you specify this
                value, must be greater than 0 otherwise max_kbps will have no value.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesBandwidth_Limit_RulesIndexResponse:
      description: Response of the 
        qos/policies/policy_id/bandwidth_limit_rules:get operation
      properties:
        bandwidth_limit_rules:
          description: |-
            A list of bandwidth limit rules associated with
            the QoS policy.
          items:
            properties:
              direction:
                description: |-
                  The direction of the traffic to which the QoS
                  rule is applied, as seen from the point of view
                  of the `port`.
                  Valid values are `egress` and `ingress`.
                  Default value is `egress`.
                enum:
                  - egress
                  - ingress
                type: string
              id:
                description: |-
                  The ID of the QoS Bandwidth limit rule.
                format: uuid
                type: string
              max_burst_kbps:
                description: |-
                  The maximum burst size (in kilobits).
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
              max_kbps:
                description: |-
                  The maximum KBPS (kilobits per second) value. If you specify this
                  value, must be greater than 0 otherwise max_kbps will have no value.
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
            type: object
          type: array
      type: object
    QosPoliciesCreateRequest:
      description: Request of the qos/policies:post operation
      properties:
        policy:
          description: |-
            A QoS `policy` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            is_default:
              description: |-
                If `true`, the QoS `policy` is the default policy.
              type:
                - boolean
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            shared:
              description: |-
                Set to `true` to share this policy with other
                projects. Default is `false`.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
          type: object
      type: object
    QosPoliciesCreateResponse:
      description: Response of the qos/policies:post operation
      properties:
        policy:
          description: |-
            A QoS `policy` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the QoS policy.
              format: uuid
              type: string
            is_default:
              description: |-
                If `true`, the QoS `policy` is the default policy.
              type:
                - boolean
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            rules:
              description: |-
                A set of zero or more policy rules.
              type: string
            shared:
              description: |-
                Indicates whether this policy is shared across
                all projects.
              type:
                - boolean
                - string
            tags:
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    QosPoliciesDscp_Marking_RuleShowResponse:
      description: Response of the 
        qos/policies/policy_id/dscp_marking_rules/id:get operation
      properties:
        dscp_marking_rule:
          description: |-
            A `dscp_marking_rule` object.
          properties:
            dscp_mark:
              description: |-
                The DSCP mark value.
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
            id:
              description: |-
                The ID of the QoS DSCP marking rule.
              format: uuid
              type: string
          type: object
      type: object
    QosPoliciesDscp_Marking_RuleUpdateRequest:
      description: Request of the 
        qos/policies/policy_id/dscp_marking_rules/id:put operation
      properties:
        dscp_marking_rule:
          description: |-
            A `dscp_marking_rule` object.
          properties:
            dscp_mark:
              description: |-
                The DSCP mark value.
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesDscp_Marking_RuleUpdateResponse:
      description: Response of the 
        qos/policies/policy_id/dscp_marking_rules/id:put operation
      properties:
        dscp_marking_rule:
          description: |-
            A `dscp_marking_rule` object.
          properties:
            dscp_mark:
              description: |-
                The DSCP mark value.
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
            id:
              description: |-
                The ID of the QoS DSCP marking rule.
              format: uuid
              type: string
          type: object
      type: object
    QosPoliciesDscp_Marking_RulesCreateRequest:
      description: Request of the qos/policies/policy_id/dscp_marking_rules:post
        operation
      properties:
        dscp_marking_rule:
          description: |-
            A `dscp_marking_rule` object.
          properties:
            dscp_mark:
              description: |-
                The DSCP mark value.
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesDscp_Marking_RulesCreateResponse:
      description: Response of the 
        qos/policies/policy_id/dscp_marking_rules:post operation
      properties:
        dscp_marking_rule:
          description: |-
            A `dscp_marking_rule` object.
          properties:
            dscp_mark:
              description: |-
                The DSCP mark value.
              enum:
                - 0
                - 10
                - 12
                - 14
                - 16
                - 18
                - 20
                - 22
                - 24
                - 26
                - 28
                - 30
                - 32
                - 34
                - 36
                - 38
                - 40
                - 44
                - 46
                - 48
                - 56
                - 8
              type:
                - integer
                - string
            id:
              description: |-
                The ID of the QoS DSCP marking rule.
              format: uuid
              type: string
          type: object
      type: object
    QosPoliciesDscp_Marking_RulesIndexResponse:
      description: Response of the qos/policies/policy_id/dscp_marking_rules:get
        operation
      properties:
        dscp_marking_rules:
          description: |-
            A list of `dscp_marking_rule` objects.
          items:
            properties:
              dscp_mark:
                description: |-
                  The DSCP mark value.
                enum:
                  - 0
                  - 10
                  - 12
                  - 14
                  - 16
                  - 18
                  - 20
                  - 22
                  - 24
                  - 26
                  - 28
                  - 30
                  - 32
                  - 34
                  - 36
                  - 38
                  - 40
                  - 44
                  - 46
                  - 48
                  - 56
                  - 8
                type:
                  - integer
                  - string
              id:
                description: |-
                  The ID of the QoS DSCP marking rule.
                format: uuid
                type: string
            type: object
          type: array
      type: object
    QosPoliciesIndexResponse:
      description: Response of the qos/policies:get operation
      properties:
        policies:
          description: |-
            A list of QoS `policy` objects.
          items:
            properties:
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              id:
                description: |-
                  The ID of the QoS policy.
                format: uuid
                type: string
              is_default:
                description: |-
                  If `true`, the QoS `policy` is the default policy.
                type:
                  - boolean
                  - string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              rules:
                description: |-
                  A set of zero or more policy rules.
                type: string
              shared:
                description: |-
                  Indicates whether this policy is shared across
                  all projects.
                type:
                  - boolean
                  - string
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    QosPoliciesMinimum_Bandwidth_RuleShowResponse:
      description: Response of the 
        qos/policies/policy_id/minimum_bandwidth_rules/id:get operation
      properties:
        minimum_bandwidth_rule:
          description: |-
            A `minimum_bandwidth_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
              enum:
                - egress
                - ingress
              type: string
            id:
              description: |-
                The ID of the QoS minimum bandwidth rule.
              format: uuid
              type: string
            min_kbps:
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Bandwidth_RuleUpdateRequest:
      description: Request of the 
        qos/policies/policy_id/minimum_bandwidth_rules/id:put operation
      properties:
        minimum_bandwidth_rule:
          description: |-
            A `minimum_bandwidth_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
              enum:
                - egress
                - ingress
              type: string
            min_kbps:
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Bandwidth_RuleUpdateResponse:
      description: Response of the 
        qos/policies/policy_id/minimum_bandwidth_rules/id:put operation
      properties:
        minimum_bandwidth_rule:
          description: |-
            A `minimum_bandwidth_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
              enum:
                - egress
                - ingress
              type: string
            id:
              description: |-
                The ID of the QoS minimum bandwidth rule.
              format: uuid
              type: string
            min_kbps:
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Bandwidth_RulesCreateRequest:
      description: Request of the 
        qos/policies/policy_id/minimum_bandwidth_rules:post operation
      properties:
        minimum_bandwidth_rule:
          description: |-
            A `minimum_bandwidth_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
              enum:
                - egress
                - ingress
              type: string
            min_kbps:
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Bandwidth_RulesCreateResponse:
      description: Response of the 
        qos/policies/policy_id/minimum_bandwidth_rules:post operation
      properties:
        minimum_bandwidth_rule:
          description: |-
            A `minimum_bandwidth_rule` object.
          properties:
            direction:
              description: |-
                The direction of the traffic to which the QoS
                rule is applied, as seen from the point of view
                of the `port`.
                Valid values are `egress` and `ingress`.
                Default value is `egress`.
              enum:
                - egress
                - ingress
              type: string
            id:
              description: |-
                The ID of the QoS minimum bandwidth rule.
              format: uuid
              type: string
            min_kbps:
              description: |-
                The minimum KBPS (kilobits per second) value which should be available for
                port.
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Bandwidth_RulesIndexResponse:
      description: Response of the 
        qos/policies/policy_id/minimum_bandwidth_rules:get operation
      properties:
        minimum_bandwidth_rules:
          description: |-
            A list of `minimum_bandwidth_rule` objects associated with
            the QoS policy.
          items:
            properties:
              direction:
                description: |-
                  The direction of the traffic to which the QoS
                  rule is applied, as seen from the point of view
                  of the `port`.
                  Valid values are `egress` and `ingress`.
                  Default value is `egress`.
                enum:
                  - egress
                  - ingress
                type: string
              id:
                description: |-
                  The ID of the QoS minimum bandwidth rule.
                format: uuid
                type: string
              min_kbps:
                description: |-
                  The minimum KBPS (kilobits per second) value which should be available for
                  port.
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
            type: object
          type: array
      type: object
    QosPoliciesMinimum_Packet_Rate_RuleShowResponse:
      description: Response of the 
        qos/policies/policy_id/minimum-packet-rate-rules/id:get operation
      properties:
        minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Packet_Rate_RuleUpdateRequest:
      description: Request of the 
        qos/policies/policy_id/minimum-packet-rate-rules/id:put operation
      properties:
        minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Packet_Rate_RuleUpdateResponse:
      description: Response of the 
        qos/policies/policy_id/minimum-packet-rate-rules/id:put operation
      properties:
        minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Packet_Rate_RulesCreateRequest:
      description: Request of the 
        qos/policies/policy_id/minimum-packet-rate-rules:post operation
      properties:
        minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Packet_Rate_RulesCreateResponse:
      description: Response of the 
        qos/policies/policy_id/minimum-packet-rate-rules:post operation
      properties:
        minimum_packet_rate_rule:
          properties:
            direction:
              enum:
                - any
                - egress
                - ingress
              type: string
            id:
              format: uuid
              type: string
            min_kpps:
              maximum: 2147483647
              minimum: 0
              type:
                - integer
                - string
          type: object
      type: object
    QosPoliciesMinimum_Packet_Rate_RulesIndexResponse:
      description: Response of the 
        qos/policies/policy_id/minimum-packet-rate-rules:get operation
      properties:
        minimum_packet_rate_rules:
          items:
            properties:
              direction:
                enum:
                  - any
                  - egress
                  - ingress
                type: string
              id:
                format: uuid
                type: string
              min_kpps:
                maximum: 2147483647
                minimum: 0
                type:
                  - integer
                  - string
            type: object
          type: array
      type: object
    QosPolicyShowResponse:
      description: Response of the qos/policies/id:get operation
      properties:
        policy:
          description: |-
            A QoS `policy` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the QoS policy.
              format: uuid
              type: string
            is_default:
              description: |-
                If `true`, the QoS `policy` is the default policy.
              type:
                - boolean
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            rules:
              description: |-
                A set of zero or more policy rules.
              type: string
            shared:
              description: |-
                Indicates whether this policy is shared across
                all projects.
              type:
                - boolean
                - string
            tags:
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    QosPolicyUpdateRequest:
      description: Request of the qos/policies/id:put operation
      properties:
        policy:
          description: |-
            A QoS `policy` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            is_default:
              description: |-
                If `true`, the QoS `policy` is the default policy.
              type:
                - boolean
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            shared:
              description: |-
                Set to `true` to share this policy with other
                projects. Default is `false`.
              type:
                - boolean
                - string
          type: object
      type: object
    QosPolicyUpdateResponse:
      description: Response of the qos/policies/id:put operation
      properties:
        policy:
          description: |-
            A QoS `policy` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the QoS policy.
              format: uuid
              type: string
            is_default:
              description: |-
                If `true`, the QoS `policy` is the default policy.
              type:
                - boolean
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            rules:
              description: |-
                A set of zero or more policy rules.
              type: string
            shared:
              description: |-
                Indicates whether this policy is shared across
                all projects.
              type:
                - boolean
                - string
            tags:
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    QosRule_TypeShowResponse:
      description: Response of the qos/rule-types/id:get operation
      properties:
        rule_type:
          properties:
            drivers:
              description: |-
                List of loaded QoS drivers with supported
                rule type parameters with possible values for each.
                Each driver is represented by a dict with the keys
                `name` and `supported_parameters`.
                Field `name` contains the name of a backend driver.
                Field `supported_parameters` contains a list of dicts with
                `parameter_name`, `parameter_type` and `parameter_values`
                fields.
                The valid values for `parameter_type` are `choices` or `range`.
                If `parameter_type` is `choices` then `parameter_values`
                contains a list of acceptable values, otherwise it contains
                a dict with keys of `start` and `end` which define the range
                of acceptable values.
              type: string
            type:
              description: |-
                The type of QoS rule.
              type: string
          type: object
      type: object
    QosRule_TypeUpdateRequest:
      description: Request of the qos/rule-types/id:put operation
      properties:
        rule_type:
          properties:
            all_rules:
              type:
                - boolean
                - 'null'
                - string
            all_supported:
              type:
                - boolean
                - 'null'
                - string
          type: object
      type: object
    QosRule_TypeUpdateResponse:
      description: Response of the qos/rule-types/id:put operation
      properties:
        rule_type:
          properties:
            drivers:
              type: string
            type:
              type: string
          type: object
      type: object
    QosRule_TypesCreateRequest:
      description: Request of the qos/rule-types:post operation
      properties:
        rule_type:
          properties:
            all_rules:
              type:
                - boolean
                - 'null'
                - string
            all_supported:
              type:
                - boolean
                - 'null'
                - string
          type: object
      type: object
    QosRule_TypesCreateResponse:
      description: Response of the qos/rule-types:post operation
      properties:
        rule_type:
          properties:
            drivers:
              type: string
            type:
              type: string
          type: object
      type: object
    QosRule_TypesIndexResponse:
      description: Response of the qos/rule-types:get operation
      properties:
        rule_types:
          description: |-
            A list of QoS `rule_type` objects.
          items:
            properties:
              drivers:
                type: string
              type:
                description: |-
                  The type of QoS rule.
                type: string
            type: object
          type: array
      type: object
    QuotaShowResponse:
      description: Response of the quotas/id:get operation
      properties:
        quota:
          description: |-
            A `quota` object.
          properties:
            floatingip:
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
              type: integer
            network:
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
              type: integer
            port:
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
              type: integer
            project_id:
              description: The ID of the project.
              format: uuid
              type: string
            rbac_policy:
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
              type: integer
            router:
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
              type: integer
            security_group:
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
              type: integer
            security_group_rule:
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
              type: integer
            subnet:
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
              type: integer
            subnetpool:
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
              type: integer
          type: object
      type: object
    QuotaUpdateRequest:
      description: Request of the quotas/id:put operation
      properties:
        quota:
          description: |-
            A `quota` object.
          properties:
            floatingip:
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
              type: integer
            network:
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
              type: integer
            port:
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
              type: integer
            project_id:
              description: The ID of the project.
              format: uuid
              type: string
            rbac_policy:
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
              type: integer
            router:
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
              type: integer
            security_group:
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
              type: integer
            security_group_rule:
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
              type: integer
            subnet:
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
              type: integer
            subnetpool:
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
              type: integer
          type: object
      type: object
    QuotaUpdateResponse:
      description: Response of the quotas/id:put operation
      properties:
        quota:
          description: |-
            A `quota` object.
          properties:
            floatingip:
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
              type: integer
            network:
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
              type: integer
            port:
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
              type: integer
            project_id:
              description: The ID of the project.
              format: uuid
              type: string
            rbac_policy:
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
              type: integer
            router:
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
              type: integer
            security_group:
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
              type: integer
            security_group_rule:
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
              type: integer
            subnet:
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
              type: integer
            subnetpool:
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
              type: integer
          type: object
      type: object
    QuotasDefaultDefaultResponse:
      description: Response of the quotas/id/default:get operation
      properties:
        quota:
          description: |-
            A `quota` object.
          properties:
            floatingip:
              description: |-
                The number of floating IP addresses allowed for
                each project. A value of `-1` means no limit.
              type: integer
            network:
              description: |-
                The number of networks allowed for each project.
                A value of `-1` means no limit.
              type: integer
            port:
              description: |-
                The number of ports allowed for each project.
                A value of `-1` means no limit.
              type: integer
            project_id:
              description: The ID of the project.
              format: uuid
              type: string
            rbac_policy:
              description: |-
                The number of role-based access control (RBAC)
                policies for each project. A value of `-1` means
                no limit.
              type: integer
            router:
              description: |-
                The number of routers allowed for each project.
                A value of `-1` means no limit.
              type: integer
            security_group:
              description: |-
                The number of security groups allowed for each
                project. A value of `-1` means no limit.
              type: integer
            security_group_rule:
              description: |-
                The number of security group rules allowed for
                each project. A value of `-1` means no limit.
              type: integer
            subnet:
              description: |-
                The number of subnets allowed for each project.
                A value of `-1` means no limit.
              type: integer
            subnetpool:
              description: |-
                The number of subnet pools allowed for each
                project. A value of `-1` means no limit.
              type: integer
          type: object
      type: object
    QuotasDetailsDetailsResponse:
      description: Response of the quotas/id/details:get operation
      properties:
        quota:
          properties:
            floatingip:
              description: The number of floating IP addresses allowed for each 
                project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            network:
              description: The number of networks allowed for each project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            port:
              description: The number of ports allowed for each project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            rbac_policy:
              description: The number of role-based access control (RBAC) 
                policies for each project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            router:
              description: The number of routers allowed for each project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            security_group:
              description: The number of security groups allowed for each 
                project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            security_group_rule:
              description: The number of security group rules allowed for each 
                project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            subnet:
              description: The number of subnets allowed for each project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
            subnetpool:
              description: The number of subnet pools allowed for each project.
              properties:
                limit:
                  description: Current quota limit
                  type: integer
                reserved:
                  description: Reserved quota
                  type: integer
                used:
                  description: Used quota
                  type: integer
              type: object
          type: object
      type: object
    QuotasIndexResponse:
      description: Response of the quotas:get operation
      properties:
        quotas:
          description: |-
            A list of quota objects.
          items:
            properties:
              floatingip:
                description: |-
                  The number of floating IP addresses allowed for
                  each project. A value of `-1` means no limit.
                type: integer
              network:
                description: |-
                  The number of networks allowed for each project.
                  A value of `-1` means no limit.
                type: integer
              port:
                description: |-
                  The number of ports allowed for each project.
                  A value of `-1` means no limit.
                type: integer
              project_id:
                description: |-
                  The ID of the project.
                format: uuid
                type: string
              rbac_policy:
                description: |-
                  The number of role-based access control (RBAC)
                  policies for each project. A value of `-1` means
                  no limit.
                type: integer
              router:
                description: |-
                  The number of routers allowed for each project.
                  A value of `-1` means no limit.
                type: integer
              security_group:
                description: |-
                  The number of security groups allowed for each
                  project. A value of `-1` means no limit.
                type: integer
              security_group_rule:
                description: |-
                  The number of security group rules allowed for
                  each project. A value of `-1` means no limit.
                type: integer
              subnet:
                description: |-
                  The number of subnets allowed for each project.
                  A value of `-1` means no limit.
                type: integer
              subnetpool:
                description: |-
                  The number of subnet pools allowed for each
                  project. A value of `-1` means no limit.
                type: integer
            type: object
          type: array
      type: object
    Rbac_PoliciesCreateRequest:
      description: Request of the rbac-policies:post operation
      properties:
        rbac_policy:
          properties:
            action:
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
              maxLength: 255
              type: string
            object_id:
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
              format: uuid
              type: string
            object_type:
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
              type: string
            target_tenant:
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced. Please note
                that Neutron does not perform any type of validation that the value provided is
                actually the ID of the existing project. If, for example, the name of the project
                is provided here, it will be accepted by the Neutron API, but the RBAC rule
                created will not work as expected.
              maxLength: 255
              type: string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    Rbac_PoliciesCreateResponse:
      description: Response of the rbac-policies:post operation
      properties:
        rbac_policy:
          properties:
            action:
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the RBAC policy.
              format: uuid
              type: string
            object_id:
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
              format: uuid
              type: string
            object_type:
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
              type: string
            target_tenant:
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
              maxLength: 255
              type: string
          type: object
      type: object
    Rbac_PoliciesIndexResponse:
      description: Response of the rbac-policies:get operation
      properties:
        rbac_policies:
          items:
            properties:
              action:
                description: |-
                  Action for the RBAC policy which is `access_as_external` or
                  `access_as_shared`.
                maxLength: 255
                type: string
              id:
                description: |-
                  The ID of the RBAC policy.
                format: uuid
                type: string
              object_id:
                description: |-
                  The ID of the `object_type` resource. An `object_type` of `network`
                  returns a network ID, an `object_type` of `qos-policy` returns a QoS
                  policy ID, an `object_type` of `security-group` returns a security
                  group ID, an `object_type` of `address-scope` returns a address scope
                  ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                  an `object_type` of `address-group` returns an address group ID.
                format: uuid
                type: string
              object_type:
                description: |-
                  The type of the object that the RBAC policy affects. Types include
                  `qos-policy`, `network`, `security-group`, `address-scope`,
                  `subnetpool` or `address-group`.
                type: string
              target_tenant:
                description: |-
                  The ID of the tenant to which the RBAC policy will be enforced.
                maxLength: 255
                type: string
              tenant_id:
                description: |-
                  The ID of the project that owns the resource.
                maxLength: 255
                type: string
            type: object
          type: array
      type: object
    Rbac_PolicyShowResponse:
      description: Response of the rbac-policies/id:get operation
      properties:
        rbac_policy:
          properties:
            action:
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the RBAC policy.
              format: uuid
              type: string
            object_id:
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
              format: uuid
              type: string
            object_type:
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
              type: string
            target_tenant:
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
              maxLength: 255
              type: string
          type: object
      type: object
    Rbac_PolicyUpdateRequest:
      description: Request of the rbac-policies/id:put operation
      properties:
        rbac_policy:
          properties:
            target_tenant:
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced. Please note
                that Neutron does not perform any type of validation that the value provided is
                actually the ID of the existing project. If, for example, the name of the project
                is provided here, it will be accepted by the Neutron API, but the RBAC rule
                created will not work as expected.
              maxLength: 255
              type: string
          type: object
      type: object
    Rbac_PolicyUpdateResponse:
      description: Response of the rbac-policies/id:put operation
      properties:
        rbac_policy:
          properties:
            action:
              description: |-
                Action for the RBAC policy which is `access_as_external` or
                `access_as_shared`.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the RBAC policy.
              format: uuid
              type: string
            object_id:
              description: |-
                The ID of the `object_type` resource. An `object_type` of `network`
                returns a network ID, an `object_type` of `qos-policy` returns a QoS
                policy ID, an `object_type` of `security-group` returns a security
                group ID, an `object_type` of `address-scope` returns a address scope
                ID, an `object_type` of `subnetpool` returns a subnetpool ID and
                an `object_type` of `address-group` returns an address group ID.
              format: uuid
              type: string
            object_type:
              description: |-
                The type of the object that the RBAC policy affects. Types include
                `qos-policy`, `network`, `security-group`, `address-scope`,
                `subnetpool` or `address-group`.
              type: string
            target_tenant:
              description: |-
                The ID of the tenant to which the RBAC policy will be enforced.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
              maxLength: 255
              type: string
          type: object
      type: object
    RouterShowResponse:
      description: Response of the routers/id:get operation
      properties:
        router:
          description: |-
            A `router` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
              items:
                type: string
              type: array
            availability_zones:
              description: |-
                The availability zone(s) for the router.
                It is available when `router_availability_zone` extension is enabled.
              items:
                type: string
              type: array
            conntrack_helpers:
              description: |-
                The associated conntrack helper resources for the roter. If the
                router has multiple conntrack helper resources, this field has
                multiple entries. Each entry consists of netfilter conntrack helper
                (`helper`), the network protocol (`protocol`), the network port
                (`port`).
              type: string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            distributed:
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            enable_ndp_proxy:
              description: |-
                Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                router, the IPv6 address of internal subnets attached to the router can be
                published to external by create `ndp_proxy`. `false` means NDP proxy is
                disabled, the IPv6 address of internal subnets attached to the router can
                not be published to external by `ndp_proxy`. It is available when
                `router-extend-ndp-proxy` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            external_gateway_info:
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips`,
                `qos_policy_id`, `enable_default_route_ecmp` and
                `enable_default_route_bfd`.
                Otherwise, this would be `null`.
              properties:
                enable_snat:
                  type:
                    - boolean
                    - string
                external_fixed_ips:
                  items:
                    properties:
                      ip_address:
                        description: IP Address
                        type: string
                      subnet_id:
                        description: The subnet ID from which the IP address is 
                          assigned
                        type: string
                    type: object
                  type: array
                network_id:
                  format: uuid
                  type: string
                qos_policy_id:
                  format: uuid
                  type:
                    - 'null'
                    - string
              required:
                - network_id
              type:
                - 'null'
                - object
            flavor_id:
              description: |-
                The ID of the flavor associated with the router.
              type: string
            ha:
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The ID of the router.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                properties:
                  destination:
                    description: |-
                      The destination CIDR.
                    type: string
                  nexthop:
                    description: |-
                      The IP address of the next hop for the corresponding destination.
                      The next hop IP address must be a part of one of the subnets to
                      which the router interfaces are connected.
                    type: string
                type: object
              type: array
            status:
              description: |-
                The router status.
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    RouterUpdateRequest:
      description: Request of the routers/id:put operation
      properties:
        router:
          description: |-
            A `router` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            distributed:
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            enable_ndp_proxy:
              description: |-
                Enable NDP proxy attribute. Default is `false`, To persist this attribute
                value, set the `enable_ndp_proxy_by_default` option in the
                `neutron.conf` file. It is available when `router-extend-ndp-proxy`
                extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            external_gateway_info:
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips` and
                `qos_policy_id`.
                Otherwise, this would be `null`.
              properties:
                enable_snat:
                  type:
                    - boolean
                    - string
                external_fixed_ips:
                  items:
                    properties:
                      ip_address:
                        description: IP Address
                        type: string
                      subnet_id:
                        description: The subnet ID from which the IP address is 
                          assigned
                        type: string
                    type: object
                  type: array
                network_id:
                  format: uuid
                  type: string
                qos_policy_id:
                  format: uuid
                  type:
                    - 'null'
                    - string
              required:
                - network_id
              type:
                - 'null'
                - object
            ha:
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
                Default is an empty list (`[]`).
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                type: object
              type: array
          type: object
      type: object
    RouterUpdateResponse:
      description: Response of the routers/id:put operation
      properties:
        router:
          description: |-
            A `router` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
              items:
                type: string
              type: array
            availability_zones:
              description: |-
                The availability zone(s) for the router.
                It is available when `router_availability_zone` extension is enabled.
              items:
                type: string
              type: array
            conntrack_helpers:
              description: |-
                The associated conntrack helper resources for the roter. If the
                router has multiple conntrack helper resources, this field has
                multiple entries. Each entry consists of netfilter conntrack helper
                (`helper`), the network protocol (`protocol`), the network port
                (`port`).
              type: string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            distributed:
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            enable_ndp_proxy:
              description: |-
                Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                router, the IPv6 address of internal subnets attached to the router can be
                published to external by create `ndp_proxy`. `false` means NDP proxy is
                disabled, the IPv6 address of internal subnets attached to the router can
                not be published to external by `ndp_proxy`. It is available when
                `router-extend-ndp-proxy` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            external_gateway_info:
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips`,
                `qos_policy_id`, `enable_default_route_ecmp` and
                `enable_default_route_bfd`.
                Otherwise, this would be `null`.
              properties:
                enable_snat:
                  type:
                    - boolean
                    - string
                external_fixed_ips:
                  items:
                    properties:
                      ip_address:
                        description: IP Address
                        type: string
                      subnet_id:
                        description: The subnet ID from which the IP address is 
                          assigned
                        type: string
                    type: object
                  type: array
                network_id:
                  format: uuid
                  type: string
                qos_policy_id:
                  format: uuid
                  type:
                    - 'null'
                    - string
              required:
                - network_id
              type:
                - 'null'
                - object
            flavor_id:
              description: |-
                The ID of the flavor associated with the router.
              type: string
            ha:
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The ID of the router.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                properties:
                  destination:
                    description: |-
                      The destination CIDR.
                    type: string
                  nexthop:
                    description: |-
                      The IP address of the next hop for the corresponding destination.
                      The next hop IP address must be a part of one of the subnets to
                      which the router interfaces are connected.
                    type: string
                type: object
              type: array
            status:
              description: |-
                The router status.
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    RoutersAdd_External_GatewaysAdd_External_GatewaysRequest:
      description: Request body
      properties:
        router:
          properties:
            external_gateways:
              description: The list of external gateways of the router.
              items:
                properties:
                  enable_snat:
                    type: boolean
                  external_fixed_ips:
                    items:
                      properties:
                        ip_address:
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                          type: string
                        subnet_id:
                          format: uuid
                          type: string
                      type: object
                    type: array
                  network_id:
                    format: uuid
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersAdd_External_GatewaysAdd_External_GatewaysResponse:
      description: Request body
      properties:
        router:
          properties:
            routes:
              description: The extra routes configuration for L3 router. A list 
                of dictionaries with destination and nexthop parameters. It is 
                available when extraroute extension is enabled.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    oneOf:
                      - format: ipv4
                      - format: ipv6
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersAdd_ExtraroutesAdd_ExtraroutesRequest:
      description: Request body
      properties:
        router:
          properties:
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    oneOf:
                      - format: ipv4
                      - format: ipv6
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersAdd_ExtraroutesAdd_ExtraroutesResponse:
      properties:
        router:
          properties:
            id:
              description: |-
                The ID of the router.
              format: uuid
              type: string
            name:
              description: The name of the router.
              format: uuid
              type: string
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    oneOf:
                      - format: ipv4
                      - format: ipv6
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersAdd_Router_InterfaceAdd_Router_InterfaceRequest:
      description: Request body
      oneOf:
        - required:
            - port_id
        - required:
            - subnet_id
      properties:
        port_id:
          description: The ID of the port. One of subnet_id or port_id must be 
            specified.
          format: uuid
          type: string
        subnet_id:
          description: The ID of the subnet. One of subnet_id or port_id must be
            specified.
          format: uuid
          type: string
      type: object
    RoutersAdd_Router_InterfaceAdd_Router_InterfaceResponse:
      properties:
        id:
          description: |-
            The ID of the router.
          format: uuid
          type: string
        network_id:
          description: |-
            Network ID which the router interface is connected to.
          format: uuid
          type: string
        port_id:
          description: |-
            The ID of the port which represents the router interface.
          format: uuid
          type: string
        project_id:
          description: |-
            The ID of the project who owns the router interface.
          format: uuid
          type: string
        subnet_id:
          description: |-
            The ID of the subnet which the router interface belongs to.
          format: uuid
          type: string
        subnet_ids:
          description: |-
            A list of the ID of the subnet which the router interface belongs to.
            The list contains only one member.
          items:
            format: uuid
            type: string
          maxItems: 1
          minItems: 1
          type: array
        tags:
          description: |-
            The list of tags on the resource.
          items:
            type: string
          type: array
        tenant_id:
          description: |-
            The ID of the project who owns the router interface.
          format: uuid
          type: string
      type: object
    RoutersConntrack_HelperShowResponse:
      description: Response of the routers/router_id/conntrack_helpers/id:get 
        operation
      properties:
        conntrack_helper:
          description: |-
            A router `conntrack helper` object.
          properties:
            helper:
              description: |-
                The netfilter conntrack helper module.
              maxLength: 64
              type: string
            id:
              description: |-
                The ID of the conntrack helper.
              format: uuid
              type: string
            port:
              description: |-
                The network port for the netfilter conntrack target rule.
              maximum: 65535
              minimum: 1
              type:
                - integer
                - string
            protocol:
              description: |-
                The network protocol for the netfilter conntrack target rule.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    RoutersConntrack_HelperUpdateRequest:
      description: Request of the routers/router_id/conntrack_helpers/id:put 
        operation
      properties:
        conntrack_helper:
          properties:
            helper:
              description: |-
                The netfilter conntrack helper module.
              maxLength: 64
              type: string
            port:
              description: |-
                The network port for the netfilter conntrack target rule.
              maximum: 65535
              minimum: 1
              type:
                - integer
                - string
            protocol:
              description: |-
                The network protocol for the netfilter conntrack target rule.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    RoutersConntrack_HelperUpdateResponse:
      description: Response of the routers/router_id/conntrack_helpers/id:put 
        operation
      properties:
        conntrack_helper:
          description: |-
            A router `conntrack helper` object.
          properties:
            helper:
              description: |-
                The netfilter conntrack helper module.
              maxLength: 64
              type: string
            id:
              description: |-
                The ID of the conntrack helper.
              format: uuid
              type: string
            port:
              description: |-
                The network port for the netfilter conntrack target rule.
              maximum: 65535
              minimum: 1
              type:
                - integer
                - string
            protocol:
              description: |-
                The network protocol for the netfilter conntrack target rule.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    RoutersConntrack_HelpersCreateRequest:
      description: Request of the routers/router_id/conntrack_helpers:post 
        operation
      properties:
        conntrack_helper:
          description: |-
            A router `conntrack helper` object.
          properties:
            helper:
              description: |-
                The netfilter conntrack helper module.
              maxLength: 64
              type: string
            port:
              description: |-
                The network port for the netfilter conntrack target rule.
              maximum: 65535
              minimum: 1
              type:
                - integer
                - string
            project_id:
              maxLength: 255
              type: string
            protocol:
              description: |-
                The network protocol for the netfilter conntrack target rule.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    RoutersConntrack_HelpersCreateResponse:
      description: Response of the routers/router_id/conntrack_helpers:post 
        operation
      properties:
        conntrack_helper:
          description: |-
            A router `conntrack helper` object.
          properties:
            helper:
              description: |-
                The netfilter conntrack helper module.
              maxLength: 64
              type: string
            id:
              description: |-
                The ID of the conntrack helper.
              format: uuid
              type: string
            port:
              description: |-
                The network port for the netfilter conntrack target rule.
              maximum: 65535
              minimum: 1
              type:
                - integer
                - string
            protocol:
              description: |-
                The network protocol for the netfilter conntrack target rule.
              enum:
                - dccp
                - icmp
                - ipv6-icmp
                - sctp
                - tcp
                - udp
              type: string
          type: object
      type: object
    RoutersConntrack_HelpersIndexResponse:
      description: Response of the routers/router_id/conntrack_helpers:get 
        operation
      properties:
        conntrack_helpers:
          description: |-
            A list of `router conntrack helpers` objects.
          items:
            properties:
              helper:
                description: |-
                  The netfilter conntrack helper module.
                maxLength: 64
                type: string
              id:
                description: |-
                  The ID of the conntrack helper.
                format: uuid
                type: string
              port:
                description: |-
                  The network port for the netfilter conntrack target rule.
                maximum: 65535
                minimum: 1
                type:
                  - integer
                  - string
              protocol:
                description: |-
                  The network protocol for the netfilter conntrack target rule.
                enum:
                  - dccp
                  - icmp
                  - ipv6-icmp
                  - sctp
                  - tcp
                  - udp
                type: string
            type: object
          type: array
      type: object
    RoutersCreateRequest:
      description: Request of the routers:post operation
      properties:
        router:
          description: |-
            A `router` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
                Default is `true`.
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
              items:
                type: string
              type: array
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            distributed:
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            enable_ndp_proxy:
              description: |-
                Enable NDP proxy attribute. Default is `false`, To persist this attribute
                value, set the `enable_ndp_proxy_by_default` option in the
                `neutron.conf` file. It is available when `router-extend-ndp-proxy`
                extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            external_gateway_info:
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips` and
                `qos_policy_id`.
                Otherwise, this would be `null`.
              properties:
                enable_snat:
                  type:
                    - boolean
                    - string
                external_fixed_ips:
                  items:
                    properties:
                      ip_address:
                        description: IP Address
                        type: string
                      subnet_id:
                        description: The subnet ID from which the IP address is 
                          assigned
                        type: string
                    type: object
                  type: array
                network_id:
                  format: uuid
                  type: string
                qos_policy_id:
                  format: uuid
                  type:
                    - 'null'
                    - string
              required:
                - network_id
              type:
                - 'null'
                - object
            flavor_id:
              description: |-
                The ID of the flavor associated with the router.
              type: string
            ha:
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
          type: object
      type: object
    RoutersCreateResponse:
      description: Response of the routers:post operation
      properties:
        router:
          description: |-
            A `router` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            availability_zone_hints:
              description: |-
                The availability zone candidates for the router.
                It is available when `router_availability_zone` extension is enabled.
              items:
                type: string
              type: array
            availability_zones:
              description: |-
                The availability zone(s) for the router.
                It is available when `router_availability_zone` extension is enabled.
              items:
                type: string
              type: array
            conntrack_helpers:
              description: |-
                The associated conntrack helper resources for the roter. If the
                router has multiple conntrack helper resources, this field has
                multiple entries. Each entry consists of netfilter conntrack helper
                (`helper`), the network protocol (`protocol`), the network port
                (`port`).
              type: string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            distributed:
              description: |-
                `true` indicates a distributed router.
                It is available when `dvr` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            enable_ndp_proxy:
              description: |-
                Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                router, the IPv6 address of internal subnets attached to the router can be
                published to external by create `ndp_proxy`. `false` means NDP proxy is
                disabled, the IPv6 address of internal subnets attached to the router can
                not be published to external by `ndp_proxy`. It is available when
                `router-extend-ndp-proxy` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            external_gateway_info:
              description: |-
                The external gateway information of the router.
                If the router has an external gateway, this would be a dict with
                `network_id`, `enable_snat`, `external_fixed_ips`,
                `qos_policy_id`, `enable_default_route_ecmp` and
                `enable_default_route_bfd`.
                Otherwise, this would be `null`.
              properties:
                enable_snat:
                  type:
                    - boolean
                    - string
                external_fixed_ips:
                  items:
                    properties:
                      ip_address:
                        description: IP Address
                        type: string
                      subnet_id:
                        description: The subnet ID from which the IP address is 
                          assigned
                        type: string
                    type: object
                  type: array
                network_id:
                  format: uuid
                  type: string
                qos_policy_id:
                  format: uuid
                  type:
                    - 'null'
                    - string
              required:
                - network_id
              type:
                - 'null'
                - object
            flavor_id:
              description: |-
                The ID of the flavor associated with the router.
              type: string
            ha:
              description: |-
                `true` indicates a highly-available router.
                It is available when `l3-ha` extension is enabled.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The ID of the router.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                properties:
                  destination:
                    description: |-
                      The destination CIDR.
                    type: string
                  nexthop:
                    description: |-
                      The IP address of the next hop for the corresponding destination.
                      The next hop IP address must be a part of one of the subnets to
                      which the router interfaces are connected.
                    type: string
                type: object
              type: array
            status:
              description: |-
                The router status.
              type: string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    RoutersIndexResponse:
      description: Response of the routers:get operation
      properties:
        routers:
          description: |-
            A list of `router` objects.
          items:
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type:
                  - boolean
                  - string
              availability_zone_hints:
                description: |-
                  The availability zone candidates for the router.
                  It is available when `router_availability_zone` extension is enabled.
                items:
                  type: string
                type: array
              availability_zones:
                description: |-
                  The availability zone(s) for the router.
                  It is available when `router_availability_zone` extension is enabled.
                items:
                  type: string
                type: array
              conntrack_helpers:
                description: |-
                  The associated conntrack helper resources for the roter. If the
                  router has multiple conntrack helper resources, this field has
                  multiple entries. Each entry consists of netfilter conntrack helper
                  (`helper`), the network protocol (`protocol`), the network port
                  (`port`).
                type: string
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              distributed:
                description: |-
                  `true` indicates a distributed router.
                  It is available when `dvr` extension is enabled.
                type:
                  - boolean
                  - 'null'
                  - string
              enable_ndp_proxy:
                description: |-
                  Enable NDP proxy attribute. `true` means NDP proxy is enabled for the
                  router, the IPv6 address of internal subnets attached to the router can be
                  published to external by create `ndp_proxy`. `false` means NDP proxy is
                  disabled, the IPv6 address of internal subnets attached to the router can
                  not be published to external by `ndp_proxy`. It is available when
                  `router-extend-ndp-proxy` extension is enabled.
                type:
                  - boolean
                  - 'null'
                  - string
              external_gateway_info:
                description: |-
                  The external gateway information of the router.
                  If the router has an external gateway, this would be a dict with
                  `network_id`, `enable_snat`, `external_fixed_ips`,
                  `qos_policy_id`, `enable_default_route_ecmp` and
                  `enable_default_route_bfd`.
                  Otherwise, this would be `null`.
                properties:
                  enable_snat:
                    type:
                      - boolean
                      - string
                  external_fixed_ips:
                    items:
                      properties:
                        ip_address:
                          description: IP Address
                          type: string
                        subnet_id:
                          description: The subnet ID from which the IP address 
                            is assigned
                          type: string
                      type: object
                    type: array
                  network_id:
                    format: uuid
                    type: string
                  qos_policy_id:
                    format: uuid
                    type:
                      - 'null'
                      - string
                required:
                  - network_id
                type:
                  - 'null'
                  - object
              flavor_id:
                description: |-
                  The ID of the flavor associated with the router.
                type: string
              ha:
                description: |-
                  `true` indicates a highly-available router.
                  It is available when `l3-ha` extension is enabled.
                type:
                  - boolean
                  - 'null'
                  - string
              id:
                description: |-
                  The ID of the router.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              routes:
                description: |-
                  The extra routes configuration for L3 router.
                  A list of dictionaries with `destination` and `nexthop` parameters.
                  It is available when `extraroute` extension is enabled.
                items:
                  properties:
                    destination:
                      description: |-
                        The destination CIDR.
                      type: string
                    nexthop:
                      description: |-
                        The IP address of the next hop for the corresponding destination.
                        The next hop IP address must be a part of one of the subnets to
                        which the router interfaces are connected.
                      type: string
                  type: object
                type: array
              status:
                description: |-
                  The router status.
                type: string
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    RoutersL3_AgentShowResponse:
      description: Response of the routers/router_id/l3-agents/id:get operation
      type: object
    RoutersL3_AgentUpdateRequest:
      description: Request of the routers/router_id/l3-agents/id:put operation
      type: object
    RoutersL3_AgentUpdateResponse:
      description: Response of the routers/router_id/l3-agents/id:put operation
      type: object
    RoutersL3_AgentsCreateRequest:
      description: Request of the routers/router_id/l3-agents:post operation
      type: object
    RoutersL3_AgentsCreateResponse:
      description: Response of the routers/router_id/l3-agents:post operation
      type: object
    RoutersL3_AgentsIndexResponse:
      description: Response of the routers/router_id/l3-agents:get operation
      type: object
    RoutersRemove_External_GatewaysRemove_External_GatewaysRequest:
      description: Request body
      properties:
        router:
          properties:
            external_gateways:
              description: The list of external gateways of the router.
              items:
                properties:
                  external_fixed_ips:
                    items:
                      properties:
                        ip_address:
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                          type: string
                        subnet_id:
                          format: uuid
                          type: string
                      type: object
                    type: array
                  network_id:
                    format: uuid
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersRemove_External_GatewaysRemove_External_GatewaysResponse:
      description: Request body
      properties:
        router:
          properties:
            routes:
              description: The extra routes configuration for L3 router. A list 
                of dictionaries with destination and nexthop parameters. It is 
                available when extraroute extension is enabled.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    oneOf:
                      - format: ipv4
                      - format: ipv6
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersRemove_ExtraroutesRemove_ExtraroutesRequest:
      description: Request body
      properties:
        router:
          properties:
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    oneOf:
                      - format: ipv4
                      - format: ipv6
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersRemove_ExtraroutesRemove_ExtraroutesResponse:
      properties:
        router:
          properties:
            id:
              description: |-
                The ID of the router.
              format: uuid
              type: string
            name:
              description: The name of the router.
              format: uuid
              type: string
            routes:
              description: |-
                The extra routes configuration for L3 router.
                A list of dictionaries with `destination` and `nexthop` parameters.
                It is available when `extraroute` extension is enabled.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    oneOf:
                      - format: ipv4
                      - format: ipv6
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersRemove_Router_InterfaceRemove_Router_InterfaceRequest:
      description: Request body
      oneOf:
        - required:
            - port_id
        - required:
            - subnet_id
      properties:
        port_id:
          description: The ID of the port. One of subnet_id or port_id must be 
            specified.
          format: uuid
          type: string
        subnet_id:
          description: The ID of the subnet. One of subnet_id or port_id must be
            specified.
          format: uuid
          type: string
      type: object
    RoutersRemove_Router_InterfaceRemove_Router_InterfaceResponse:
      properties:
        id:
          description: |-
            The ID of the router.
          format: uuid
          type: string
        network_id:
          description: |-
            Network ID which the router interface is connected to.
          format: uuid
          type: string
        port_id:
          description: |-
            The ID of the port which represents the router interface.
          format: uuid
          type: string
        project_id:
          description: |-
            The ID of the project who owns the router interface.
          format: uuid
          type: string
        subnet_id:
          description: |-
            The ID of the subnet which the router interface belongs to.
          format: uuid
          type: string
        subnet_ids:
          description: |-
            A list of the ID of the subnet which the router interface belongs to.
            The list contains only one member.
          items:
            format: uuid
            type: string
          maxItems: 1
          minItems: 1
          type: array
        tags:
          description: |-
            The list of tags on the resource.
          items:
            type: string
          type: array
        tenant_id:
          description: |-
            The ID of the project who owns the router interface.
          format: uuid
          type: string
      type: object
    RoutersTagUpdateRequest:
      description: Request of the routers/router_id/tags/id:put operation
      type: object
    RoutersTagUpdateResponse:
      description: Response of the routers/router_id/tags/id:put operation
      type: object
    RoutersTagsIndexResponse:
      description: Response of the routers/router_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    RoutersTagsUpdate_AllRequest:
      description: Request of the routers/router_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    RoutersTagsUpdate_AllResponse:
      description: Response of the routers/router_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    RoutersUpdate_External_GatewaysUpdate_External_GatewaysRequest:
      description: Request body
      properties:
        router:
          properties:
            external_gateways:
              description: The list of external gateways of the router.
              items:
                properties:
                  enable_snat:
                    type: boolean
                  external_fixed_ips:
                    items:
                      properties:
                        ip_address:
                          oneOf:
                            - format: ipv4
                            - format: ipv6
                          type: string
                        subnet_id:
                          format: uuid
                          type: string
                      type: object
                    type: array
                  network_id:
                    format: uuid
                    readOnly: true
                    type: string
                type: object
              type: array
          type: object
      type: object
    RoutersUpdate_External_GatewaysUpdate_External_GatewaysResponse:
      description: Request body
      properties:
        router:
          properties:
            routes:
              description: The extra routes configuration for L3 router. A list 
                of dictionaries with destination and nexthop parameters. It is 
                available when extraroute extension is enabled.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    oneOf:
                      - format: ipv4
                      - format: ipv6
                    type: string
                type: object
              type: array
          type: object
      type: object
    Security_GroupShowResponse:
      description: Response of the security-groups/id:get operation
      properties:
        security_group:
          description: |-
            A `security_group` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the security group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_group_rules:
              description: |-
                A list of `security_group_rule` objects.
                Refer to [Security group rules](#security-group-rules) for details.
              items:
                properties:
                  belongs_to_default_sg:
                    description: "Indicates if the security group rule belongs to
                      the default security\ngroup of the project or not."
                    type:
                      - boolean
                      - 'null'
                      - string
                  created_at:
                    description: Time at which the resource has been created (in
                      UTC ISO8601 format).
                    type: string
                  description:
                    description: A human-readable description for the resource.
                    maxLength: 255
                    type: string
                  direction:
                    description: "Ingress or egress, which is the direction in\nwhich
                      the security group rule is applied."
                    enum:
                      - egress
                      - ingress
                    type: string
                  ethertype:
                    description: "Must be IPv4 or IPv6, and addresses represented\n\
                      in CIDR must match the ingress or egress rules."
                    enum:
                      - IPv4
                      - IPv6
                    type: string
                  id:
                    description: The ID of the security group rule.
                    format: uuid
                    type: string
                  normalized_cidr:
                    type:
                      - 'null'
                      - string
                  port_range_max:
                    description: "The maximum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be greater than or equal to\n\
                      the `port_range_min` attribute value. If the protocol is ICMP,\n\
                      this value must be an ICMP code."
                    type:
                      - integer
                      - 'null'
                  port_range_min:
                    description: "The minimum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be less than or equal to\n\
                      the `port_range_max` attribute value. If the protocol is ICMP,\n\
                      this value must be an ICMP type."
                    type:
                      - integer
                      - 'null'
                  protocol:
                    description: The IP protocol can be represented by a string,
                      an integer, or `null`.
                    type: string
                  remote_address_group_id:
                    description: "The remote address group UUID that is associated
                      with this\nsecurity group rule."
                    type: string
                  remote_group_id:
                    description: "The remote group UUID to associate with this\nsecurity
                      group rule. You can specify either the\n`remote_group_id` or
                      `remote_ip_prefix` attribute in the\nrequest body."
                    type: string
                  remote_ip_prefix:
                    description: The remote IP prefix that is matched by this 
                      security group rule.
                    type:
                      - 'null'
                      - string
                  revision_number:
                    description: The revision number of the resource.
                    type: integer
                  security_group_id:
                    description: "The security group ID to associate with this\nsecurity
                      group rule."
                    maxLength: 36
                    type: string
                  tenant_id:
                    description: |-
                      The ID of the project.
                    maxLength: 255
                    type: string
                  updated_at:
                    description: |-
                      Time at which the resource has been updated (in UTC ISO8601 format).
                    type: string
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this security group is shared to the requester’s project.
              type:
                - boolean
                - string
            stateful:
              description: |-
                Indicates if the security group is stateful or stateless.
              type:
                - boolean
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 255
              type: string
            updated_at:
              type: string
          type: object
      type: object
    Security_GroupUpdateRequest:
      description: Request of the security-groups/id:put operation
      properties:
        security_group:
          description: |-
            A `security_group` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            stateful:
              type:
                - boolean
                - string
          type: object
      type: object
    Security_GroupUpdateResponse:
      description: Response of the security-groups/id:put operation
      properties:
        security_group:
          description: |-
            A `security_group` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the security group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_group_rules:
              description: |-
                A list of `security_group_rule` objects.
                Refer to [Security group rules](#security-group-rules) for details.
              items:
                properties:
                  belongs_to_default_sg:
                    description: "Indicates if the security group rule belongs to
                      the default security\ngroup of the project or not."
                    type:
                      - boolean
                      - 'null'
                      - string
                  created_at:
                    description: Time at which the resource has been created (in
                      UTC ISO8601 format).
                    type: string
                  description:
                    description: A human-readable description for the resource.
                    maxLength: 255
                    type: string
                  direction:
                    description: "Ingress or egress, which is the direction in\nwhich
                      the security group rule is applied."
                    enum:
                      - egress
                      - ingress
                    type: string
                  ethertype:
                    description: "Must be IPv4 or IPv6, and addresses represented\n\
                      in CIDR must match the ingress or egress rules."
                    enum:
                      - IPv4
                      - IPv6
                    type: string
                  id:
                    description: The ID of the security group rule.
                    format: uuid
                    type: string
                  normalized_cidr:
                    type:
                      - 'null'
                      - string
                  port_range_max:
                    description: "The maximum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be greater than or equal to\n\
                      the `port_range_min` attribute value. If the protocol is ICMP,\n\
                      this value must be an ICMP code."
                    type:
                      - integer
                      - 'null'
                  port_range_min:
                    description: "The minimum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be less than or equal to\n\
                      the `port_range_max` attribute value. If the protocol is ICMP,\n\
                      this value must be an ICMP type."
                    type:
                      - integer
                      - 'null'
                  protocol:
                    description: The IP protocol can be represented by a string,
                      an integer, or `null`.
                    type: string
                  remote_address_group_id:
                    description: "The remote address group UUID that is associated
                      with this\nsecurity group rule."
                    type: string
                  remote_group_id:
                    description: "The remote group UUID to associate with this\nsecurity
                      group rule. You can specify either the\n`remote_group_id` or
                      `remote_ip_prefix` attribute in the\nrequest body."
                    type: string
                  remote_ip_prefix:
                    description: The remote IP prefix that is matched by this 
                      security group rule.
                    type:
                      - 'null'
                      - string
                  revision_number:
                    description: The revision number of the resource.
                    type: integer
                  security_group_id:
                    description: "The security group ID to associate with this\nsecurity
                      group rule."
                    maxLength: 36
                    type: string
                  tenant_id:
                    description: |-
                      The ID of the project.
                    maxLength: 255
                    type: string
                  updated_at:
                    description: |-
                      Time at which the resource has been updated (in UTC ISO8601 format).
                    type: string
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this security group is shared to the requester’s project.
              type:
                - boolean
                - string
            stateful:
              description: |-
                Indicates if the security group is stateful or stateless.
              type:
                - boolean
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 255
              type: string
            updated_at:
              type: string
          type: object
      type: object
    Security_Group_RuleShowResponse:
      description: Response of the security-group-rules/id:get operation
      properties:
        security_group_rule:
          description: |-
            A `security_group_rule` object.
          properties:
            belongs_to_default_sg:
              description: |-
                Indicates if the security group rule belongs to the default security
                group of the project or not.
              type:
                - boolean
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
              enum:
                - IPv4
                - IPv6
              type: string
            id:
              description: |-
                The ID of the security group rule.
              format: uuid
              type: string
            normalized_cidr:
              type:
                - 'null'
                - string
            port_range_max:
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
              type:
                - integer
                - 'null'
            port_range_min:
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
              type:
                - integer
                - 'null'
            protocol:
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
              type: string
            remote_address_group_id:
              description: |-
                The remote address group UUID that is associated with this
                security group rule.
              type: string
            remote_group_id:
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
              type: string
            remote_ip_prefix:
              description: |-
                The remote IP prefix that is matched by this security group rule.
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_group_id:
              description: |-
                The security group ID to associate with this
                security group rule.
              maxLength: 36
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    Security_Group_RuleUpdateRequest:
      description: Request of the security-group-rules/id:put operation
      properties:
        security_group_rule:
          properties:
            description:
              maxLength: 255
              type: string
          type: object
      type: object
    Security_Group_RuleUpdateResponse:
      description: Response of the security-group-rules/id:put operation
      properties:
        security_group_rule:
          properties:
            belongs_to_default_sg:
              type:
                - boolean
                - 'null'
                - string
            created_at:
              type: string
            description:
              maxLength: 255
              type: string
            direction:
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              enum:
                - IPv4
                - IPv6
              type: string
            id:
              format: uuid
              type: string
            normalized_cidr:
              type:
                - 'null'
                - string
            port_range_max:
              type:
                - integer
                - 'null'
            port_range_min:
              type:
                - integer
                - 'null'
            protocol:
              type: string
            remote_address_group_id:
              type: string
            remote_group_id:
              type: string
            remote_ip_prefix:
              type: string
            revision_number:
              type: integer
            security_group_id:
              maxLength: 36
              type: string
            tenant_id:
              maxLength: 255
              type: string
            updated_at:
              type: string
          type: object
      type: object
    Security_Group_RulesCreateRequest:
      description: Request of the security-group-rules:post operation
      properties:
        security_group_rule:
          description: |-
            A `security_group_rule` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
              enum:
                - IPv4
                - IPv6
              type: string
            port_range_max:
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
              type:
                - integer
                - 'null'
            port_range_min:
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
              type:
                - integer
                - 'null'
            protocol:
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
              type: string
            remote_address_group_id:
              type: string
            remote_group_id:
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
              type: string
            remote_ip_prefix:
              description: |-
                The remote IP prefix that is matched by this security group rule.
              type: string
            security_group_id:
              description: |-
                The security group ID to associate with this
                security group rule.
              maxLength: 36
              type: string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    Security_Group_RulesCreateResponse:
      description: Response of the security-group-rules:post operation
      properties:
        security_group_rule:
          description: |-
            A `security_group_rule` object.
          properties:
            belongs_to_default_sg:
              description: |-
                Indicates if the security group rule belongs to the default security
                group of the project or not.
              type:
                - boolean
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            direction:
              description: |-
                Ingress or egress, which is the direction in
                which the security group rule is applied.
              enum:
                - egress
                - ingress
              type: string
            ethertype:
              description: |-
                Must be IPv4 or IPv6, and addresses represented
                in CIDR must match the ingress or egress rules.
              enum:
                - IPv4
                - IPv6
              type: string
            id:
              description: |-
                The ID of the security group rule.
              format: uuid
              type: string
            normalized_cidr:
              type:
                - 'null'
                - string
            port_range_max:
              description: |-
                The maximum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                the `port_range_min` attribute value. If the protocol is ICMP,
                this value must be an ICMP code.
              type:
                - integer
                - 'null'
            port_range_min:
              description: |-
                The minimum port number in the range that is
                matched by the security group rule. If the protocol is TCP, UDP,
                DCCP, SCTP or UDP-Lite this value must be less than or equal to
                the `port_range_max` attribute value. If the protocol is ICMP,
                this value must be an ICMP type.
              type:
                - integer
                - 'null'
            protocol:
              description: |-
                The IP protocol can be represented by a string, an integer, or `null`.
                Valid string or integer values are `any` or `0`, `ah` or `51`,
                `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                `ipip` or `4`, `ipv6-encap` or `41`,
                `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                `vrrp` or `112`. Additionally, any integer value between [0-255] is
                also valid. The string `any` (or integer `0`) means `all` IP
                protocols. See the constants in `neutron_lib.constants` for the most
                up-to-date list of supported strings.
              type: string
            remote_address_group_id:
              description: |-
                The remote address group UUID that is associated with this
                security group rule.
              type: string
            remote_group_id:
              description: |-
                The remote group UUID to associate with this
                security group rule. You can specify either the
                `remote_group_id` or `remote_ip_prefix` attribute in the
                request body.
              type: string
            remote_ip_prefix:
              description: |-
                The remote IP prefix that is matched by this security group rule.
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_group_id:
              description: |-
                The security group ID to associate with this
                security group rule.
              maxLength: 36
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    Security_Group_RulesIndexResponse:
      description: Response of the security-group-rules:get operation
      properties:
        security_group_rules:
          description: |-
            A list of `security_group_rule` objects.
            Refer to [Security group rules](#security-group-rules) for details.
          items:
            properties:
              belongs_to_default_sg:
                description: |-
                  Indicates if the security group rule belongs to the default security
                  group of the project or not.
                type:
                  - boolean
                  - 'null'
                  - string
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              direction:
                description: |-
                  Ingress or egress, which is the direction in
                  which the security group rule is applied.
                enum:
                  - egress
                  - ingress
                type: string
              ethertype:
                description: |-
                  Must be IPv4 or IPv6, and addresses represented
                  in CIDR must match the ingress or egress rules.
                enum:
                  - IPv4
                  - IPv6
                type: string
              id:
                description: |-
                  The ID of the security group rule.
                format: uuid
                type: string
              normalized_cidr:
                type:
                  - 'null'
                  - string
              port_range_max:
                description: |-
                  The maximum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be greater than or equal to
                  the `port_range_min` attribute value. If the protocol is ICMP,
                  this value must be an ICMP code.
                type:
                  - integer
                  - 'null'
              port_range_min:
                description: |-
                  The minimum port number in the range that is
                  matched by the security group rule. If the protocol is TCP, UDP,
                  DCCP, SCTP or UDP-Lite this value must be less than or equal to
                  the `port_range_max` attribute value. If the protocol is ICMP,
                  this value must be an ICMP type.
                type:
                  - integer
                  - 'null'
              protocol:
                description: |-
                  The IP protocol can be represented by a string, an integer, or `null`.
                  Valid string or integer values are `any` or `0`, `ah` or `51`,
                  `dccp` or `33`, `egp` or `8`, `esp` or `50`, `gre` or `47`,
                  `icmp` or `1`, `icmpv6` or `58`, `igmp` or `2`,
                  `ipip` or `4`, `ipv6-encap` or `41`,
                  `ipv6-frag` or `44`, `ipv6-icmp` or `58`, `ipv6-nonxt` or `59`,
                  `ipv6-opts` or `60`, `ipv6-route` or `43`, `ospf` or `89`,
                  `pgm` or `113`, `rsvp` or `46`, `sctp` or `132`,
                  `tcp` or `6`, `udp` or `17`, `udplite` or `136`,
                  `vrrp` or `112`. Additionally, any integer value between [0-255] is
                  also valid. The string `any` (or integer `0`) means `all` IP
                  protocols. See the constants in `neutron_lib.constants` for the most
                  up-to-date list of supported strings.
                type: string
              remote_address_group_id:
                description: |-
                  The remote address group UUID that is associated with this
                  security group rule.
                type: string
              remote_group_id:
                description: |-
                  The remote group UUID to associate with this
                  security group rule. You can specify either the
                  `remote_group_id` or `remote_ip_prefix` attribute in the
                  request body.
                type: string
              remote_ip_prefix:
                description: |-
                  The remote IP prefix that is matched by this security group rule.
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              security_group_id:
                description: |-
                  The security group ID to associate with this
                  security group rule.
                maxLength: 36
                type: string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    Security_GroupsCreateRequest:
      description: Request of the security-groups:post operation
      properties:
        security_group:
          description: |-
            A `security_group` object.
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            stateful:
              description: |-
                Indicates if the security group is stateful or stateless.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    Security_GroupsCreateResponse:
      description: Response of the security-groups:post operation
      properties:
        security_group:
          description: |-
            A `security_group` object.
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the security group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            security_group_rules:
              description: |-
                A list of `security_group_rule` objects.
                Refer to [Security group rules](#security-group-rules) for details.
              items:
                properties:
                  belongs_to_default_sg:
                    description: "Indicates if the security group rule belongs to
                      the default security\ngroup of the project or not."
                    type:
                      - boolean
                      - 'null'
                      - string
                  created_at:
                    description: Time at which the resource has been created (in
                      UTC ISO8601 format).
                    type: string
                  description:
                    description: A human-readable description for the resource.
                    maxLength: 255
                    type: string
                  direction:
                    description: "Ingress or egress, which is the direction in\nwhich
                      the security group rule is applied."
                    enum:
                      - egress
                      - ingress
                    type: string
                  ethertype:
                    description: "Must be IPv4 or IPv6, and addresses represented\n\
                      in CIDR must match the ingress or egress rules."
                    enum:
                      - IPv4
                      - IPv6
                    type: string
                  id:
                    description: The ID of the security group rule.
                    format: uuid
                    type: string
                  normalized_cidr:
                    type:
                      - 'null'
                      - string
                  port_range_max:
                    description: "The maximum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be greater than or equal to\n\
                      the `port_range_min` attribute value. If the protocol is ICMP,\n\
                      this value must be an ICMP code."
                    type:
                      - integer
                      - 'null'
                  port_range_min:
                    description: "The minimum port number in the range that is\nmatched
                      by the security group rule. If the protocol is TCP, UDP,\nDCCP,
                      SCTP or UDP-Lite this value must be less than or equal to\n\
                      the `port_range_max` attribute value. If the protocol is ICMP,\n\
                      this value must be an ICMP type."
                    type:
                      - integer
                      - 'null'
                  protocol:
                    description: The IP protocol can be represented by a string,
                      an integer, or `null`.
                    type: string
                  remote_address_group_id:
                    description: "The remote address group UUID that is associated
                      with this\nsecurity group rule."
                    type: string
                  remote_group_id:
                    description: "The remote group UUID to associate with this\nsecurity
                      group rule. You can specify either the\n`remote_group_id` or
                      `remote_ip_prefix` attribute in the\nrequest body."
                    type: string
                  remote_ip_prefix:
                    description: The remote IP prefix that is matched by this 
                      security group rule.
                    type:
                      - 'null'
                      - string
                  revision_number:
                    description: The revision number of the resource.
                    type: integer
                  security_group_id:
                    description: "The security group ID to associate with this\nsecurity
                      group rule."
                    maxLength: 36
                    type: string
                  tenant_id:
                    description: |-
                      The ID of the project.
                    maxLength: 255
                    type: string
                  updated_at:
                    description: |-
                      Time at which the resource has been updated (in UTC ISO8601 format).
                    type: string
                type: object
              type: array
            shared:
              description: |-
                Indicates whether this security group is shared to the requester’s project.
              type:
                - boolean
                - string
            stateful:
              description: |-
                Indicates if the security group is stateful or stateless.
              type:
                - boolean
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              maxLength: 255
              type: string
            updated_at:
              type: string
          type: object
      type: object
    Security_GroupsIndexResponse:
      description: Response of the security-groups:get operation
      properties:
        security_groups:
          description: |-
            A list of `security_group` objects.
          items:
            properties:
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              id:
                description: |-
                  The ID of the security group.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              security_group_rules:
                description: |-
                  A list of `security_group_rule` objects.
                  Refer to [Security group rules](#security-group-rules) for details.
                items:
                  properties:
                    belongs_to_default_sg:
                      description: "Indicates if the security group rule belongs to
                        the default security\ngroup of the project or not."
                      type:
                        - boolean
                        - 'null'
                        - string
                    created_at:
                      description: Time at which the resource has been created 
                        (in UTC ISO8601 format).
                      type: string
                    description:
                      description: A human-readable description for the 
                        resource.
                      maxLength: 255
                      type: string
                    direction:
                      description: "Ingress or egress, which is the direction in\n\
                        which the security group rule is applied."
                      enum:
                        - egress
                        - ingress
                      type: string
                    ethertype:
                      description: "Must be IPv4 or IPv6, and addresses represented\n\
                        in CIDR must match the ingress or egress rules."
                      enum:
                        - IPv4
                        - IPv6
                      type: string
                    id:
                      description: The ID of the security group rule.
                      format: uuid
                      type: string
                    normalized_cidr:
                      type:
                        - 'null'
                        - string
                    port_range_max:
                      description: "The maximum port number in the range that is\n\
                        matched by the security group rule. If the protocol is TCP,
                        UDP,\nDCCP, SCTP or UDP-Lite this value must be greater than
                        or equal to\nthe `port_range_min` attribute value. If the
                        protocol is ICMP,\nthis value must be an ICMP code."
                      type:
                        - integer
                        - 'null'
                    port_range_min:
                      description: "The minimum port number in the range that is\n\
                        matched by the security group rule. If the protocol is TCP,
                        UDP,\nDCCP, SCTP or UDP-Lite this value must be less than
                        or equal to\nthe `port_range_max` attribute value. If the
                        protocol is ICMP,\nthis value must be an ICMP type."
                      type:
                        - integer
                        - 'null'
                    protocol:
                      description: The IP protocol can be represented by a 
                        string, an integer, or `null`.
                      type: string
                    remote_address_group_id:
                      description: "The remote address group UUID that is associated
                        with this\nsecurity group rule."
                      type: string
                    remote_group_id:
                      description: "The remote group UUID to associate with this\n\
                        security group rule. You can specify either the\n`remote_group_id`
                        or `remote_ip_prefix` attribute in the\nrequest body."
                      type: string
                    remote_ip_prefix:
                      description: The remote IP prefix that is matched by this 
                        security group rule.
                      type:
                        - 'null'
                        - string
                    revision_number:
                      description: The revision number of the resource.
                      type: integer
                    security_group_id:
                      description: "The security group ID to associate with this\n\
                        security group rule."
                      maxLength: 36
                      type: string
                    tenant_id:
                      description: |-
                        The ID of the project.
                      maxLength: 255
                      type: string
                    updated_at:
                      description: |-
                        Time at which the resource has been updated (in UTC ISO8601 format).
                      type: string
                  type: object
                type: array
              shared:
                description: |-
                  Indicates whether this security group is shared to the requester’s project.
                type:
                  - boolean
                  - string
              stateful:
                description: |-
                  Indicates if the security group is stateful or stateless.
                type:
                  - boolean
                  - string
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
              tenant_id:
                maxLength: 255
                type: string
              updated_at:
                type: string
            type: object
          type: array
      type: object
    Security_GroupsTagUpdateRequest:
      description: Request of the security-groups/security_group_id/tags/id:put 
        operation
      type: object
    Security_GroupsTagUpdateResponse:
      description: Response of the security-groups/security_group_id/tags/id:put
        operation
      type: object
    Security_GroupsTagsIndexResponse:
      description: Response of the security-groups/security_group_id/tags:get 
        operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    Security_GroupsTagsUpdate_AllRequest:
      description: Request of the security-groups/security_group_id/tags:put 
        operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    Security_GroupsTagsUpdate_AllResponse:
      description: Response of the security-groups/security_group_id/tags:put 
        operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    SegmentShowResponse:
      description: Response of the segments/id:get operation
      properties:
        segment:
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The UUID of the segment.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type:
                - 'null'
                - string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            network_type:
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
              maxLength: 32
              type: string
            physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SegmentUpdateRequest:
      description: Request of the segments/id:put operation
      properties:
        segment:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the segment.
              maxLength: 255
              type:
                - 'null'
                - string
          type: object
      type: object
    SegmentUpdateResponse:
      description: Response of the segments/id:put operation
      properties:
        segment:
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The UUID of the segment.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type:
                - 'null'
                - string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            network_type:
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
              maxLength: 32
              type: string
            physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SegmentsCreateRequest:
      description: Request of the segments:post operation
      properties:
        segment:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the segment.
              maxLength: 255
              type:
                - 'null'
                - string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            network_type:
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
              maxLength: 32
              type: string
            physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            tenant_id:
              maxLength: 255
              type: string
          type: object
      type: object
    SegmentsCreateResponse:
      description: Response of the segments:post operation
      properties:
        segment:
          properties:
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The UUID of the segment.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type:
                - 'null'
                - string
            network_id:
              description: |-
                The ID of the attached network.
              format: uuid
              type: string
            network_type:
              description: |-
                The type of physical network that maps to this
                network resource. For example, `flat`, `vlan`, `vxlan`, or
                `gre`.
              maxLength: 32
              type: string
            physical_network:
              description: |-
                The physical network where this network/segment is implemented.
              maxLength: 64
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            segmentation_id:
              description: |-
                The ID of the isolated segment on the physical network.
                The `network_type` attribute defines the segmentation model.
                For example, if the `network_type` value is vlan, this ID is a vlan
                identifier. If the `network_type` value is gre, this ID is a gre key.
                `Note` that only the segmentation-id of VLAN type networks can be
                changed!
              type:
                - integer
                - string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SegmentsIndexResponse:
      description: Response of the segments:get operation
      properties:
        segments:
          items:
            properties:
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              id:
                description: |-
                  The UUID of the segment.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type:
                  - 'null'
                  - string
              network_id:
                description: |-
                  The ID of the attached network.
                format: uuid
                type: string
              network_type:
                description: |-
                  The type of physical network that maps to this
                  network resource. For example, `flat`, `vlan`, `vxlan`, or
                  `gre`.
                maxLength: 32
                type: string
              physical_network:
                description: |-
                  The physical network where this network/segment is implemented.
                maxLength: 64
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              segmentation_id:
                description: |-
                  The ID of the isolated segment on the physical network.
                  The `network_type` attribute defines the segmentation model.
                  For example, if the `network_type` value is vlan, this ID is a vlan
                  identifier. If the `network_type` value is gre, this ID is a gre key.
                  `Note` that only the segmentation-id of VLAN type networks can be
                  changed!
                type:
                  - integer
                  - string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    Service_ProfileShowResponse:
      description: Response of the service_profiles/id:get operation
      properties:
        service_profile:
          description: |-
            A `service_profile` object.
          properties:
            description:
              description: |-
                The human-readable description for the service profile.
              maxLength: 1024
              type:
                - 'null'
                - string
            driver:
              description: |-
                Provider driver to use for this profile.
              maxLength: 1024
              type: string
            enabled:
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The UUID of the service profile.
              format: uuid
              type: string
            metainfo:
              description: |-
                JSON-formatted meta information of the service profile.
              type: string
          type: object
      type: object
    Service_ProfileUpdateRequest:
      description: Request of the service_profiles/id:put operation
      properties:
        service_profile:
          description: |-
            A `service_profile` object.
          properties:
            description:
              description: |-
                The human-readable description for the service profile.
              maxLength: 1024
              type:
                - 'null'
                - string
            driver:
              description: |-
                Provider driver to use for this profile.
              maxLength: 1024
              type: string
            enabled:
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
              type:
                - boolean
                - 'null'
                - string
            metainfo:
              description: |-
                JSON-formatted meta information of the service profile.
              type: string
          type: object
      type: object
    Service_ProfileUpdateResponse:
      description: Response of the service_profiles/id:put operation
      properties:
        service_profile:
          description: |-
            A `service_profile` object.
          properties:
            description:
              description: |-
                The human-readable description for the service profile.
              maxLength: 1024
              type:
                - 'null'
                - string
            driver:
              description: |-
                Provider driver to use for this profile.
              maxLength: 1024
              type: string
            enabled:
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The UUID of the service profile.
              format: uuid
              type: string
            metainfo:
              description: |-
                JSON-formatted meta information of the service profile.
              type: string
          type: object
      type: object
    Service_ProfilesCreateRequest:
      description: Request of the service_profiles:post operation
      properties:
        service_profile:
          description: |-
            A `service_profile` object.
          properties:
            description:
              description: |-
                The human-readable description for the service profile.
              maxLength: 1024
              type:
                - 'null'
                - string
            driver:
              description: |-
                Provider driver to use for this profile.
              maxLength: 1024
              type: string
            enabled:
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
              type:
                - boolean
                - 'null'
                - string
            metainfo:
              description: |-
                JSON-formatted meta information of the service profile.
              type: string
          type: object
      type: object
    Service_ProfilesCreateResponse:
      description: Response of the service_profiles:post operation
      properties:
        service_profile:
          description: |-
            A `service_profile` object.
          properties:
            description:
              description: |-
                The human-readable description for the service profile.
              maxLength: 1024
              type:
                - 'null'
                - string
            driver:
              description: |-
                Provider driver to use for this profile.
              maxLength: 1024
              type: string
            enabled:
              description: |-
                Indicates whether this service profile is enabled or not.
                Default is `true`.
              type:
                - boolean
                - 'null'
                - string
            id:
              description: |-
                The UUID of the service profile.
              format: uuid
              type: string
            metainfo:
              description: |-
                JSON-formatted meta information of the service profile.
              type: string
          type: object
      type: object
    Service_ProfilesIndexResponse:
      description: Response of the service_profiles:get operation
      properties:
        service_profiles:
          description: |-
            Service profile UUIDs associated with this
            flavor.
          items:
            properties:
              description:
                description: |-
                  The human-readable description for the service profile.
                maxLength: 1024
                type:
                  - 'null'
                  - string
              driver:
                description: |-
                  Provider driver to use for this profile.
                maxLength: 1024
                type: string
              enabled:
                description: |-
                  Indicates whether this service profile is enabled or not.
                  Default is `true`.
                type:
                  - boolean
                  - 'null'
                  - string
              id:
                description: |-
                  The UUID of the service profile.
                format: uuid
                type: string
              metainfo:
                description: |-
                  JSON-formatted meta information of the service profile.
                type: string
            type: object
          type: array
      type: object
    Service_ProviderShowResponse:
      description: Response of the service-providers/id:get operation
      properties:
        service_provider:
          properties:
            default:
              type: string
            name:
              type: string
            service_type:
              type: string
          type: object
      type: object
    Service_ProviderUpdateRequest:
      description: Request of the service-providers/id:put operation
      properties:
        service_provider:
          properties: {}
          type: object
      type: object
    Service_ProviderUpdateResponse:
      description: Response of the service-providers/id:put operation
      properties:
        service_provider:
          properties:
            default:
              type: string
            name:
              type: string
            service_type:
              type: string
          type: object
      type: object
    Service_ProvidersCreateRequest:
      description: Request of the service-providers:post operation
      properties:
        service_provider:
          properties: {}
          type: object
      type: object
    Service_ProvidersCreateResponse:
      description: Response of the service-providers:post operation
      properties:
        service_provider:
          properties:
            default:
              type: string
            name:
              type: string
            service_type:
              type: string
          type: object
      type: object
    Service_ProvidersIndexResponse:
      description: Response of the service-providers:get operation
      properties:
        service_providers:
          description: |-
            A list of `service_provider` objects.
          items:
            properties:
              default:
                description: |-
                  Defines whether the provider is the default for
                  the service type. If this value is `true`, the provider is the
                  default. If this value is `false`, the provider is not the
                  default.
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              service_type:
                description: |-
                  The service type, which is `CORE`, `DUMMY`,
                  `FIREWALL`, `FLAVORS`, `L3_ROUTER_NAT`, `METERING`, `QOS`,
                  or `VPN`.
                type: string
            type: object
          type: array
      type: object
    SubnetShowResponse:
      description: Response of the subnets/subnet_id:get operation
      properties:
        subnet:
          description: |-
            A `subnet` object.
          properties:
            allocation_pools:
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet.
              items:
                properties:
                  end:
                    type: string
                  start:
                    type: string
                type: object
              type: array
            cidr:
              description: |-
                The CIDR of the subnet.
              type:
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_nameservers:
              description: |-
                List of dns name servers associated with the subnet.
              items:
                type: string
              type: array
            dns_publish_fixed_ip:
              description: |-
                Whether to publish DNS records for IPs from this subnet.
              type:
                - boolean
                - string
            enable_dhcp:
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet.
              type:
                - boolean
                - string
            gateway_ip:
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet.
              type:
                - 'null'
                - string
            host_routes:
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                type: object
              type: array
            id:
              description: |-
                The ID of the subnet.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Value is `4` or `6`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            ipv6_address_mode:
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            ipv6_ra_mode:
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the network to which the subnet belongs.
              format: uuid
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router:external:
              type:
                - boolean
                - string
            segment_id:
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
              format: uuid
              type:
                - 'null'
                - string
            service_types:
              description: |-
                The service types associated with the subnet.
              items:
                type: string
              type: array
            subnetpool_id:
              description: |-
                The ID of the subnet pool associated with the subnet.
              type:
                - 'null'
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SubnetUpdateRequest:
      description: Request of the subnets/subnet_id:put operation
      properties:
        subnet:
          properties:
            allocation_pools:
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet. If allocation_pools are not specified, OpenStack
                Networking automatically allocates pools for covering all IP addresses
                in the CIDR, excluding the address reserved for the subnet gateway by
                default.
              items:
                properties:
                  end:
                    type: string
                  start:
                    type: string
                type: object
              type: array
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dns_nameservers:
              description: |-
                List of dns name servers associated with the subnet. Default is an
                empty list.
              items:
                type: string
              type: array
            dns_publish_fixed_ip:
              description: |-
                Whether to publish DNS records for IPs from this subnet. Default
                is `false`.
              type:
                - boolean
                - string
            enable_dhcp:
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet. Default is `true`.
              type:
                - boolean
                - string
            gateway_ip:
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet.
              type:
                - 'null'
                - string
            host_routes:
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters. Default value is
                an empty list.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                type: object
              type: array
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            segment_id:
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
              format: uuid
              type:
                - 'null'
                - string
            service_types:
              description: |-
                The service types associated with the subnet.
              items:
                type: string
              type: array
          type: object
      type: object
    SubnetUpdateResponse:
      description: Response of the subnets/subnet_id:put operation
      properties:
        subnet:
          description: |-
            A `subnet` object.
          properties:
            allocation_pools:
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet.
              items:
                properties:
                  end:
                    type: string
                  start:
                    type: string
                type: object
              type: array
            cidr:
              description: |-
                The CIDR of the subnet.
              type:
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_nameservers:
              description: |-
                List of dns name servers associated with the subnet.
              items:
                type: string
              type: array
            dns_publish_fixed_ip:
              description: |-
                Whether to publish DNS records for IPs from this subnet.
              type:
                - boolean
                - string
            enable_dhcp:
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet.
              type:
                - boolean
                - string
            gateway_ip:
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet.
              type:
                - 'null'
                - string
            host_routes:
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                type: object
              type: array
            id:
              description: |-
                The ID of the subnet.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Value is `4` or `6`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            ipv6_address_mode:
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            ipv6_ra_mode:
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the network to which the subnet belongs.
              format: uuid
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router:external:
              type:
                - boolean
                - string
            segment_id:
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
              format: uuid
              type:
                - 'null'
                - string
            service_types:
              description: |-
                The service types associated with the subnet.
              items:
                type: string
              type: array
            subnetpool_id:
              description: |-
                The ID of the subnet pool associated with the subnet.
              type:
                - 'null'
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SubnetpoolShowResponse:
      description: Response of the subnetpools/id:get operation
      properties:
        subnetpool:
          description: |-
            A `subnetpool` object.
          properties:
            address_scope_id:
              description: |-
                An address scope to assign to the subnet pool.
              format: uuid
              type:
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            default_prefixlen:
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
              minimum: 0
              type:
                - integer
                - string
            default_quota:
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
              minimum: 0
              type:
                - integer
                - string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the subnet pool.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
              type: integer
            is_default:
              description: |-
                The subnetpool is default pool or not.
              type:
                - boolean
                - string
            max_prefixlen:
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
              minimum: 0
              type:
                - integer
                - string
            min_prefixlen:
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            prefixes:
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
              items:
                type: string
              type: array
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SubnetpoolUpdateRequest:
      description: Request of the subnetpools/id:put operation
      properties:
        subnetpool:
          description: |-
            A `subnetpool` object.
          properties:
            address_scope_id:
              description: |-
                An address scope to assign to the subnet pool.
              format: uuid
              type:
                - 'null'
                - string
            default_prefixlen:
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
              minimum: 0
              type:
                - integer
                - string
            default_quota:
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
              minimum: 0
              type:
                - integer
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            is_default:
              description: |-
                The subnetpool is default pool or not.
              type:
                - boolean
                - string
            max_prefixlen:
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
              minimum: 0
              type:
                - integer
                - string
            min_prefixlen:
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            prefixes:
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
              items:
                type: string
              type: array
          type: object
      type: object
    SubnetpoolUpdateResponse:
      description: Response of the subnetpools/id:put operation
      properties:
        subnetpool:
          description: |-
            A `subnetpool` object.
          properties:
            address_scope_id:
              description: |-
                An address scope to assign to the subnet pool.
              format: uuid
              type:
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            default_prefixlen:
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
              minimum: 0
              type:
                - integer
                - string
            default_quota:
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
              minimum: 0
              type:
                - integer
                - string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the subnet pool.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
              type: integer
            is_default:
              description: |-
                The subnetpool is default pool or not.
              type:
                - boolean
                - string
            max_prefixlen:
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
              minimum: 0
              type:
                - integer
                - string
            min_prefixlen:
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            prefixes:
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
              items:
                type: string
              type: array
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SubnetpoolsAdd_PrefixesAdd_PrefixesRequest:
      description: Request of the subnetpools/id/add_prefixes:put operation
      type: object
    SubnetpoolsAdd_PrefixesAdd_PrefixesResponse:
      description: Response of the subnetpools/id/add_prefixes:put operation
      type: object
    SubnetpoolsCreateRequest:
      description: Request of the subnetpools:post operation
      properties:
        subnetpool:
          description: |-
            A `subnetpool` object.
          properties:
            address_scope_id:
              description: |-
                An address scope to assign to the subnet pool.
              format: uuid
              type:
                - 'null'
                - string
            default_prefixlen:
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
              minimum: 0
              type:
                - integer
                - string
            default_quota:
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
              minimum: 0
              type:
                - integer
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            is_default:
              description: |-
                The subnetpool is default pool or not.
              type:
                - boolean
                - string
            max_prefixlen:
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
              minimum: 0
              type:
                - integer
                - string
            min_prefixlen:
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            prefixes:
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
              items:
                type: string
              type: array
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    SubnetpoolsCreateResponse:
      description: Response of the subnetpools:post operation
      properties:
        subnetpool:
          description: |-
            A `subnetpool` object.
          properties:
            address_scope_id:
              description: |-
                An address scope to assign to the subnet pool.
              format: uuid
              type:
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            default_prefixlen:
              description: |-
                The size of the prefix to allocate when the
                `cidr` or `prefixlen` attributes are omitted when you create
                the subnet. Default is `min_prefixlen`.
              minimum: 0
              type:
                - integer
                - string
            default_quota:
              description: |-
                A per-project quota on the prefix space that can
                be allocated from the subnet pool for project subnets. Default is
                no quota is enforced on allocations from the subnet pool. For IPv4
                subnet pools, `default_quota` is measured in units of /32. For
                IPv6 subnet pools, `default_quota` is measured units of /64. All
                projects that use the subnet pool have the same prefix quota
                applied.
              minimum: 0
              type:
                - integer
                - string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            id:
              description: |-
                The ID of the subnet pool.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Valid value is `4` or
                `6`. Default is `4`.
              type: integer
            is_default:
              description: |-
                The subnetpool is default pool or not.
              type:
                - boolean
                - string
            max_prefixlen:
              description: |-
                The maximum prefix size that can be allocated
                from the subnet pool. For IPv4 subnet pools, default is `32`.
                For IPv6 subnet pools, default is `128`.
              minimum: 0
              type:
                - integer
                - string
            min_prefixlen:
              description: |-
                The smallest prefix that can be allocated from a
                subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                subnet pools, default is `64`.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
              type: string
            prefixes:
              description: |-
                A list of subnet prefixes to assign to the subnet
                pool. The API merges adjacent prefixes and treats them as a single
                prefix. Each subnet prefix must be unique among all subnet
                prefixes in all subnet pools that are associated with the address
                scope.
              items:
                type: string
              type: array
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            shared:
              description: |-
                Indicates whether this resource is shared across all projects.
                By default, only administrative users can change this value.
              type:
                - boolean
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SubnetpoolsIndexResponse:
      description: Response of the subnetpools:get operation
      properties:
        subnetpools:
          description: |-
            A list of `subnetpool` objects.
          items:
            properties:
              address_scope_id:
                description: |-
                  An address scope to assign to the subnet pool.
                format: uuid
                type:
                  - 'null'
                  - string
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              default_prefixlen:
                description: |-
                  The size of the prefix to allocate when the
                  `cidr` or `prefixlen` attributes are omitted when you create
                  the subnet. Default is `min_prefixlen`.
                minimum: 0
                type:
                  - integer
                  - string
              default_quota:
                description: |-
                  A per-project quota on the prefix space that can
                  be allocated from the subnet pool for project subnets. Default is
                  no quota is enforced on allocations from the subnet pool. For IPv4
                  subnet pools, `default_quota` is measured in units of /32. For
                  IPv6 subnet pools, `default_quota` is measured units of /64. All
                  projects that use the subnet pool have the same prefix quota
                  applied.
                minimum: 0
                type:
                  - integer
                  - string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              id:
                description: |-
                  The ID of the subnet pool.
                format: uuid
                type: string
              ip_version:
                description: |-
                  The IP protocol version. Valid value is `4` or
                  `6`. Default is `4`.
                type: integer
              is_default:
                description: |-
                  The subnetpool is default pool or not.
                type:
                  - boolean
                  - string
              max_prefixlen:
                description: |-
                  The maximum prefix size that can be allocated
                  from the subnet pool. For IPv4 subnet pools, default is `32`.
                  For IPv6 subnet pools, default is `128`.
                minimum: 0
                type:
                  - integer
                  - string
              min_prefixlen:
                description: |-
                  The smallest prefix that can be allocated from a
                  subnet pool. For IPv4 subnet pools, default is `8`. For IPv6
                  subnet pools, default is `64`.
                minimum: 0
                type:
                  - integer
                  - string
              name:
                description: |-
                  Human-readable name of the resource.
                type: string
              prefixes:
                description: |-
                  A list of subnet prefixes to assign to the subnet
                  pool. The API merges adjacent prefixes and treats them as a single
                  prefix. Each subnet prefix must be unique among all subnet
                  prefixes in all subnet pools that are associated with the address
                  scope.
                items:
                  type: string
                type: array
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              shared:
                description: |-
                  Indicates whether this resource is shared across all projects.
                  By default, only administrative users can change this value.
                type:
                  - boolean
                  - string
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsRequest:
      description: Request of the subnetpools/id/onboard_network_subnets:put 
        operation
      type: object
    SubnetpoolsOnboard_Network_SubnetsOnboard_Network_SubnetsResponse:
      description: Response of the subnetpools/id/onboard_network_subnets:put 
        operation
      type: object
    SubnetpoolsRemove_PrefixesRemove_PrefixesRequest:
      description: Request of the subnetpools/id/remove_prefixes:put operation
      type: object
    SubnetpoolsRemove_PrefixesRemove_PrefixesResponse:
      description: Response of the subnetpools/id/remove_prefixes:put operation
      type: object
    SubnetpoolsTagUpdateRequest:
      description: Request of the subnetpools/subnetpool_id/tags/id:put 
        operation
      type: object
    SubnetpoolsTagUpdateResponse:
      description: Response of the subnetpools/subnetpool_id/tags/id:put 
        operation
      type: object
    SubnetpoolsTagsIndexResponse:
      description: Response of the subnetpools/subnetpool_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    SubnetpoolsTagsUpdate_AllRequest:
      description: Request of the subnetpools/subnetpool_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    SubnetpoolsTagsUpdate_AllResponse:
      description: Response of the subnetpools/subnetpool_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    SubnetsCreateRequest:
      description: Request of the subnets:post operation
      properties:
        subnet:
          description: |-
            A `subnet` object.
          properties:
            allocation_pools:
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet. If allocation_pools are not specified, OpenStack
                Networking automatically allocates pools for covering all IP addresses
                in the CIDR, excluding the address reserved for the subnet gateway by
                default.
              items:
                properties:
                  end:
                    type: string
                  start:
                    type: string
                type: object
              type: array
            cidr:
              description: |-
                The CIDR of the subnet.
              type:
                - 'null'
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dns_nameservers:
              description: |-
                List of dns name servers associated with the subnet. Default is an
                empty list.
              items:
                type: string
              type: array
            dns_publish_fixed_ip:
              description: |-
                Whether to publish DNS records for IPs from this subnet. Default
                is `false`.
              type:
                - boolean
                - string
            enable_dhcp:
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet. Default is `true`.
              type:
                - boolean
                - string
            gateway_ip:
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet. If the gateway_ip is not
                specified, OpenStack Networking allocates an address from the CIDR
                for the gateway for the subnet by default.
              type:
                - 'null'
                - string
            host_routes:
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters. Default value is
                an empty list.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                type: object
              type: array
            ip_version:
              description: |-
                The IP protocol version. Value is `4` or `6`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            ipv6_address_mode:
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            ipv6_ra_mode:
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            name:
              description: |-
                Human-readable name of the resource. Default is an empty string.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the network to which the subnet belongs.
              format: uuid
              type: string
            prefixlen:
              description: |-
                The prefix length to use for subnet allocation from a subnet pool.
                If not specified, the `default_prefixlen` value of the subnet pool
                will be used.
              minimum: 0
              type:
                - integer
                - string
            segment_id:
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
              format: uuid
              type:
                - 'null'
                - string
            service_types:
              description: |-
                The service types associated with the subnet.
              items:
                type: string
              type: array
            subnetpool_id:
              description: |-
                The ID of the subnet pool associated with the subnet.
              type:
                - 'null'
                - string
            tenant_id:
              description: |-
                The ID of the project that owns the resource.
                Only administrative and users with advsvc role can specify
                a project ID other than their own.
                You cannot change this value through authorization policies.
              maxLength: 255
              type: string
            use_default_subnetpool:
              description: |-
                Whether to allocate this subnet from the default subnet pool.
              type:
                - boolean
                - string
          required:
            - ip_version
            - network_id
          type: object
      type: object
    SubnetsCreateResponse:
      description: Response of the subnets:post operation
      properties:
        subnet:
          description: |-
            A `subnet` object.
          properties:
            allocation_pools:
              description: |-
                Allocation pools with `start` and `end` IP addresses
                for this subnet.
              items:
                properties:
                  end:
                    type: string
                  start:
                    type: string
                type: object
              type: array
            cidr:
              description: |-
                The CIDR of the subnet.
              type:
                - 'null'
                - string
            created_at:
              description: |-
                Time at which the resource has been created (in UTC ISO8601 format).
              type: string
            description:
              description: |-
                A human-readable description for the resource.
              maxLength: 255
              type: string
            dns_nameservers:
              description: |-
                List of dns name servers associated with the subnet.
              items:
                type: string
              type: array
            dns_publish_fixed_ip:
              description: |-
                Whether to publish DNS records for IPs from this subnet.
              type:
                - boolean
                - string
            enable_dhcp:
              description: |-
                Indicates whether dhcp is enabled or disabled
                for the subnet.
              type:
                - boolean
                - string
            gateway_ip:
              description: |-
                Gateway IP of this subnet. If the value is `null` that implies no
                gateway is associated with the subnet.
              type:
                - 'null'
                - string
            host_routes:
              description: |-
                Additional routes for the subnet. A list of dictionaries with
                `destination` and `nexthop` parameters.
              items:
                properties:
                  destination:
                    type: string
                  nexthop:
                    type: string
                type: object
              type: array
            id:
              description: |-
                The ID of the subnet.
              format: uuid
              type: string
            ip_version:
              description: |-
                The IP protocol version. Value is `4` or `6`.
              enum:
                - 4
                - 6
              type:
                - integer
                - string
            ipv6_address_mode:
              description: |-
                The IPv6 address modes specifies mechanisms for assigning IP addresses.
                Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            ipv6_ra_mode:
              description: |-
                The IPv6 router advertisement specifies whether the networking service
                should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
              enum:
                - dhcpv6-stateful
                - dhcpv6-stateless
                - slaac
              type: string
            name:
              description: |-
                Human-readable name of the resource.
              maxLength: 255
              type: string
            network_id:
              description: |-
                The ID of the network to which the subnet belongs.
              format: uuid
              type: string
            revision_number:
              description: |-
                The revision number of the resource.
              type: integer
            router:external:
              type:
                - boolean
                - string
            segment_id:
              description: |-
                The ID of a network segment the subnet is associated with.
                It is available when `segment` extension is enabled.
              format: uuid
              type:
                - 'null'
                - string
            service_types:
              description: |-
                The service types associated with the subnet.
              items:
                type: string
              type: array
            subnetpool_id:
              description: |-
                The ID of the subnet pool associated with the subnet.
              type:
                - 'null'
                - string
            tags:
              description: |-
                The list of tags on the resource.
              items:
                type: string
              type: array
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            updated_at:
              description: |-
                Time at which the resource has been updated (in UTC ISO8601 format).
              type: string
          type: object
      type: object
    SubnetsIndexResponse:
      description: Response of the subnets:get operation
      properties:
        subnets:
          description: |-
            A list of `subnet` objects.
          items:
            properties:
              allocation_pools:
                description: |-
                  Allocation pools with `start` and `end` IP addresses
                  for this subnet.
                items:
                  properties:
                    end:
                      type: string
                    start:
                      type: string
                  type: object
                type: array
              cidr:
                description: |-
                  The CIDR of the subnet.
                type:
                  - 'null'
                  - string
              created_at:
                description: |-
                  Time at which the resource has been created (in UTC ISO8601 format).
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                maxLength: 255
                type: string
              dns_nameservers:
                description: |-
                  List of dns name servers associated with the subnet.
                items:
                  type: string
                type: array
              dns_publish_fixed_ip:
                description: |-
                  Whether to publish DNS records for IPs from this subnet.
                type:
                  - boolean
                  - string
              enable_dhcp:
                description: |-
                  Indicates whether dhcp is enabled or disabled
                  for the subnet.
                type:
                  - boolean
                  - string
              gateway_ip:
                description: |-
                  Gateway IP of this subnet. If the value is `null` that implies no
                  gateway is associated with the subnet.
                type:
                  - 'null'
                  - string
              host_routes:
                description: |-
                  Additional routes for the subnet. A list of dictionaries with
                  `destination` and `nexthop` parameters.
                items:
                  properties:
                    destination:
                      type: string
                    nexthop:
                      type: string
                  type: object
                type: array
              id:
                description: |-
                  The ID of the subnet.
                format: uuid
                type: string
              ip_version:
                description: |-
                  The IP protocol version. Value is `4` or `6`.
                enum:
                  - 4
                  - 6
                type:
                  - integer
                  - string
              ipv6_address_mode:
                description: |-
                  The IPv6 address modes specifies mechanisms for assigning IP addresses.
                  Value is `slaac`, `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
                enum:
                  - dhcpv6-stateful
                  - dhcpv6-stateless
                  - slaac
                type: string
              ipv6_ra_mode:
                description: |-
                  The IPv6 router advertisement specifies whether the networking service
                  should transmit ICMPv6 packets, for a subnet. Value is `slaac`,
                  `dhcpv6-stateful`, `dhcpv6-stateless` or `null`.
                enum:
                  - dhcpv6-stateful
                  - dhcpv6-stateless
                  - slaac
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                maxLength: 255
                type: string
              network_id:
                description: |-
                  The ID of the network to which the subnet belongs.
                format: uuid
                type: string
              revision_number:
                description: |-
                  The revision number of the resource.
                type: integer
              router:external:
                type:
                  - boolean
                  - string
              segment_id:
                description: |-
                  The ID of a network segment the subnet is associated with.
                  It is available when `segment` extension is enabled.
                format: uuid
                type:
                  - 'null'
                  - string
              service_types:
                description: |-
                  The service types associated with the subnet.
                items:
                  type: string
                type: array
              subnetpool_id:
                description: |-
                  The ID of the subnet pool associated with the subnet.
                type:
                  - 'null'
                  - string
              tags:
                description: |-
                  The list of tags on the resource.
                items:
                  type: string
                type: array
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              updated_at:
                description: |-
                  Time at which the resource has been updated (in UTC ISO8601 format).
                type: string
            type: object
          type: array
      type: object
    SubnetsTagUpdateRequest:
      description: Request of the subnets/subnet_id/tags/id:put operation
      type: object
    SubnetsTagUpdateResponse:
      description: Response of the subnets/subnet_id/tags/id:put operation
      type: object
    SubnetsTagsIndexResponse:
      description: Response of the subnets/subnet_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    SubnetsTagsUpdate_AllRequest:
      description: Request of the subnets/subnet_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    SubnetsTagsUpdate_AllResponse:
      description: Response of the subnets/subnet_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    TrunksTagUpdateRequest:
      description: Request of the trunks/trunk_id/tags/id:put operation
      type: object
    TrunksTagUpdateResponse:
      description: Response of the trunks/trunk_id/tags/id:put operation
      type: object
    TrunksTagsIndexResponse:
      description: Response of the trunks/trunk_id/tags:get operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    TrunksTagsUpdate_AllRequest:
      description: Request of the trunks/trunk_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    TrunksTagsUpdate_AllResponse:
      description: Response of the trunks/trunk_id/tags:put operation
      properties:
        tags:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    VpnEndpoint_GroupShowResponse:
      description: Response of the vpn/endpoint-groups/id:get operation
      properties:
        endpoint_group:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            endpoints:
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
              items:
                type: string
              type: array
            id:
              description: |-
                The ID of the VPN endpoint group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            type:
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              type: string
          type: object
      type: object
    VpnEndpoint_GroupUpdateRequest:
      description: Request of the vpn/endpoint-groups/id:put operation
      properties:
        endpoint_group:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnEndpoint_GroupUpdateResponse:
      description: Response of the vpn/endpoint-groups/id:put operation
      properties:
        endpoint_group:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            endpoints:
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
              items:
                type: string
              type: array
            id:
              description: |-
                The ID of the VPN endpoint group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            type:
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              type: string
          type: object
      type: object
    VpnEndpoint_GroupsCreateRequest:
      description: Request of the vpn/endpoint-groups:post operation
      properties:
        endpoint_group:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            endpoints:
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
              items:
                type: string
              type: array
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            type:
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              type: string
          type: object
      type: object
    VpnEndpoint_GroupsCreateResponse:
      description: Response of the vpn/endpoint-groups:post operation
      properties:
        endpoint_group:
          properties:
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            endpoints:
              description: |-
                List of endpoints of the same type, for the
                endpoint group. The values will depend on type.
              items:
                type: string
              type: array
            id:
              description: |-
                The ID of the VPN endpoint group.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            type:
              description: |-
                The type of the endpoints in the group. A valid
                value is `subnet`, `cidr`, `network`, `router`, or
                `vlan`. Only `subnet` and `cidr` are supported
                at this moment.
              enum:
                - cidr
                - network
                - router
                - subnet
                - vlan
              type: string
          type: object
      type: object
    VpnEndpoint_GroupsIndexResponse:
      description: Response of the vpn/endpoint-groups:get operation
      properties:
        endpoint_groups:
          items:
            properties:
              description:
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              endpoints:
                description: |-
                  List of endpoints of the same type, for the
                  endpoint group. The values will depend on type.
                items:
                  type: string
                type: array
              id:
                description: |-
                  The ID of the VPN endpoint group.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              type:
                description: |-
                  The type of the endpoints in the group. A valid
                  value is `subnet`, `cidr`, `network`, `router`, or
                  `vlan`. Only `subnet` and `cidr` are supported
                  at this moment.
                enum:
                  - cidr
                  - network
                  - router
                  - subnet
                  - vlan
                type: string
            type: object
          type: array
      type: object
    VpnIkepoliciesCreateRequest:
      description: Request of the vpn/ikepolicies:post operation
      properties:
        ikepolicy:
          description: |-
            An `ikepolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            ike_version:
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
              enum:
                - v1
                - v2
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            phase1_negotiation_mode:
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
              enum:
                - aggressive
                - main
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnIkepoliciesCreateResponse:
      description: Response of the vpn/ikepolicies:post operation
      properties:
        ikepolicy:
          description: |-
            An `ikepolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            id:
              description: |-
                The ID of the IKE policy.
              format: uuid
              type: string
            ike_version:
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
              enum:
                - v1
                - v2
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            phase1_negotiation_mode:
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
              enum:
                - aggressive
                - main
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnIkepoliciesIndexResponse:
      description: Response of the vpn/ikepolicies:get operation
      properties:
        ikepolicies:
          description: |-
            A list of `ikepolicy` objects.
          items:
            properties:
              auth_algorithm:
                description: |-
                  The authentication hash algorithm. Valid values
                  are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                  `aes-cmac`.
                  The default is `sha1`.
                enum:
                  - aes-cmac
                  - aes-xcbc
                  - sha1
                  - sha256
                  - sha384
                  - sha512
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              encryption_algorithm:
                description: |-
                  The encryption algorithm. A valid value is
                  `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                  `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                  CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                  for all combinations of key length 128, 192, 256 bits and ICV length
                  8, 12, 16 octets.
                  Default is `aes-128`.
                enum:
                  - 3des
                  - aes-128
                  - aes-128-ccm-12
                  - aes-128-ccm-16
                  - aes-128-ccm-8
                  - aes-128-ctr
                  - aes-128-gcm-12
                  - aes-128-gcm-16
                  - aes-128-gcm-8
                  - aes-192
                  - aes-192-ccm-12
                  - aes-192-ccm-16
                  - aes-192-ccm-8
                  - aes-192-ctr
                  - aes-192-gcm-12
                  - aes-192-gcm-16
                  - aes-192-gcm-8
                  - aes-256
                  - aes-256-ccm-12
                  - aes-256-ccm-16
                  - aes-256-ccm-8
                  - aes-256-ctr
                  - aes-256-gcm-12
                  - aes-256-gcm-16
                  - aes-256-gcm-8
                type: string
              id:
                description: |-
                  The ID of the IKE policy.
                format: uuid
                type: string
              ike_version:
                description: |-
                  The IKE version. A valid value is `v1` or
                  `v2`. Default is `v1`.
                enum:
                  - v1
                  - v2
                type: string
              lifetime:
                description: |-
                  The lifetime of the security association. The
                  lifetime consists of a unit and integer value. You can omit either
                  the unit or value portion of the lifetime. Default unit is seconds
                  and default value is 3600.
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              pfs:
                description: |-
                  Perfect forward secrecy (PFS). A valid value is
                  `Group2`, `Group5`, `Group14` to `Group31`. Default is
                  `Group5`.
                enum:
                  - group14
                  - group15
                  - group16
                  - group17
                  - group18
                  - group19
                  - group2
                  - group20
                  - group21
                  - group22
                  - group23
                  - group24
                  - group25
                  - group26
                  - group27
                  - group28
                  - group29
                  - group30
                  - group31
                  - group5
                type: string
              phase1_negotiation_mode:
                description: |-
                  The IKE mode. A valid value is `main`, which is
                  the default.
                enum:
                  - aggressive
                  - main
                type: string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
            type: object
          type: array
      type: object
    VpnIkepolicyShowResponse:
      description: Response of the vpn/ikepolicies/id:get operation
      properties:
        ikepolicy:
          description: |-
            An `ikepolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            id:
              description: |-
                The ID of the IKE policy.
              format: uuid
              type: string
            ike_version:
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
              enum:
                - v1
                - v2
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            phase1_negotiation_mode:
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
              enum:
                - aggressive
                - main
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnIkepolicyUpdateRequest:
      description: Request of the vpn/ikepolicies/id:put operation
      properties:
        ikepolicy:
          description: |-
            An `ikepolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            ike_version:
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
              enum:
                - v1
                - v2
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            phase1_negotiation_mode:
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
              enum:
                - aggressive
                - main
              type: string
          type: object
      type: object
    VpnIkepolicyUpdateResponse:
      description: Response of the vpn/ikepolicies/id:put operation
      properties:
        ikepolicy:
          description: |-
            An `ikepolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            id:
              description: |-
                The ID of the IKE policy.
              format: uuid
              type: string
            ike_version:
              description: |-
                The IKE version. A valid value is `v1` or
                `v2`. Default is `v1`.
              enum:
                - v1
                - v2
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            phase1_negotiation_mode:
              description: |-
                The IKE mode. A valid value is `main`, which is
                the default.
              enum:
                - aggressive
                - main
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnIpsec_Site_ConnectionShowResponse:
      description: Response of the vpn/ipsec-site-connections/id:get operation
      properties:
        ipsec_site_connection:
          description: |-
            An `ipsec_site_connection` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            auth_mode:
              description: |-
                The authentication mode. A valid value is
                `psk`, which is the default.
              enum:
                - psk
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dpd:
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
              type: string
            id:
              description: |-
                The ID of the IPsec site-to-site connection.
              format: uuid
              type: string
            ikepolicy_id:
              description: |-
                The ID of the IKE policy.
              format: uuid
              type: string
            initiator:
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
              enum:
                - bi-directional
                - response-only
              type: string
            ipsecpolicy_id:
              description: |-
                The ID of the IPsec policy.
              format: uuid
              type: string
            local_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
              format: uuid
              type:
                - 'null'
                - string
            local_id:
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            peer_address:
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
              type: string
            peer_cidrs:
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
              items:
                type: string
              type:
                - array
                - 'null'
            peer_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
              format: uuid
              type:
                - 'null'
                - string
            peer_id:
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
              type: string
            psk:
              description: |-
                The pre-shared key. A valid value is any string.
              type: string
            route_mode:
              description: |-
                The route mode. A valid value is `static`,
                which is the default.
              type: string
            status:
              description: |-
                Indicates whether the IPsec connection is
                currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                `PENDING_DELETE`.
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            vpnservice_id:
              description: |-
                The ID of the VPN service.
              format: uuid
              type: string
          type: object
      type: object
    VpnIpsec_Site_ConnectionUpdateRequest:
      description: Request of the vpn/ipsec-site-connections/id:put operation
      properties:
        ipsec_site_connection:
          description: |-
            An `ipsec_site_connection` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dpd:
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
              type: string
            initiator:
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
              enum:
                - bi-directional
                - response-only
              type: string
            local_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
              format: uuid
              type:
                - 'null'
                - string
            local_id:
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            peer_address:
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
              type: string
            peer_cidrs:
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
              items:
                type: string
              type:
                - array
                - 'null'
            peer_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
              format: uuid
              type:
                - 'null'
                - string
            peer_id:
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
              type: string
            psk:
              description: |-
                The pre-shared key. A valid value is any string.
              type: string
          type: object
      type: object
    VpnIpsec_Site_ConnectionUpdateResponse:
      description: Response of the vpn/ipsec-site-connections/id:put operation
      properties:
        ipsec_site_connection:
          description: |-
            An `ipsec_site_connection` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            auth_mode:
              description: |-
                The authentication mode. A valid value is
                `psk`, which is the default.
              enum:
                - psk
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dpd:
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
              type: string
            id:
              description: |-
                The ID of the IPsec site-to-site connection.
              format: uuid
              type: string
            ikepolicy_id:
              description: |-
                The ID of the IKE policy.
              format: uuid
              type: string
            initiator:
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
              enum:
                - bi-directional
                - response-only
              type: string
            ipsecpolicy_id:
              description: |-
                The ID of the IPsec policy.
              format: uuid
              type: string
            local_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
              format: uuid
              type:
                - 'null'
                - string
            local_id:
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            peer_address:
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
              type: string
            peer_cidrs:
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
              items:
                type: string
              type:
                - array
                - 'null'
            peer_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
              format: uuid
              type:
                - 'null'
                - string
            peer_id:
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
              type: string
            psk:
              description: |-
                The pre-shared key. A valid value is any string.
              type: string
            route_mode:
              description: |-
                The route mode. A valid value is `static`,
                which is the default.
              type: string
            status:
              description: |-
                Indicates whether the IPsec connection is
                currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                `PENDING_DELETE`.
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            vpnservice_id:
              description: |-
                The ID of the VPN service.
              format: uuid
              type: string
          type: object
      type: object
    VpnIpsec_Site_ConnectionsCreateRequest:
      description: Request of the vpn/ipsec-site-connections:post operation
      properties:
        ipsec_site_connection:
          description: |-
            An `ipsec_site_connection` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dpd:
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
              type: string
            ikepolicy_id:
              description: |-
                The ID of the IKE policy.
              format: uuid
              type: string
            initiator:
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
              enum:
                - bi-directional
                - response-only
              type: string
            ipsecpolicy_id:
              description: |-
                The ID of the IPsec policy.
              format: uuid
              type: string
            local_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
              format: uuid
              type:
                - 'null'
                - string
            local_id:
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            peer_address:
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
              type: string
            peer_cidrs:
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
              items:
                type: string
              type:
                - array
                - 'null'
            peer_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
              format: uuid
              type:
                - 'null'
                - string
            peer_id:
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
              type: string
            psk:
              description: |-
                The pre-shared key. A valid value is any string.
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            vpnservice_id:
              description: |-
                The ID of the VPN service.
              format: uuid
              type: string
          type: object
      type: object
    VpnIpsec_Site_ConnectionsCreateResponse:
      description: Response of the vpn/ipsec-site-connections:post operation
      properties:
        ipsec_site_connection:
          description: |-
            An `ipsec_site_connection` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            auth_mode:
              description: |-
                The authentication mode. A valid value is
                `psk`, which is the default.
              enum:
                - psk
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            dpd:
              description: |-
                A dictionary with dead peer detection (DPD)
                protocol controls.
              type: string
            id:
              description: |-
                The ID of the IPsec site-to-site connection.
              format: uuid
              type: string
            ikepolicy_id:
              description: |-
                The ID of the IKE policy.
              format: uuid
              type: string
            initiator:
              description: |-
                Indicates whether this VPN can only respond to
                connections or both respond to and initiate connections. A valid
                value is `response- only` or `bi-directional`. Default is
                `bi-directional`.
              enum:
                - bi-directional
                - response-only
              type: string
            ipsecpolicy_id:
              description: |-
                The ID of the IPsec policy.
              format: uuid
              type: string
            local_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private subnets for the local side of the connection. Yo must
                specify this parameter with the `peer_ep_group_id` parameter
                unless in backward- compatible mode where `peer_cidrs` is
                provided with a `subnet_id` for the VPN service.
              format: uuid
              type:
                - 'null'
                - string
            local_id:
              description: |-
                An ID to be used instead of the external IP address for a virtual
                router used in traffic between instances on different networks in
                east-west traffic. Most often, local ID would be domain name, email
                address, etc. If this is not configured then the external IP address
                will be used as the ID.
              type: string
            mtu:
              description: |-
                The maximum transmission unit (MTU) value to
                address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                IPv6.
              minimum: 0
              type:
                - integer
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            peer_address:
              description: |-
                The peer gateway public IPv4 or IPv6 address or
                FQDN.
              type: string
            peer_cidrs:
              description: |-
                (Deprecated) Unique list of valid peer private
                CIDRs in the form < net_address > / < prefix > .
              items:
                type: string
              type:
                - array
                - 'null'
            peer_ep_group_id:
              description: |-
                The ID for the endpoint group that contains
                private CIDRs in the form < net_address > / < prefix > for the
                peer side of the connection. You must specify this parameter with
                the `local_ep_group_id` parameter unless in backward-compatible
                mode where `peer_cidrs` is provided with a `subnet_id` for the
                VPN service.
              format: uuid
              type:
                - 'null'
                - string
            peer_id:
              description: |-
                The peer router identity for authentication. A
                valid value is an IPv4 address, IPv6 address, e-mail address, key
                ID, or FQDN. Typically, this value matches the `peer_address`
                value.
              type: string
            psk:
              description: |-
                The pre-shared key. A valid value is any string.
              type: string
            route_mode:
              description: |-
                The route mode. A valid value is `static`,
                which is the default.
              type: string
            status:
              description: |-
                Indicates whether the IPsec connection is
                currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                `PENDING_DELETE`.
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            vpnservice_id:
              description: |-
                The ID of the VPN service.
              format: uuid
              type: string
          type: object
      type: object
    VpnIpsec_Site_ConnectionsIndexResponse:
      description: Response of the vpn/ipsec-site-connections:get operation
      properties:
        ipsec_site_connections:
          items:
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type:
                  - boolean
                  - string
              auth_mode:
                description: |-
                  The authentication mode. A valid value is
                  `psk`, which is the default.
                enum:
                  - psk
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              dpd:
                description: |-
                  A dictionary with dead peer detection (DPD)
                  protocol controls.
                type: string
              id:
                description: |-
                  The ID of the IPsec site-to-site connection.
                format: uuid
                type: string
              ikepolicy_id:
                description: |-
                  The ID of the IKE policy.
                format: uuid
                type: string
              initiator:
                description: |-
                  Indicates whether this VPN can only respond to
                  connections or both respond to and initiate connections. A valid
                  value is `response- only` or `bi-directional`. Default is
                  `bi-directional`.
                enum:
                  - bi-directional
                  - response-only
                type: string
              ipsecpolicy_id:
                description: |-
                  The ID of the IPsec policy.
                format: uuid
                type: string
              local_ep_group_id:
                description: |-
                  The ID for the endpoint group that contains
                  private subnets for the local side of the connection. Yo must
                  specify this parameter with the `peer_ep_group_id` parameter
                  unless in backward- compatible mode where `peer_cidrs` is
                  provided with a `subnet_id` for the VPN service.
                format: uuid
                type:
                  - 'null'
                  - string
              local_id:
                description: |-
                  An ID to be used instead of the external IP address for a virtual
                  router used in traffic between instances on different networks in
                  east-west traffic. Most often, local ID would be domain name, email
                  address, etc. If this is not configured then the external IP address
                  will be used as the ID.
                type: string
              mtu:
                description: |-
                  The maximum transmission unit (MTU) value to
                  address fragmentation. Minimum value is 68 for IPv4, and 1280 for
                  IPv6.
                minimum: 0
                type:
                  - integer
                  - string
              name:
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              peer_address:
                description: |-
                  The peer gateway public IPv4 or IPv6 address or
                  FQDN.
                type: string
              peer_cidrs:
                description: |-
                  (Deprecated) Unique list of valid peer private
                  CIDRs in the form < net_address > / < prefix > .
                items:
                  type: string
                type:
                  - array
                  - 'null'
              peer_ep_group_id:
                description: |-
                  The ID for the endpoint group that contains
                  private CIDRs in the form < net_address > / < prefix > for the
                  peer side of the connection. You must specify this parameter with
                  the `local_ep_group_id` parameter unless in backward-compatible
                  mode where `peer_cidrs` is provided with a `subnet_id` for the
                  VPN service.
                format: uuid
                type:
                  - 'null'
                  - string
              peer_id:
                description: |-
                  The peer router identity for authentication. A
                  valid value is an IPv4 address, IPv6 address, e-mail address, key
                  ID, or FQDN. Typically, this value matches the `peer_address`
                  value.
                type: string
              psk:
                description: |-
                  The pre-shared key. A valid value is any string.
                type: string
              route_mode:
                description: |-
                  The route mode. A valid value is `static`,
                  which is the default.
                type: string
              status:
                description: |-
                  Indicates whether the IPsec connection is
                  currently operational. Values are `ACTIVE`, `DOWN`, `BUILD`,
                  `ERROR`, `PENDING_CREATE`, `PENDING_UPDATE`, or
                  `PENDING_DELETE`.
                type: string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              vpnservice_id:
                description: |-
                  The ID of the VPN service.
                format: uuid
                type: string
            type: object
          type: array
      type: object
    VpnIpsecpoliciesCreateRequest:
      description: Request of the vpn/ipsecpolicies:post operation
      properties:
        ipsecpolicy:
          description: |-
            An `ipsecpolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encapsulation_mode:
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
              enum:
                - transport
                - tunnel
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            transform_protocol:
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
              enum:
                - ah
                - ah-esp
                - esp
              type: string
          type: object
      type: object
    VpnIpsecpoliciesCreateResponse:
      description: Response of the vpn/ipsecpolicies:post operation
      properties:
        ipsecpolicy:
          description: |-
            An `ipsecpolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encapsulation_mode:
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
              enum:
                - transport
                - tunnel
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            id:
              description: |-
                The ID of the IPsec policy.
              format: uuid
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            transform_protocol:
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
              enum:
                - ah
                - ah-esp
                - esp
              type: string
          type: object
      type: object
    VpnIpsecpoliciesIndexResponse:
      description: Response of the vpn/ipsecpolicies:get operation
      properties:
        ipsecpolicies:
          description: |-
            A list of `ipsecpolicy` objects.
          items:
            properties:
              auth_algorithm:
                description: |-
                  The authentication hash algorithm. Valid values
                  are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                  `aes-cmac`.
                  The default is `sha1`.
                enum:
                  - aes-cmac
                  - aes-xcbc
                  - sha1
                  - sha256
                  - sha384
                  - sha512
                type: string
              description:
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              encapsulation_mode:
                description: |-
                  The encapsulation mode. A valid value is
                  `tunnel` or `transport`. Default is `tunnel`.
                enum:
                  - transport
                  - tunnel
                type: string
              encryption_algorithm:
                description: |-
                  The encryption algorithm. A valid value is
                  `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                  `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                  CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                  for all combinations of key length 128, 192, 256 bits and ICV length
                  8, 12, 16 octets.
                  Default is `aes-128`.
                enum:
                  - 3des
                  - aes-128
                  - aes-128-ccm-12
                  - aes-128-ccm-16
                  - aes-128-ccm-8
                  - aes-128-ctr
                  - aes-128-gcm-12
                  - aes-128-gcm-16
                  - aes-128-gcm-8
                  - aes-192
                  - aes-192-ccm-12
                  - aes-192-ccm-16
                  - aes-192-ccm-8
                  - aes-192-ctr
                  - aes-192-gcm-12
                  - aes-192-gcm-16
                  - aes-192-gcm-8
                  - aes-256
                  - aes-256-ccm-12
                  - aes-256-ccm-16
                  - aes-256-ccm-8
                  - aes-256-ctr
                  - aes-256-gcm-12
                  - aes-256-gcm-16
                  - aes-256-gcm-8
                type: string
              id:
                description: |-
                  The ID of the IPsec policy.
                format: uuid
                type: string
              lifetime:
                description: |-
                  The lifetime of the security association. The
                  lifetime consists of a unit and integer value. You can omit either
                  the unit or value portion of the lifetime. Default unit is seconds
                  and default value is 3600.
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              pfs:
                description: |-
                  Perfect forward secrecy (PFS). A valid value is
                  `Group2`, `Group5`, `Group14` to `Group31`. Default is
                  `Group5`.
                enum:
                  - group14
                  - group15
                  - group16
                  - group17
                  - group18
                  - group19
                  - group2
                  - group20
                  - group21
                  - group22
                  - group23
                  - group24
                  - group25
                  - group26
                  - group27
                  - group28
                  - group29
                  - group30
                  - group31
                  - group5
                type: string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
              transform_protocol:
                description: |-
                  The transform protocol. A valid value is `ESP`,
                  `AH`, or `AH- ESP`. Default is `ESP`.
                enum:
                  - ah
                  - ah-esp
                  - esp
                type: string
            type: object
          type: array
      type: object
    VpnIpsecpolicyShowResponse:
      description: Response of the vpn/ipsecpolicies/id:get operation
      properties:
        ipsecpolicy:
          description: |-
            An `ipsecpolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encapsulation_mode:
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
              enum:
                - transport
                - tunnel
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            id:
              description: |-
                The ID of the IPsec policy.
              format: uuid
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            transform_protocol:
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
              enum:
                - ah
                - ah-esp
                - esp
              type: string
          type: object
      type: object
    VpnIpsecpolicyUpdateRequest:
      description: Request of the vpn/ipsecpolicies/id:put operation
      properties:
        ipsecpolicy:
          description: |-
            An `ipsecpolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encapsulation_mode:
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
              enum:
                - transport
                - tunnel
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            transform_protocol:
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
              enum:
                - ah
                - ah-esp
                - esp
              type: string
          type: object
      type: object
    VpnIpsecpolicyUpdateResponse:
      description: Response of the vpn/ipsecpolicies/id:put operation
      properties:
        ipsecpolicy:
          description: |-
            An `ipsecpolicy` object.
          properties:
            auth_algorithm:
              description: |-
                The authentication hash algorithm. Valid values
                are `sha1`, `sha256`, `sha384`, `sha512`, `aes-xcbc`,
                `aes-cmac`.
                The default is `sha1`.
              enum:
                - aes-cmac
                - aes-xcbc
                - sha1
                - sha256
                - sha384
                - sha512
              type: string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            encapsulation_mode:
              description: |-
                The encapsulation mode. A valid value is
                `tunnel` or `transport`. Default is `tunnel`.
              enum:
                - transport
                - tunnel
              type: string
            encryption_algorithm:
              description: |-
                The encryption algorithm. A valid value is
                `3des`, `aes-128`, `aes-192`, `aes-256`, `aes-128-ctr`,
                `aes-192-ctr`, `aes-256-ctr`. Additional values for AES
                CCM and GCM modes are defined (e.g. `aes-256-ccm-16`, `aes-256-gcm-16`)
                for all combinations of key length 128, 192, 256 bits and ICV length
                8, 12, 16 octets.
                Default is `aes-128`.
              enum:
                - 3des
                - aes-128
                - aes-128-ccm-12
                - aes-128-ccm-16
                - aes-128-ccm-8
                - aes-128-ctr
                - aes-128-gcm-12
                - aes-128-gcm-16
                - aes-128-gcm-8
                - aes-192
                - aes-192-ccm-12
                - aes-192-ccm-16
                - aes-192-ccm-8
                - aes-192-ctr
                - aes-192-gcm-12
                - aes-192-gcm-16
                - aes-192-gcm-8
                - aes-256
                - aes-256-ccm-12
                - aes-256-ccm-16
                - aes-256-ccm-8
                - aes-256-ctr
                - aes-256-gcm-12
                - aes-256-gcm-16
                - aes-256-gcm-8
              type: string
            id:
              description: |-
                The ID of the IPsec policy.
              format: uuid
              type: string
            lifetime:
              description: |-
                The lifetime of the security association. The
                lifetime consists of a unit and integer value. You can omit either
                the unit or value portion of the lifetime. Default unit is seconds
                and default value is 3600.
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            pfs:
              description: |-
                Perfect forward secrecy (PFS). A valid value is
                `Group2`, `Group5`, `Group14` to `Group31`. Default is
                `Group5`.
              enum:
                - group14
                - group15
                - group16
                - group17
                - group18
                - group19
                - group2
                - group20
                - group21
                - group22
                - group23
                - group24
                - group25
                - group26
                - group27
                - group28
                - group29
                - group30
                - group31
                - group5
              type: string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
            transform_protocol:
              description: |-
                The transform protocol. A valid value is `ESP`,
                `AH`, or `AH- ESP`. Default is `ESP`.
              enum:
                - ah
                - ah-esp
                - esp
              type: string
          type: object
      type: object
    VpnVpnserviceShowResponse:
      description: Response of the vpn/vpnservices/id:get operation
      properties:
        vpnservice:
          description: |-
            A `vpnservice` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            external_v4_ip:
              description: |-
                Read-only external (public) IPv4 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv4 interface is available.
              type: string
            external_v6_ip:
              description: |-
                Read-only external (public) IPv6 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv6 interface is available.
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type:
                - 'null'
                - string
            id:
              description: |-
                The ID of the VPN service.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            router_id:
              format: uuid
              type: string
            status:
              description: |-
                Indicates whether IPsec VPN service is currently
                operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
              type: string
            subnet_id:
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
              format: uuid
              type:
                - 'null'
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnVpnserviceUpdateRequest:
      description: Request of the vpn/vpnservices/id:put operation
      properties:
        vpnservice:
          description: |-
            A `vpnservice` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnVpnserviceUpdateResponse:
      description: Response of the vpn/vpnservices/id:put operation
      properties:
        vpnservice:
          description: |-
            A `vpnservice` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            external_v4_ip:
              description: |-
                Read-only external (public) IPv4 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv4 interface is available.
              type: string
            external_v6_ip:
              description: |-
                Read-only external (public) IPv6 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv6 interface is available.
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type:
                - 'null'
                - string
            id:
              description: |-
                The ID of the VPN service.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            router_id:
              format: uuid
              type: string
            status:
              description: |-
                Indicates whether IPsec VPN service is currently
                operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
              type: string
            subnet_id:
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
              format: uuid
              type:
                - 'null'
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnVpnservicesCreateRequest:
      description: Request of the vpn/vpnservices:post operation
      properties:
        vpnservice:
          description: |-
            A `vpnservice` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type:
                - 'null'
                - string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            router_id:
              format: uuid
              type: string
            subnet_id:
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
              format: uuid
              type:
                - 'null'
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnVpnservicesCreateResponse:
      description: Response of the vpn/vpnservices:post operation
      properties:
        vpnservice:
          description: |-
            A `vpnservice` object.
          properties:
            admin_state_up:
              description: |-
                The administrative state of the resource, which is
                up (`true`) or down (`false`).
              type:
                - boolean
                - string
            description:
              description: |-
                A human-readable description for the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            external_v4_ip:
              description: |-
                Read-only external (public) IPv4 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv4 interface is available.
              type: string
            external_v6_ip:
              description: |-
                Read-only external (public) IPv6 address that is
                used for the VPN service. The VPN plugin sets this address if an
                IPv6 interface is available.
              type: string
            flavor_id:
              description: |-
                The ID of the flavor.
              format: uuid
              type:
                - 'null'
                - string
            id:
              description: |-
                The ID of the VPN service.
              format: uuid
              type: string
            name:
              description: |-
                Human-readable name of the resource.
                Default is an empty string.
              maxLength: 255
              type: string
            router_id:
              format: uuid
              type: string
            status:
              description: |-
                Indicates whether IPsec VPN service is currently
                operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
              type: string
            subnet_id:
              description: |-
                If you specify only a subnet UUID, OpenStack
                Networking allocates an available IP from that subnet to the port.
                If you specify both a subnet UUID and an IP address, OpenStack
                Networking tries to allocate the address to the port.
              format: uuid
              type:
                - 'null'
                - string
            tenant_id:
              description: |-
                The ID of the project.
              maxLength: 255
              type: string
          type: object
      type: object
    VpnVpnservicesIndexResponse:
      description: Response of the vpn/vpnservices:get operation
      properties:
        vpnservices:
          description: |-
            A list of VPN service objects.
          items:
            properties:
              admin_state_up:
                description: |-
                  The administrative state of the resource, which is
                  up (`true`) or down (`false`).
                type:
                  - boolean
                  - string
              description:
                description: |-
                  A human-readable description for the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              external_v4_ip:
                description: |-
                  Read-only external (public) IPv4 address that is
                  used for the VPN service. The VPN plugin sets this address if an
                  IPv4 interface is available.
                type: string
              external_v6_ip:
                description: |-
                  Read-only external (public) IPv6 address that is
                  used for the VPN service. The VPN plugin sets this address if an
                  IPv6 interface is available.
                type: string
              flavor_id:
                description: |-
                  The ID of the flavor.
                format: uuid
                type:
                  - 'null'
                  - string
              id:
                description: |-
                  The ID of the VPN service.
                format: uuid
                type: string
              name:
                description: |-
                  Human-readable name of the resource.
                  Default is an empty string.
                maxLength: 255
                type: string
              router_id:
                format: uuid
                type: string
              status:
                description: |-
                  Indicates whether IPsec VPN service is currently
                  operational. Values are `ACTIVE`, `DOWN`, `BUILD`, `ERROR`,
                  `PENDING_CREATE`, `PENDING_UPDATE`, or `PENDING_DELETE`.
                type: string
              subnet_id:
                description: |-
                  If you specify only a subnet UUID, OpenStack
                  Networking allocates an available IP from that subnet to the port.
                  If you specify both a subnet UUID and an IP address, OpenStack
                  Networking tries to allocate the address to the port.
                format: uuid
                type:
                  - 'null'
                  - string
              tenant_id:
                description: |-
                  The ID of the project.
                maxLength: 255
                type: string
            type: object
          type: array
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-Auth-Token
      type: apiKey
security:
  - ApiKeyAuth: []
tags:
  - name: address-groups
  - name: address-scopes
  - name: auto-allocated-topology
  - name: availability_zones
  - name: default-security-group-rules
  - name: dhcp-agent-scheduler
  - name: extensions
  - name: flavors
  - name: floatingip-pools
  - name: floatingips
  - name: floatingips-port-forwardings
  - name: l3-agent-scheduler
  - name: local-ips
  - name: local_ips
  - name: log
  - name: metering
  - name: ndp-proxies
  - name: network-ip-availabilities
  - name: network-segment-ranges
  - name: network_segment_ranges
  - description: |-
      Lists, shows details for, updates, and deletes agents.
    name: networking-agents
  - name: networks
  - name: policies
  - name: port-bindings
  - name: ports
  - name: qos
  - name: quotas
  - name: rbac-policies
  - name: routers
  - name: routers-conntrack-helper
  - name: security-group-rules
  - name: security-groups
  - name: segments
  - name: service-providers
  - name: service_profiles
  - name: subnetpools
  - name: subnets
  - name: trunks
  - name: vpn
