// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the GET `clusters` operation

use serde::{Deserialize, Serialize};
use structable::{StructTable, StructTableOptions};

/// Cluster response representation
#[derive(Clone, Deserialize, Serialize, StructTable)]
pub struct ClusterResponse {
    /// The binary name of the services in the cluster.
    ///
    #[structable(optional)]
    pub binary: Option<String>,

    /// The name of the service cluster.
    ///
    #[structable(optional)]
    pub name: Option<String>,

    /// The cluster replication status. Only included in responses if
    /// configured. One of: `enabled` or `disabled`.
    ///
    #[structable(optional, serialize)]
    pub replication_status: Option<ReplicationStatus>,

    /// The state of the cluster. One of `up` or `down`.
    ///
    #[structable(optional, serialize)]
    pub state: Option<State>,

    /// The status of the cluster. One of `enabled` or `disabled`.
    ///
    #[structable(optional, serialize)]
    pub status: Option<Status>,
}

#[derive(Debug, Deserialize, Clone, Serialize)]
pub enum ReplicationStatus {
    // Disabled
    #[serde(rename = "disabled")]
    Disabled,

    // Enabled
    #[serde(rename = "enabled")]
    Enabled,
}

#[derive(Debug, Deserialize, Clone, Serialize)]
pub enum State {
    // Down
    #[serde(rename = "down")]
    Down,

    // Up
    #[serde(rename = "up")]
    Up,
}

#[derive(Debug, Deserialize, Clone, Serialize)]
pub enum Status {
    // Disabled
    #[serde(rename = "disabled")]
    Disabled,

    // Enabled
    #[serde(rename = "enabled")]
    Enabled,
}
