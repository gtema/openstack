// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the GET `manageable_snapshots` operation

use serde::{Deserialize, Serialize};
use structable::{StructTable, StructTableOptions};

/// ManageableSnapshot response representation
#[derive(Clone, Deserialize, Serialize, StructTable)]
pub struct ManageableSnapshotResponse {
    /// A list of manageable snapshots.
    #[serde(rename = "manageable-snapshots")]
    #[structable(serialize, title = "manageable-snapshots")]
    pub manageable_snapshots: Vec<ManageableSnapshots>,
}

/// Some information for the resource.
/// `Reference` type
#[derive(Clone, Debug, Deserialize, Serialize)]
pub struct Reference {
    #[serde(default, rename = "source-name")]
    pub source_name: Option<String>,
}

/// The snapshotâ€™s origin volume information.
/// `SourceReference` type
#[derive(Clone, Debug, Deserialize, Serialize)]
pub struct SourceReference {
    #[serde(default, rename = "source-name")]
    pub source_name: Option<String>,
}

/// `ManageableSnapshots` type
#[derive(Clone, Debug, Deserialize, Serialize)]
pub struct ManageableSnapshots {
    pub reference: Reference,
    pub safe_to_manage: Option<bool>,
    pub size: i64,
    pub source_reference: SourceReference,
}
