// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the get octavia/amphorae/{amphora_id} operation

use serde::{Deserialize, Serialize};

/// Amphorae response representation
#[derive(Clone, Deserialize, Serialize)]
pub struct AmphoraeResponse {
    /// The availability zone of a compute instance, cached at create time.
    /// This is not guaranteed to be current. May be an empty-string if the
    /// compute service does not use zones.
    ///
    cached_zone: Option<String>,

    /// Whether the certificate is in the process of being replaced.
    ///
    cert_busy: Option<bool>,

    /// The date the certificate for the amphora expires.
    ///
    cert_expiration: Option<String>,

    /// The ID of the compute flavor used for the amphora.
    ///
    /// **New in version 2.3**
    ///
    compute_flavor: Option<String>,

    /// The ID of the amphora resource in the compute system.
    ///
    compute_id: Option<String>,

    /// The UTC date and timestamp when the resource was created.
    ///
    created_at: Option<String>,

    /// The IP address of the Virtual IP (VIP).
    ///
    ha_ip: Option<String>,

    /// The ID of the Virtual IP (VIP) port.
    ///
    ha_port_id: Option<String>,

    /// The associated amphora ID.
    ///
    id: Option<String>,

    /// The ID of the glance image used for the amphora.
    ///
    /// **New in version 2.1**
    ///
    image_id: Option<String>,

    /// The management IP of the amphora.
    ///
    lb_network_ip: Option<String>,

    /// The ID of the load balancer.
    ///
    loadbalancer_id: Option<String>,

    /// The role of the amphora. One of `STANDALONE`, `MASTER`, `BACKUP`.
    ///
    role: Option<String>,

    /// The status of the amphora. One of: `BOOTING`, `ALLOCATED`, `READY`,
    /// `PENDING_CREATE`, `PENDING_DELETE`, `DELETED`, `ERROR`.
    ///
    status: Option<String>,

    /// The UTC date and timestamp when the resource was last updated.
    ///
    updated_at: Option<String>,

    /// The vrrp group’s ID for the amphora.
    ///
    vrrp_id: Option<i32>,

    /// The bound interface name of the vrrp port on the amphora.
    ///
    vrrp_interface: Option<String>,

    /// The address of the vrrp port on the amphora.
    ///
    vrrp_ip: Option<String>,

    /// The vrrp port’s ID in the networking system.
    ///
    vrrp_port_id: Option<String>,

    /// The priority of the amphora in the vrrp group.
    ///
    vrrp_priority: Option<i32>,
}
