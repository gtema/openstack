// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the put network-segment-ranges/{id} operation

use crate::common::BoolString;
use crate::common::IntString;
use serde::{Deserialize, Serialize};

/// NetworkSegmentRange response representation
#[derive(Clone, Deserialize, Serialize)]
pub struct NetworkSegmentRangeResponse {
    pub available: Option<String>,

    pub created_at: Option<String>,

    #[serde(rename = "default")]
    pub _default: Option<BoolString>,

    pub description: Option<String>,

    pub id: Option<String>,

    pub maximum: Option<IntString>,

    pub minimum: Option<IntString>,

    pub name: Option<String>,

    pub network_type: Option<NetworkType>,

    pub physical_network: Option<String>,

    pub project_id: Option<String>,

    pub revision_number: Option<i32>,

    pub shared: Option<BoolString>,

    pub tags: Option<Vec<String>>,

    pub updated_at: Option<String>,

    pub used: Option<String>,
}

#[derive(Debug, Deserialize, Clone, Serialize)]
#[serde(untagged)]
pub enum NetworkType {
    // Vlan
    #[serde(rename = "vlan")]
    Vlan,

    // Geneve
    #[serde(rename = "geneve")]
    Geneve,

    // Gre
    #[serde(rename = "gre")]
    Gre,

    // Vxlan
    #[serde(rename = "vxlan")]
    Vxlan,
}
