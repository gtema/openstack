// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the get agents operation

use crate::common::BoolString;
use serde::{Deserialize, Serialize};
use serde_json::Value;
use std::collections::HashMap;

/// Agent response representation
#[derive(Clone, Deserialize, Serialize)]
struct AgentResponse {
    /// The administrative state of the resource, which is up (`true`) or down
    /// (`false`).
    ///
    admin_state_up: Option<BoolString>,

    /// The type of agent such as `Open vSwitch agent` or `DHCP agent`.
    ///
    agent_type: Option<String>,

    /// Indicates the agent is alive and running.
    ///
    alive: Option<bool>,

    /// The availability zone of the agent.
    ///
    availability_zone: Option<String>,

    /// The executable command used to start the agent such as
    /// `neutron-openvswitch-agent` or `neutron-dhcp-agent`.
    ///
    binary: Option<String>,

    /// An object containing configuration specific key/value pairs; the
    /// semantics of which are determined by the binary name and type.
    ///
    configurations: Option<HashMap<String, Value>>,

    /// Time at which the resource has been created (in UTC ISO8601 format).
    ///
    created_at: Option<String>,

    /// A human-readable description for the resource.
    ///
    description: Option<String>,

    /// Time at which the last heartbeat was received.
    ///
    heartbeat_timestamp: Option<String>,

    /// The hostname of the system the agent is running on.
    ///
    host: Option<String>,

    /// The ID of the resource.
    ///
    id: Option<String>,

    /// The value `null` means no resource view synchronization to Placement
    /// was attempted. `true` / `false` values signify the success of the last
    /// synchronization attempt. Therefore the relevant resources in Placement
    /// can only be considered up to date if this attribute is `true`. This
    /// attribute is read-only, it is only supposed to be updated internally,
    /// but it is readable for debugging purposes. Not all agent types track
    /// resources via Placement, therefore the value `null` does not
    /// necessarily means there is an error in the system.
    ///
    resources_synced: Option<String>,

    /// Time at which the agent was started.
    ///
    started_at: Option<String>,

    /// The name of AMQP topic the agent is listening on such as `dhcp_agent`.
    /// A special value of `N/A` is used when the agent doesnâ€™t use an AMQP
    /// topic.
    ///
    topic: Option<String>,
}
