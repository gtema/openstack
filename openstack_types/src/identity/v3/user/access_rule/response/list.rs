// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the get users/{user_id}/access_rules operation

use serde::{Deserialize, Serialize};

/// AccessRule response representation
#[derive(Clone, Deserialize, Serialize)]
pub struct AccessRuleResponse {
    /// The UUID of the access rule
    ///
    pub id: Option<String>,

    /// The request method that the application credential is permitted to use
    /// for a given API endpoint.
    ///
    pub method: Option<Method>,

    /// The API path that the application credential is permitted to access.
    ///
    pub path: Option<String>,

    /// The service type identifier for the service that the application
    /// credential is permitted to access. Must be a service type that is
    /// listed in the service catalog and not a code name for a service.
    ///
    pub service: Option<String>,
}

/// The link to the resources in question.
///
/// `Links` type
#[derive(Clone, Debug, Deserialize, Serialize)]
pub struct Links {
    pub _self: Option<String>,
}

#[derive(Debug, Deserialize, Clone, Serialize)]
#[serde(untagged)]
pub enum Method {
    // Patch
    #[serde(rename = "PATCH")]
    Patch,

    // Delete
    #[serde(rename = "DELETE")]
    Delete,

    // Head
    #[serde(rename = "HEAD")]
    Head,

    // Get
    #[serde(rename = "GET")]
    Get,

    // Post
    #[serde(rename = "POST")]
    Post,

    // Put
    #[serde(rename = "PUT")]
    Put,
}
