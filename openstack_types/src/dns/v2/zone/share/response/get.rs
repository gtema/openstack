// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the GET `zones/{zone_id}/shares/{zone_share_id}` operation

use serde::{Deserialize, Serialize};
use structable::{StructTable, StructTableOptions};

/// Share response representation
#[derive(Clone, Deserialize, Serialize, StructTable)]
pub struct ShareResponse {
    /// Date / Time when resource was created.
    ///
    #[structable(optional)]
    pub created_at: Option<String>,

    /// ID for the resource
    ///
    #[structable(optional)]
    pub id: Option<String>,

    /// Links to the resource, and other related resources. When a response has
    /// been broken into pages, we will include a `next` link that should be
    /// followed to retrieve all results
    ///
    #[structable(optional, serialize)]
    pub links: Option<Links>,

    /// ID for the project that owns the resource
    ///
    #[structable(optional)]
    pub project_id: Option<String>,

    /// The project ID the zone will be shared with.
    ///
    /// **New in version 2.1**
    ///
    #[structable(optional)]
    pub target_project_id: Option<String>,

    /// Date / Time when resource last updated.
    ///
    #[structable(optional)]
    pub updated_at: Option<String>,
}

/// Links to the resource, and other related resources. When a response has
/// been broken into pages, we will include a `next` link that should be
/// followed to retrieve all results
///
/// `Links` type
#[derive(Clone, Debug, Deserialize, Serialize)]
pub struct Links {
    pub _self: Option<String>,
    pub zone: Option<String>,
}
