// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0
//
// WARNING: This file is automatically generated from OpenAPI schema using
// `openstack-codegenerator`.
//! Response type for the POST `images/{image_id}/locations` operation

use serde::{Deserialize, Serialize};
use serde_json::Value;
use std::collections::BTreeMap;
use structable::{StructTable, StructTableOptions};

/// Location response representation
#[derive(Clone, Deserialize, Serialize, StructTable)]
pub struct LocationResponse {
    #[serde(default)]
    #[structable(optional, serialize)]
    pub metadata: Option<BTreeMap<String, Value>>,

    #[structable()]
    pub url: String,

    /// Values to be used to populate the corresponding image properties. If
    /// the image status is not 'queued', values must exactly match those
    /// already contained in the image properties.
    #[serde(default)]
    #[structable(optional, serialize)]
    pub validation_data: Option<ValidationData>,
}

/// Values to be used to populate the corresponding image properties. If the
/// image status is not 'queued', values must exactly match those already
/// contained in the image properties.
/// `ValidationData` type
#[derive(Clone, Debug, Deserialize, Serialize)]
pub struct ValidationData {
    #[serde(default)]
    pub checksum: Option<String>,
    pub os_hash_algo: String,
    pub os_hash_value: String,
}
