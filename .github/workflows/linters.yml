---
name: Linters

permissions:
  contents: read

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main" ]
    paths:
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/linters.yml'
      - 'openstack_cli/**'
      - 'openstack_sdk/**'
      - 'openstack_tui/**'
      - 'openstack_types/**'
      - 'fuzz/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    name: Run rustfmt on the latest supported toolchain
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@6d653acede28d24f02e3cd41383119e8b1b35921 # stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Run rustfmt
        run: cargo fmt -- --check

  clippy:
    name: Run clippy on the minimum supported toolchain
    runs-on: ubuntu-latest
    # reduce job-level privileges so this job can run for forked PRs without requiring maintainer approval
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: Ensure bash is installed
        run: sudo apt-get update && sudo apt-get install -y bash

      - name: Install Rust
        uses: dtolnay/rust-toolchain@6d653acede28d24f02e3cd41383119e8b1b35921 # stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install cargo-binstall
        uses: taiki-e/install-action@f37a1e4d34f3e1c6a571e294b0258f2805eab48d # v2.58.4
        with:
          tool: cargo-binstall

      - name: Install required cargo
        run: cargo binstall clippy-sarif sarif-fmt --force

      - name: Run rust-clippy
        run:
          cargo clippy
          --lib --tests
          --all-features
          --message-format=json | ${CARGO_HOME}/bin/clippy-sarif | tee rust-clippy-results.sarif | ${CARGO_HOME}/bin/sarif-fmt

      - name: Upload SARIF as artifact (so a separate, trusted job can upload to GitHub)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: rust-clippy-results
          path: rust-clippy-results.sarif

  upload-sarif:
    name: Upload CodeQL results
    needs: clippy
    runs-on: ubuntu-latest
    # grant the write permission only to this job (trusted execution)
    permissions:
      contents: read
      security-events: write
    # Only run the upload step for trusted contexts:
    # - pushes (e.g. push to main)
    # - pull requests whose head repo is not a fork (i.e. runs from trusted repository)
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) }}
    steps:

      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Download SARIF artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: rust-clippy-results
          path: .

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Actions Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for typos
        uses: crate-ci/typos@7436548694def3314aacd93ed06c721b1f91ea04 # v1.37.2
        with:
          config: typos.toml
