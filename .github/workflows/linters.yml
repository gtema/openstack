---
name: Linters

permissions:
  contents: read

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main" ]
    paths:
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/linters.yml'
      - 'openstack_cli/**'
      - 'openstack_sdk/**'
      - 'openstack_tui/**'
      - 'structable_derive/**'
      - 'fuzz/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  rust_min: 1.76.0

jobs:
  rustfmt:
    name: Run rustfmt on the minimum supported toolchain
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust ${{ env.rust_min }}
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1 # stable
        with:
          toolchain: ${{ env.rust_min }}
          components: rustfmt

      - uses: swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - name: Run rustfmt
        run: cargo fmt -- --check

  clippy:
    name: Run clippy on the minimum supported toolchain
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:

      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust ${{ env.rust_min }}
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1 # stable
        with:
          toolchain: ${{ env.rust_min }}
          components: rustfmt, clippy

      - uses: swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - name: Install cargo-binstall
        uses: taiki-e/install-action@6aca1cfa12ef3a6b98ee8c70e0171bfa067604f5 # v2.49.39
        with:
          tool: cargo-binstall

      - name: Install required cargo
        run: cargo binstall clippy-sarif sarif-fmt --force

      - name: Run rust-clippy
        run:
          cargo clippy
          --lib --tests
          --all-features -p openstack_sdk -p openstack_cli
          --message-format=json | ${CARGO_HOME}/bin/clippy-sarif | tee rust-clippy-results.sarif | ${CARGO_HOME}/bin/sarif-fmt

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@b56ba49b26e50535fa1e7f7db0f4f7b4bf65d80d # v3.28.10
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  clippy-tui:
    name: Run clippy for TUI on the minimum supported toolchain
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:

      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust 1.80
        uses: dtolnay/rust-toolchain@888c2e1ea69ab0d4330cbf0af1ecc7b68f368cc1 # stable
        with:
          toolchain: "1.80"
          components: rustfmt, clippy

      - uses: swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3 # v2.7.7

      - name: Install cargo-binstall
        uses: taiki-e/install-action@6aca1cfa12ef3a6b98ee8c70e0171bfa067604f5 # v2.49.39
        with:
          tool: cargo-binstall

      - name: Install required cargo
        run: cargo binstall clippy-sarif sarif-fmt --force

      - name: Run rust-clippy
        run:
          cargo clippy
          --tests
          --all-features -p openstack_tui
          --message-format=json | ${CARGO_HOME}/bin/clippy-sarif | tee rust-clippy-results.sarif | ${CARGO_HOME}/bin/sarif-fmt

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@b56ba49b26e50535fa1e7f7db0f4f7b4bf65d80d # v3.28.10
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
      with:
        egress-policy: audit

    - name: Checkout Actions Repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Check spelling of file.txt
      uses: crate-ci/typos@718c4ff697435edabd4f1c52c3775521adbb33a3 # v1.31.0
      with:
        config: typos.toml
