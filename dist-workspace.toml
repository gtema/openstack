[workspace]
members = ["cargo:."]

# Config for 'dist'
[dist]
all-features = false
# Skip checking whether the specified configuration files are up to date
allow-dirty = ["ci"]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.30.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell"]
# Whether to embed dependency information using cargo-auditable
cargo-auditable = true
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Which actions to run on pull requests
pr-run-mode = "upload"
# Whether dist should create a Github Release or use an existing draft
create-release = false
# Whether to install an updater program
install-updater = true
# Whether to enable GitHub Attestations
github-attestations = true
# Path that installers should place binaries in
install-path = "CARGO_HOME"
github-build-setup = "../parts/build-setup.yml"

[dist.github-custom-runners]
global = "ubuntu-latest"
aarch64-apple-darwin = "macos-latest"
aarch-unknown-linux-gnu = "ubuntu-24.04-arm"
x86_64-apple-darwin = "macos-latest"
x86_64-unknown-linux-gnu = "ubuntu-latest"
x86_64-unknown-linux-musl = "ubuntu-latest"
x86_64-pc-windows-msvc = "windows-2025"
